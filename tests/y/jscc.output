state 0(start)
    [\x9,\xa],\xd,' ' -> state 1
    '"' -> state 2
    '$',['A','Z'],'_',['a','z'] -> state 3
    '%' -> state 4
    ''' -> state 5
    '(' -> state 6
    ')' -> state 7
    '*' -> state 8
    '+' -> state 9
    ',' -> state 10
    '-' -> state 11
    '/' -> state 12
    ['0','9'] -> state 13
    ':' -> state 14
    ';' -> state 15
    '<' -> state 16
    '=' -> state 17
    '>' -> state 18
    '?' -> state 19
    '[' -> state 20
    ']' -> state 21
    '^' -> state 22
    '{' -> state 23
    '|' -> state 24
    '}' -> state 25

state 1(end 0)
    [\x9,\xa],\xd,' ' -> state 1

state 2
    [\x0,\x9],[\xb,'!'],['#','['],[']',oo) -> state 26
    '"' -> state 27
    '\' -> state 28

state 3(end 3)
    '$',['A','Z'],'_',['a','z'] -> state 29
    ['0','9'] -> state 30

state 4
    '%' -> state 31
    'l' -> state 32
    'n' -> state 33
    'o' -> state 34
    'r' -> state 35
    'u' -> state 36

state 5
    [\x0,\x9],[\xb,'&'],['(','['],[']',oo) -> state 37
    ''' -> state 38
    '\' -> state 39

state 6(end 16)

state 7(end 17)

state 8(end 22)

state 9(end 23)

state 10(end 31)

state 11(end 24)

state 12
    '*' -> state 40
    '/' -> state 41

state 13(end 4)
    ['0','9'] -> state 13

state 14(end 25)

state 15(end 27)

state 16(end 15)

state 17(end 18)
    '>' -> state 42

state 18(end 14)

state 19(end 21)

state 20(end 19)

state 21(end 20)

state 22(end 30)

state 23(end 6)

state 24(end 29)

state 25(end 7)

state 26
    [\x0,\x9],[\xb,'!'],['#','['],[']',oo) -> state 26
    '"' -> state 27
    '\' -> state 28

state 27(end 5)

state 28
    '"',''','\','b','f','n','r','t' -> state 43
    'u','x' -> state 44

state 29(end 3)
    '$',['A','Z'],'_',['a','z'] -> state 29
    ['0','9'] -> state 30

state 30(end 3)
    '$',['A','Z'],'_',['a','z'] -> state 29
    ['0','9'] -> state 30

state 31(end 28)

state 32
    'e' -> state 45

state 33
    'o' -> state 46

state 34
    'p' -> state 47

state 35
    'i' -> state 48

state 36
    's' -> state 49

state 37
    [\x0,\x9],[\xb,'&'],['(','['],[']',oo) -> state 37
    ''' -> state 38
    '\' -> state 39

state 38(end 5)

state 39
    '"',''','\','b','f','n','r','t' -> state 50
    'u','x' -> state 51

state 40
    [\x0,')'],['+','.'],['0',oo) -> state 52
    '*' -> state 53
    '/' -> state 54

state 41(end 2)
    [\x0,\x9],[\xb,oo) -> state 55

state 42(end 26)

state 43
    [\x0,\x9],[\xb,'!'],['#','['],[']',oo) -> state 26
    '"' -> state 27
    '\' -> state 28

state 44
    ['0','9'],['A','F'],['a','f'] -> state 56

state 45
    'f' -> state 57
    'x' -> state 58

state 46
    'n' -> state 59

state 47
    't' -> state 60

state 48
    'g' -> state 61

state 49
    'e' -> state 62

state 50
    [\x0,\x9],[\xb,'&'],['(','['],[']',oo) -> state 37
    ''' -> state 38
    '\' -> state 39

state 51
    ['0','9'],['A','F'],['a','f'] -> state 63

state 52
    [\x0,')'],['+','.'],['0',oo) -> state 52
    '*' -> state 53
    '/' -> state 64

state 53
    [\x0,'.'],['0',oo) -> state 65
    '/' -> state 66

state 54
    '/' -> state 67

state 55(end 2)
    [\x0,\x9],[\xb,oo) -> state 55

state 56
    [\x0,\x9],[\xb,'!'],['#','/'],[':','@'],['G','['],[']','`'],['g',oo) -> state 26
    '"' -> state 27
    ['0','9'],['A','F'],['a','f'] -> state 68
    '\' -> state 28

state 57
    't' -> state 69

state 58(end 9)

state 59
    'a' -> state 70

state 60
    'i' -> state 71

state 61
    'h' -> state 72

state 62(end 13)

state 63
    [\x0,\x9],[\xb,'&'],['(','/'],[':','@'],['G','['],[']','`'],['g',oo) -> state 37
    ''' -> state 38
    ['0','9'],['A','F'],['a','f'] -> state 73
    '\' -> state 39

state 64
    [\x0,')'],['+','.'],['0',oo) -> state 52
    '*' -> state 53
    '/' -> state 64

state 65
    [\x0,')'],['+','.'],['0',oo) -> state 52
    '*' -> state 53
    '/' -> state 54

state 66(end 1)

state 67
    [\x0,')'],['+','.'],['0',oo) -> state 52
    '*' -> state 53
    '/' -> state 54

state 68
    [\x0,\x9],[\xb,'!'],['#','/'],[':','@'],['G','['],[']','`'],['g',oo) -> state 26
    '"' -> state 27
    ['0','9'],['A','F'],['a','f'] -> state 68
    '\' -> state 28

state 69(end 10)

state 70
    's' -> state 74

state 71
    'o' -> state 75

state 72
    't' -> state 76

state 73
    [\x0,\x9],[\xb,'&'],['(','/'],[':','@'],['G','['],[']','`'],['g',oo) -> state 37
    ''' -> state 38
    ['0','9'],['A','F'],['a','f'] -> state 73
    '\' -> state 39

state 74
    's' -> state 77

state 75
    'n' -> state 78

state 76(end 11)

state 77
    'o' -> state 79

state 78(end 8)

state 79
    'c' -> state 80

state 80(end 12)



state 0(start)(end 32)
    [\x0,'z'],'|',['~',oo) -> state 1
    '{' -> state 2
    '}' -> state 3

state 1(end 32)
    [\x0,'z'],'|',['~',oo) -> state 1

state 2(end 33)

state 3(end 34)



state 0
    [ 0: (accept) => . start <EOF> ]*
    [ 1: start => . options "%%" body "%%" ]
    [ 2: options => . options option ]
    [ 3: options => . ]
    default action: reduce with rule 3
    start : goto state 1
    options : goto state 2


state 1
    [ 0: (accept) => start . <EOF> ]*
    no default action
    <EOF> : shift, and goto state 3


state 2
    [ 1: start => options . "%%" body "%%" ]*
    [ 2: options => options . option ]*
    [ 4: option => . "%lex" states_ "{" lexBody "}" ]
    [ 5: option => . associativeDir assocTokens ]
    [ 6: option => . "%option" "{" optionBody "}" ]
    [ 7: associativeDir => . "%left" ]
    [ 8: associativeDir => . "%right" ]
    [ 9: associativeDir => . "%nonassoc" ]
    no default action
    "%option" : shift, and goto state 8
    "%lex" : shift, and goto state 6
    "%left" : shift, and goto state 9
    "%right" : shift, and goto state 10
    "%nonassoc" : shift, and goto state 11
    "%%" : shift, and goto state 4
    option : goto state 5
    associativeDir : goto state 7


state 3
    [ 0: (accept) => start <EOF> . ]*
    default action: reduce with rule 0


state 4
    [ 1: start => options "%%" . body "%%" ]*
    [ 54: body => . body bodyItem ]
    [ 55: body => . bodyItem ]
    [ 56: bodyItem => . compoundRule ]
    [ 57: compoundRule => . <NAME> arrow rules ";" ]
    no default action
    <NAME> : shift, and goto state 15
    body : goto state 12
    bodyItem : goto state 13
    compoundRule : goto state 14


state 5
    [ 2: options => options option . ]*
    default action: reduce with rule 2


state 6
    [ 4: option => "%lex" . states_ "{" lexBody "}" ]*
    [ 14: states_ => . "<" states ">" ]
    [ 15: states_ => . ]
    default action: reduce with rule 15
    "<" : shift, and goto state 17
    states_ : goto state 16


state 7
    [ 5: option => associativeDir . assocTokens ]*
    [ 10: assocTokens => . assocTokens tokenRef ]
    [ 11: assocTokens => . tokenRef ]
    [ 72: tokenRef => . "<" <NAME> ">" ]
    [ 73: tokenRef => . <STRING> ]
    no default action
    <STRING> : shift, and goto state 56
    "<" : shift, and goto state 55
    assocTokens : goto state 18
    tokenRef : goto state 19


state 8
    [ 6: option => "%option" . "{" optionBody "}" ]*
    no default action
    "{" : shift, and goto state 20


state 9
    [ 7: associativeDir => "%left" . ]*
    default action: reduce with rule 7


state 10
    [ 8: associativeDir => "%right" . ]*
    default action: reduce with rule 8


state 11
    [ 9: associativeDir => "%nonassoc" . ]*
    default action: reduce with rule 9


state 12
    [ 1: start => options "%%" body . "%%" ]*
    [ 54: body => body . bodyItem ]*
    [ 56: bodyItem => . compoundRule ]
    [ 57: compoundRule => . <NAME> arrow rules ";" ]
    no default action
    <NAME> : shift, and goto state 15
    "%%" : shift, and goto state 21
    bodyItem : goto state 22
    compoundRule : goto state 14


state 13
    [ 55: body => bodyItem . ]*
    default action: reduce with rule 55


state 14
    [ 56: bodyItem => compoundRule . ]*
    default action: reduce with rule 56


state 15
    [ 57: compoundRule => <NAME> . arrow rules ";" ]*
    [ 58: arrow => . ":" ]
    [ 59: arrow => . "=>" ]
    no default action
    ":" : shift, and goto state 24
    "=>" : shift, and goto state 25
    arrow : goto state 23


state 16
    [ 4: option => "%lex" states_ . "{" lexBody "}" ]*
    no default action
    "{" : shift, and goto state 26


state 17
    [ 14: states_ => "<" . states ">" ]*
    [ 16: states => . <NAME> ]
    [ 17: states => . states "," <NAME> ]
    no default action
    <NAME> : shift, and goto state 28
    states : goto state 27


state 18
    [ 5: option => associativeDir assocTokens . ]*
    [ 10: assocTokens => assocTokens . tokenRef ]*
    [ 72: tokenRef => . "<" <NAME> ">" ]
    [ 73: tokenRef => . <STRING> ]
    default action: reduce with rule 5
    <STRING> : shift, and goto state 56
    "<" : shift, and goto state 55
    tokenRef : goto state 29


state 19
    [ 11: assocTokens => tokenRef . ]*
    default action: reduce with rule 11


state 20
    [ 6: option => "%option" "{" . optionBody "}" ]*
    [ 12: optionBody => . optionBody <NAME> "=" <STRING> ]
    [ 13: optionBody => . ]
    default action: reduce with rule 13
    optionBody : goto state 30


state 21
    [ 1: start => options "%%" body "%%" . ]*
    default action: reduce with rule 1


state 22
    [ 54: body => body bodyItem . ]*
    default action: reduce with rule 54


state 23
    [ 57: compoundRule => <NAME> arrow . rules ";" ]*
    [ 60: rules => . rules "|" rule ]
    [ 61: rules => . rule ]
    [ 62: rule => . ruleHead ruleItems ]
    [ 63: ruleHead => . "%use" "(" varUseList ")" ]
    [ 64: ruleHead => . ]
    default action: reduce with rule 64
    "%use" : shift, and goto state 34
    rules : goto state 31
    rule : goto state 32
    ruleHead : goto state 33


state 24
    [ 58: arrow => ":" . ]*
    default action: reduce with rule 58


state 25
    [ 59: arrow => "=>" . ]*
    default action: reduce with rule 59


state 26
    [ 4: option => "%lex" states_ "{" . lexBody "}" ]*
    [ 18: lexBody => . lexBody lexBodyItem ]
    [ 19: lexBody => . ]
    default action: reduce with rule 19
    lexBody : goto state 35


state 27
    [ 14: states_ => "<" states . ">" ]*
    [ 17: states => states . "," <NAME> ]*
    no default action
    ">" : shift, and goto state 36
    "," : shift, and goto state 37


state 28
    [ 16: states => <NAME> . ]*
    default action: reduce with rule 16


state 29
    [ 10: assocTokens => assocTokens tokenRef . ]*
    default action: reduce with rule 10


state 30
    [ 6: option => "%option" "{" optionBody . "}" ]*
    [ 12: optionBody => optionBody . <NAME> "=" <STRING> ]*
    no default action
    <NAME> : shift, and goto state 39
    "}" : shift, and goto state 38


state 31
    [ 57: compoundRule => <NAME> arrow rules . ";" ]*
    [ 60: rules => rules . "|" rule ]*
    no default action
    ";" : shift, and goto state 40
    "|" : shift, and goto state 41


state 32
    [ 61: rules => rule . ]*
    default action: reduce with rule 61


state 33
    [ 62: rule => ruleHead . ruleItems ]*
    [ 67: ruleItems => . ruleItems ruleItem ]
    [ 68: ruleItems => . ]
    default action: reduce with rule 68
    ruleItems : goto state 42


state 34
    [ 63: ruleHead => "%use" . "(" varUseList ")" ]*
    no default action
    "(" : shift, and goto state 43


state 35
    [ 4: option => "%lex" states_ "{" lexBody . "}" ]*
    [ 18: lexBody => lexBody . lexBodyItem ]*
    [ 20: lexBodyItem => . <NAME> "=" "<" regexp ">" ]
    [ 21: lexBodyItem => . "<" regexp ">" lexAction_ ]
    [ 22: lexBodyItem => . "<" <NAME> ":" regexp ">" lexAction_ ]
    no default action
    <NAME> : shift, and goto state 46
    "}" : shift, and goto state 44
    "<" : shift, and goto state 47
    lexBodyItem : goto state 45


state 36
    [ 14: states_ => "<" states ">" . ]*
    default action: reduce with rule 14


state 37
    [ 17: states => states "," . <NAME> ]*
    no default action
    <NAME> : shift, and goto state 48


state 38
    [ 6: option => "%option" "{" optionBody "}" . ]*
    default action: reduce with rule 6


state 39
    [ 12: optionBody => optionBody <NAME> . "=" <STRING> ]*
    no default action
    "=" : shift, and goto state 49


state 40
    [ 57: compoundRule => <NAME> arrow rules ";" . ]*
    default action: reduce with rule 57


state 41
    [ 60: rules => rules "|" . rule ]*
    [ 62: rule => . ruleHead ruleItems ]
    [ 63: ruleHead => . "%use" "(" varUseList ")" ]
    [ 64: ruleHead => . ]
    default action: reduce with rule 64
    "%use" : shift, and goto state 34
    rule : goto state 50
    ruleHead : goto state 33


state 42
    [ 62: rule => ruleHead ruleItems . ]*
    [ 67: ruleItems => ruleItems . ruleItem ]*
    [ 69: ruleItem => . <NAME> ]
    [ 70: ruleItem => . tokenRef ]
    [ 71: ruleItem => . lexAction ]
    [ 72: tokenRef => . "<" <NAME> ">" ]
    [ 73: tokenRef => . <STRING> ]
    [ 25: lexAction => . "[" lexActions "]" ]
    [ 26: lexAction => . block ]
    [ 76: block => . @0 "{" innerBlock @1 "}" ]
    [ 74: @0 => . ]
    default action: reduce with rule 62
    <NAME> : shift, and goto state 52
    <STRING> : shift, and goto state 56
    "<" : shift, and goto state 55
    "[" : shift, and goto state 112
    "{" : reduce with rule 74
    lexAction : goto state 54
    ruleItem : goto state 51
    tokenRef : goto state 53
    block : goto state 113
    @0 : goto state 109


state 43
    [ 63: ruleHead => "%use" "(" . varUseList ")" ]*
    [ 65: varUseList => . varUseList "," <NAME> ]
    [ 66: varUseList => . <NAME> ]
    no default action
    <NAME> : shift, and goto state 58
    varUseList : goto state 57


state 44
    [ 4: option => "%lex" states_ "{" lexBody "}" . ]*
    default action: reduce with rule 4


state 45
    [ 18: lexBody => lexBody lexBodyItem . ]*
    default action: reduce with rule 18


state 46
    [ 20: lexBodyItem => <NAME> . "=" "<" regexp ">" ]*
    no default action
    "=" : shift, and goto state 59


state 47
    [ 21: lexBodyItem => "<" . regexp ">" lexAction_ ]*
    [ 22: lexBodyItem => "<" . <NAME> ":" regexp ">" lexAction_ ]*
    [ 33: regexp => . regexp "|" simpleRE ]
    [ 34: regexp => . simpleRE ]
    [ 35: simpleRE => . simpleRE basicRE ]
    [ 36: simpleRE => . basicRE ]
    [ 37: basicRE => . primitiveRE rePostfix ]
    [ 42: primitiveRE => . "(" regexp ")" ]
    [ 43: primitiveRE => . "[" inverse_ setRE_ "]" ]
    [ 44: primitiveRE => . "<" <NAME> ">" ]
    [ 45: primitiveRE => . <STRING> ]
    no default action
    <NAME> : shift, and goto state 61
    <STRING> : shift, and goto state 64
    "<" : shift, and goto state 63
    "(" : shift, and goto state 80
    "[" : shift, and goto state 62
    regexp : goto state 60
    simpleRE : goto state 77
    basicRE : goto state 78
    primitiveRE : goto state 79


state 48
    [ 17: states => states "," <NAME> . ]*
    default action: reduce with rule 17


state 49
    [ 12: optionBody => optionBody <NAME> "=" . <STRING> ]*
    no default action
    <STRING> : shift, and goto state 65


state 50
    [ 60: rules => rules "|" rule . ]*
    default action: reduce with rule 60


state 51
    [ 67: ruleItems => ruleItems ruleItem . ]*
    default action: reduce with rule 67


state 52
    [ 69: ruleItem => <NAME> . ]*
    default action: reduce with rule 69


state 53
    [ 70: ruleItem => tokenRef . ]*
    default action: reduce with rule 70


state 54
    [ 71: ruleItem => lexAction . ]*
    default action: reduce with rule 71


state 55
    [ 72: tokenRef => "<" . <NAME> ">" ]*
    no default action
    <NAME> : shift, and goto state 66


state 56
    [ 73: tokenRef => <STRING> . ]*
    default action: reduce with rule 73


state 57
    [ 63: ruleHead => "%use" "(" varUseList . ")" ]*
    [ 65: varUseList => varUseList . "," <NAME> ]*
    no default action
    ")" : shift, and goto state 72
    "," : shift, and goto state 73


state 58
    [ 66: varUseList => <NAME> . ]*
    default action: reduce with rule 66


state 59
    [ 20: lexBodyItem => <NAME> "=" . "<" regexp ">" ]*
    no default action
    "<" : shift, and goto state 74


state 60
    [ 21: lexBodyItem => "<" regexp . ">" lexAction_ ]*
    [ 33: regexp => regexp . "|" simpleRE ]*
    no default action
    ">" : shift, and goto state 75
    "|" : shift, and goto state 93


state 61
    [ 22: lexBodyItem => "<" <NAME> . ":" regexp ">" lexAction_ ]*
    no default action
    ":" : shift, and goto state 76


state 62
    [ 43: primitiveRE => "[" . inverse_ setRE_ "]" ]*
    [ 46: inverse_ => . "^" ]
    [ 47: inverse_ => . ]
    default action: reduce with rule 47
    "^" : shift, and goto state 82
    inverse_ : goto state 81


state 63
    [ 44: primitiveRE => "<" . <NAME> ">" ]*
    no default action
    <NAME> : shift, and goto state 83


state 64
    [ 45: primitiveRE => <STRING> . ]*
    default action: reduce with rule 45


state 65
    [ 12: optionBody => optionBody <NAME> "=" <STRING> . ]*
    default action: reduce with rule 12


state 66
    [ 72: tokenRef => "<" <NAME> . ">" ]*
    no default action
    ">" : shift, and goto state 84


state 67
    [ 28: lexActions => lexActionItem . ]*
    default action: reduce with rule 28


state 68
    [ 29: lexActionItem => "+" . <NAME> ]*
    no default action
    <NAME> : shift, and goto state 86


state 69
    [ 30: lexActionItem => "-" . ]*
    default action: reduce with rule 30


state 70
    [ 31: lexActionItem => block . ]*
    default action: reduce with rule 31


state 71
    [ 32: lexActionItem => "=" . <STRING> ]*
    no default action
    <STRING> : shift, and goto state 87


state 72
    [ 63: ruleHead => "%use" "(" varUseList ")" . ]*
    default action: reduce with rule 63


state 73
    [ 65: varUseList => varUseList "," . <NAME> ]*
    no default action
    <NAME> : shift, and goto state 88


state 74
    [ 20: lexBodyItem => <NAME> "=" "<" . regexp ">" ]*
    [ 33: regexp => . regexp "|" simpleRE ]
    [ 34: regexp => . simpleRE ]
    [ 35: simpleRE => . simpleRE basicRE ]
    [ 36: simpleRE => . basicRE ]
    [ 37: basicRE => . primitiveRE rePostfix ]
    [ 42: primitiveRE => . "(" regexp ")" ]
    [ 43: primitiveRE => . "[" inverse_ setRE_ "]" ]
    [ 44: primitiveRE => . "<" <NAME> ">" ]
    [ 45: primitiveRE => . <STRING> ]
    no default action
    <STRING> : shift, and goto state 64
    "<" : shift, and goto state 63
    "(" : shift, and goto state 80
    "[" : shift, and goto state 62
    regexp : goto state 89
    simpleRE : goto state 77
    basicRE : goto state 78
    primitiveRE : goto state 79


state 75
    [ 21: lexBodyItem => "<" regexp ">" . lexAction_ ]*
    [ 23: lexAction_ => . ":" lexAction ]
    [ 24: lexAction_ => . ]
    default action: reduce with rule 24
    ":" : shift, and goto state 91
    lexAction_ : goto state 90


state 76
    [ 22: lexBodyItem => "<" <NAME> ":" . regexp ">" lexAction_ ]*
    [ 33: regexp => . regexp "|" simpleRE ]
    [ 34: regexp => . simpleRE ]
    [ 35: simpleRE => . simpleRE basicRE ]
    [ 36: simpleRE => . basicRE ]
    [ 37: basicRE => . primitiveRE rePostfix ]
    [ 42: primitiveRE => . "(" regexp ")" ]
    [ 43: primitiveRE => . "[" inverse_ setRE_ "]" ]
    [ 44: primitiveRE => . "<" <NAME> ">" ]
    [ 45: primitiveRE => . <STRING> ]
    no default action
    <STRING> : shift, and goto state 64
    "<" : shift, and goto state 63
    "(" : shift, and goto state 80
    "[" : shift, and goto state 62
    regexp : goto state 92
    simpleRE : goto state 77
    basicRE : goto state 78
    primitiveRE : goto state 79


state 77
    [ 34: regexp => simpleRE . ]*
    [ 35: simpleRE => simpleRE . basicRE ]*
    [ 37: basicRE => . primitiveRE rePostfix ]
    [ 42: primitiveRE => . "(" regexp ")" ]
    [ 43: primitiveRE => . "[" inverse_ setRE_ "]" ]
    [ 44: primitiveRE => . "<" <NAME> ">" ]
    [ 45: primitiveRE => . <STRING> ]
    default action: reduce with rule 34
    <STRING> : shift, and goto state 64
    "<" : shift, and goto state 63
    "(" : shift, and goto state 80
    "[" : shift, and goto state 62
    basicRE : goto state 94
    primitiveRE : goto state 79


state 78
    [ 36: simpleRE => basicRE . ]*
    default action: reduce with rule 36


state 79
    [ 37: basicRE => primitiveRE . rePostfix ]*
    [ 38: rePostfix => . "+" ]
    [ 39: rePostfix => . "?" ]
    [ 40: rePostfix => . "*" ]
    [ 41: rePostfix => . ]
    default action: reduce with rule 41
    "?" : shift, and goto state 97
    "*" : shift, and goto state 98
    "+" : shift, and goto state 96
    rePostfix : goto state 95


state 80
    [ 42: primitiveRE => "(" . regexp ")" ]*
    [ 33: regexp => . regexp "|" simpleRE ]
    [ 34: regexp => . simpleRE ]
    [ 35: simpleRE => . simpleRE basicRE ]
    [ 36: simpleRE => . basicRE ]
    [ 37: basicRE => . primitiveRE rePostfix ]
    [ 42: primitiveRE => . "(" regexp ")" ]
    [ 43: primitiveRE => . "[" inverse_ setRE_ "]" ]
    [ 44: primitiveRE => . "<" <NAME> ">" ]
    [ 45: primitiveRE => . <STRING> ]
    no default action
    <STRING> : shift, and goto state 64
    "<" : shift, and goto state 63
    "(" : shift, and goto state 80
    "[" : shift, and goto state 62
    regexp : goto state 99
    simpleRE : goto state 77
    basicRE : goto state 78
    primitiveRE : goto state 79


state 81
    [ 43: primitiveRE => "[" inverse_ . setRE_ "]" ]*
    [ 48: setRE_ => . setRE ]
    [ 49: setRE_ => . ]
    [ 50: setRE => . setRE "," setREItem ]
    [ 51: setRE => . setREItem ]
    [ 52: setREItem => . <STRING> ]
    [ 53: setREItem => . <STRING> "-" <STRING> ]
    default action: reduce with rule 49
    <STRING> : shift, and goto state 103
    setRE_ : goto state 100
    setRE : goto state 101
    setREItem : goto state 102


state 82
    [ 46: inverse_ => "^" . ]*
    default action: reduce with rule 46


state 83
    [ 44: primitiveRE => "<" <NAME> . ">" ]*
    no default action
    ">" : shift, and goto state 104


state 84
    [ 72: tokenRef => "<" <NAME> ">" . ]*
    default action: reduce with rule 72


state 85
    [ 27: lexActions => lexActions "," . lexActionItem ]*
    [ 29: lexActionItem => . "+" <NAME> ]
    [ 30: lexActionItem => . "-" ]
    [ 31: lexActionItem => . block ]
    [ 32: lexActionItem => . "=" <STRING> ]
    [ 76: block => . @0 "{" innerBlock @1 "}" ]
    [ 74: @0 => . ]
    default action: reduce with rule 74
    "=" : shift, and goto state 71
    "+" : shift, and goto state 68
    "-" : shift, and goto state 69
    lexActionItem : goto state 105
    block : goto state 70
    @0 : goto state 109


state 86
    [ 29: lexActionItem => "+" <NAME> . ]*
    default action: reduce with rule 29


state 87
    [ 32: lexActionItem => "=" <STRING> . ]*
    default action: reduce with rule 32


state 88
    [ 65: varUseList => varUseList "," <NAME> . ]*
    default action: reduce with rule 65


state 89
    [ 20: lexBodyItem => <NAME> "=" "<" regexp . ">" ]*
    [ 33: regexp => regexp . "|" simpleRE ]*
    no default action
    ">" : shift, and goto state 110
    "|" : shift, and goto state 93


state 90
    [ 21: lexBodyItem => "<" regexp ">" lexAction_ . ]*
    default action: reduce with rule 21


state 91
    [ 23: lexAction_ => ":" . lexAction ]*
    [ 25: lexAction => . "[" lexActions "]" ]
    [ 26: lexAction => . block ]
    [ 76: block => . @0 "{" innerBlock @1 "}" ]
    [ 74: @0 => . ]
    default action: reduce with rule 74
    "[" : shift, and goto state 112
    lexAction : goto state 111
    block : goto state 113
    @0 : goto state 109


state 92
    [ 22: lexBodyItem => "<" <NAME> ":" regexp . ">" lexAction_ ]*
    [ 33: regexp => regexp . "|" simpleRE ]*
    no default action
    ">" : shift, and goto state 114
    "|" : shift, and goto state 93


state 93
    [ 33: regexp => regexp "|" . simpleRE ]*
    [ 35: simpleRE => . simpleRE basicRE ]
    [ 36: simpleRE => . basicRE ]
    [ 37: basicRE => . primitiveRE rePostfix ]
    [ 42: primitiveRE => . "(" regexp ")" ]
    [ 43: primitiveRE => . "[" inverse_ setRE_ "]" ]
    [ 44: primitiveRE => . "<" <NAME> ">" ]
    [ 45: primitiveRE => . <STRING> ]
    no default action
    <STRING> : shift, and goto state 64
    "<" : shift, and goto state 63
    "(" : shift, and goto state 80
    "[" : shift, and goto state 62
    simpleRE : goto state 115
    basicRE : goto state 78
    primitiveRE : goto state 79


state 94
    [ 35: simpleRE => simpleRE basicRE . ]*
    default action: reduce with rule 35


state 95
    [ 37: basicRE => primitiveRE rePostfix . ]*
    default action: reduce with rule 37


state 96
    [ 38: rePostfix => "+" . ]*
    default action: reduce with rule 38


state 97
    [ 39: rePostfix => "?" . ]*
    default action: reduce with rule 39


state 98
    [ 40: rePostfix => "*" . ]*
    default action: reduce with rule 40


state 99
    [ 42: primitiveRE => "(" regexp . ")" ]*
    [ 33: regexp => regexp . "|" simpleRE ]*
    no default action
    ")" : shift, and goto state 116
    "|" : shift, and goto state 93


state 100
    [ 43: primitiveRE => "[" inverse_ setRE_ . "]" ]*
    no default action
    "]" : shift, and goto state 117


state 101
    [ 48: setRE_ => setRE . ]*
    [ 50: setRE => setRE . "," setREItem ]*
    default action: reduce with rule 48
    "," : shift, and goto state 118


state 102
    [ 51: setRE => setREItem . ]*
    default action: reduce with rule 51


state 103
    [ 52: setREItem => <STRING> . ]*
    [ 53: setREItem => <STRING> . "-" <STRING> ]*
    default action: reduce with rule 52
    "-" : shift, and goto state 119


state 104
    [ 44: primitiveRE => "<" <NAME> ">" . ]*
    default action: reduce with rule 44


state 105
    [ 27: lexActions => lexActions "," lexActionItem . ]*
    default action: reduce with rule 27


state 106
    [ 77: innerBlock => innerBlock innerBlockItem . ]*
    default action: reduce with rule 77


state 107
    [ 79: innerBlockItem => <ANY_CODE> . ]*
    default action: reduce with rule 79


state 108
    [ 80: innerBlockItem => block . ]*
    default action: reduce with rule 80


state 109
    [ 76: block => @0 . "{" innerBlock @1 "}" ]*
    no default action
    "{" : shift, and goto state 120


state 110
    [ 20: lexBodyItem => <NAME> "=" "<" regexp ">" . ]*
    default action: reduce with rule 20


state 111
    [ 23: lexAction_ => ":" lexAction . ]*
    default action: reduce with rule 23


state 112
    [ 25: lexAction => "[" . lexActions "]" ]*
    [ 27: lexActions => . lexActions "," lexActionItem ]
    [ 28: lexActions => . lexActionItem ]
    [ 29: lexActionItem => . "+" <NAME> ]
    [ 30: lexActionItem => . "-" ]
    [ 31: lexActionItem => . block ]
    [ 32: lexActionItem => . "=" <STRING> ]
    [ 76: block => . @0 "{" innerBlock @1 "}" ]
    [ 74: @0 => . ]
    default action: reduce with rule 74
    "=" : shift, and goto state 71
    "+" : shift, and goto state 68
    "-" : shift, and goto state 69
    lexActions : goto state 121
    lexActionItem : goto state 67
    block : goto state 70
    @0 : goto state 109


state 113
    [ 26: lexAction => block . ]*
    default action: reduce with rule 26


state 114
    [ 22: lexBodyItem => "<" <NAME> ":" regexp ">" . lexAction_ ]*
    [ 23: lexAction_ => . ":" lexAction ]
    [ 24: lexAction_ => . ]
    default action: reduce with rule 24
    ":" : shift, and goto state 91
    lexAction_ : goto state 122


state 115
    [ 33: regexp => regexp "|" simpleRE . ]*
    [ 35: simpleRE => simpleRE . basicRE ]*
    [ 37: basicRE => . primitiveRE rePostfix ]
    [ 42: primitiveRE => . "(" regexp ")" ]
    [ 43: primitiveRE => . "[" inverse_ setRE_ "]" ]
    [ 44: primitiveRE => . "<" <NAME> ">" ]
    [ 45: primitiveRE => . <STRING> ]
    default action: reduce with rule 33
    <STRING> : shift, and goto state 64
    "<" : shift, and goto state 63
    "(" : shift, and goto state 80
    "[" : shift, and goto state 62
    basicRE : goto state 94
    primitiveRE : goto state 79


state 116
    [ 42: primitiveRE => "(" regexp ")" . ]*
    default action: reduce with rule 42


state 117
    [ 43: primitiveRE => "[" inverse_ setRE_ "]" . ]*
    default action: reduce with rule 43


state 118
    [ 50: setRE => setRE "," . setREItem ]*
    [ 52: setREItem => . <STRING> ]
    [ 53: setREItem => . <STRING> "-" <STRING> ]
    no default action
    <STRING> : shift, and goto state 103
    setREItem : goto state 123


state 119
    [ 53: setREItem => <STRING> "-" . <STRING> ]*
    no default action
    <STRING> : shift, and goto state 124


state 120
    [ 76: block => @0 "{" . innerBlock @1 "}" ]*
    [ 77: innerBlock => . innerBlock innerBlockItem ]
    [ 78: innerBlock => . ]
    default action: reduce with rule 78
    innerBlock : goto state 125


state 121
    [ 25: lexAction => "[" lexActions . "]" ]*
    [ 27: lexActions => lexActions . "," lexActionItem ]*
    no default action
    "]" : shift, and goto state 126
    "," : shift, and goto state 85


state 122
    [ 22: lexBodyItem => "<" <NAME> ":" regexp ">" lexAction_ . ]*
    default action: reduce with rule 22


state 123
    [ 50: setRE => setRE "," setREItem . ]*
    default action: reduce with rule 50


state 124
    [ 53: setREItem => <STRING> "-" <STRING> . ]*
    default action: reduce with rule 53


state 125
    [ 76: block => @0 "{" innerBlock . @1 "}" ]*
    [ 77: innerBlock => innerBlock . innerBlockItem ]*
    [ 75: @1 => . ]
    [ 79: innerBlockItem => . <ANY_CODE> ]
    [ 80: innerBlockItem => . block ]
    [ 76: block => . @0 "{" innerBlock @1 "}" ]
    [ 74: @0 => . ]
    default action: reduce with rule 74
    <ANY_CODE> : shift, and goto state 107
    "}" : reduce with rule 75
    block : goto state 108
    @0 : goto state 109
    @1 : goto state 127
    innerBlockItem : goto state 106


state 126
    [ 25: lexAction => "[" lexActions "]" . ]*
    default action: reduce with rule 25


state 127
    [ 76: block => @0 "{" innerBlock @1 . "}" ]*
    no default action
    "}" : shift, and goto state 128


state 128
    [ 76: block => @0 "{" innerBlock @1 "}" . ]*
    default action: reduce with rule 76


