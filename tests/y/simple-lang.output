state 0
    [ 0: (accept) => . topstmtlist ]*
    [ 1: topstmtlist => . topstmtlist topstmt ]
    [ 2: topstmtlist => . ]
    "eof" : reduce with rule 2
    "+" : reduce with rule 2
    "-" : reduce with rule 2
    "~" : reduce with rule 2
    "++" : reduce with rule 2
    "--" : reduce with rule 2
    "!" : reduce with rule 2
    "(" : reduce with rule 2
    "{" : reduce with rule 2
    "id" : reduce with rule 2
    "num" : reduce with rule 2
    ";" : reduce with rule 2
    "if" : reduce with rule 2
    "while" : reduce with rule 2
    "do" : reduce with rule 2
    "for" : reduce with rule 2
    "function" : reduce with rule 2
    topstmtlist : goto state 1


state 1
    [ 0: (accept) => topstmtlist . ]*
    [ 1: topstmtlist => topstmtlist . topstmt ]*
    [ 3: topstmt => . stmt ]
    [ 4: topstmt => . "function" "(" argdeflist ")" "{" stmtlist "}" ]
    [ 11: stmt => . ";" ]
    [ 12: stmt => . "{" stmtlist "}" ]
    [ 13: stmt => . exprlist ";" ]
    [ 14: stmt => . "if" "(" exprlist ")" stmt elsestmt ]
    [ 15: stmt => . "while" "(" exprlist ")" stmt ]
    [ 16: stmt => . "do" stmt "while" "(" exprlist ")" ";" ]
    [ 17: stmt => . "for" "(" forexpr ";" forexpr ";" forexpr ")" stmt ]
    [ 22: exprlist => . exprlist "," expr ]
    [ 23: exprlist => . expr ]
    [ 24: expr => . var aoptr expr ]
    [ 25: expr => . expr "?" expr ":" expr ]
    [ 26: expr => . expr "||" expr ]
    [ 27: expr => . expr "&&" expr ]
    [ 28: expr => . expr "|" expr ]
    [ 29: expr => . expr "^" expr ]
    [ 30: expr => . expr "&" expr ]
    [ 31: expr => . expr coptr expr ]
    [ 32: expr => . expr ">>" expr ]
    [ 33: expr => . expr "<<" expr ]
    [ 34: expr => . expr ">>>" expr ]
    [ 35: expr => . expr "+" expr ]
    [ 36: expr => . expr "-" expr ]
    [ 37: expr => . expr "*" expr ]
    [ 38: expr => . expr "/" expr ]
    [ 39: expr => . expr "%" expr ]
    [ 40: expr => . expr "**" expr ]
    [ 41: expr => . "+" expr ]
    [ 42: expr => . "-" expr ]
    [ 43: expr => . "~" expr ]
    [ 44: expr => . "!" expr ]
    [ 45: expr => . const ]
    [ 46: expr => . "(" expr ")" ]
    [ 47: expr => . expr "(" arglist ")" ]
    [ 48: expr => . var ]
    [ 49: expr => . var "++" ]
    [ 50: expr => . var "--" ]
    [ 51: expr => . "++" var ]
    [ 52: expr => . "--" var ]
    [ 75: var => . "id" ]
    [ 76: var => . expr "[" exprlist "]" ]
    [ 74: const => . "num" ]
    "+" : shift,and goto state 24
    "-" : shift,and goto state 25
    "~" : shift,and goto state 26
    "++" : shift,and goto state 37
    "--" : shift,and goto state 38
    "!" : shift,and goto state 27
    "(" : shift,and goto state 29
    "{" : shift,and goto state 99
    "id" : shift,and goto state 39
    "num" : shift,and goto state 40
    ";" : shift,and goto state 98
    "if" : shift,and goto state 101
    "while" : shift,and goto state 102
    "do" : shift,and goto state 103
    "for" : shift,and goto state 104
    "function" : shift,and goto state 4
    "eof" : reduce with rule 0
    topstmt : goto state 2
    stmt : goto state 3
    exprlist : goto state 100
    expr : goto state 36
    const : goto state 28
    var : goto state 23


state 2
    [ 1: topstmtlist => topstmtlist topstmt . ]*
    "eof" : reduce with rule 1
    "+" : reduce with rule 1
    "-" : reduce with rule 1
    "~" : reduce with rule 1
    "++" : reduce with rule 1
    "--" : reduce with rule 1
    "!" : reduce with rule 1
    "(" : reduce with rule 1
    "{" : reduce with rule 1
    "id" : reduce with rule 1
    "num" : reduce with rule 1
    ";" : reduce with rule 1
    "if" : reduce with rule 1
    "while" : reduce with rule 1
    "do" : reduce with rule 1
    "for" : reduce with rule 1
    "function" : reduce with rule 1


state 3
    [ 3: topstmt => stmt . ]*
    "eof" : reduce with rule 3
    "+" : reduce with rule 3
    "-" : reduce with rule 3
    "~" : reduce with rule 3
    "++" : reduce with rule 3
    "--" : reduce with rule 3
    "!" : reduce with rule 3
    "(" : reduce with rule 3
    "{" : reduce with rule 3
    "id" : reduce with rule 3
    "num" : reduce with rule 3
    ";" : reduce with rule 3
    "if" : reduce with rule 3
    "while" : reduce with rule 3
    "do" : reduce with rule 3
    "for" : reduce with rule 3
    "function" : reduce with rule 3


state 4
    [ 4: topstmt => "function" . "(" argdeflist ")" "{" stmtlist "}" ]*
    "(" : shift,and goto state 5


state 5
    [ 4: topstmt => "function" "(" . argdeflist ")" "{" stmtlist "}" ]*
    [ 5: argdeflist => . neargdeflist ]
    [ 6: argdeflist => . ]
    [ 7: neargdeflist => . neargdeflist "," "id" ]
    [ 8: neargdeflist => . "id" ]
    "id" : shift,and goto state 34
    ")" : reduce with rule 6
    argdeflist : goto state 32
    neargdeflist : goto state 33


state 6
    [ 64: coptr => ">" . ]*
    "+" : reduce with rule 64
    "-" : reduce with rule 64
    "~" : reduce with rule 64
    "++" : reduce with rule 64
    "--" : reduce with rule 64
    "!" : reduce with rule 64
    "(" : reduce with rule 64
    "id" : reduce with rule 64
    "num" : reduce with rule 64


state 7
    [ 65: coptr => "<" . ]*
    "+" : reduce with rule 65
    "-" : reduce with rule 65
    "~" : reduce with rule 65
    "++" : reduce with rule 65
    "--" : reduce with rule 65
    "!" : reduce with rule 65
    "(" : reduce with rule 65
    "id" : reduce with rule 65
    "num" : reduce with rule 65


state 8
    [ 66: coptr => ">=" . ]*
    "+" : reduce with rule 66
    "-" : reduce with rule 66
    "~" : reduce with rule 66
    "++" : reduce with rule 66
    "--" : reduce with rule 66
    "!" : reduce with rule 66
    "(" : reduce with rule 66
    "id" : reduce with rule 66
    "num" : reduce with rule 66


state 9
    [ 67: coptr => "<=" . ]*
    "+" : reduce with rule 67
    "-" : reduce with rule 67
    "~" : reduce with rule 67
    "++" : reduce with rule 67
    "--" : reduce with rule 67
    "!" : reduce with rule 67
    "(" : reduce with rule 67
    "id" : reduce with rule 67
    "num" : reduce with rule 67


state 10
    [ 68: coptr => "==" . ]*
    "+" : reduce with rule 68
    "-" : reduce with rule 68
    "~" : reduce with rule 68
    "++" : reduce with rule 68
    "--" : reduce with rule 68
    "!" : reduce with rule 68
    "(" : reduce with rule 68
    "id" : reduce with rule 68
    "num" : reduce with rule 68


state 11
    [ 69: coptr => "!=" . ]*
    "+" : reduce with rule 69
    "-" : reduce with rule 69
    "~" : reduce with rule 69
    "++" : reduce with rule 69
    "--" : reduce with rule 69
    "!" : reduce with rule 69
    "(" : reduce with rule 69
    "id" : reduce with rule 69
    "num" : reduce with rule 69


state 12
    [ 53: aoptr => "=" . ]*
    "+" : reduce with rule 53
    "-" : reduce with rule 53
    "~" : reduce with rule 53
    "++" : reduce with rule 53
    "--" : reduce with rule 53
    "!" : reduce with rule 53
    "(" : reduce with rule 53
    "id" : reduce with rule 53
    "num" : reduce with rule 53


state 13
    [ 54: aoptr => "+=" . ]*
    "+" : reduce with rule 54
    "-" : reduce with rule 54
    "~" : reduce with rule 54
    "++" : reduce with rule 54
    "--" : reduce with rule 54
    "!" : reduce with rule 54
    "(" : reduce with rule 54
    "id" : reduce with rule 54
    "num" : reduce with rule 54


state 14
    [ 55: aoptr => "-=" . ]*
    "+" : reduce with rule 55
    "-" : reduce with rule 55
    "~" : reduce with rule 55
    "++" : reduce with rule 55
    "--" : reduce with rule 55
    "!" : reduce with rule 55
    "(" : reduce with rule 55
    "id" : reduce with rule 55
    "num" : reduce with rule 55


state 15
    [ 56: aoptr => "*=" . ]*
    "+" : reduce with rule 56
    "-" : reduce with rule 56
    "~" : reduce with rule 56
    "++" : reduce with rule 56
    "--" : reduce with rule 56
    "!" : reduce with rule 56
    "(" : reduce with rule 56
    "id" : reduce with rule 56
    "num" : reduce with rule 56


state 16
    [ 57: aoptr => "/=" . ]*
    "+" : reduce with rule 57
    "-" : reduce with rule 57
    "~" : reduce with rule 57
    "++" : reduce with rule 57
    "--" : reduce with rule 57
    "!" : reduce with rule 57
    "(" : reduce with rule 57
    "id" : reduce with rule 57
    "num" : reduce with rule 57


state 17
    [ 58: aoptr => "&=" . ]*
    "+" : reduce with rule 58
    "-" : reduce with rule 58
    "~" : reduce with rule 58
    "++" : reduce with rule 58
    "--" : reduce with rule 58
    "!" : reduce with rule 58
    "(" : reduce with rule 58
    "id" : reduce with rule 58
    "num" : reduce with rule 58


state 18
    [ 59: aoptr => "|=" . ]*
    "+" : reduce with rule 59
    "-" : reduce with rule 59
    "~" : reduce with rule 59
    "++" : reduce with rule 59
    "--" : reduce with rule 59
    "!" : reduce with rule 59
    "(" : reduce with rule 59
    "id" : reduce with rule 59
    "num" : reduce with rule 59


state 19
    [ 60: aoptr => "^=" . ]*
    "+" : reduce with rule 60
    "-" : reduce with rule 60
    "~" : reduce with rule 60
    "++" : reduce with rule 60
    "--" : reduce with rule 60
    "!" : reduce with rule 60
    "(" : reduce with rule 60
    "id" : reduce with rule 60
    "num" : reduce with rule 60


state 20
    [ 61: aoptr => ">>=" . ]*
    "+" : reduce with rule 61
    "-" : reduce with rule 61
    "~" : reduce with rule 61
    "++" : reduce with rule 61
    "--" : reduce with rule 61
    "!" : reduce with rule 61
    "(" : reduce with rule 61
    "id" : reduce with rule 61
    "num" : reduce with rule 61


state 21
    [ 62: aoptr => "<<=" . ]*
    "+" : reduce with rule 62
    "-" : reduce with rule 62
    "~" : reduce with rule 62
    "++" : reduce with rule 62
    "--" : reduce with rule 62
    "!" : reduce with rule 62
    "(" : reduce with rule 62
    "id" : reduce with rule 62
    "num" : reduce with rule 62


state 22
    [ 63: aoptr => "%=" . ]*
    "+" : reduce with rule 63
    "-" : reduce with rule 63
    "~" : reduce with rule 63
    "++" : reduce with rule 63
    "--" : reduce with rule 63
    "!" : reduce with rule 63
    "(" : reduce with rule 63
    "id" : reduce with rule 63
    "num" : reduce with rule 63


state 23
    [ 24: expr => var . aoptr expr ]*
    [ 48: expr => var . ]*
    [ 49: expr => var . "++" ]*
    [ 50: expr => var . "--" ]*
    [ 53: aoptr => . "=" ]
    [ 54: aoptr => . "+=" ]
    [ 55: aoptr => . "-=" ]
    [ 56: aoptr => . "*=" ]
    [ 57: aoptr => . "/=" ]
    [ 58: aoptr => . "&=" ]
    [ 59: aoptr => . "|=" ]
    [ 60: aoptr => . "^=" ]
    [ 61: aoptr => . ">>=" ]
    [ 62: aoptr => . "<<=" ]
    [ 63: aoptr => . "%=" ]
    "=" : shift,and goto state 12
    "+=" : shift,and goto state 13
    "-=" : shift,and goto state 14
    "*=" : shift,and goto state 15
    "/=" : shift,and goto state 16
    "&=" : shift,and goto state 17
    "|=" : shift,and goto state 18
    "^=" : shift,and goto state 19
    ">>=" : shift,and goto state 20
    "<<=" : shift,and goto state 21
    "%=" : shift,and goto state 22
    "++" : shift,and goto state 62
    "--" : shift,and goto state 63
    "+" : reduce with rule 48
    "-" : reduce with rule 48
    "*" : reduce with rule 48
    "/" : reduce with rule 48
    "**" : reduce with rule 48
    "?" : reduce with rule 48
    ":" : reduce with rule 48
    "%" : reduce with rule 48
    ">" : reduce with rule 48
    "<" : reduce with rule 48
    ">=" : reduce with rule 48
    "<=" : reduce with rule 48
    "==" : reduce with rule 48
    "!=" : reduce with rule 48
    "|" : reduce with rule 48
    "&" : reduce with rule 48
    "^" : reduce with rule 48
    "&&" : reduce with rule 48
    "||" : reduce with rule 48
    ">>" : reduce with rule 48
    "<<" : reduce with rule 48
    ">>>" : reduce with rule 48
    "(" : reduce with rule 48
    ")" : reduce with rule 48
    "[" : reduce with rule 48
    "]" : reduce with rule 48
    "," : reduce with rule 48
    ";" : reduce with rule 48
    aoptr : goto state 61


state 24
    [ 41: expr => "+" . expr ]*
    [ 24: expr => . var aoptr expr ]
    [ 25: expr => . expr "?" expr ":" expr ]
    [ 26: expr => . expr "||" expr ]
    [ 27: expr => . expr "&&" expr ]
    [ 28: expr => . expr "|" expr ]
    [ 29: expr => . expr "^" expr ]
    [ 30: expr => . expr "&" expr ]
    [ 31: expr => . expr coptr expr ]
    [ 32: expr => . expr ">>" expr ]
    [ 33: expr => . expr "<<" expr ]
    [ 34: expr => . expr ">>>" expr ]
    [ 35: expr => . expr "+" expr ]
    [ 36: expr => . expr "-" expr ]
    [ 37: expr => . expr "*" expr ]
    [ 38: expr => . expr "/" expr ]
    [ 39: expr => . expr "%" expr ]
    [ 40: expr => . expr "**" expr ]
    [ 41: expr => . "+" expr ]
    [ 42: expr => . "-" expr ]
    [ 43: expr => . "~" expr ]
    [ 44: expr => . "!" expr ]
    [ 45: expr => . const ]
    [ 46: expr => . "(" expr ")" ]
    [ 47: expr => . expr "(" arglist ")" ]
    [ 48: expr => . var ]
    [ 49: expr => . var "++" ]
    [ 50: expr => . var "--" ]
    [ 51: expr => . "++" var ]
    [ 52: expr => . "--" var ]
    [ 75: var => . "id" ]
    [ 76: var => . expr "[" exprlist "]" ]
    [ 74: const => . "num" ]
    "+" : shift,and goto state 24
    "-" : shift,and goto state 25
    "~" : shift,and goto state 26
    "++" : shift,and goto state 37
    "--" : shift,and goto state 38
    "!" : shift,and goto state 27
    "(" : shift,and goto state 29
    "id" : shift,and goto state 39
    "num" : shift,and goto state 40
    expr : goto state 64
    const : goto state 28
    var : goto state 23


state 25
    [ 42: expr => "-" . expr ]*
    [ 24: expr => . var aoptr expr ]
    [ 25: expr => . expr "?" expr ":" expr ]
    [ 26: expr => . expr "||" expr ]
    [ 27: expr => . expr "&&" expr ]
    [ 28: expr => . expr "|" expr ]
    [ 29: expr => . expr "^" expr ]
    [ 30: expr => . expr "&" expr ]
    [ 31: expr => . expr coptr expr ]
    [ 32: expr => . expr ">>" expr ]
    [ 33: expr => . expr "<<" expr ]
    [ 34: expr => . expr ">>>" expr ]
    [ 35: expr => . expr "+" expr ]
    [ 36: expr => . expr "-" expr ]
    [ 37: expr => . expr "*" expr ]
    [ 38: expr => . expr "/" expr ]
    [ 39: expr => . expr "%" expr ]
    [ 40: expr => . expr "**" expr ]
    [ 41: expr => . "+" expr ]
    [ 42: expr => . "-" expr ]
    [ 43: expr => . "~" expr ]
    [ 44: expr => . "!" expr ]
    [ 45: expr => . const ]
    [ 46: expr => . "(" expr ")" ]
    [ 47: expr => . expr "(" arglist ")" ]
    [ 48: expr => . var ]
    [ 49: expr => . var "++" ]
    [ 50: expr => . var "--" ]
    [ 51: expr => . "++" var ]
    [ 52: expr => . "--" var ]
    [ 75: var => . "id" ]
    [ 76: var => . expr "[" exprlist "]" ]
    [ 74: const => . "num" ]
    "+" : shift,and goto state 24
    "-" : shift,and goto state 25
    "~" : shift,and goto state 26
    "++" : shift,and goto state 37
    "--" : shift,and goto state 38
    "!" : shift,and goto state 27
    "(" : shift,and goto state 29
    "id" : shift,and goto state 39
    "num" : shift,and goto state 40
    expr : goto state 65
    const : goto state 28
    var : goto state 23


state 26
    [ 43: expr => "~" . expr ]*
    [ 24: expr => . var aoptr expr ]
    [ 25: expr => . expr "?" expr ":" expr ]
    [ 26: expr => . expr "||" expr ]
    [ 27: expr => . expr "&&" expr ]
    [ 28: expr => . expr "|" expr ]
    [ 29: expr => . expr "^" expr ]
    [ 30: expr => . expr "&" expr ]
    [ 31: expr => . expr coptr expr ]
    [ 32: expr => . expr ">>" expr ]
    [ 33: expr => . expr "<<" expr ]
    [ 34: expr => . expr ">>>" expr ]
    [ 35: expr => . expr "+" expr ]
    [ 36: expr => . expr "-" expr ]
    [ 37: expr => . expr "*" expr ]
    [ 38: expr => . expr "/" expr ]
    [ 39: expr => . expr "%" expr ]
    [ 40: expr => . expr "**" expr ]
    [ 41: expr => . "+" expr ]
    [ 42: expr => . "-" expr ]
    [ 43: expr => . "~" expr ]
    [ 44: expr => . "!" expr ]
    [ 45: expr => . const ]
    [ 46: expr => . "(" expr ")" ]
    [ 47: expr => . expr "(" arglist ")" ]
    [ 48: expr => . var ]
    [ 49: expr => . var "++" ]
    [ 50: expr => . var "--" ]
    [ 51: expr => . "++" var ]
    [ 52: expr => . "--" var ]
    [ 75: var => . "id" ]
    [ 76: var => . expr "[" exprlist "]" ]
    [ 74: const => . "num" ]
    "+" : shift,and goto state 24
    "-" : shift,and goto state 25
    "~" : shift,and goto state 26
    "++" : shift,and goto state 37
    "--" : shift,and goto state 38
    "!" : shift,and goto state 27
    "(" : shift,and goto state 29
    "id" : shift,and goto state 39
    "num" : shift,and goto state 40
    expr : goto state 66
    const : goto state 28
    var : goto state 23


state 27
    [ 44: expr => "!" . expr ]*
    [ 24: expr => . var aoptr expr ]
    [ 25: expr => . expr "?" expr ":" expr ]
    [ 26: expr => . expr "||" expr ]
    [ 27: expr => . expr "&&" expr ]
    [ 28: expr => . expr "|" expr ]
    [ 29: expr => . expr "^" expr ]
    [ 30: expr => . expr "&" expr ]
    [ 31: expr => . expr coptr expr ]
    [ 32: expr => . expr ">>" expr ]
    [ 33: expr => . expr "<<" expr ]
    [ 34: expr => . expr ">>>" expr ]
    [ 35: expr => . expr "+" expr ]
    [ 36: expr => . expr "-" expr ]
    [ 37: expr => . expr "*" expr ]
    [ 38: expr => . expr "/" expr ]
    [ 39: expr => . expr "%" expr ]
    [ 40: expr => . expr "**" expr ]
    [ 41: expr => . "+" expr ]
    [ 42: expr => . "-" expr ]
    [ 43: expr => . "~" expr ]
    [ 44: expr => . "!" expr ]
    [ 45: expr => . const ]
    [ 46: expr => . "(" expr ")" ]
    [ 47: expr => . expr "(" arglist ")" ]
    [ 48: expr => . var ]
    [ 49: expr => . var "++" ]
    [ 50: expr => . var "--" ]
    [ 51: expr => . "++" var ]
    [ 52: expr => . "--" var ]
    [ 75: var => . "id" ]
    [ 76: var => . expr "[" exprlist "]" ]
    [ 74: const => . "num" ]
    "+" : shift,and goto state 24
    "-" : shift,and goto state 25
    "~" : shift,and goto state 26
    "++" : shift,and goto state 37
    "--" : shift,and goto state 38
    "!" : shift,and goto state 27
    "(" : shift,and goto state 29
    "id" : shift,and goto state 39
    "num" : shift,and goto state 40
    expr : goto state 67
    const : goto state 28
    var : goto state 23


state 28
    [ 45: expr => const . ]*
    "+" : reduce with rule 45
    "-" : reduce with rule 45
    "*" : reduce with rule 45
    "/" : reduce with rule 45
    "**" : reduce with rule 45
    "?" : reduce with rule 45
    ":" : reduce with rule 45
    "%" : reduce with rule 45
    ">" : reduce with rule 45
    "<" : reduce with rule 45
    ">=" : reduce with rule 45
    "<=" : reduce with rule 45
    "==" : reduce with rule 45
    "!=" : reduce with rule 45
    "|" : reduce with rule 45
    "&" : reduce with rule 45
    "^" : reduce with rule 45
    "&&" : reduce with rule 45
    "||" : reduce with rule 45
    ">>" : reduce with rule 45
    "<<" : reduce with rule 45
    ">>>" : reduce with rule 45
    "(" : reduce with rule 45
    ")" : reduce with rule 45
    "[" : reduce with rule 45
    "]" : reduce with rule 45
    "," : reduce with rule 45
    ";" : reduce with rule 45


state 29
    [ 46: expr => "(" . expr ")" ]*
    [ 24: expr => . var aoptr expr ]
    [ 25: expr => . expr "?" expr ":" expr ]
    [ 26: expr => . expr "||" expr ]
    [ 27: expr => . expr "&&" expr ]
    [ 28: expr => . expr "|" expr ]
    [ 29: expr => . expr "^" expr ]
    [ 30: expr => . expr "&" expr ]
    [ 31: expr => . expr coptr expr ]
    [ 32: expr => . expr ">>" expr ]
    [ 33: expr => . expr "<<" expr ]
    [ 34: expr => . expr ">>>" expr ]
    [ 35: expr => . expr "+" expr ]
    [ 36: expr => . expr "-" expr ]
    [ 37: expr => . expr "*" expr ]
    [ 38: expr => . expr "/" expr ]
    [ 39: expr => . expr "%" expr ]
    [ 40: expr => . expr "**" expr ]
    [ 41: expr => . "+" expr ]
    [ 42: expr => . "-" expr ]
    [ 43: expr => . "~" expr ]
    [ 44: expr => . "!" expr ]
    [ 45: expr => . const ]
    [ 46: expr => . "(" expr ")" ]
    [ 47: expr => . expr "(" arglist ")" ]
    [ 48: expr => . var ]
    [ 49: expr => . var "++" ]
    [ 50: expr => . var "--" ]
    [ 51: expr => . "++" var ]
    [ 52: expr => . "--" var ]
    [ 75: var => . "id" ]
    [ 76: var => . expr "[" exprlist "]" ]
    [ 74: const => . "num" ]
    "+" : shift,and goto state 24
    "-" : shift,and goto state 25
    "~" : shift,and goto state 26
    "++" : shift,and goto state 37
    "--" : shift,and goto state 38
    "!" : shift,and goto state 27
    "(" : shift,and goto state 29
    "id" : shift,and goto state 39
    "num" : shift,and goto state 40
    expr : goto state 68
    const : goto state 28
    var : goto state 23


state 30
    [ 51: expr => "++" var . ]*
    [ 24: expr => var . aoptr expr ]*
    [ 48: expr => var . ]*
    [ 49: expr => var . "++" ]*
    [ 50: expr => var . "--" ]*
    [ 53: aoptr => . "=" ]
    [ 54: aoptr => . "+=" ]
    [ 55: aoptr => . "-=" ]
    [ 56: aoptr => . "*=" ]
    [ 57: aoptr => . "/=" ]
    [ 58: aoptr => . "&=" ]
    [ 59: aoptr => . "|=" ]
    [ 60: aoptr => . "^=" ]
    [ 61: aoptr => . ">>=" ]
    [ 62: aoptr => . "<<=" ]
    [ 63: aoptr => . "%=" ]
    "=" : shift,and goto state 12
    "+=" : shift,and goto state 13
    "-=" : shift,and goto state 14
    "*=" : shift,and goto state 15
    "/=" : shift,and goto state 16
    "&=" : shift,and goto state 17
    "|=" : shift,and goto state 18
    "^=" : shift,and goto state 19
    ">>=" : shift,and goto state 20
    "<<=" : shift,and goto state 21
    "%=" : shift,and goto state 22
    "++" : shift,and goto state 62
    "--" : shift,and goto state 63
    "+" : reduce with rule 48
    "-" : reduce with rule 48
    "*" : reduce with rule 48
    "/" : reduce with rule 48
    "**" : reduce with rule 48
    "?" : reduce with rule 48
    "%" : reduce with rule 48
    ">" : reduce with rule 48
    "<" : reduce with rule 48
    ">=" : reduce with rule 48
    "<=" : reduce with rule 48
    "==" : reduce with rule 48
    "!=" : reduce with rule 48
    "|" : reduce with rule 48
    "&" : reduce with rule 48
    "^" : reduce with rule 48
    "&&" : reduce with rule 48
    "||" : reduce with rule 48
    ">>" : reduce with rule 48
    "<<" : reduce with rule 48
    ">>>" : reduce with rule 48
    "(" : reduce with rule 48
    ")" : reduce with rule 51
    "[" : reduce with rule 48
    "," : reduce with rule 51
    ";" : reduce with rule 51
    aoptr : goto state 61


state 31
    [ 52: expr => "--" var . ]*
    [ 24: expr => var . aoptr expr ]*
    [ 48: expr => var . ]*
    [ 49: expr => var . "++" ]*
    [ 50: expr => var . "--" ]*
    [ 53: aoptr => . "=" ]
    [ 54: aoptr => . "+=" ]
    [ 55: aoptr => . "-=" ]
    [ 56: aoptr => . "*=" ]
    [ 57: aoptr => . "/=" ]
    [ 58: aoptr => . "&=" ]
    [ 59: aoptr => . "|=" ]
    [ 60: aoptr => . "^=" ]
    [ 61: aoptr => . ">>=" ]
    [ 62: aoptr => . "<<=" ]
    [ 63: aoptr => . "%=" ]
    "=" : shift,and goto state 12
    "+=" : shift,and goto state 13
    "-=" : shift,and goto state 14
    "*=" : shift,and goto state 15
    "/=" : shift,and goto state 16
    "&=" : shift,and goto state 17
    "|=" : shift,and goto state 18
    "^=" : shift,and goto state 19
    ">>=" : shift,and goto state 20
    "<<=" : shift,and goto state 21
    "%=" : shift,and goto state 22
    "++" : shift,and goto state 62
    "--" : shift,and goto state 63
    "+" : reduce with rule 48
    "-" : reduce with rule 48
    "*" : reduce with rule 48
    "/" : reduce with rule 48
    "**" : reduce with rule 48
    "?" : reduce with rule 48
    "%" : reduce with rule 48
    ">" : reduce with rule 48
    "<" : reduce with rule 48
    ">=" : reduce with rule 48
    "<=" : reduce with rule 48
    "==" : reduce with rule 48
    "!=" : reduce with rule 48
    "|" : reduce with rule 48
    "&" : reduce with rule 48
    "^" : reduce with rule 48
    "&&" : reduce with rule 48
    "||" : reduce with rule 48
    ">>" : reduce with rule 48
    "<<" : reduce with rule 48
    ">>>" : reduce with rule 48
    "(" : reduce with rule 48
    ")" : reduce with rule 52
    "[" : reduce with rule 48
    "," : reduce with rule 52
    ";" : reduce with rule 52
    aoptr : goto state 61


state 32
    [ 4: topstmt => "function" "(" argdeflist . ")" "{" stmtlist "}" ]*
    ")" : shift,and goto state 69


state 33
    [ 5: argdeflist => neargdeflist . ]*
    [ 7: neargdeflist => neargdeflist . "," "id" ]*
    "," : shift,and goto state 70
    ")" : reduce with rule 5


state 34
    [ 8: neargdeflist => "id" . ]*
    ")" : reduce with rule 8
    "," : reduce with rule 8


state 35
    [ 9: stmtlist => stmtlist stmt . ]*
    "+" : reduce with rule 9
    "-" : reduce with rule 9
    "~" : reduce with rule 9
    "++" : reduce with rule 9
    "--" : reduce with rule 9
    "!" : reduce with rule 9
    "(" : reduce with rule 9
    "{" : reduce with rule 9
    "}" : reduce with rule 9
    "id" : reduce with rule 9
    "num" : reduce with rule 9
    ";" : reduce with rule 9
    "if" : reduce with rule 9
    "while" : reduce with rule 9
    "do" : reduce with rule 9
    "for" : reduce with rule 9


state 36
    [ 23: exprlist => expr . ]*
    [ 25: expr => expr . "?" expr ":" expr ]*
    [ 26: expr => expr . "||" expr ]*
    [ 27: expr => expr . "&&" expr ]*
    [ 28: expr => expr . "|" expr ]*
    [ 29: expr => expr . "^" expr ]*
    [ 30: expr => expr . "&" expr ]*
    [ 31: expr => expr . coptr expr ]*
    [ 32: expr => expr . ">>" expr ]*
    [ 33: expr => expr . "<<" expr ]*
    [ 34: expr => expr . ">>>" expr ]*
    [ 35: expr => expr . "+" expr ]*
    [ 36: expr => expr . "-" expr ]*
    [ 37: expr => expr . "*" expr ]*
    [ 38: expr => expr . "/" expr ]*
    [ 39: expr => expr . "%" expr ]*
    [ 40: expr => expr . "**" expr ]*
    [ 47: expr => expr . "(" arglist ")" ]*
    [ 76: var => expr . "[" exprlist "]" ]*
    [ 64: coptr => . ">" ]
    [ 65: coptr => . "<" ]
    [ 66: coptr => . ">=" ]
    [ 67: coptr => . "<=" ]
    [ 68: coptr => . "==" ]
    [ 69: coptr => . "!=" ]
    "+" : shift,and goto state 53
    "-" : shift,and goto state 54
    "*" : shift,and goto state 55
    "/" : shift,and goto state 56
    "**" : shift,and goto state 58
    "?" : shift,and goto state 43
    "%" : shift,and goto state 57
    ">" : shift,and goto state 6
    "<" : shift,and goto state 7
    ">=" : shift,and goto state 8
    "<=" : shift,and goto state 9
    "==" : shift,and goto state 10
    "!=" : shift,and goto state 11
    "|" : shift,and goto state 46
    "&" : shift,and goto state 48
    "^" : shift,and goto state 47
    "&&" : shift,and goto state 45
    "||" : shift,and goto state 44
    ">>" : shift,and goto state 50
    "<<" : shift,and goto state 51
    ">>>" : shift,and goto state 52
    "(" : shift,and goto state 59
    "[" : shift,and goto state 60
    ")" : reduce with rule 23
    "]" : reduce with rule 23
    "," : reduce with rule 23
    ";" : reduce with rule 23
    coptr : goto state 49


state 37
    [ 51: expr => "++" . var ]*
    [ 75: var => . "id" ]
    [ 76: var => . expr "[" exprlist "]" ]
    [ 24: expr => . var aoptr expr ]
    [ 25: expr => . expr "?" expr ":" expr ]
    [ 26: expr => . expr "||" expr ]
    [ 27: expr => . expr "&&" expr ]
    [ 28: expr => . expr "|" expr ]
    [ 29: expr => . expr "^" expr ]
    [ 30: expr => . expr "&" expr ]
    [ 31: expr => . expr coptr expr ]
    [ 32: expr => . expr ">>" expr ]
    [ 33: expr => . expr "<<" expr ]
    [ 34: expr => . expr ">>>" expr ]
    [ 35: expr => . expr "+" expr ]
    [ 36: expr => . expr "-" expr ]
    [ 37: expr => . expr "*" expr ]
    [ 38: expr => . expr "/" expr ]
    [ 39: expr => . expr "%" expr ]
    [ 40: expr => . expr "**" expr ]
    [ 41: expr => . "+" expr ]
    [ 42: expr => . "-" expr ]
    [ 43: expr => . "~" expr ]
    [ 44: expr => . "!" expr ]
    [ 45: expr => . const ]
    [ 46: expr => . "(" expr ")" ]
    [ 47: expr => . expr "(" arglist ")" ]
    [ 48: expr => . var ]
    [ 49: expr => . var "++" ]
    [ 50: expr => . var "--" ]
    [ 51: expr => . "++" var ]
    [ 52: expr => . "--" var ]
    [ 74: const => . "num" ]
    "+" : shift,and goto state 24
    "-" : shift,and goto state 25
    "~" : shift,and goto state 26
    "++" : shift,and goto state 37
    "--" : shift,and goto state 38
    "!" : shift,and goto state 27
    "(" : shift,and goto state 29
    "id" : shift,and goto state 39
    "num" : shift,and goto state 40
    expr : goto state 73
    const : goto state 28
    var : goto state 72


state 38
    [ 52: expr => "--" . var ]*
    [ 75: var => . "id" ]
    [ 76: var => . expr "[" exprlist "]" ]
    [ 24: expr => . var aoptr expr ]
    [ 25: expr => . expr "?" expr ":" expr ]
    [ 26: expr => . expr "||" expr ]
    [ 27: expr => . expr "&&" expr ]
    [ 28: expr => . expr "|" expr ]
    [ 29: expr => . expr "^" expr ]
    [ 30: expr => . expr "&" expr ]
    [ 31: expr => . expr coptr expr ]
    [ 32: expr => . expr ">>" expr ]
    [ 33: expr => . expr "<<" expr ]
    [ 34: expr => . expr ">>>" expr ]
    [ 35: expr => . expr "+" expr ]
    [ 36: expr => . expr "-" expr ]
    [ 37: expr => . expr "*" expr ]
    [ 38: expr => . expr "/" expr ]
    [ 39: expr => . expr "%" expr ]
    [ 40: expr => . expr "**" expr ]
    [ 41: expr => . "+" expr ]
    [ 42: expr => . "-" expr ]
    [ 43: expr => . "~" expr ]
    [ 44: expr => . "!" expr ]
    [ 45: expr => . const ]
    [ 46: expr => . "(" expr ")" ]
    [ 47: expr => . expr "(" arglist ")" ]
    [ 48: expr => . var ]
    [ 49: expr => . var "++" ]
    [ 50: expr => . var "--" ]
    [ 51: expr => . "++" var ]
    [ 52: expr => . "--" var ]
    [ 74: const => . "num" ]
    "+" : shift,and goto state 24
    "-" : shift,and goto state 25
    "~" : shift,and goto state 26
    "++" : shift,and goto state 37
    "--" : shift,and goto state 38
    "!" : shift,and goto state 27
    "(" : shift,and goto state 29
    "id" : shift,and goto state 39
    "num" : shift,and goto state 40
    expr : goto state 73
    const : goto state 28
    var : goto state 74


state 39
    [ 75: var => "id" . ]*
    "+" : reduce with rule 75
    "-" : reduce with rule 75
    "*" : reduce with rule 75
    "/" : reduce with rule 75
    "**" : reduce with rule 75
    "?" : reduce with rule 75
    ":" : reduce with rule 75
    "%" : reduce with rule 75
    ">" : reduce with rule 75
    "<" : reduce with rule 75
    ">=" : reduce with rule 75
    "<=" : reduce with rule 75
    "==" : reduce with rule 75
    "!=" : reduce with rule 75
    "=" : reduce with rule 75
    "+=" : reduce with rule 75
    "-=" : reduce with rule 75
    "*=" : reduce with rule 75
    "/=" : reduce with rule 75
    "&=" : reduce with rule 75
    "|=" : reduce with rule 75
    "^=" : reduce with rule 75
    ">>=" : reduce with rule 75
    "<<=" : reduce with rule 75
    "%=" : reduce with rule 75
    "|" : reduce with rule 75
    "&" : reduce with rule 75
    "^" : reduce with rule 75
    "++" : reduce with rule 75
    "--" : reduce with rule 75
    "&&" : reduce with rule 75
    "||" : reduce with rule 75
    ">>" : reduce with rule 75
    "<<" : reduce with rule 75
    ">>>" : reduce with rule 75
    "(" : reduce with rule 75
    ")" : reduce with rule 75
    "[" : reduce with rule 75
    "]" : reduce with rule 75
    "," : reduce with rule 75
    ";" : reduce with rule 75


state 40
    [ 74: const => "num" . ]*
    "+" : reduce with rule 74
    "-" : reduce with rule 74
    "*" : reduce with rule 74
    "/" : reduce with rule 74
    "**" : reduce with rule 74
    "?" : reduce with rule 74
    ":" : reduce with rule 74
    "%" : reduce with rule 74
    ">" : reduce with rule 74
    "<" : reduce with rule 74
    ">=" : reduce with rule 74
    "<=" : reduce with rule 74
    "==" : reduce with rule 74
    "!=" : reduce with rule 74
    "|" : reduce with rule 74
    "&" : reduce with rule 74
    "^" : reduce with rule 74
    "&&" : reduce with rule 74
    "||" : reduce with rule 74
    ">>" : reduce with rule 74
    "<<" : reduce with rule 74
    ">>>" : reduce with rule 74
    "(" : reduce with rule 74
    ")" : reduce with rule 74
    "[" : reduce with rule 74
    "]" : reduce with rule 74
    "," : reduce with rule 74
    ";" : reduce with rule 74


state 41
    [ 70: arglist => narglist . ]*
    [ 72: narglist => narglist . "," expr ]*
    "," : shift,and goto state 75
    ")" : reduce with rule 70


state 42
    [ 73: narglist => expr . ]*
    [ 25: expr => expr . "?" expr ":" expr ]*
    [ 26: expr => expr . "||" expr ]*
    [ 27: expr => expr . "&&" expr ]*
    [ 28: expr => expr . "|" expr ]*
    [ 29: expr => expr . "^" expr ]*
    [ 30: expr => expr . "&" expr ]*
    [ 31: expr => expr . coptr expr ]*
    [ 32: expr => expr . ">>" expr ]*
    [ 33: expr => expr . "<<" expr ]*
    [ 34: expr => expr . ">>>" expr ]*
    [ 35: expr => expr . "+" expr ]*
    [ 36: expr => expr . "-" expr ]*
    [ 37: expr => expr . "*" expr ]*
    [ 38: expr => expr . "/" expr ]*
    [ 39: expr => expr . "%" expr ]*
    [ 40: expr => expr . "**" expr ]*
    [ 47: expr => expr . "(" arglist ")" ]*
    [ 76: var => expr . "[" exprlist "]" ]*
    [ 64: coptr => . ">" ]
    [ 65: coptr => . "<" ]
    [ 66: coptr => . ">=" ]
    [ 67: coptr => . "<=" ]
    [ 68: coptr => . "==" ]
    [ 69: coptr => . "!=" ]
    "+" : shift,and goto state 53
    "-" : shift,and goto state 54
    "*" : shift,and goto state 55
    "/" : shift,and goto state 56
    "**" : shift,and goto state 58
    "?" : shift,and goto state 43
    "%" : shift,and goto state 57
    ">" : shift,and goto state 6
    "<" : shift,and goto state 7
    ">=" : shift,and goto state 8
    "<=" : shift,and goto state 9
    "==" : shift,and goto state 10
    "!=" : shift,and goto state 11
    "|" : shift,and goto state 46
    "&" : shift,and goto state 48
    "^" : shift,and goto state 47
    "&&" : shift,and goto state 45
    "||" : shift,and goto state 44
    ">>" : shift,and goto state 50
    "<<" : shift,and goto state 51
    ">>>" : shift,and goto state 52
    "(" : shift,and goto state 59
    "[" : shift,and goto state 60
    ")" : reduce with rule 73
    "," : reduce with rule 73
    coptr : goto state 49


state 43
    [ 25: expr => expr "?" . expr ":" expr ]*
    [ 24: expr => . var aoptr expr ]
    [ 25: expr => . expr "?" expr ":" expr ]
    [ 26: expr => . expr "||" expr ]
    [ 27: expr => . expr "&&" expr ]
    [ 28: expr => . expr "|" expr ]
    [ 29: expr => . expr "^" expr ]
    [ 30: expr => . expr "&" expr ]
    [ 31: expr => . expr coptr expr ]
    [ 32: expr => . expr ">>" expr ]
    [ 33: expr => . expr "<<" expr ]
    [ 34: expr => . expr ">>>" expr ]
    [ 35: expr => . expr "+" expr ]
    [ 36: expr => . expr "-" expr ]
    [ 37: expr => . expr "*" expr ]
    [ 38: expr => . expr "/" expr ]
    [ 39: expr => . expr "%" expr ]
    [ 40: expr => . expr "**" expr ]
    [ 41: expr => . "+" expr ]
    [ 42: expr => . "-" expr ]
    [ 43: expr => . "~" expr ]
    [ 44: expr => . "!" expr ]
    [ 45: expr => . const ]
    [ 46: expr => . "(" expr ")" ]
    [ 47: expr => . expr "(" arglist ")" ]
    [ 48: expr => . var ]
    [ 49: expr => . var "++" ]
    [ 50: expr => . var "--" ]
    [ 51: expr => . "++" var ]
    [ 52: expr => . "--" var ]
    [ 75: var => . "id" ]
    [ 76: var => . expr "[" exprlist "]" ]
    [ 74: const => . "num" ]
    "+" : shift,and goto state 24
    "-" : shift,and goto state 25
    "~" : shift,and goto state 26
    "++" : shift,and goto state 37
    "--" : shift,and goto state 38
    "!" : shift,and goto state 27
    "(" : shift,and goto state 29
    "id" : shift,and goto state 39
    "num" : shift,and goto state 40
    expr : goto state 76
    const : goto state 28
    var : goto state 23


state 44
    [ 26: expr => expr "||" . expr ]*
    [ 24: expr => . var aoptr expr ]
    [ 25: expr => . expr "?" expr ":" expr ]
    [ 26: expr => . expr "||" expr ]
    [ 27: expr => . expr "&&" expr ]
    [ 28: expr => . expr "|" expr ]
    [ 29: expr => . expr "^" expr ]
    [ 30: expr => . expr "&" expr ]
    [ 31: expr => . expr coptr expr ]
    [ 32: expr => . expr ">>" expr ]
    [ 33: expr => . expr "<<" expr ]
    [ 34: expr => . expr ">>>" expr ]
    [ 35: expr => . expr "+" expr ]
    [ 36: expr => . expr "-" expr ]
    [ 37: expr => . expr "*" expr ]
    [ 38: expr => . expr "/" expr ]
    [ 39: expr => . expr "%" expr ]
    [ 40: expr => . expr "**" expr ]
    [ 41: expr => . "+" expr ]
    [ 42: expr => . "-" expr ]
    [ 43: expr => . "~" expr ]
    [ 44: expr => . "!" expr ]
    [ 45: expr => . const ]
    [ 46: expr => . "(" expr ")" ]
    [ 47: expr => . expr "(" arglist ")" ]
    [ 48: expr => . var ]
    [ 49: expr => . var "++" ]
    [ 50: expr => . var "--" ]
    [ 51: expr => . "++" var ]
    [ 52: expr => . "--" var ]
    [ 75: var => . "id" ]
    [ 76: var => . expr "[" exprlist "]" ]
    [ 74: const => . "num" ]
    "+" : shift,and goto state 24
    "-" : shift,and goto state 25
    "~" : shift,and goto state 26
    "++" : shift,and goto state 37
    "--" : shift,and goto state 38
    "!" : shift,and goto state 27
    "(" : shift,and goto state 29
    "id" : shift,and goto state 39
    "num" : shift,and goto state 40
    expr : goto state 77
    const : goto state 28
    var : goto state 23


state 45
    [ 27: expr => expr "&&" . expr ]*
    [ 24: expr => . var aoptr expr ]
    [ 25: expr => . expr "?" expr ":" expr ]
    [ 26: expr => . expr "||" expr ]
    [ 27: expr => . expr "&&" expr ]
    [ 28: expr => . expr "|" expr ]
    [ 29: expr => . expr "^" expr ]
    [ 30: expr => . expr "&" expr ]
    [ 31: expr => . expr coptr expr ]
    [ 32: expr => . expr ">>" expr ]
    [ 33: expr => . expr "<<" expr ]
    [ 34: expr => . expr ">>>" expr ]
    [ 35: expr => . expr "+" expr ]
    [ 36: expr => . expr "-" expr ]
    [ 37: expr => . expr "*" expr ]
    [ 38: expr => . expr "/" expr ]
    [ 39: expr => . expr "%" expr ]
    [ 40: expr => . expr "**" expr ]
    [ 41: expr => . "+" expr ]
    [ 42: expr => . "-" expr ]
    [ 43: expr => . "~" expr ]
    [ 44: expr => . "!" expr ]
    [ 45: expr => . const ]
    [ 46: expr => . "(" expr ")" ]
    [ 47: expr => . expr "(" arglist ")" ]
    [ 48: expr => . var ]
    [ 49: expr => . var "++" ]
    [ 50: expr => . var "--" ]
    [ 51: expr => . "++" var ]
    [ 52: expr => . "--" var ]
    [ 75: var => . "id" ]
    [ 76: var => . expr "[" exprlist "]" ]
    [ 74: const => . "num" ]
    "+" : shift,and goto state 24
    "-" : shift,and goto state 25
    "~" : shift,and goto state 26
    "++" : shift,and goto state 37
    "--" : shift,and goto state 38
    "!" : shift,and goto state 27
    "(" : shift,and goto state 29
    "id" : shift,and goto state 39
    "num" : shift,and goto state 40
    expr : goto state 78
    const : goto state 28
    var : goto state 23


state 46
    [ 28: expr => expr "|" . expr ]*
    [ 24: expr => . var aoptr expr ]
    [ 25: expr => . expr "?" expr ":" expr ]
    [ 26: expr => . expr "||" expr ]
    [ 27: expr => . expr "&&" expr ]
    [ 28: expr => . expr "|" expr ]
    [ 29: expr => . expr "^" expr ]
    [ 30: expr => . expr "&" expr ]
    [ 31: expr => . expr coptr expr ]
    [ 32: expr => . expr ">>" expr ]
    [ 33: expr => . expr "<<" expr ]
    [ 34: expr => . expr ">>>" expr ]
    [ 35: expr => . expr "+" expr ]
    [ 36: expr => . expr "-" expr ]
    [ 37: expr => . expr "*" expr ]
    [ 38: expr => . expr "/" expr ]
    [ 39: expr => . expr "%" expr ]
    [ 40: expr => . expr "**" expr ]
    [ 41: expr => . "+" expr ]
    [ 42: expr => . "-" expr ]
    [ 43: expr => . "~" expr ]
    [ 44: expr => . "!" expr ]
    [ 45: expr => . const ]
    [ 46: expr => . "(" expr ")" ]
    [ 47: expr => . expr "(" arglist ")" ]
    [ 48: expr => . var ]
    [ 49: expr => . var "++" ]
    [ 50: expr => . var "--" ]
    [ 51: expr => . "++" var ]
    [ 52: expr => . "--" var ]
    [ 75: var => . "id" ]
    [ 76: var => . expr "[" exprlist "]" ]
    [ 74: const => . "num" ]
    "+" : shift,and goto state 24
    "-" : shift,and goto state 25
    "~" : shift,and goto state 26
    "++" : shift,and goto state 37
    "--" : shift,and goto state 38
    "!" : shift,and goto state 27
    "(" : shift,and goto state 29
    "id" : shift,and goto state 39
    "num" : shift,and goto state 40
    expr : goto state 79
    const : goto state 28
    var : goto state 23


state 47
    [ 29: expr => expr "^" . expr ]*
    [ 24: expr => . var aoptr expr ]
    [ 25: expr => . expr "?" expr ":" expr ]
    [ 26: expr => . expr "||" expr ]
    [ 27: expr => . expr "&&" expr ]
    [ 28: expr => . expr "|" expr ]
    [ 29: expr => . expr "^" expr ]
    [ 30: expr => . expr "&" expr ]
    [ 31: expr => . expr coptr expr ]
    [ 32: expr => . expr ">>" expr ]
    [ 33: expr => . expr "<<" expr ]
    [ 34: expr => . expr ">>>" expr ]
    [ 35: expr => . expr "+" expr ]
    [ 36: expr => . expr "-" expr ]
    [ 37: expr => . expr "*" expr ]
    [ 38: expr => . expr "/" expr ]
    [ 39: expr => . expr "%" expr ]
    [ 40: expr => . expr "**" expr ]
    [ 41: expr => . "+" expr ]
    [ 42: expr => . "-" expr ]
    [ 43: expr => . "~" expr ]
    [ 44: expr => . "!" expr ]
    [ 45: expr => . const ]
    [ 46: expr => . "(" expr ")" ]
    [ 47: expr => . expr "(" arglist ")" ]
    [ 48: expr => . var ]
    [ 49: expr => . var "++" ]
    [ 50: expr => . var "--" ]
    [ 51: expr => . "++" var ]
    [ 52: expr => . "--" var ]
    [ 75: var => . "id" ]
    [ 76: var => . expr "[" exprlist "]" ]
    [ 74: const => . "num" ]
    "+" : shift,and goto state 24
    "-" : shift,and goto state 25
    "~" : shift,and goto state 26
    "++" : shift,and goto state 37
    "--" : shift,and goto state 38
    "!" : shift,and goto state 27
    "(" : shift,and goto state 29
    "id" : shift,and goto state 39
    "num" : shift,and goto state 40
    expr : goto state 80
    const : goto state 28
    var : goto state 23


state 48
    [ 30: expr => expr "&" . expr ]*
    [ 24: expr => . var aoptr expr ]
    [ 25: expr => . expr "?" expr ":" expr ]
    [ 26: expr => . expr "||" expr ]
    [ 27: expr => . expr "&&" expr ]
    [ 28: expr => . expr "|" expr ]
    [ 29: expr => . expr "^" expr ]
    [ 30: expr => . expr "&" expr ]
    [ 31: expr => . expr coptr expr ]
    [ 32: expr => . expr ">>" expr ]
    [ 33: expr => . expr "<<" expr ]
    [ 34: expr => . expr ">>>" expr ]
    [ 35: expr => . expr "+" expr ]
    [ 36: expr => . expr "-" expr ]
    [ 37: expr => . expr "*" expr ]
    [ 38: expr => . expr "/" expr ]
    [ 39: expr => . expr "%" expr ]
    [ 40: expr => . expr "**" expr ]
    [ 41: expr => . "+" expr ]
    [ 42: expr => . "-" expr ]
    [ 43: expr => . "~" expr ]
    [ 44: expr => . "!" expr ]
    [ 45: expr => . const ]
    [ 46: expr => . "(" expr ")" ]
    [ 47: expr => . expr "(" arglist ")" ]
    [ 48: expr => . var ]
    [ 49: expr => . var "++" ]
    [ 50: expr => . var "--" ]
    [ 51: expr => . "++" var ]
    [ 52: expr => . "--" var ]
    [ 75: var => . "id" ]
    [ 76: var => . expr "[" exprlist "]" ]
    [ 74: const => . "num" ]
    "+" : shift,and goto state 24
    "-" : shift,and goto state 25
    "~" : shift,and goto state 26
    "++" : shift,and goto state 37
    "--" : shift,and goto state 38
    "!" : shift,and goto state 27
    "(" : shift,and goto state 29
    "id" : shift,and goto state 39
    "num" : shift,and goto state 40
    expr : goto state 81
    const : goto state 28
    var : goto state 23


state 49
    [ 31: expr => expr coptr . expr ]*
    [ 24: expr => . var aoptr expr ]
    [ 25: expr => . expr "?" expr ":" expr ]
    [ 26: expr => . expr "||" expr ]
    [ 27: expr => . expr "&&" expr ]
    [ 28: expr => . expr "|" expr ]
    [ 29: expr => . expr "^" expr ]
    [ 30: expr => . expr "&" expr ]
    [ 31: expr => . expr coptr expr ]
    [ 32: expr => . expr ">>" expr ]
    [ 33: expr => . expr "<<" expr ]
    [ 34: expr => . expr ">>>" expr ]
    [ 35: expr => . expr "+" expr ]
    [ 36: expr => . expr "-" expr ]
    [ 37: expr => . expr "*" expr ]
    [ 38: expr => . expr "/" expr ]
    [ 39: expr => . expr "%" expr ]
    [ 40: expr => . expr "**" expr ]
    [ 41: expr => . "+" expr ]
    [ 42: expr => . "-" expr ]
    [ 43: expr => . "~" expr ]
    [ 44: expr => . "!" expr ]
    [ 45: expr => . const ]
    [ 46: expr => . "(" expr ")" ]
    [ 47: expr => . expr "(" arglist ")" ]
    [ 48: expr => . var ]
    [ 49: expr => . var "++" ]
    [ 50: expr => . var "--" ]
    [ 51: expr => . "++" var ]
    [ 52: expr => . "--" var ]
    [ 75: var => . "id" ]
    [ 76: var => . expr "[" exprlist "]" ]
    [ 74: const => . "num" ]
    "+" : shift,and goto state 24
    "-" : shift,and goto state 25
    "~" : shift,and goto state 26
    "++" : shift,and goto state 37
    "--" : shift,and goto state 38
    "!" : shift,and goto state 27
    "(" : shift,and goto state 29
    "id" : shift,and goto state 39
    "num" : shift,and goto state 40
    expr : goto state 82
    const : goto state 28
    var : goto state 23


state 50
    [ 32: expr => expr ">>" . expr ]*
    [ 24: expr => . var aoptr expr ]
    [ 25: expr => . expr "?" expr ":" expr ]
    [ 26: expr => . expr "||" expr ]
    [ 27: expr => . expr "&&" expr ]
    [ 28: expr => . expr "|" expr ]
    [ 29: expr => . expr "^" expr ]
    [ 30: expr => . expr "&" expr ]
    [ 31: expr => . expr coptr expr ]
    [ 32: expr => . expr ">>" expr ]
    [ 33: expr => . expr "<<" expr ]
    [ 34: expr => . expr ">>>" expr ]
    [ 35: expr => . expr "+" expr ]
    [ 36: expr => . expr "-" expr ]
    [ 37: expr => . expr "*" expr ]
    [ 38: expr => . expr "/" expr ]
    [ 39: expr => . expr "%" expr ]
    [ 40: expr => . expr "**" expr ]
    [ 41: expr => . "+" expr ]
    [ 42: expr => . "-" expr ]
    [ 43: expr => . "~" expr ]
    [ 44: expr => . "!" expr ]
    [ 45: expr => . const ]
    [ 46: expr => . "(" expr ")" ]
    [ 47: expr => . expr "(" arglist ")" ]
    [ 48: expr => . var ]
    [ 49: expr => . var "++" ]
    [ 50: expr => . var "--" ]
    [ 51: expr => . "++" var ]
    [ 52: expr => . "--" var ]
    [ 75: var => . "id" ]
    [ 76: var => . expr "[" exprlist "]" ]
    [ 74: const => . "num" ]
    "+" : shift,and goto state 24
    "-" : shift,and goto state 25
    "~" : shift,and goto state 26
    "++" : shift,and goto state 37
    "--" : shift,and goto state 38
    "!" : shift,and goto state 27
    "(" : shift,and goto state 29
    "id" : shift,and goto state 39
    "num" : shift,and goto state 40
    expr : goto state 83
    const : goto state 28
    var : goto state 23


state 51
    [ 33: expr => expr "<<" . expr ]*
    [ 24: expr => . var aoptr expr ]
    [ 25: expr => . expr "?" expr ":" expr ]
    [ 26: expr => . expr "||" expr ]
    [ 27: expr => . expr "&&" expr ]
    [ 28: expr => . expr "|" expr ]
    [ 29: expr => . expr "^" expr ]
    [ 30: expr => . expr "&" expr ]
    [ 31: expr => . expr coptr expr ]
    [ 32: expr => . expr ">>" expr ]
    [ 33: expr => . expr "<<" expr ]
    [ 34: expr => . expr ">>>" expr ]
    [ 35: expr => . expr "+" expr ]
    [ 36: expr => . expr "-" expr ]
    [ 37: expr => . expr "*" expr ]
    [ 38: expr => . expr "/" expr ]
    [ 39: expr => . expr "%" expr ]
    [ 40: expr => . expr "**" expr ]
    [ 41: expr => . "+" expr ]
    [ 42: expr => . "-" expr ]
    [ 43: expr => . "~" expr ]
    [ 44: expr => . "!" expr ]
    [ 45: expr => . const ]
    [ 46: expr => . "(" expr ")" ]
    [ 47: expr => . expr "(" arglist ")" ]
    [ 48: expr => . var ]
    [ 49: expr => . var "++" ]
    [ 50: expr => . var "--" ]
    [ 51: expr => . "++" var ]
    [ 52: expr => . "--" var ]
    [ 75: var => . "id" ]
    [ 76: var => . expr "[" exprlist "]" ]
    [ 74: const => . "num" ]
    "+" : shift,and goto state 24
    "-" : shift,and goto state 25
    "~" : shift,and goto state 26
    "++" : shift,and goto state 37
    "--" : shift,and goto state 38
    "!" : shift,and goto state 27
    "(" : shift,and goto state 29
    "id" : shift,and goto state 39
    "num" : shift,and goto state 40
    expr : goto state 84
    const : goto state 28
    var : goto state 23


state 52
    [ 34: expr => expr ">>>" . expr ]*
    [ 24: expr => . var aoptr expr ]
    [ 25: expr => . expr "?" expr ":" expr ]
    [ 26: expr => . expr "||" expr ]
    [ 27: expr => . expr "&&" expr ]
    [ 28: expr => . expr "|" expr ]
    [ 29: expr => . expr "^" expr ]
    [ 30: expr => . expr "&" expr ]
    [ 31: expr => . expr coptr expr ]
    [ 32: expr => . expr ">>" expr ]
    [ 33: expr => . expr "<<" expr ]
    [ 34: expr => . expr ">>>" expr ]
    [ 35: expr => . expr "+" expr ]
    [ 36: expr => . expr "-" expr ]
    [ 37: expr => . expr "*" expr ]
    [ 38: expr => . expr "/" expr ]
    [ 39: expr => . expr "%" expr ]
    [ 40: expr => . expr "**" expr ]
    [ 41: expr => . "+" expr ]
    [ 42: expr => . "-" expr ]
    [ 43: expr => . "~" expr ]
    [ 44: expr => . "!" expr ]
    [ 45: expr => . const ]
    [ 46: expr => . "(" expr ")" ]
    [ 47: expr => . expr "(" arglist ")" ]
    [ 48: expr => . var ]
    [ 49: expr => . var "++" ]
    [ 50: expr => . var "--" ]
    [ 51: expr => . "++" var ]
    [ 52: expr => . "--" var ]
    [ 75: var => . "id" ]
    [ 76: var => . expr "[" exprlist "]" ]
    [ 74: const => . "num" ]
    "+" : shift,and goto state 24
    "-" : shift,and goto state 25
    "~" : shift,and goto state 26
    "++" : shift,and goto state 37
    "--" : shift,and goto state 38
    "!" : shift,and goto state 27
    "(" : shift,and goto state 29
    "id" : shift,and goto state 39
    "num" : shift,and goto state 40
    expr : goto state 85
    const : goto state 28
    var : goto state 23


state 53
    [ 35: expr => expr "+" . expr ]*
    [ 24: expr => . var aoptr expr ]
    [ 25: expr => . expr "?" expr ":" expr ]
    [ 26: expr => . expr "||" expr ]
    [ 27: expr => . expr "&&" expr ]
    [ 28: expr => . expr "|" expr ]
    [ 29: expr => . expr "^" expr ]
    [ 30: expr => . expr "&" expr ]
    [ 31: expr => . expr coptr expr ]
    [ 32: expr => . expr ">>" expr ]
    [ 33: expr => . expr "<<" expr ]
    [ 34: expr => . expr ">>>" expr ]
    [ 35: expr => . expr "+" expr ]
    [ 36: expr => . expr "-" expr ]
    [ 37: expr => . expr "*" expr ]
    [ 38: expr => . expr "/" expr ]
    [ 39: expr => . expr "%" expr ]
    [ 40: expr => . expr "**" expr ]
    [ 41: expr => . "+" expr ]
    [ 42: expr => . "-" expr ]
    [ 43: expr => . "~" expr ]
    [ 44: expr => . "!" expr ]
    [ 45: expr => . const ]
    [ 46: expr => . "(" expr ")" ]
    [ 47: expr => . expr "(" arglist ")" ]
    [ 48: expr => . var ]
    [ 49: expr => . var "++" ]
    [ 50: expr => . var "--" ]
    [ 51: expr => . "++" var ]
    [ 52: expr => . "--" var ]
    [ 75: var => . "id" ]
    [ 76: var => . expr "[" exprlist "]" ]
    [ 74: const => . "num" ]
    "+" : shift,and goto state 24
    "-" : shift,and goto state 25
    "~" : shift,and goto state 26
    "++" : shift,and goto state 37
    "--" : shift,and goto state 38
    "!" : shift,and goto state 27
    "(" : shift,and goto state 29
    "id" : shift,and goto state 39
    "num" : shift,and goto state 40
    expr : goto state 86
    const : goto state 28
    var : goto state 23


state 54
    [ 36: expr => expr "-" . expr ]*
    [ 24: expr => . var aoptr expr ]
    [ 25: expr => . expr "?" expr ":" expr ]
    [ 26: expr => . expr "||" expr ]
    [ 27: expr => . expr "&&" expr ]
    [ 28: expr => . expr "|" expr ]
    [ 29: expr => . expr "^" expr ]
    [ 30: expr => . expr "&" expr ]
    [ 31: expr => . expr coptr expr ]
    [ 32: expr => . expr ">>" expr ]
    [ 33: expr => . expr "<<" expr ]
    [ 34: expr => . expr ">>>" expr ]
    [ 35: expr => . expr "+" expr ]
    [ 36: expr => . expr "-" expr ]
    [ 37: expr => . expr "*" expr ]
    [ 38: expr => . expr "/" expr ]
    [ 39: expr => . expr "%" expr ]
    [ 40: expr => . expr "**" expr ]
    [ 41: expr => . "+" expr ]
    [ 42: expr => . "-" expr ]
    [ 43: expr => . "~" expr ]
    [ 44: expr => . "!" expr ]
    [ 45: expr => . const ]
    [ 46: expr => . "(" expr ")" ]
    [ 47: expr => . expr "(" arglist ")" ]
    [ 48: expr => . var ]
    [ 49: expr => . var "++" ]
    [ 50: expr => . var "--" ]
    [ 51: expr => . "++" var ]
    [ 52: expr => . "--" var ]
    [ 75: var => . "id" ]
    [ 76: var => . expr "[" exprlist "]" ]
    [ 74: const => . "num" ]
    "+" : shift,and goto state 24
    "-" : shift,and goto state 25
    "~" : shift,and goto state 26
    "++" : shift,and goto state 37
    "--" : shift,and goto state 38
    "!" : shift,and goto state 27
    "(" : shift,and goto state 29
    "id" : shift,and goto state 39
    "num" : shift,and goto state 40
    expr : goto state 87
    const : goto state 28
    var : goto state 23


state 55
    [ 37: expr => expr "*" . expr ]*
    [ 24: expr => . var aoptr expr ]
    [ 25: expr => . expr "?" expr ":" expr ]
    [ 26: expr => . expr "||" expr ]
    [ 27: expr => . expr "&&" expr ]
    [ 28: expr => . expr "|" expr ]
    [ 29: expr => . expr "^" expr ]
    [ 30: expr => . expr "&" expr ]
    [ 31: expr => . expr coptr expr ]
    [ 32: expr => . expr ">>" expr ]
    [ 33: expr => . expr "<<" expr ]
    [ 34: expr => . expr ">>>" expr ]
    [ 35: expr => . expr "+" expr ]
    [ 36: expr => . expr "-" expr ]
    [ 37: expr => . expr "*" expr ]
    [ 38: expr => . expr "/" expr ]
    [ 39: expr => . expr "%" expr ]
    [ 40: expr => . expr "**" expr ]
    [ 41: expr => . "+" expr ]
    [ 42: expr => . "-" expr ]
    [ 43: expr => . "~" expr ]
    [ 44: expr => . "!" expr ]
    [ 45: expr => . const ]
    [ 46: expr => . "(" expr ")" ]
    [ 47: expr => . expr "(" arglist ")" ]
    [ 48: expr => . var ]
    [ 49: expr => . var "++" ]
    [ 50: expr => . var "--" ]
    [ 51: expr => . "++" var ]
    [ 52: expr => . "--" var ]
    [ 75: var => . "id" ]
    [ 76: var => . expr "[" exprlist "]" ]
    [ 74: const => . "num" ]
    "+" : shift,and goto state 24
    "-" : shift,and goto state 25
    "~" : shift,and goto state 26
    "++" : shift,and goto state 37
    "--" : shift,and goto state 38
    "!" : shift,and goto state 27
    "(" : shift,and goto state 29
    "id" : shift,and goto state 39
    "num" : shift,and goto state 40
    expr : goto state 88
    const : goto state 28
    var : goto state 23


state 56
    [ 38: expr => expr "/" . expr ]*
    [ 24: expr => . var aoptr expr ]
    [ 25: expr => . expr "?" expr ":" expr ]
    [ 26: expr => . expr "||" expr ]
    [ 27: expr => . expr "&&" expr ]
    [ 28: expr => . expr "|" expr ]
    [ 29: expr => . expr "^" expr ]
    [ 30: expr => . expr "&" expr ]
    [ 31: expr => . expr coptr expr ]
    [ 32: expr => . expr ">>" expr ]
    [ 33: expr => . expr "<<" expr ]
    [ 34: expr => . expr ">>>" expr ]
    [ 35: expr => . expr "+" expr ]
    [ 36: expr => . expr "-" expr ]
    [ 37: expr => . expr "*" expr ]
    [ 38: expr => . expr "/" expr ]
    [ 39: expr => . expr "%" expr ]
    [ 40: expr => . expr "**" expr ]
    [ 41: expr => . "+" expr ]
    [ 42: expr => . "-" expr ]
    [ 43: expr => . "~" expr ]
    [ 44: expr => . "!" expr ]
    [ 45: expr => . const ]
    [ 46: expr => . "(" expr ")" ]
    [ 47: expr => . expr "(" arglist ")" ]
    [ 48: expr => . var ]
    [ 49: expr => . var "++" ]
    [ 50: expr => . var "--" ]
    [ 51: expr => . "++" var ]
    [ 52: expr => . "--" var ]
    [ 75: var => . "id" ]
    [ 76: var => . expr "[" exprlist "]" ]
    [ 74: const => . "num" ]
    "+" : shift,and goto state 24
    "-" : shift,and goto state 25
    "~" : shift,and goto state 26
    "++" : shift,and goto state 37
    "--" : shift,and goto state 38
    "!" : shift,and goto state 27
    "(" : shift,and goto state 29
    "id" : shift,and goto state 39
    "num" : shift,and goto state 40
    expr : goto state 89
    const : goto state 28
    var : goto state 23


state 57
    [ 39: expr => expr "%" . expr ]*
    [ 24: expr => . var aoptr expr ]
    [ 25: expr => . expr "?" expr ":" expr ]
    [ 26: expr => . expr "||" expr ]
    [ 27: expr => . expr "&&" expr ]
    [ 28: expr => . expr "|" expr ]
    [ 29: expr => . expr "^" expr ]
    [ 30: expr => . expr "&" expr ]
    [ 31: expr => . expr coptr expr ]
    [ 32: expr => . expr ">>" expr ]
    [ 33: expr => . expr "<<" expr ]
    [ 34: expr => . expr ">>>" expr ]
    [ 35: expr => . expr "+" expr ]
    [ 36: expr => . expr "-" expr ]
    [ 37: expr => . expr "*" expr ]
    [ 38: expr => . expr "/" expr ]
    [ 39: expr => . expr "%" expr ]
    [ 40: expr => . expr "**" expr ]
    [ 41: expr => . "+" expr ]
    [ 42: expr => . "-" expr ]
    [ 43: expr => . "~" expr ]
    [ 44: expr => . "!" expr ]
    [ 45: expr => . const ]
    [ 46: expr => . "(" expr ")" ]
    [ 47: expr => . expr "(" arglist ")" ]
    [ 48: expr => . var ]
    [ 49: expr => . var "++" ]
    [ 50: expr => . var "--" ]
    [ 51: expr => . "++" var ]
    [ 52: expr => . "--" var ]
    [ 75: var => . "id" ]
    [ 76: var => . expr "[" exprlist "]" ]
    [ 74: const => . "num" ]
    "+" : shift,and goto state 24
    "-" : shift,and goto state 25
    "~" : shift,and goto state 26
    "++" : shift,and goto state 37
    "--" : shift,and goto state 38
    "!" : shift,and goto state 27
    "(" : shift,and goto state 29
    "id" : shift,and goto state 39
    "num" : shift,and goto state 40
    expr : goto state 90
    const : goto state 28
    var : goto state 23


state 58
    [ 40: expr => expr "**" . expr ]*
    [ 24: expr => . var aoptr expr ]
    [ 25: expr => . expr "?" expr ":" expr ]
    [ 26: expr => . expr "||" expr ]
    [ 27: expr => . expr "&&" expr ]
    [ 28: expr => . expr "|" expr ]
    [ 29: expr => . expr "^" expr ]
    [ 30: expr => . expr "&" expr ]
    [ 31: expr => . expr coptr expr ]
    [ 32: expr => . expr ">>" expr ]
    [ 33: expr => . expr "<<" expr ]
    [ 34: expr => . expr ">>>" expr ]
    [ 35: expr => . expr "+" expr ]
    [ 36: expr => . expr "-" expr ]
    [ 37: expr => . expr "*" expr ]
    [ 38: expr => . expr "/" expr ]
    [ 39: expr => . expr "%" expr ]
    [ 40: expr => . expr "**" expr ]
    [ 41: expr => . "+" expr ]
    [ 42: expr => . "-" expr ]
    [ 43: expr => . "~" expr ]
    [ 44: expr => . "!" expr ]
    [ 45: expr => . const ]
    [ 46: expr => . "(" expr ")" ]
    [ 47: expr => . expr "(" arglist ")" ]
    [ 48: expr => . var ]
    [ 49: expr => . var "++" ]
    [ 50: expr => . var "--" ]
    [ 51: expr => . "++" var ]
    [ 52: expr => . "--" var ]
    [ 75: var => . "id" ]
    [ 76: var => . expr "[" exprlist "]" ]
    [ 74: const => . "num" ]
    "+" : shift,and goto state 24
    "-" : shift,and goto state 25
    "~" : shift,and goto state 26
    "++" : shift,and goto state 37
    "--" : shift,and goto state 38
    "!" : shift,and goto state 27
    "(" : shift,and goto state 29
    "id" : shift,and goto state 39
    "num" : shift,and goto state 40
    expr : goto state 91
    const : goto state 28
    var : goto state 23


state 59
    [ 47: expr => expr "(" . arglist ")" ]*
    [ 70: arglist => . narglist ]
    [ 71: arglist => . ]
    [ 72: narglist => . narglist "," expr ]
    [ 73: narglist => . expr ]
    [ 24: expr => . var aoptr expr ]
    [ 25: expr => . expr "?" expr ":" expr ]
    [ 26: expr => . expr "||" expr ]
    [ 27: expr => . expr "&&" expr ]
    [ 28: expr => . expr "|" expr ]
    [ 29: expr => . expr "^" expr ]
    [ 30: expr => . expr "&" expr ]
    [ 31: expr => . expr coptr expr ]
    [ 32: expr => . expr ">>" expr ]
    [ 33: expr => . expr "<<" expr ]
    [ 34: expr => . expr ">>>" expr ]
    [ 35: expr => . expr "+" expr ]
    [ 36: expr => . expr "-" expr ]
    [ 37: expr => . expr "*" expr ]
    [ 38: expr => . expr "/" expr ]
    [ 39: expr => . expr "%" expr ]
    [ 40: expr => . expr "**" expr ]
    [ 41: expr => . "+" expr ]
    [ 42: expr => . "-" expr ]
    [ 43: expr => . "~" expr ]
    [ 44: expr => . "!" expr ]
    [ 45: expr => . const ]
    [ 46: expr => . "(" expr ")" ]
    [ 47: expr => . expr "(" arglist ")" ]
    [ 48: expr => . var ]
    [ 49: expr => . var "++" ]
    [ 50: expr => . var "--" ]
    [ 51: expr => . "++" var ]
    [ 52: expr => . "--" var ]
    [ 75: var => . "id" ]
    [ 76: var => . expr "[" exprlist "]" ]
    [ 74: const => . "num" ]
    "+" : shift,and goto state 24
    "-" : shift,and goto state 25
    "~" : shift,and goto state 26
    "++" : shift,and goto state 37
    "--" : shift,and goto state 38
    "!" : shift,and goto state 27
    "(" : shift,and goto state 29
    "id" : shift,and goto state 39
    "num" : shift,and goto state 40
    ")" : reduce with rule 71
    expr : goto state 42
    arglist : goto state 92
    narglist : goto state 41
    const : goto state 28
    var : goto state 23


state 60
    [ 76: var => expr "[" . exprlist "]" ]*
    [ 22: exprlist => . exprlist "," expr ]
    [ 23: exprlist => . expr ]
    [ 24: expr => . var aoptr expr ]
    [ 25: expr => . expr "?" expr ":" expr ]
    [ 26: expr => . expr "||" expr ]
    [ 27: expr => . expr "&&" expr ]
    [ 28: expr => . expr "|" expr ]
    [ 29: expr => . expr "^" expr ]
    [ 30: expr => . expr "&" expr ]
    [ 31: expr => . expr coptr expr ]
    [ 32: expr => . expr ">>" expr ]
    [ 33: expr => . expr "<<" expr ]
    [ 34: expr => . expr ">>>" expr ]
    [ 35: expr => . expr "+" expr ]
    [ 36: expr => . expr "-" expr ]
    [ 37: expr => . expr "*" expr ]
    [ 38: expr => . expr "/" expr ]
    [ 39: expr => . expr "%" expr ]
    [ 40: expr => . expr "**" expr ]
    [ 41: expr => . "+" expr ]
    [ 42: expr => . "-" expr ]
    [ 43: expr => . "~" expr ]
    [ 44: expr => . "!" expr ]
    [ 45: expr => . const ]
    [ 46: expr => . "(" expr ")" ]
    [ 47: expr => . expr "(" arglist ")" ]
    [ 48: expr => . var ]
    [ 49: expr => . var "++" ]
    [ 50: expr => . var "--" ]
    [ 51: expr => . "++" var ]
    [ 52: expr => . "--" var ]
    [ 75: var => . "id" ]
    [ 76: var => . expr "[" exprlist "]" ]
    [ 74: const => . "num" ]
    "+" : shift,and goto state 24
    "-" : shift,and goto state 25
    "~" : shift,and goto state 26
    "++" : shift,and goto state 37
    "--" : shift,and goto state 38
    "!" : shift,and goto state 27
    "(" : shift,and goto state 29
    "id" : shift,and goto state 39
    "num" : shift,and goto state 40
    exprlist : goto state 93
    expr : goto state 36
    const : goto state 28
    var : goto state 23


state 61
    [ 24: expr => var aoptr . expr ]*
    [ 24: expr => . var aoptr expr ]
    [ 25: expr => . expr "?" expr ":" expr ]
    [ 26: expr => . expr "||" expr ]
    [ 27: expr => . expr "&&" expr ]
    [ 28: expr => . expr "|" expr ]
    [ 29: expr => . expr "^" expr ]
    [ 30: expr => . expr "&" expr ]
    [ 31: expr => . expr coptr expr ]
    [ 32: expr => . expr ">>" expr ]
    [ 33: expr => . expr "<<" expr ]
    [ 34: expr => . expr ">>>" expr ]
    [ 35: expr => . expr "+" expr ]
    [ 36: expr => . expr "-" expr ]
    [ 37: expr => . expr "*" expr ]
    [ 38: expr => . expr "/" expr ]
    [ 39: expr => . expr "%" expr ]
    [ 40: expr => . expr "**" expr ]
    [ 41: expr => . "+" expr ]
    [ 42: expr => . "-" expr ]
    [ 43: expr => . "~" expr ]
    [ 44: expr => . "!" expr ]
    [ 45: expr => . const ]
    [ 46: expr => . "(" expr ")" ]
    [ 47: expr => . expr "(" arglist ")" ]
    [ 48: expr => . var ]
    [ 49: expr => . var "++" ]
    [ 50: expr => . var "--" ]
    [ 51: expr => . "++" var ]
    [ 52: expr => . "--" var ]
    [ 75: var => . "id" ]
    [ 76: var => . expr "[" exprlist "]" ]
    [ 74: const => . "num" ]
    "+" : shift,and goto state 24
    "-" : shift,and goto state 25
    "~" : shift,and goto state 26
    "++" : shift,and goto state 37
    "--" : shift,and goto state 38
    "!" : shift,and goto state 27
    "(" : shift,and goto state 29
    "id" : shift,and goto state 39
    "num" : shift,and goto state 40
    expr : goto state 94
    const : goto state 28
    var : goto state 23


state 62
    [ 49: expr => var "++" . ]*
    "+" : reduce with rule 49
    "-" : reduce with rule 49
    "*" : reduce with rule 49
    "/" : reduce with rule 49
    "**" : reduce with rule 49
    "?" : reduce with rule 49
    ":" : reduce with rule 49
    "%" : reduce with rule 49
    ">" : reduce with rule 49
    "<" : reduce with rule 49
    ">=" : reduce with rule 49
    "<=" : reduce with rule 49
    "==" : reduce with rule 49
    "!=" : reduce with rule 49
    "|" : reduce with rule 49
    "&" : reduce with rule 49
    "^" : reduce with rule 49
    "&&" : reduce with rule 49
    "||" : reduce with rule 49
    ">>" : reduce with rule 49
    "<<" : reduce with rule 49
    ">>>" : reduce with rule 49
    "(" : reduce with rule 49
    ")" : reduce with rule 49
    "[" : reduce with rule 49
    "]" : reduce with rule 49
    "," : reduce with rule 49
    ";" : reduce with rule 49


state 63
    [ 50: expr => var "--" . ]*
    "+" : reduce with rule 50
    "-" : reduce with rule 50
    "*" : reduce with rule 50
    "/" : reduce with rule 50
    "**" : reduce with rule 50
    "?" : reduce with rule 50
    ":" : reduce with rule 50
    "%" : reduce with rule 50
    ">" : reduce with rule 50
    "<" : reduce with rule 50
    ">=" : reduce with rule 50
    "<=" : reduce with rule 50
    "==" : reduce with rule 50
    "!=" : reduce with rule 50
    "|" : reduce with rule 50
    "&" : reduce with rule 50
    "^" : reduce with rule 50
    "&&" : reduce with rule 50
    "||" : reduce with rule 50
    ">>" : reduce with rule 50
    "<<" : reduce with rule 50
    ">>>" : reduce with rule 50
    "(" : reduce with rule 50
    ")" : reduce with rule 50
    "[" : reduce with rule 50
    "]" : reduce with rule 50
    "," : reduce with rule 50
    ";" : reduce with rule 50


state 64
    [ 41: expr => "+" expr . ]*
    [ 25: expr => expr . "?" expr ":" expr ]*
    [ 26: expr => expr . "||" expr ]*
    [ 27: expr => expr . "&&" expr ]*
    [ 28: expr => expr . "|" expr ]*
    [ 29: expr => expr . "^" expr ]*
    [ 30: expr => expr . "&" expr ]*
    [ 31: expr => expr . coptr expr ]*
    [ 32: expr => expr . ">>" expr ]*
    [ 33: expr => expr . "<<" expr ]*
    [ 34: expr => expr . ">>>" expr ]*
    [ 35: expr => expr . "+" expr ]*
    [ 36: expr => expr . "-" expr ]*
    [ 37: expr => expr . "*" expr ]*
    [ 38: expr => expr . "/" expr ]*
    [ 39: expr => expr . "%" expr ]*
    [ 40: expr => expr . "**" expr ]*
    [ 47: expr => expr . "(" arglist ")" ]*
    [ 76: var => expr . "[" exprlist "]" ]*
    [ 64: coptr => . ">" ]
    [ 65: coptr => . "<" ]
    [ 66: coptr => . ">=" ]
    [ 67: coptr => . "<=" ]
    [ 68: coptr => . "==" ]
    [ 69: coptr => . "!=" ]
    "(" : shift,and goto state 59
    "[" : shift,and goto state 60
    "+" : reduce with rule 41
    "-" : reduce with rule 41
    "*" : reduce with rule 41
    "/" : reduce with rule 41
    "**" : reduce with rule 41
    "?" : reduce with rule 41
    ":" : reduce with rule 41
    "%" : reduce with rule 41
    ">" : reduce with rule 41
    "<" : reduce with rule 41
    ">=" : reduce with rule 41
    "<=" : reduce with rule 41
    "==" : reduce with rule 41
    "!=" : reduce with rule 41
    "|" : reduce with rule 41
    "&" : reduce with rule 41
    "^" : reduce with rule 41
    "&&" : reduce with rule 41
    "||" : reduce with rule 41
    ">>" : reduce with rule 41
    "<<" : reduce with rule 41
    ">>>" : reduce with rule 41
    ")" : reduce with rule 41
    "]" : reduce with rule 41
    "," : reduce with rule 41
    ";" : reduce with rule 41
    coptr : goto state 49


state 65
    [ 42: expr => "-" expr . ]*
    [ 25: expr => expr . "?" expr ":" expr ]*
    [ 26: expr => expr . "||" expr ]*
    [ 27: expr => expr . "&&" expr ]*
    [ 28: expr => expr . "|" expr ]*
    [ 29: expr => expr . "^" expr ]*
    [ 30: expr => expr . "&" expr ]*
    [ 31: expr => expr . coptr expr ]*
    [ 32: expr => expr . ">>" expr ]*
    [ 33: expr => expr . "<<" expr ]*
    [ 34: expr => expr . ">>>" expr ]*
    [ 35: expr => expr . "+" expr ]*
    [ 36: expr => expr . "-" expr ]*
    [ 37: expr => expr . "*" expr ]*
    [ 38: expr => expr . "/" expr ]*
    [ 39: expr => expr . "%" expr ]*
    [ 40: expr => expr . "**" expr ]*
    [ 47: expr => expr . "(" arglist ")" ]*
    [ 76: var => expr . "[" exprlist "]" ]*
    [ 64: coptr => . ">" ]
    [ 65: coptr => . "<" ]
    [ 66: coptr => . ">=" ]
    [ 67: coptr => . "<=" ]
    [ 68: coptr => . "==" ]
    [ 69: coptr => . "!=" ]
    "(" : shift,and goto state 59
    "[" : shift,and goto state 60
    "+" : reduce with rule 42
    "-" : reduce with rule 42
    "*" : reduce with rule 42
    "/" : reduce with rule 42
    "**" : reduce with rule 42
    "?" : reduce with rule 42
    ":" : reduce with rule 42
    "%" : reduce with rule 42
    ">" : reduce with rule 42
    "<" : reduce with rule 42
    ">=" : reduce with rule 42
    "<=" : reduce with rule 42
    "==" : reduce with rule 42
    "!=" : reduce with rule 42
    "|" : reduce with rule 42
    "&" : reduce with rule 42
    "^" : reduce with rule 42
    "&&" : reduce with rule 42
    "||" : reduce with rule 42
    ">>" : reduce with rule 42
    "<<" : reduce with rule 42
    ">>>" : reduce with rule 42
    ")" : reduce with rule 42
    "]" : reduce with rule 42
    "," : reduce with rule 42
    ";" : reduce with rule 42
    coptr : goto state 49


state 66
    [ 43: expr => "~" expr . ]*
    [ 25: expr => expr . "?" expr ":" expr ]*
    [ 26: expr => expr . "||" expr ]*
    [ 27: expr => expr . "&&" expr ]*
    [ 28: expr => expr . "|" expr ]*
    [ 29: expr => expr . "^" expr ]*
    [ 30: expr => expr . "&" expr ]*
    [ 31: expr => expr . coptr expr ]*
    [ 32: expr => expr . ">>" expr ]*
    [ 33: expr => expr . "<<" expr ]*
    [ 34: expr => expr . ">>>" expr ]*
    [ 35: expr => expr . "+" expr ]*
    [ 36: expr => expr . "-" expr ]*
    [ 37: expr => expr . "*" expr ]*
    [ 38: expr => expr . "/" expr ]*
    [ 39: expr => expr . "%" expr ]*
    [ 40: expr => expr . "**" expr ]*
    [ 47: expr => expr . "(" arglist ")" ]*
    [ 76: var => expr . "[" exprlist "]" ]*
    [ 64: coptr => . ">" ]
    [ 65: coptr => . "<" ]
    [ 66: coptr => . ">=" ]
    [ 67: coptr => . "<=" ]
    [ 68: coptr => . "==" ]
    [ 69: coptr => . "!=" ]
    "+" : shift,and goto state 53
    "-" : shift,and goto state 54
    "*" : shift,and goto state 55
    "/" : shift,and goto state 56
    "**" : shift,and goto state 58
    "%" : shift,and goto state 57
    ">" : shift,and goto state 6
    "<" : shift,and goto state 7
    ">=" : shift,and goto state 8
    "<=" : shift,and goto state 9
    "==" : shift,and goto state 10
    "!=" : shift,and goto state 11
    ">>" : shift,and goto state 50
    "<<" : shift,and goto state 51
    ">>>" : shift,and goto state 52
    "(" : shift,and goto state 59
    "[" : shift,and goto state 60
    "?" : reduce with rule 43
    ":" : reduce with rule 43
    "|" : reduce with rule 43
    "&" : reduce with rule 43
    "^" : reduce with rule 43
    "&&" : reduce with rule 43
    "||" : reduce with rule 43
    ")" : reduce with rule 43
    "]" : reduce with rule 43
    "," : reduce with rule 43
    ";" : reduce with rule 43
    coptr : goto state 49


state 67
    [ 44: expr => "!" expr . ]*
    [ 25: expr => expr . "?" expr ":" expr ]*
    [ 26: expr => expr . "||" expr ]*
    [ 27: expr => expr . "&&" expr ]*
    [ 28: expr => expr . "|" expr ]*
    [ 29: expr => expr . "^" expr ]*
    [ 30: expr => expr . "&" expr ]*
    [ 31: expr => expr . coptr expr ]*
    [ 32: expr => expr . ">>" expr ]*
    [ 33: expr => expr . "<<" expr ]*
    [ 34: expr => expr . ">>>" expr ]*
    [ 35: expr => expr . "+" expr ]*
    [ 36: expr => expr . "-" expr ]*
    [ 37: expr => expr . "*" expr ]*
    [ 38: expr => expr . "/" expr ]*
    [ 39: expr => expr . "%" expr ]*
    [ 40: expr => expr . "**" expr ]*
    [ 47: expr => expr . "(" arglist ")" ]*
    [ 76: var => expr . "[" exprlist "]" ]*
    [ 64: coptr => . ">" ]
    [ 65: coptr => . "<" ]
    [ 66: coptr => . ">=" ]
    [ 67: coptr => . "<=" ]
    [ 68: coptr => . "==" ]
    [ 69: coptr => . "!=" ]
    "+" : shift,and goto state 53
    "-" : shift,and goto state 54
    "*" : shift,and goto state 55
    "/" : shift,and goto state 56
    "**" : shift,and goto state 58
    "%" : shift,and goto state 57
    ">" : shift,and goto state 6
    "<" : shift,and goto state 7
    ">=" : shift,and goto state 8
    "<=" : shift,and goto state 9
    "==" : shift,and goto state 10
    "!=" : shift,and goto state 11
    "|" : shift,and goto state 46
    "&" : shift,and goto state 48
    "^" : shift,and goto state 47
    ">>" : shift,and goto state 50
    "<<" : shift,and goto state 51
    ">>>" : shift,and goto state 52
    "(" : shift,and goto state 59
    "[" : shift,and goto state 60
    "?" : reduce with rule 44
    ":" : reduce with rule 44
    "&&" : reduce with rule 44
    "||" : reduce with rule 44
    ")" : reduce with rule 44
    "]" : reduce with rule 44
    "," : reduce with rule 44
    ";" : reduce with rule 44
    coptr : goto state 49


state 68
    [ 46: expr => "(" expr . ")" ]*
    [ 25: expr => expr . "?" expr ":" expr ]*
    [ 26: expr => expr . "||" expr ]*
    [ 27: expr => expr . "&&" expr ]*
    [ 28: expr => expr . "|" expr ]*
    [ 29: expr => expr . "^" expr ]*
    [ 30: expr => expr . "&" expr ]*
    [ 31: expr => expr . coptr expr ]*
    [ 32: expr => expr . ">>" expr ]*
    [ 33: expr => expr . "<<" expr ]*
    [ 34: expr => expr . ">>>" expr ]*
    [ 35: expr => expr . "+" expr ]*
    [ 36: expr => expr . "-" expr ]*
    [ 37: expr => expr . "*" expr ]*
    [ 38: expr => expr . "/" expr ]*
    [ 39: expr => expr . "%" expr ]*
    [ 40: expr => expr . "**" expr ]*
    [ 47: expr => expr . "(" arglist ")" ]*
    [ 76: var => expr . "[" exprlist "]" ]*
    [ 64: coptr => . ">" ]
    [ 65: coptr => . "<" ]
    [ 66: coptr => . ">=" ]
    [ 67: coptr => . "<=" ]
    [ 68: coptr => . "==" ]
    [ 69: coptr => . "!=" ]
    "+" : shift,and goto state 53
    "-" : shift,and goto state 54
    "*" : shift,and goto state 55
    "/" : shift,and goto state 56
    "**" : shift,and goto state 58
    "?" : shift,and goto state 43
    "%" : shift,and goto state 57
    ">" : shift,and goto state 6
    "<" : shift,and goto state 7
    ">=" : shift,and goto state 8
    "<=" : shift,and goto state 9
    "==" : shift,and goto state 10
    "!=" : shift,and goto state 11
    "|" : shift,and goto state 46
    "&" : shift,and goto state 48
    "^" : shift,and goto state 47
    "&&" : shift,and goto state 45
    "||" : shift,and goto state 44
    ">>" : shift,and goto state 50
    "<<" : shift,and goto state 51
    ">>>" : shift,and goto state 52
    "(" : shift,and goto state 59
    ")" : shift,and goto state 95
    "[" : shift,and goto state 60
    coptr : goto state 49


state 69
    [ 4: topstmt => "function" "(" argdeflist ")" . "{" stmtlist "}" ]*
    "{" : shift,and goto state 96


state 70
    [ 7: neargdeflist => neargdeflist "," . "id" ]*
    "id" : shift,and goto state 97


state 71
    [ 22: exprlist => exprlist "," . expr ]*
    [ 24: expr => . var aoptr expr ]
    [ 25: expr => . expr "?" expr ":" expr ]
    [ 26: expr => . expr "||" expr ]
    [ 27: expr => . expr "&&" expr ]
    [ 28: expr => . expr "|" expr ]
    [ 29: expr => . expr "^" expr ]
    [ 30: expr => . expr "&" expr ]
    [ 31: expr => . expr coptr expr ]
    [ 32: expr => . expr ">>" expr ]
    [ 33: expr => . expr "<<" expr ]
    [ 34: expr => . expr ">>>" expr ]
    [ 35: expr => . expr "+" expr ]
    [ 36: expr => . expr "-" expr ]
    [ 37: expr => . expr "*" expr ]
    [ 38: expr => . expr "/" expr ]
    [ 39: expr => . expr "%" expr ]
    [ 40: expr => . expr "**" expr ]
    [ 41: expr => . "+" expr ]
    [ 42: expr => . "-" expr ]
    [ 43: expr => . "~" expr ]
    [ 44: expr => . "!" expr ]
    [ 45: expr => . const ]
    [ 46: expr => . "(" expr ")" ]
    [ 47: expr => . expr "(" arglist ")" ]
    [ 48: expr => . var ]
    [ 49: expr => . var "++" ]
    [ 50: expr => . var "--" ]
    [ 51: expr => . "++" var ]
    [ 52: expr => . "--" var ]
    [ 75: var => . "id" ]
    [ 76: var => . expr "[" exprlist "]" ]
    [ 74: const => . "num" ]
    "+" : shift,and goto state 24
    "-" : shift,and goto state 25
    "~" : shift,and goto state 26
    "++" : shift,and goto state 37
    "--" : shift,and goto state 38
    "!" : shift,and goto state 27
    "(" : shift,and goto state 29
    "id" : shift,and goto state 39
    "num" : shift,and goto state 40
    expr : goto state 105
    const : goto state 28
    var : goto state 23


state 72
    [ 51: expr => "++" var . ]*
    [ 24: expr => var . aoptr expr ]*
    [ 48: expr => var . ]*
    [ 49: expr => var . "++" ]*
    [ 50: expr => var . "--" ]*
    [ 53: aoptr => . "=" ]
    [ 54: aoptr => . "+=" ]
    [ 55: aoptr => . "-=" ]
    [ 56: aoptr => . "*=" ]
    [ 57: aoptr => . "/=" ]
    [ 58: aoptr => . "&=" ]
    [ 59: aoptr => . "|=" ]
    [ 60: aoptr => . "^=" ]
    [ 61: aoptr => . ">>=" ]
    [ 62: aoptr => . "<<=" ]
    [ 63: aoptr => . "%=" ]
    "=" : shift,and goto state 12
    "+=" : shift,and goto state 13
    "-=" : shift,and goto state 14
    "*=" : shift,and goto state 15
    "/=" : shift,and goto state 16
    "&=" : shift,and goto state 17
    "|=" : shift,and goto state 18
    "^=" : shift,and goto state 19
    ">>=" : shift,and goto state 20
    "<<=" : shift,and goto state 21
    "%=" : shift,and goto state 22
    "++" : shift,and goto state 62
    "--" : shift,and goto state 63
    "+" : reduce with rule 48
    "-" : reduce with rule 48
    "*" : reduce with rule 48
    "/" : reduce with rule 48
    "**" : reduce with rule 48
    "?" : reduce with rule 48
    ":" : reduce with rule 51
    "%" : reduce with rule 48
    ">" : reduce with rule 48
    "<" : reduce with rule 48
    ">=" : reduce with rule 48
    "<=" : reduce with rule 48
    "==" : reduce with rule 48
    "!=" : reduce with rule 48
    "|" : reduce with rule 48
    "&" : reduce with rule 48
    "^" : reduce with rule 48
    "&&" : reduce with rule 48
    "||" : reduce with rule 48
    ">>" : reduce with rule 48
    "<<" : reduce with rule 48
    ">>>" : reduce with rule 48
    "(" : reduce with rule 48
    ")" : reduce with rule 51
    "[" : reduce with rule 48
    "]" : reduce with rule 51
    "," : reduce with rule 51
    ";" : reduce with rule 51
    aoptr : goto state 61


state 73
    [ 76: var => expr . "[" exprlist "]" ]*
    [ 25: expr => expr . "?" expr ":" expr ]*
    [ 26: expr => expr . "||" expr ]*
    [ 27: expr => expr . "&&" expr ]*
    [ 28: expr => expr . "|" expr ]*
    [ 29: expr => expr . "^" expr ]*
    [ 30: expr => expr . "&" expr ]*
    [ 31: expr => expr . coptr expr ]*
    [ 32: expr => expr . ">>" expr ]*
    [ 33: expr => expr . "<<" expr ]*
    [ 34: expr => expr . ">>>" expr ]*
    [ 35: expr => expr . "+" expr ]*
    [ 36: expr => expr . "-" expr ]*
    [ 37: expr => expr . "*" expr ]*
    [ 38: expr => expr . "/" expr ]*
    [ 39: expr => expr . "%" expr ]*
    [ 40: expr => expr . "**" expr ]*
    [ 47: expr => expr . "(" arglist ")" ]*
    [ 64: coptr => . ">" ]
    [ 65: coptr => . "<" ]
    [ 66: coptr => . ">=" ]
    [ 67: coptr => . "<=" ]
    [ 68: coptr => . "==" ]
    [ 69: coptr => . "!=" ]
    "+" : shift,and goto state 53
    "-" : shift,and goto state 54
    "*" : shift,and goto state 55
    "/" : shift,and goto state 56
    "**" : shift,and goto state 58
    "?" : shift,and goto state 43
    "%" : shift,and goto state 57
    ">" : shift,and goto state 6
    "<" : shift,and goto state 7
    ">=" : shift,and goto state 8
    "<=" : shift,and goto state 9
    "==" : shift,and goto state 10
    "!=" : shift,and goto state 11
    "|" : shift,and goto state 46
    "&" : shift,and goto state 48
    "^" : shift,and goto state 47
    "&&" : shift,and goto state 45
    "||" : shift,and goto state 44
    ">>" : shift,and goto state 50
    "<<" : shift,and goto state 51
    ">>>" : shift,and goto state 52
    "(" : shift,and goto state 59
    "[" : shift,and goto state 60
    coptr : goto state 49


state 74
    [ 52: expr => "--" var . ]*
    [ 24: expr => var . aoptr expr ]*
    [ 48: expr => var . ]*
    [ 49: expr => var . "++" ]*
    [ 50: expr => var . "--" ]*
    [ 53: aoptr => . "=" ]
    [ 54: aoptr => . "+=" ]
    [ 55: aoptr => . "-=" ]
    [ 56: aoptr => . "*=" ]
    [ 57: aoptr => . "/=" ]
    [ 58: aoptr => . "&=" ]
    [ 59: aoptr => . "|=" ]
    [ 60: aoptr => . "^=" ]
    [ 61: aoptr => . ">>=" ]
    [ 62: aoptr => . "<<=" ]
    [ 63: aoptr => . "%=" ]
    "=" : shift,and goto state 12
    "+=" : shift,and goto state 13
    "-=" : shift,and goto state 14
    "*=" : shift,and goto state 15
    "/=" : shift,and goto state 16
    "&=" : shift,and goto state 17
    "|=" : shift,and goto state 18
    "^=" : shift,and goto state 19
    ">>=" : shift,and goto state 20
    "<<=" : shift,and goto state 21
    "%=" : shift,and goto state 22
    "++" : shift,and goto state 62
    "--" : shift,and goto state 63
    "+" : reduce with rule 48
    "-" : reduce with rule 48
    "*" : reduce with rule 48
    "/" : reduce with rule 48
    "**" : reduce with rule 48
    "?" : reduce with rule 48
    ":" : reduce with rule 52
    "%" : reduce with rule 48
    ">" : reduce with rule 48
    "<" : reduce with rule 48
    ">=" : reduce with rule 48
    "<=" : reduce with rule 48
    "==" : reduce with rule 48
    "!=" : reduce with rule 48
    "|" : reduce with rule 48
    "&" : reduce with rule 48
    "^" : reduce with rule 48
    "&&" : reduce with rule 48
    "||" : reduce with rule 48
    ">>" : reduce with rule 48
    "<<" : reduce with rule 48
    ">>>" : reduce with rule 48
    "(" : reduce with rule 48
    ")" : reduce with rule 52
    "[" : reduce with rule 48
    "]" : reduce with rule 52
    "," : reduce with rule 52
    ";" : reduce with rule 52
    aoptr : goto state 61


state 75
    [ 72: narglist => narglist "," . expr ]*
    [ 24: expr => . var aoptr expr ]
    [ 25: expr => . expr "?" expr ":" expr ]
    [ 26: expr => . expr "||" expr ]
    [ 27: expr => . expr "&&" expr ]
    [ 28: expr => . expr "|" expr ]
    [ 29: expr => . expr "^" expr ]
    [ 30: expr => . expr "&" expr ]
    [ 31: expr => . expr coptr expr ]
    [ 32: expr => . expr ">>" expr ]
    [ 33: expr => . expr "<<" expr ]
    [ 34: expr => . expr ">>>" expr ]
    [ 35: expr => . expr "+" expr ]
    [ 36: expr => . expr "-" expr ]
    [ 37: expr => . expr "*" expr ]
    [ 38: expr => . expr "/" expr ]
    [ 39: expr => . expr "%" expr ]
    [ 40: expr => . expr "**" expr ]
    [ 41: expr => . "+" expr ]
    [ 42: expr => . "-" expr ]
    [ 43: expr => . "~" expr ]
    [ 44: expr => . "!" expr ]
    [ 45: expr => . const ]
    [ 46: expr => . "(" expr ")" ]
    [ 47: expr => . expr "(" arglist ")" ]
    [ 48: expr => . var ]
    [ 49: expr => . var "++" ]
    [ 50: expr => . var "--" ]
    [ 51: expr => . "++" var ]
    [ 52: expr => . "--" var ]
    [ 75: var => . "id" ]
    [ 76: var => . expr "[" exprlist "]" ]
    [ 74: const => . "num" ]
    "+" : shift,and goto state 24
    "-" : shift,and goto state 25
    "~" : shift,and goto state 26
    "++" : shift,and goto state 37
    "--" : shift,and goto state 38
    "!" : shift,and goto state 27
    "(" : shift,and goto state 29
    "id" : shift,and goto state 39
    "num" : shift,and goto state 40
    expr : goto state 106
    const : goto state 28
    var : goto state 23


state 76
    [ 25: expr => expr "?" expr . ":" expr ]*
    [ 25: expr => expr . "?" expr ":" expr ]*
    [ 26: expr => expr . "||" expr ]*
    [ 27: expr => expr . "&&" expr ]*
    [ 28: expr => expr . "|" expr ]*
    [ 29: expr => expr . "^" expr ]*
    [ 30: expr => expr . "&" expr ]*
    [ 31: expr => expr . coptr expr ]*
    [ 32: expr => expr . ">>" expr ]*
    [ 33: expr => expr . "<<" expr ]*
    [ 34: expr => expr . ">>>" expr ]*
    [ 35: expr => expr . "+" expr ]*
    [ 36: expr => expr . "-" expr ]*
    [ 37: expr => expr . "*" expr ]*
    [ 38: expr => expr . "/" expr ]*
    [ 39: expr => expr . "%" expr ]*
    [ 40: expr => expr . "**" expr ]*
    [ 47: expr => expr . "(" arglist ")" ]*
    [ 76: var => expr . "[" exprlist "]" ]*
    [ 64: coptr => . ">" ]
    [ 65: coptr => . "<" ]
    [ 66: coptr => . ">=" ]
    [ 67: coptr => . "<=" ]
    [ 68: coptr => . "==" ]
    [ 69: coptr => . "!=" ]
    "+" : shift,and goto state 53
    "-" : shift,and goto state 54
    "*" : shift,and goto state 55
    "/" : shift,and goto state 56
    "**" : shift,and goto state 58
    "?" : shift,and goto state 43
    ":" : shift,and goto state 107
    "%" : shift,and goto state 57
    ">" : shift,and goto state 6
    "<" : shift,and goto state 7
    ">=" : shift,and goto state 8
    "<=" : shift,and goto state 9
    "==" : shift,and goto state 10
    "!=" : shift,and goto state 11
    "|" : shift,and goto state 46
    "&" : shift,and goto state 48
    "^" : shift,and goto state 47
    "&&" : shift,and goto state 45
    "||" : shift,and goto state 44
    ">>" : shift,and goto state 50
    "<<" : shift,and goto state 51
    ">>>" : shift,and goto state 52
    "(" : shift,and goto state 59
    "[" : shift,and goto state 60
    coptr : goto state 49


state 77
    [ 26: expr => expr "||" expr . ]*
    [ 25: expr => expr . "?" expr ":" expr ]*
    [ 26: expr => expr . "||" expr ]*
    [ 27: expr => expr . "&&" expr ]*
    [ 28: expr => expr . "|" expr ]*
    [ 29: expr => expr . "^" expr ]*
    [ 30: expr => expr . "&" expr ]*
    [ 31: expr => expr . coptr expr ]*
    [ 32: expr => expr . ">>" expr ]*
    [ 33: expr => expr . "<<" expr ]*
    [ 34: expr => expr . ">>>" expr ]*
    [ 35: expr => expr . "+" expr ]*
    [ 36: expr => expr . "-" expr ]*
    [ 37: expr => expr . "*" expr ]*
    [ 38: expr => expr . "/" expr ]*
    [ 39: expr => expr . "%" expr ]*
    [ 40: expr => expr . "**" expr ]*
    [ 47: expr => expr . "(" arglist ")" ]*
    [ 76: var => expr . "[" exprlist "]" ]*
    [ 64: coptr => . ">" ]
    [ 65: coptr => . "<" ]
    [ 66: coptr => . ">=" ]
    [ 67: coptr => . "<=" ]
    [ 68: coptr => . "==" ]
    [ 69: coptr => . "!=" ]
    "+" : shift,and goto state 53
    "-" : shift,and goto state 54
    "*" : shift,and goto state 55
    "/" : shift,and goto state 56
    "**" : shift,and goto state 58
    "%" : shift,and goto state 57
    ">" : shift,and goto state 6
    "<" : shift,and goto state 7
    ">=" : shift,and goto state 8
    "<=" : shift,and goto state 9
    "==" : shift,and goto state 10
    "!=" : shift,and goto state 11
    "|" : shift,and goto state 46
    "&" : shift,and goto state 48
    "^" : shift,and goto state 47
    "&&" : shift,and goto state 45
    ">>" : shift,and goto state 50
    "<<" : shift,and goto state 51
    ">>>" : shift,and goto state 52
    "(" : shift,and goto state 59
    "[" : shift,and goto state 60
    "?" : reduce with rule 26
    ":" : reduce with rule 26
    "||" : reduce with rule 26
    ")" : reduce with rule 26
    "]" : reduce with rule 26
    "," : reduce with rule 26
    ";" : reduce with rule 26
    coptr : goto state 49


state 78
    [ 27: expr => expr "&&" expr . ]*
    [ 25: expr => expr . "?" expr ":" expr ]*
    [ 26: expr => expr . "||" expr ]*
    [ 27: expr => expr . "&&" expr ]*
    [ 28: expr => expr . "|" expr ]*
    [ 29: expr => expr . "^" expr ]*
    [ 30: expr => expr . "&" expr ]*
    [ 31: expr => expr . coptr expr ]*
    [ 32: expr => expr . ">>" expr ]*
    [ 33: expr => expr . "<<" expr ]*
    [ 34: expr => expr . ">>>" expr ]*
    [ 35: expr => expr . "+" expr ]*
    [ 36: expr => expr . "-" expr ]*
    [ 37: expr => expr . "*" expr ]*
    [ 38: expr => expr . "/" expr ]*
    [ 39: expr => expr . "%" expr ]*
    [ 40: expr => expr . "**" expr ]*
    [ 47: expr => expr . "(" arglist ")" ]*
    [ 76: var => expr . "[" exprlist "]" ]*
    [ 64: coptr => . ">" ]
    [ 65: coptr => . "<" ]
    [ 66: coptr => . ">=" ]
    [ 67: coptr => . "<=" ]
    [ 68: coptr => . "==" ]
    [ 69: coptr => . "!=" ]
    "+" : shift,and goto state 53
    "-" : shift,and goto state 54
    "*" : shift,and goto state 55
    "/" : shift,and goto state 56
    "**" : shift,and goto state 58
    "%" : shift,and goto state 57
    ">" : shift,and goto state 6
    "<" : shift,and goto state 7
    ">=" : shift,and goto state 8
    "<=" : shift,and goto state 9
    "==" : shift,and goto state 10
    "!=" : shift,and goto state 11
    "|" : shift,and goto state 46
    "&" : shift,and goto state 48
    "^" : shift,and goto state 47
    ">>" : shift,and goto state 50
    "<<" : shift,and goto state 51
    ">>>" : shift,and goto state 52
    "(" : shift,and goto state 59
    "[" : shift,and goto state 60
    "?" : reduce with rule 27
    ":" : reduce with rule 27
    "&&" : reduce with rule 27
    "||" : reduce with rule 27
    ")" : reduce with rule 27
    "]" : reduce with rule 27
    "," : reduce with rule 27
    ";" : reduce with rule 27
    coptr : goto state 49


state 79
    [ 28: expr => expr "|" expr . ]*
    [ 25: expr => expr . "?" expr ":" expr ]*
    [ 26: expr => expr . "||" expr ]*
    [ 27: expr => expr . "&&" expr ]*
    [ 28: expr => expr . "|" expr ]*
    [ 29: expr => expr . "^" expr ]*
    [ 30: expr => expr . "&" expr ]*
    [ 31: expr => expr . coptr expr ]*
    [ 32: expr => expr . ">>" expr ]*
    [ 33: expr => expr . "<<" expr ]*
    [ 34: expr => expr . ">>>" expr ]*
    [ 35: expr => expr . "+" expr ]*
    [ 36: expr => expr . "-" expr ]*
    [ 37: expr => expr . "*" expr ]*
    [ 38: expr => expr . "/" expr ]*
    [ 39: expr => expr . "%" expr ]*
    [ 40: expr => expr . "**" expr ]*
    [ 47: expr => expr . "(" arglist ")" ]*
    [ 76: var => expr . "[" exprlist "]" ]*
    [ 64: coptr => . ">" ]
    [ 65: coptr => . "<" ]
    [ 66: coptr => . ">=" ]
    [ 67: coptr => . "<=" ]
    [ 68: coptr => . "==" ]
    [ 69: coptr => . "!=" ]
    "+" : shift,and goto state 53
    "-" : shift,and goto state 54
    "*" : shift,and goto state 55
    "/" : shift,and goto state 56
    "**" : shift,and goto state 58
    "%" : shift,and goto state 57
    ">" : shift,and goto state 6
    "<" : shift,and goto state 7
    ">=" : shift,and goto state 8
    "<=" : shift,and goto state 9
    "==" : shift,and goto state 10
    "!=" : shift,and goto state 11
    "&" : shift,and goto state 48
    "^" : shift,and goto state 47
    ">>" : shift,and goto state 50
    "<<" : shift,and goto state 51
    ">>>" : shift,and goto state 52
    "(" : shift,and goto state 59
    "[" : shift,and goto state 60
    "?" : reduce with rule 28
    ":" : reduce with rule 28
    "|" : reduce with rule 28
    "&&" : reduce with rule 28
    "||" : reduce with rule 28
    ")" : reduce with rule 28
    "]" : reduce with rule 28
    "," : reduce with rule 28
    ";" : reduce with rule 28
    coptr : goto state 49


state 80
    [ 29: expr => expr "^" expr . ]*
    [ 25: expr => expr . "?" expr ":" expr ]*
    [ 26: expr => expr . "||" expr ]*
    [ 27: expr => expr . "&&" expr ]*
    [ 28: expr => expr . "|" expr ]*
    [ 29: expr => expr . "^" expr ]*
    [ 30: expr => expr . "&" expr ]*
    [ 31: expr => expr . coptr expr ]*
    [ 32: expr => expr . ">>" expr ]*
    [ 33: expr => expr . "<<" expr ]*
    [ 34: expr => expr . ">>>" expr ]*
    [ 35: expr => expr . "+" expr ]*
    [ 36: expr => expr . "-" expr ]*
    [ 37: expr => expr . "*" expr ]*
    [ 38: expr => expr . "/" expr ]*
    [ 39: expr => expr . "%" expr ]*
    [ 40: expr => expr . "**" expr ]*
    [ 47: expr => expr . "(" arglist ")" ]*
    [ 76: var => expr . "[" exprlist "]" ]*
    [ 64: coptr => . ">" ]
    [ 65: coptr => . "<" ]
    [ 66: coptr => . ">=" ]
    [ 67: coptr => . "<=" ]
    [ 68: coptr => . "==" ]
    [ 69: coptr => . "!=" ]
    "+" : shift,and goto state 53
    "-" : shift,and goto state 54
    "*" : shift,and goto state 55
    "/" : shift,and goto state 56
    "**" : shift,and goto state 58
    "%" : shift,and goto state 57
    ">" : shift,and goto state 6
    "<" : shift,and goto state 7
    ">=" : shift,and goto state 8
    "<=" : shift,and goto state 9
    "==" : shift,and goto state 10
    "!=" : shift,and goto state 11
    "&" : shift,and goto state 48
    ">>" : shift,and goto state 50
    "<<" : shift,and goto state 51
    ">>>" : shift,and goto state 52
    "(" : shift,and goto state 59
    "[" : shift,and goto state 60
    "?" : reduce with rule 29
    ":" : reduce with rule 29
    "|" : reduce with rule 29
    "^" : reduce with rule 29
    "&&" : reduce with rule 29
    "||" : reduce with rule 29
    ")" : reduce with rule 29
    "]" : reduce with rule 29
    "," : reduce with rule 29
    ";" : reduce with rule 29
    coptr : goto state 49


state 81
    [ 30: expr => expr "&" expr . ]*
    [ 25: expr => expr . "?" expr ":" expr ]*
    [ 26: expr => expr . "||" expr ]*
    [ 27: expr => expr . "&&" expr ]*
    [ 28: expr => expr . "|" expr ]*
    [ 29: expr => expr . "^" expr ]*
    [ 30: expr => expr . "&" expr ]*
    [ 31: expr => expr . coptr expr ]*
    [ 32: expr => expr . ">>" expr ]*
    [ 33: expr => expr . "<<" expr ]*
    [ 34: expr => expr . ">>>" expr ]*
    [ 35: expr => expr . "+" expr ]*
    [ 36: expr => expr . "-" expr ]*
    [ 37: expr => expr . "*" expr ]*
    [ 38: expr => expr . "/" expr ]*
    [ 39: expr => expr . "%" expr ]*
    [ 40: expr => expr . "**" expr ]*
    [ 47: expr => expr . "(" arglist ")" ]*
    [ 76: var => expr . "[" exprlist "]" ]*
    [ 64: coptr => . ">" ]
    [ 65: coptr => . "<" ]
    [ 66: coptr => . ">=" ]
    [ 67: coptr => . "<=" ]
    [ 68: coptr => . "==" ]
    [ 69: coptr => . "!=" ]
    "+" : shift,and goto state 53
    "-" : shift,and goto state 54
    "*" : shift,and goto state 55
    "/" : shift,and goto state 56
    "**" : shift,and goto state 58
    "%" : shift,and goto state 57
    ">" : shift,and goto state 6
    "<" : shift,and goto state 7
    ">=" : shift,and goto state 8
    "<=" : shift,and goto state 9
    "==" : shift,and goto state 10
    "!=" : shift,and goto state 11
    ">>" : shift,and goto state 50
    "<<" : shift,and goto state 51
    ">>>" : shift,and goto state 52
    "(" : shift,and goto state 59
    "[" : shift,and goto state 60
    "?" : reduce with rule 30
    ":" : reduce with rule 30
    "|" : reduce with rule 30
    "&" : reduce with rule 30
    "^" : reduce with rule 30
    "&&" : reduce with rule 30
    "||" : reduce with rule 30
    ")" : reduce with rule 30
    "]" : reduce with rule 30
    "," : reduce with rule 30
    ";" : reduce with rule 30
    coptr : goto state 49


state 82
    [ 31: expr => expr coptr expr . ]*
    [ 25: expr => expr . "?" expr ":" expr ]*
    [ 26: expr => expr . "||" expr ]*
    [ 27: expr => expr . "&&" expr ]*
    [ 28: expr => expr . "|" expr ]*
    [ 29: expr => expr . "^" expr ]*
    [ 30: expr => expr . "&" expr ]*
    [ 31: expr => expr . coptr expr ]*
    [ 32: expr => expr . ">>" expr ]*
    [ 33: expr => expr . "<<" expr ]*
    [ 34: expr => expr . ">>>" expr ]*
    [ 35: expr => expr . "+" expr ]*
    [ 36: expr => expr . "-" expr ]*
    [ 37: expr => expr . "*" expr ]*
    [ 38: expr => expr . "/" expr ]*
    [ 39: expr => expr . "%" expr ]*
    [ 40: expr => expr . "**" expr ]*
    [ 47: expr => expr . "(" arglist ")" ]*
    [ 76: var => expr . "[" exprlist "]" ]*
    [ 64: coptr => . ">" ]
    [ 65: coptr => . "<" ]
    [ 66: coptr => . ">=" ]
    [ 67: coptr => . "<=" ]
    [ 68: coptr => . "==" ]
    [ 69: coptr => . "!=" ]
    "+" : shift,and goto state 53
    "-" : shift,and goto state 54
    "*" : shift,and goto state 55
    "/" : shift,and goto state 56
    "**" : shift,and goto state 58
    "%" : shift,and goto state 57
    ">>" : shift,and goto state 50
    "<<" : shift,and goto state 51
    ">>>" : shift,and goto state 52
    "(" : shift,and goto state 59
    "[" : shift,and goto state 60
    "?" : reduce with rule 31
    ":" : reduce with rule 31
    ">" : reduce with rule 31
    "<" : reduce with rule 31
    ">=" : reduce with rule 31
    "<=" : reduce with rule 31
    "==" : reduce with rule 31
    "!=" : reduce with rule 31
    "|" : reduce with rule 31
    "&" : reduce with rule 31
    "^" : reduce with rule 31
    "&&" : reduce with rule 31
    "||" : reduce with rule 31
    ")" : reduce with rule 31
    "]" : reduce with rule 31
    "," : reduce with rule 31
    ";" : reduce with rule 31
    coptr : goto state 49


state 83
    [ 32: expr => expr ">>" expr . ]*
    [ 25: expr => expr . "?" expr ":" expr ]*
    [ 26: expr => expr . "||" expr ]*
    [ 27: expr => expr . "&&" expr ]*
    [ 28: expr => expr . "|" expr ]*
    [ 29: expr => expr . "^" expr ]*
    [ 30: expr => expr . "&" expr ]*
    [ 31: expr => expr . coptr expr ]*
    [ 32: expr => expr . ">>" expr ]*
    [ 33: expr => expr . "<<" expr ]*
    [ 34: expr => expr . ">>>" expr ]*
    [ 35: expr => expr . "+" expr ]*
    [ 36: expr => expr . "-" expr ]*
    [ 37: expr => expr . "*" expr ]*
    [ 38: expr => expr . "/" expr ]*
    [ 39: expr => expr . "%" expr ]*
    [ 40: expr => expr . "**" expr ]*
    [ 47: expr => expr . "(" arglist ")" ]*
    [ 76: var => expr . "[" exprlist "]" ]*
    [ 64: coptr => . ">" ]
    [ 65: coptr => . "<" ]
    [ 66: coptr => . ">=" ]
    [ 67: coptr => . "<=" ]
    [ 68: coptr => . "==" ]
    [ 69: coptr => . "!=" ]
    "+" : shift,and goto state 53
    "-" : shift,and goto state 54
    "*" : shift,and goto state 55
    "/" : shift,and goto state 56
    "**" : shift,and goto state 58
    "%" : shift,and goto state 57
    "(" : shift,and goto state 59
    "[" : shift,and goto state 60
    "?" : reduce with rule 32
    ":" : reduce with rule 32
    ">" : reduce with rule 32
    "<" : reduce with rule 32
    ">=" : reduce with rule 32
    "<=" : reduce with rule 32
    "==" : reduce with rule 32
    "!=" : reduce with rule 32
    "|" : reduce with rule 32
    "&" : reduce with rule 32
    "^" : reduce with rule 32
    "&&" : reduce with rule 32
    "||" : reduce with rule 32
    ">>" : reduce with rule 32
    "<<" : reduce with rule 32
    ">>>" : reduce with rule 32
    ")" : reduce with rule 32
    "]" : reduce with rule 32
    "," : reduce with rule 32
    ";" : reduce with rule 32
    coptr : goto state 49


state 84
    [ 33: expr => expr "<<" expr . ]*
    [ 25: expr => expr . "?" expr ":" expr ]*
    [ 26: expr => expr . "||" expr ]*
    [ 27: expr => expr . "&&" expr ]*
    [ 28: expr => expr . "|" expr ]*
    [ 29: expr => expr . "^" expr ]*
    [ 30: expr => expr . "&" expr ]*
    [ 31: expr => expr . coptr expr ]*
    [ 32: expr => expr . ">>" expr ]*
    [ 33: expr => expr . "<<" expr ]*
    [ 34: expr => expr . ">>>" expr ]*
    [ 35: expr => expr . "+" expr ]*
    [ 36: expr => expr . "-" expr ]*
    [ 37: expr => expr . "*" expr ]*
    [ 38: expr => expr . "/" expr ]*
    [ 39: expr => expr . "%" expr ]*
    [ 40: expr => expr . "**" expr ]*
    [ 47: expr => expr . "(" arglist ")" ]*
    [ 76: var => expr . "[" exprlist "]" ]*
    [ 64: coptr => . ">" ]
    [ 65: coptr => . "<" ]
    [ 66: coptr => . ">=" ]
    [ 67: coptr => . "<=" ]
    [ 68: coptr => . "==" ]
    [ 69: coptr => . "!=" ]
    "+" : shift,and goto state 53
    "-" : shift,and goto state 54
    "*" : shift,and goto state 55
    "/" : shift,and goto state 56
    "**" : shift,and goto state 58
    "%" : shift,and goto state 57
    "(" : shift,and goto state 59
    "[" : shift,and goto state 60
    "?" : reduce with rule 33
    ":" : reduce with rule 33
    ">" : reduce with rule 33
    "<" : reduce with rule 33
    ">=" : reduce with rule 33
    "<=" : reduce with rule 33
    "==" : reduce with rule 33
    "!=" : reduce with rule 33
    "|" : reduce with rule 33
    "&" : reduce with rule 33
    "^" : reduce with rule 33
    "&&" : reduce with rule 33
    "||" : reduce with rule 33
    ">>" : reduce with rule 33
    "<<" : reduce with rule 33
    ">>>" : reduce with rule 33
    ")" : reduce with rule 33
    "]" : reduce with rule 33
    "," : reduce with rule 33
    ";" : reduce with rule 33
    coptr : goto state 49


state 85
    [ 34: expr => expr ">>>" expr . ]*
    [ 25: expr => expr . "?" expr ":" expr ]*
    [ 26: expr => expr . "||" expr ]*
    [ 27: expr => expr . "&&" expr ]*
    [ 28: expr => expr . "|" expr ]*
    [ 29: expr => expr . "^" expr ]*
    [ 30: expr => expr . "&" expr ]*
    [ 31: expr => expr . coptr expr ]*
    [ 32: expr => expr . ">>" expr ]*
    [ 33: expr => expr . "<<" expr ]*
    [ 34: expr => expr . ">>>" expr ]*
    [ 35: expr => expr . "+" expr ]*
    [ 36: expr => expr . "-" expr ]*
    [ 37: expr => expr . "*" expr ]*
    [ 38: expr => expr . "/" expr ]*
    [ 39: expr => expr . "%" expr ]*
    [ 40: expr => expr . "**" expr ]*
    [ 47: expr => expr . "(" arglist ")" ]*
    [ 76: var => expr . "[" exprlist "]" ]*
    [ 64: coptr => . ">" ]
    [ 65: coptr => . "<" ]
    [ 66: coptr => . ">=" ]
    [ 67: coptr => . "<=" ]
    [ 68: coptr => . "==" ]
    [ 69: coptr => . "!=" ]
    "+" : shift,and goto state 53
    "-" : shift,and goto state 54
    "*" : shift,and goto state 55
    "/" : shift,and goto state 56
    "**" : shift,and goto state 58
    "%" : shift,and goto state 57
    "(" : shift,and goto state 59
    "[" : shift,and goto state 60
    "?" : reduce with rule 34
    ":" : reduce with rule 34
    ">" : reduce with rule 34
    "<" : reduce with rule 34
    ">=" : reduce with rule 34
    "<=" : reduce with rule 34
    "==" : reduce with rule 34
    "!=" : reduce with rule 34
    "|" : reduce with rule 34
    "&" : reduce with rule 34
    "^" : reduce with rule 34
    "&&" : reduce with rule 34
    "||" : reduce with rule 34
    ">>" : reduce with rule 34
    "<<" : reduce with rule 34
    ">>>" : reduce with rule 34
    ")" : reduce with rule 34
    "]" : reduce with rule 34
    "," : reduce with rule 34
    ";" : reduce with rule 34
    coptr : goto state 49


state 86
    [ 35: expr => expr "+" expr . ]*
    [ 25: expr => expr . "?" expr ":" expr ]*
    [ 26: expr => expr . "||" expr ]*
    [ 27: expr => expr . "&&" expr ]*
    [ 28: expr => expr . "|" expr ]*
    [ 29: expr => expr . "^" expr ]*
    [ 30: expr => expr . "&" expr ]*
    [ 31: expr => expr . coptr expr ]*
    [ 32: expr => expr . ">>" expr ]*
    [ 33: expr => expr . "<<" expr ]*
    [ 34: expr => expr . ">>>" expr ]*
    [ 35: expr => expr . "+" expr ]*
    [ 36: expr => expr . "-" expr ]*
    [ 37: expr => expr . "*" expr ]*
    [ 38: expr => expr . "/" expr ]*
    [ 39: expr => expr . "%" expr ]*
    [ 40: expr => expr . "**" expr ]*
    [ 47: expr => expr . "(" arglist ")" ]*
    [ 76: var => expr . "[" exprlist "]" ]*
    [ 64: coptr => . ">" ]
    [ 65: coptr => . "<" ]
    [ 66: coptr => . ">=" ]
    [ 67: coptr => . "<=" ]
    [ 68: coptr => . "==" ]
    [ 69: coptr => . "!=" ]
    "*" : shift,and goto state 55
    "/" : shift,and goto state 56
    "**" : shift,and goto state 58
    "%" : shift,and goto state 57
    "(" : shift,and goto state 59
    "[" : shift,and goto state 60
    "+" : reduce with rule 35
    "-" : reduce with rule 35
    "?" : reduce with rule 35
    ":" : reduce with rule 35
    ">" : reduce with rule 35
    "<" : reduce with rule 35
    ">=" : reduce with rule 35
    "<=" : reduce with rule 35
    "==" : reduce with rule 35
    "!=" : reduce with rule 35
    "|" : reduce with rule 35
    "&" : reduce with rule 35
    "^" : reduce with rule 35
    "&&" : reduce with rule 35
    "||" : reduce with rule 35
    ">>" : reduce with rule 35
    "<<" : reduce with rule 35
    ">>>" : reduce with rule 35
    ")" : reduce with rule 35
    "]" : reduce with rule 35
    "," : reduce with rule 35
    ";" : reduce with rule 35
    coptr : goto state 49


state 87
    [ 36: expr => expr "-" expr . ]*
    [ 25: expr => expr . "?" expr ":" expr ]*
    [ 26: expr => expr . "||" expr ]*
    [ 27: expr => expr . "&&" expr ]*
    [ 28: expr => expr . "|" expr ]*
    [ 29: expr => expr . "^" expr ]*
    [ 30: expr => expr . "&" expr ]*
    [ 31: expr => expr . coptr expr ]*
    [ 32: expr => expr . ">>" expr ]*
    [ 33: expr => expr . "<<" expr ]*
    [ 34: expr => expr . ">>>" expr ]*
    [ 35: expr => expr . "+" expr ]*
    [ 36: expr => expr . "-" expr ]*
    [ 37: expr => expr . "*" expr ]*
    [ 38: expr => expr . "/" expr ]*
    [ 39: expr => expr . "%" expr ]*
    [ 40: expr => expr . "**" expr ]*
    [ 47: expr => expr . "(" arglist ")" ]*
    [ 76: var => expr . "[" exprlist "]" ]*
    [ 64: coptr => . ">" ]
    [ 65: coptr => . "<" ]
    [ 66: coptr => . ">=" ]
    [ 67: coptr => . "<=" ]
    [ 68: coptr => . "==" ]
    [ 69: coptr => . "!=" ]
    "*" : shift,and goto state 55
    "/" : shift,and goto state 56
    "**" : shift,and goto state 58
    "%" : shift,and goto state 57
    "(" : shift,and goto state 59
    "[" : shift,and goto state 60
    "+" : reduce with rule 36
    "-" : reduce with rule 36
    "?" : reduce with rule 36
    ":" : reduce with rule 36
    ">" : reduce with rule 36
    "<" : reduce with rule 36
    ">=" : reduce with rule 36
    "<=" : reduce with rule 36
    "==" : reduce with rule 36
    "!=" : reduce with rule 36
    "|" : reduce with rule 36
    "&" : reduce with rule 36
    "^" : reduce with rule 36
    "&&" : reduce with rule 36
    "||" : reduce with rule 36
    ">>" : reduce with rule 36
    "<<" : reduce with rule 36
    ">>>" : reduce with rule 36
    ")" : reduce with rule 36
    "]" : reduce with rule 36
    "," : reduce with rule 36
    ";" : reduce with rule 36
    coptr : goto state 49


state 88
    [ 37: expr => expr "*" expr . ]*
    [ 25: expr => expr . "?" expr ":" expr ]*
    [ 26: expr => expr . "||" expr ]*
    [ 27: expr => expr . "&&" expr ]*
    [ 28: expr => expr . "|" expr ]*
    [ 29: expr => expr . "^" expr ]*
    [ 30: expr => expr . "&" expr ]*
    [ 31: expr => expr . coptr expr ]*
    [ 32: expr => expr . ">>" expr ]*
    [ 33: expr => expr . "<<" expr ]*
    [ 34: expr => expr . ">>>" expr ]*
    [ 35: expr => expr . "+" expr ]*
    [ 36: expr => expr . "-" expr ]*
    [ 37: expr => expr . "*" expr ]*
    [ 38: expr => expr . "/" expr ]*
    [ 39: expr => expr . "%" expr ]*
    [ 40: expr => expr . "**" expr ]*
    [ 47: expr => expr . "(" arglist ")" ]*
    [ 76: var => expr . "[" exprlist "]" ]*
    [ 64: coptr => . ">" ]
    [ 65: coptr => . "<" ]
    [ 66: coptr => . ">=" ]
    [ 67: coptr => . "<=" ]
    [ 68: coptr => . "==" ]
    [ 69: coptr => . "!=" ]
    "**" : shift,and goto state 58
    "(" : shift,and goto state 59
    "[" : shift,and goto state 60
    "+" : reduce with rule 37
    "-" : reduce with rule 37
    "*" : reduce with rule 37
    "/" : reduce with rule 37
    "?" : reduce with rule 37
    ":" : reduce with rule 37
    "%" : reduce with rule 37
    ">" : reduce with rule 37
    "<" : reduce with rule 37
    ">=" : reduce with rule 37
    "<=" : reduce with rule 37
    "==" : reduce with rule 37
    "!=" : reduce with rule 37
    "|" : reduce with rule 37
    "&" : reduce with rule 37
    "^" : reduce with rule 37
    "&&" : reduce with rule 37
    "||" : reduce with rule 37
    ">>" : reduce with rule 37
    "<<" : reduce with rule 37
    ">>>" : reduce with rule 37
    ")" : reduce with rule 37
    "]" : reduce with rule 37
    "," : reduce with rule 37
    ";" : reduce with rule 37
    coptr : goto state 49


state 89
    [ 38: expr => expr "/" expr . ]*
    [ 25: expr => expr . "?" expr ":" expr ]*
    [ 26: expr => expr . "||" expr ]*
    [ 27: expr => expr . "&&" expr ]*
    [ 28: expr => expr . "|" expr ]*
    [ 29: expr => expr . "^" expr ]*
    [ 30: expr => expr . "&" expr ]*
    [ 31: expr => expr . coptr expr ]*
    [ 32: expr => expr . ">>" expr ]*
    [ 33: expr => expr . "<<" expr ]*
    [ 34: expr => expr . ">>>" expr ]*
    [ 35: expr => expr . "+" expr ]*
    [ 36: expr => expr . "-" expr ]*
    [ 37: expr => expr . "*" expr ]*
    [ 38: expr => expr . "/" expr ]*
    [ 39: expr => expr . "%" expr ]*
    [ 40: expr => expr . "**" expr ]*
    [ 47: expr => expr . "(" arglist ")" ]*
    [ 76: var => expr . "[" exprlist "]" ]*
    [ 64: coptr => . ">" ]
    [ 65: coptr => . "<" ]
    [ 66: coptr => . ">=" ]
    [ 67: coptr => . "<=" ]
    [ 68: coptr => . "==" ]
    [ 69: coptr => . "!=" ]
    "**" : shift,and goto state 58
    "(" : shift,and goto state 59
    "[" : shift,and goto state 60
    "+" : reduce with rule 38
    "-" : reduce with rule 38
    "*" : reduce with rule 38
    "/" : reduce with rule 38
    "?" : reduce with rule 38
    ":" : reduce with rule 38
    "%" : reduce with rule 38
    ">" : reduce with rule 38
    "<" : reduce with rule 38
    ">=" : reduce with rule 38
    "<=" : reduce with rule 38
    "==" : reduce with rule 38
    "!=" : reduce with rule 38
    "|" : reduce with rule 38
    "&" : reduce with rule 38
    "^" : reduce with rule 38
    "&&" : reduce with rule 38
    "||" : reduce with rule 38
    ">>" : reduce with rule 38
    "<<" : reduce with rule 38
    ">>>" : reduce with rule 38
    ")" : reduce with rule 38
    "]" : reduce with rule 38
    "," : reduce with rule 38
    ";" : reduce with rule 38
    coptr : goto state 49


state 90
    [ 39: expr => expr "%" expr . ]*
    [ 25: expr => expr . "?" expr ":" expr ]*
    [ 26: expr => expr . "||" expr ]*
    [ 27: expr => expr . "&&" expr ]*
    [ 28: expr => expr . "|" expr ]*
    [ 29: expr => expr . "^" expr ]*
    [ 30: expr => expr . "&" expr ]*
    [ 31: expr => expr . coptr expr ]*
    [ 32: expr => expr . ">>" expr ]*
    [ 33: expr => expr . "<<" expr ]*
    [ 34: expr => expr . ">>>" expr ]*
    [ 35: expr => expr . "+" expr ]*
    [ 36: expr => expr . "-" expr ]*
    [ 37: expr => expr . "*" expr ]*
    [ 38: expr => expr . "/" expr ]*
    [ 39: expr => expr . "%" expr ]*
    [ 40: expr => expr . "**" expr ]*
    [ 47: expr => expr . "(" arglist ")" ]*
    [ 76: var => expr . "[" exprlist "]" ]*
    [ 64: coptr => . ">" ]
    [ 65: coptr => . "<" ]
    [ 66: coptr => . ">=" ]
    [ 67: coptr => . "<=" ]
    [ 68: coptr => . "==" ]
    [ 69: coptr => . "!=" ]
    "**" : shift,and goto state 58
    "(" : shift,and goto state 59
    "[" : shift,and goto state 60
    "+" : reduce with rule 39
    "-" : reduce with rule 39
    "*" : reduce with rule 39
    "/" : reduce with rule 39
    "?" : reduce with rule 39
    ":" : reduce with rule 39
    "%" : reduce with rule 39
    ">" : reduce with rule 39
    "<" : reduce with rule 39
    ">=" : reduce with rule 39
    "<=" : reduce with rule 39
    "==" : reduce with rule 39
    "!=" : reduce with rule 39
    "|" : reduce with rule 39
    "&" : reduce with rule 39
    "^" : reduce with rule 39
    "&&" : reduce with rule 39
    "||" : reduce with rule 39
    ">>" : reduce with rule 39
    "<<" : reduce with rule 39
    ">>>" : reduce with rule 39
    ")" : reduce with rule 39
    "]" : reduce with rule 39
    "," : reduce with rule 39
    ";" : reduce with rule 39
    coptr : goto state 49


state 91
    [ 40: expr => expr "**" expr . ]*
    [ 25: expr => expr . "?" expr ":" expr ]*
    [ 26: expr => expr . "||" expr ]*
    [ 27: expr => expr . "&&" expr ]*
    [ 28: expr => expr . "|" expr ]*
    [ 29: expr => expr . "^" expr ]*
    [ 30: expr => expr . "&" expr ]*
    [ 31: expr => expr . coptr expr ]*
    [ 32: expr => expr . ">>" expr ]*
    [ 33: expr => expr . "<<" expr ]*
    [ 34: expr => expr . ">>>" expr ]*
    [ 35: expr => expr . "+" expr ]*
    [ 36: expr => expr . "-" expr ]*
    [ 37: expr => expr . "*" expr ]*
    [ 38: expr => expr . "/" expr ]*
    [ 39: expr => expr . "%" expr ]*
    [ 40: expr => expr . "**" expr ]*
    [ 47: expr => expr . "(" arglist ")" ]*
    [ 76: var => expr . "[" exprlist "]" ]*
    [ 64: coptr => . ">" ]
    [ 65: coptr => . "<" ]
    [ 66: coptr => . ">=" ]
    [ 67: coptr => . "<=" ]
    [ 68: coptr => . "==" ]
    [ 69: coptr => . "!=" ]
    "**" : shift,and goto state 58
    "(" : shift,and goto state 59
    "[" : shift,and goto state 60
    "+" : reduce with rule 40
    "-" : reduce with rule 40
    "*" : reduce with rule 40
    "/" : reduce with rule 40
    "?" : reduce with rule 40
    ":" : reduce with rule 40
    "%" : reduce with rule 40
    ">" : reduce with rule 40
    "<" : reduce with rule 40
    ">=" : reduce with rule 40
    "<=" : reduce with rule 40
    "==" : reduce with rule 40
    "!=" : reduce with rule 40
    "|" : reduce with rule 40
    "&" : reduce with rule 40
    "^" : reduce with rule 40
    "&&" : reduce with rule 40
    "||" : reduce with rule 40
    ">>" : reduce with rule 40
    "<<" : reduce with rule 40
    ">>>" : reduce with rule 40
    ")" : reduce with rule 40
    "]" : reduce with rule 40
    "," : reduce with rule 40
    ";" : reduce with rule 40
    coptr : goto state 49


state 92
    [ 47: expr => expr "(" arglist . ")" ]*
    ")" : shift,and goto state 108


state 93
    [ 76: var => expr "[" exprlist . "]" ]*
    [ 22: exprlist => exprlist . "," expr ]*
    "]" : shift,and goto state 109
    "," : shift,and goto state 71


state 94
    [ 24: expr => var aoptr expr . ]*
    [ 25: expr => expr . "?" expr ":" expr ]*
    [ 26: expr => expr . "||" expr ]*
    [ 27: expr => expr . "&&" expr ]*
    [ 28: expr => expr . "|" expr ]*
    [ 29: expr => expr . "^" expr ]*
    [ 30: expr => expr . "&" expr ]*
    [ 31: expr => expr . coptr expr ]*
    [ 32: expr => expr . ">>" expr ]*
    [ 33: expr => expr . "<<" expr ]*
    [ 34: expr => expr . ">>>" expr ]*
    [ 35: expr => expr . "+" expr ]*
    [ 36: expr => expr . "-" expr ]*
    [ 37: expr => expr . "*" expr ]*
    [ 38: expr => expr . "/" expr ]*
    [ 39: expr => expr . "%" expr ]*
    [ 40: expr => expr . "**" expr ]*
    [ 47: expr => expr . "(" arglist ")" ]*
    [ 76: var => expr . "[" exprlist "]" ]*
    [ 64: coptr => . ">" ]
    [ 65: coptr => . "<" ]
    [ 66: coptr => . ">=" ]
    [ 67: coptr => . "<=" ]
    [ 68: coptr => . "==" ]
    [ 69: coptr => . "!=" ]
    "+" : shift,and goto state 53
    "-" : shift,and goto state 54
    "*" : shift,and goto state 55
    "/" : shift,and goto state 56
    "**" : shift,and goto state 58
    "?" : shift,and goto state 43
    "%" : shift,and goto state 57
    ">" : shift,and goto state 6
    "<" : shift,and goto state 7
    ">=" : shift,and goto state 8
    "<=" : shift,and goto state 9
    "==" : shift,and goto state 10
    "!=" : shift,and goto state 11
    "|" : shift,and goto state 46
    "&" : shift,and goto state 48
    "^" : shift,and goto state 47
    "&&" : shift,and goto state 45
    "||" : shift,and goto state 44
    ">>" : shift,and goto state 50
    "<<" : shift,and goto state 51
    ">>>" : shift,and goto state 52
    "(" : shift,and goto state 59
    "[" : shift,and goto state 60
    ":" : reduce with rule 24
    ")" : reduce with rule 24
    "]" : reduce with rule 24
    "," : reduce with rule 24
    ";" : reduce with rule 24
    coptr : goto state 49


state 95
    [ 46: expr => "(" expr ")" . ]*
    "+" : reduce with rule 46
    "-" : reduce with rule 46
    "*" : reduce with rule 46
    "/" : reduce with rule 46
    "**" : reduce with rule 46
    "?" : reduce with rule 46
    ":" : reduce with rule 46
    "%" : reduce with rule 46
    ">" : reduce with rule 46
    "<" : reduce with rule 46
    ">=" : reduce with rule 46
    "<=" : reduce with rule 46
    "==" : reduce with rule 46
    "!=" : reduce with rule 46
    "|" : reduce with rule 46
    "&" : reduce with rule 46
    "^" : reduce with rule 46
    "&&" : reduce with rule 46
    "||" : reduce with rule 46
    ">>" : reduce with rule 46
    "<<" : reduce with rule 46
    ">>>" : reduce with rule 46
    "(" : reduce with rule 46
    ")" : reduce with rule 46
    "[" : reduce with rule 46
    "]" : reduce with rule 46
    "," : reduce with rule 46
    ";" : reduce with rule 46


state 96
    [ 4: topstmt => "function" "(" argdeflist ")" "{" . stmtlist "}" ]*
    [ 9: stmtlist => . stmtlist stmt ]
    [ 10: stmtlist => . ]
    "+" : reduce with rule 10
    "-" : reduce with rule 10
    "~" : reduce with rule 10
    "++" : reduce with rule 10
    "--" : reduce with rule 10
    "!" : reduce with rule 10
    "(" : reduce with rule 10
    "{" : reduce with rule 10
    "}" : reduce with rule 10
    "id" : reduce with rule 10
    "num" : reduce with rule 10
    ";" : reduce with rule 10
    "if" : reduce with rule 10
    "while" : reduce with rule 10
    "do" : reduce with rule 10
    "for" : reduce with rule 10
    stmtlist : goto state 110


state 97
    [ 7: neargdeflist => neargdeflist "," "id" . ]*
    ")" : reduce with rule 7
    "," : reduce with rule 7


state 98
    [ 11: stmt => ";" . ]*
    "eof" : reduce with rule 11
    "+" : reduce with rule 11
    "-" : reduce with rule 11
    "~" : reduce with rule 11
    "++" : reduce with rule 11
    "--" : reduce with rule 11
    "!" : reduce with rule 11
    "(" : reduce with rule 11
    "{" : reduce with rule 11
    "}" : reduce with rule 11
    "else" : reduce with rule 11
    "id" : reduce with rule 11
    "num" : reduce with rule 11
    ";" : reduce with rule 11
    "if" : reduce with rule 11
    "while" : reduce with rule 11
    "do" : reduce with rule 11
    "for" : reduce with rule 11
    "function" : reduce with rule 11


state 99
    [ 12: stmt => "{" . stmtlist "}" ]*
    [ 9: stmtlist => . stmtlist stmt ]
    [ 10: stmtlist => . ]
    "+" : reduce with rule 10
    "-" : reduce with rule 10
    "~" : reduce with rule 10
    "++" : reduce with rule 10
    "--" : reduce with rule 10
    "!" : reduce with rule 10
    "(" : reduce with rule 10
    "{" : reduce with rule 10
    "}" : reduce with rule 10
    "id" : reduce with rule 10
    "num" : reduce with rule 10
    ";" : reduce with rule 10
    "if" : reduce with rule 10
    "while" : reduce with rule 10
    "do" : reduce with rule 10
    "for" : reduce with rule 10
    stmtlist : goto state 111


state 100
    [ 13: stmt => exprlist . ";" ]*
    [ 22: exprlist => exprlist . "," expr ]*
    "," : shift,and goto state 71
    ";" : shift,and goto state 112


state 101
    [ 14: stmt => "if" . "(" exprlist ")" stmt elsestmt ]*
    "(" : shift,and goto state 113


state 102
    [ 15: stmt => "while" . "(" exprlist ")" stmt ]*
    "(" : shift,and goto state 114


state 103
    [ 16: stmt => "do" . stmt "while" "(" exprlist ")" ";" ]*
    [ 11: stmt => . ";" ]
    [ 12: stmt => . "{" stmtlist "}" ]
    [ 13: stmt => . exprlist ";" ]
    [ 14: stmt => . "if" "(" exprlist ")" stmt elsestmt ]
    [ 15: stmt => . "while" "(" exprlist ")" stmt ]
    [ 16: stmt => . "do" stmt "while" "(" exprlist ")" ";" ]
    [ 17: stmt => . "for" "(" forexpr ";" forexpr ";" forexpr ")" stmt ]
    [ 22: exprlist => . exprlist "," expr ]
    [ 23: exprlist => . expr ]
    [ 24: expr => . var aoptr expr ]
    [ 25: expr => . expr "?" expr ":" expr ]
    [ 26: expr => . expr "||" expr ]
    [ 27: expr => . expr "&&" expr ]
    [ 28: expr => . expr "|" expr ]
    [ 29: expr => . expr "^" expr ]
    [ 30: expr => . expr "&" expr ]
    [ 31: expr => . expr coptr expr ]
    [ 32: expr => . expr ">>" expr ]
    [ 33: expr => . expr "<<" expr ]
    [ 34: expr => . expr ">>>" expr ]
    [ 35: expr => . expr "+" expr ]
    [ 36: expr => . expr "-" expr ]
    [ 37: expr => . expr "*" expr ]
    [ 38: expr => . expr "/" expr ]
    [ 39: expr => . expr "%" expr ]
    [ 40: expr => . expr "**" expr ]
    [ 41: expr => . "+" expr ]
    [ 42: expr => . "-" expr ]
    [ 43: expr => . "~" expr ]
    [ 44: expr => . "!" expr ]
    [ 45: expr => . const ]
    [ 46: expr => . "(" expr ")" ]
    [ 47: expr => . expr "(" arglist ")" ]
    [ 48: expr => . var ]
    [ 49: expr => . var "++" ]
    [ 50: expr => . var "--" ]
    [ 51: expr => . "++" var ]
    [ 52: expr => . "--" var ]
    [ 75: var => . "id" ]
    [ 76: var => . expr "[" exprlist "]" ]
    [ 74: const => . "num" ]
    "+" : shift,and goto state 24
    "-" : shift,and goto state 25
    "~" : shift,and goto state 26
    "++" : shift,and goto state 37
    "--" : shift,and goto state 38
    "!" : shift,and goto state 27
    "(" : shift,and goto state 29
    "{" : shift,and goto state 99
    "id" : shift,and goto state 39
    "num" : shift,and goto state 40
    ";" : shift,and goto state 98
    "if" : shift,and goto state 101
    "while" : shift,and goto state 102
    "do" : shift,and goto state 103
    "for" : shift,and goto state 104
    stmt : goto state 115
    exprlist : goto state 100
    expr : goto state 36
    const : goto state 28
    var : goto state 23


state 104
    [ 17: stmt => "for" . "(" forexpr ";" forexpr ";" forexpr ")" stmt ]*
    "(" : shift,and goto state 116


state 105
    [ 22: exprlist => exprlist "," expr . ]*
    [ 25: expr => expr . "?" expr ":" expr ]*
    [ 26: expr => expr . "||" expr ]*
    [ 27: expr => expr . "&&" expr ]*
    [ 28: expr => expr . "|" expr ]*
    [ 29: expr => expr . "^" expr ]*
    [ 30: expr => expr . "&" expr ]*
    [ 31: expr => expr . coptr expr ]*
    [ 32: expr => expr . ">>" expr ]*
    [ 33: expr => expr . "<<" expr ]*
    [ 34: expr => expr . ">>>" expr ]*
    [ 35: expr => expr . "+" expr ]*
    [ 36: expr => expr . "-" expr ]*
    [ 37: expr => expr . "*" expr ]*
    [ 38: expr => expr . "/" expr ]*
    [ 39: expr => expr . "%" expr ]*
    [ 40: expr => expr . "**" expr ]*
    [ 47: expr => expr . "(" arglist ")" ]*
    [ 76: var => expr . "[" exprlist "]" ]*
    [ 64: coptr => . ">" ]
    [ 65: coptr => . "<" ]
    [ 66: coptr => . ">=" ]
    [ 67: coptr => . "<=" ]
    [ 68: coptr => . "==" ]
    [ 69: coptr => . "!=" ]
    "+" : shift,and goto state 53
    "-" : shift,and goto state 54
    "*" : shift,and goto state 55
    "/" : shift,and goto state 56
    "**" : shift,and goto state 58
    "?" : shift,and goto state 43
    "%" : shift,and goto state 57
    ">" : shift,and goto state 6
    "<" : shift,and goto state 7
    ">=" : shift,and goto state 8
    "<=" : shift,and goto state 9
    "==" : shift,and goto state 10
    "!=" : shift,and goto state 11
    "|" : shift,and goto state 46
    "&" : shift,and goto state 48
    "^" : shift,and goto state 47
    "&&" : shift,and goto state 45
    "||" : shift,and goto state 44
    ">>" : shift,and goto state 50
    "<<" : shift,and goto state 51
    ">>>" : shift,and goto state 52
    "(" : shift,and goto state 59
    "[" : shift,and goto state 60
    ")" : reduce with rule 22
    "]" : reduce with rule 22
    "," : reduce with rule 22
    ";" : reduce with rule 22
    coptr : goto state 49


state 106
    [ 72: narglist => narglist "," expr . ]*
    [ 25: expr => expr . "?" expr ":" expr ]*
    [ 26: expr => expr . "||" expr ]*
    [ 27: expr => expr . "&&" expr ]*
    [ 28: expr => expr . "|" expr ]*
    [ 29: expr => expr . "^" expr ]*
    [ 30: expr => expr . "&" expr ]*
    [ 31: expr => expr . coptr expr ]*
    [ 32: expr => expr . ">>" expr ]*
    [ 33: expr => expr . "<<" expr ]*
    [ 34: expr => expr . ">>>" expr ]*
    [ 35: expr => expr . "+" expr ]*
    [ 36: expr => expr . "-" expr ]*
    [ 37: expr => expr . "*" expr ]*
    [ 38: expr => expr . "/" expr ]*
    [ 39: expr => expr . "%" expr ]*
    [ 40: expr => expr . "**" expr ]*
    [ 47: expr => expr . "(" arglist ")" ]*
    [ 76: var => expr . "[" exprlist "]" ]*
    [ 64: coptr => . ">" ]
    [ 65: coptr => . "<" ]
    [ 66: coptr => . ">=" ]
    [ 67: coptr => . "<=" ]
    [ 68: coptr => . "==" ]
    [ 69: coptr => . "!=" ]
    "+" : shift,and goto state 53
    "-" : shift,and goto state 54
    "*" : shift,and goto state 55
    "/" : shift,and goto state 56
    "**" : shift,and goto state 58
    "?" : shift,and goto state 43
    "%" : shift,and goto state 57
    ">" : shift,and goto state 6
    "<" : shift,and goto state 7
    ">=" : shift,and goto state 8
    "<=" : shift,and goto state 9
    "==" : shift,and goto state 10
    "!=" : shift,and goto state 11
    "|" : shift,and goto state 46
    "&" : shift,and goto state 48
    "^" : shift,and goto state 47
    "&&" : shift,and goto state 45
    "||" : shift,and goto state 44
    ">>" : shift,and goto state 50
    "<<" : shift,and goto state 51
    ">>>" : shift,and goto state 52
    "(" : shift,and goto state 59
    "[" : shift,and goto state 60
    ")" : reduce with rule 72
    "," : reduce with rule 72
    coptr : goto state 49


state 107
    [ 25: expr => expr "?" expr ":" . expr ]*
    [ 24: expr => . var aoptr expr ]
    [ 25: expr => . expr "?" expr ":" expr ]
    [ 26: expr => . expr "||" expr ]
    [ 27: expr => . expr "&&" expr ]
    [ 28: expr => . expr "|" expr ]
    [ 29: expr => . expr "^" expr ]
    [ 30: expr => . expr "&" expr ]
    [ 31: expr => . expr coptr expr ]
    [ 32: expr => . expr ">>" expr ]
    [ 33: expr => . expr "<<" expr ]
    [ 34: expr => . expr ">>>" expr ]
    [ 35: expr => . expr "+" expr ]
    [ 36: expr => . expr "-" expr ]
    [ 37: expr => . expr "*" expr ]
    [ 38: expr => . expr "/" expr ]
    [ 39: expr => . expr "%" expr ]
    [ 40: expr => . expr "**" expr ]
    [ 41: expr => . "+" expr ]
    [ 42: expr => . "-" expr ]
    [ 43: expr => . "~" expr ]
    [ 44: expr => . "!" expr ]
    [ 45: expr => . const ]
    [ 46: expr => . "(" expr ")" ]
    [ 47: expr => . expr "(" arglist ")" ]
    [ 48: expr => . var ]
    [ 49: expr => . var "++" ]
    [ 50: expr => . var "--" ]
    [ 51: expr => . "++" var ]
    [ 52: expr => . "--" var ]
    [ 75: var => . "id" ]
    [ 76: var => . expr "[" exprlist "]" ]
    [ 74: const => . "num" ]
    "+" : shift,and goto state 24
    "-" : shift,and goto state 25
    "~" : shift,and goto state 26
    "++" : shift,and goto state 37
    "--" : shift,and goto state 38
    "!" : shift,and goto state 27
    "(" : shift,and goto state 29
    "id" : shift,and goto state 39
    "num" : shift,and goto state 40
    expr : goto state 117
    const : goto state 28
    var : goto state 23


state 108
    [ 47: expr => expr "(" arglist ")" . ]*
    "+" : reduce with rule 47
    "-" : reduce with rule 47
    "*" : reduce with rule 47
    "/" : reduce with rule 47
    "**" : reduce with rule 47
    "?" : reduce with rule 47
    ":" : reduce with rule 47
    "%" : reduce with rule 47
    ">" : reduce with rule 47
    "<" : reduce with rule 47
    ">=" : reduce with rule 47
    "<=" : reduce with rule 47
    "==" : reduce with rule 47
    "!=" : reduce with rule 47
    "|" : reduce with rule 47
    "&" : reduce with rule 47
    "^" : reduce with rule 47
    "&&" : reduce with rule 47
    "||" : reduce with rule 47
    ">>" : reduce with rule 47
    "<<" : reduce with rule 47
    ">>>" : reduce with rule 47
    "(" : reduce with rule 47
    ")" : reduce with rule 47
    "[" : reduce with rule 47
    "]" : reduce with rule 47
    "," : reduce with rule 47
    ";" : reduce with rule 47


state 109
    [ 76: var => expr "[" exprlist "]" . ]*
    "+" : reduce with rule 76
    "-" : reduce with rule 76
    "*" : reduce with rule 76
    "/" : reduce with rule 76
    "**" : reduce with rule 76
    "?" : reduce with rule 76
    ":" : reduce with rule 76
    "%" : reduce with rule 76
    ">" : reduce with rule 76
    "<" : reduce with rule 76
    ">=" : reduce with rule 76
    "<=" : reduce with rule 76
    "==" : reduce with rule 76
    "!=" : reduce with rule 76
    "=" : reduce with rule 76
    "+=" : reduce with rule 76
    "-=" : reduce with rule 76
    "*=" : reduce with rule 76
    "/=" : reduce with rule 76
    "&=" : reduce with rule 76
    "|=" : reduce with rule 76
    "^=" : reduce with rule 76
    ">>=" : reduce with rule 76
    "<<=" : reduce with rule 76
    "%=" : reduce with rule 76
    "|" : reduce with rule 76
    "&" : reduce with rule 76
    "^" : reduce with rule 76
    "++" : reduce with rule 76
    "--" : reduce with rule 76
    "&&" : reduce with rule 76
    "||" : reduce with rule 76
    ">>" : reduce with rule 76
    "<<" : reduce with rule 76
    ">>>" : reduce with rule 76
    "(" : reduce with rule 76
    ")" : reduce with rule 76
    "[" : reduce with rule 76
    "]" : reduce with rule 76
    "," : reduce with rule 76
    ";" : reduce with rule 76


state 110
    [ 4: topstmt => "function" "(" argdeflist ")" "{" stmtlist . "}" ]*
    [ 9: stmtlist => stmtlist . stmt ]*
    [ 11: stmt => . ";" ]
    [ 12: stmt => . "{" stmtlist "}" ]
    [ 13: stmt => . exprlist ";" ]
    [ 14: stmt => . "if" "(" exprlist ")" stmt elsestmt ]
    [ 15: stmt => . "while" "(" exprlist ")" stmt ]
    [ 16: stmt => . "do" stmt "while" "(" exprlist ")" ";" ]
    [ 17: stmt => . "for" "(" forexpr ";" forexpr ";" forexpr ")" stmt ]
    [ 22: exprlist => . exprlist "," expr ]
    [ 23: exprlist => . expr ]
    [ 24: expr => . var aoptr expr ]
    [ 25: expr => . expr "?" expr ":" expr ]
    [ 26: expr => . expr "||" expr ]
    [ 27: expr => . expr "&&" expr ]
    [ 28: expr => . expr "|" expr ]
    [ 29: expr => . expr "^" expr ]
    [ 30: expr => . expr "&" expr ]
    [ 31: expr => . expr coptr expr ]
    [ 32: expr => . expr ">>" expr ]
    [ 33: expr => . expr "<<" expr ]
    [ 34: expr => . expr ">>>" expr ]
    [ 35: expr => . expr "+" expr ]
    [ 36: expr => . expr "-" expr ]
    [ 37: expr => . expr "*" expr ]
    [ 38: expr => . expr "/" expr ]
    [ 39: expr => . expr "%" expr ]
    [ 40: expr => . expr "**" expr ]
    [ 41: expr => . "+" expr ]
    [ 42: expr => . "-" expr ]
    [ 43: expr => . "~" expr ]
    [ 44: expr => . "!" expr ]
    [ 45: expr => . const ]
    [ 46: expr => . "(" expr ")" ]
    [ 47: expr => . expr "(" arglist ")" ]
    [ 48: expr => . var ]
    [ 49: expr => . var "++" ]
    [ 50: expr => . var "--" ]
    [ 51: expr => . "++" var ]
    [ 52: expr => . "--" var ]
    [ 75: var => . "id" ]
    [ 76: var => . expr "[" exprlist "]" ]
    [ 74: const => . "num" ]
    "+" : shift,and goto state 24
    "-" : shift,and goto state 25
    "~" : shift,and goto state 26
    "++" : shift,and goto state 37
    "--" : shift,and goto state 38
    "!" : shift,and goto state 27
    "(" : shift,and goto state 29
    "{" : shift,and goto state 99
    "}" : shift,and goto state 118
    "id" : shift,and goto state 39
    "num" : shift,and goto state 40
    ";" : shift,and goto state 98
    "if" : shift,and goto state 101
    "while" : shift,and goto state 102
    "do" : shift,and goto state 103
    "for" : shift,and goto state 104
    stmt : goto state 35
    exprlist : goto state 100
    expr : goto state 36
    const : goto state 28
    var : goto state 23


state 111
    [ 12: stmt => "{" stmtlist . "}" ]*
    [ 9: stmtlist => stmtlist . stmt ]*
    [ 11: stmt => . ";" ]
    [ 12: stmt => . "{" stmtlist "}" ]
    [ 13: stmt => . exprlist ";" ]
    [ 14: stmt => . "if" "(" exprlist ")" stmt elsestmt ]
    [ 15: stmt => . "while" "(" exprlist ")" stmt ]
    [ 16: stmt => . "do" stmt "while" "(" exprlist ")" ";" ]
    [ 17: stmt => . "for" "(" forexpr ";" forexpr ";" forexpr ")" stmt ]
    [ 22: exprlist => . exprlist "," expr ]
    [ 23: exprlist => . expr ]
    [ 24: expr => . var aoptr expr ]
    [ 25: expr => . expr "?" expr ":" expr ]
    [ 26: expr => . expr "||" expr ]
    [ 27: expr => . expr "&&" expr ]
    [ 28: expr => . expr "|" expr ]
    [ 29: expr => . expr "^" expr ]
    [ 30: expr => . expr "&" expr ]
    [ 31: expr => . expr coptr expr ]
    [ 32: expr => . expr ">>" expr ]
    [ 33: expr => . expr "<<" expr ]
    [ 34: expr => . expr ">>>" expr ]
    [ 35: expr => . expr "+" expr ]
    [ 36: expr => . expr "-" expr ]
    [ 37: expr => . expr "*" expr ]
    [ 38: expr => . expr "/" expr ]
    [ 39: expr => . expr "%" expr ]
    [ 40: expr => . expr "**" expr ]
    [ 41: expr => . "+" expr ]
    [ 42: expr => . "-" expr ]
    [ 43: expr => . "~" expr ]
    [ 44: expr => . "!" expr ]
    [ 45: expr => . const ]
    [ 46: expr => . "(" expr ")" ]
    [ 47: expr => . expr "(" arglist ")" ]
    [ 48: expr => . var ]
    [ 49: expr => . var "++" ]
    [ 50: expr => . var "--" ]
    [ 51: expr => . "++" var ]
    [ 52: expr => . "--" var ]
    [ 75: var => . "id" ]
    [ 76: var => . expr "[" exprlist "]" ]
    [ 74: const => . "num" ]
    "+" : shift,and goto state 24
    "-" : shift,and goto state 25
    "~" : shift,and goto state 26
    "++" : shift,and goto state 37
    "--" : shift,and goto state 38
    "!" : shift,and goto state 27
    "(" : shift,and goto state 29
    "{" : shift,and goto state 99
    "}" : shift,and goto state 119
    "id" : shift,and goto state 39
    "num" : shift,and goto state 40
    ";" : shift,and goto state 98
    "if" : shift,and goto state 101
    "while" : shift,and goto state 102
    "do" : shift,and goto state 103
    "for" : shift,and goto state 104
    stmt : goto state 35
    exprlist : goto state 100
    expr : goto state 36
    const : goto state 28
    var : goto state 23


state 112
    [ 13: stmt => exprlist ";" . ]*
    "eof" : reduce with rule 13
    "+" : reduce with rule 13
    "-" : reduce with rule 13
    "~" : reduce with rule 13
    "++" : reduce with rule 13
    "--" : reduce with rule 13
    "!" : reduce with rule 13
    "(" : reduce with rule 13
    "{" : reduce with rule 13
    "}" : reduce with rule 13
    "else" : reduce with rule 13
    "id" : reduce with rule 13
    "num" : reduce with rule 13
    ";" : reduce with rule 13
    "if" : reduce with rule 13
    "while" : reduce with rule 13
    "do" : reduce with rule 13
    "for" : reduce with rule 13
    "function" : reduce with rule 13


state 113
    [ 14: stmt => "if" "(" . exprlist ")" stmt elsestmt ]*
    [ 22: exprlist => . exprlist "," expr ]
    [ 23: exprlist => . expr ]
    [ 24: expr => . var aoptr expr ]
    [ 25: expr => . expr "?" expr ":" expr ]
    [ 26: expr => . expr "||" expr ]
    [ 27: expr => . expr "&&" expr ]
    [ 28: expr => . expr "|" expr ]
    [ 29: expr => . expr "^" expr ]
    [ 30: expr => . expr "&" expr ]
    [ 31: expr => . expr coptr expr ]
    [ 32: expr => . expr ">>" expr ]
    [ 33: expr => . expr "<<" expr ]
    [ 34: expr => . expr ">>>" expr ]
    [ 35: expr => . expr "+" expr ]
    [ 36: expr => . expr "-" expr ]
    [ 37: expr => . expr "*" expr ]
    [ 38: expr => . expr "/" expr ]
    [ 39: expr => . expr "%" expr ]
    [ 40: expr => . expr "**" expr ]
    [ 41: expr => . "+" expr ]
    [ 42: expr => . "-" expr ]
    [ 43: expr => . "~" expr ]
    [ 44: expr => . "!" expr ]
    [ 45: expr => . const ]
    [ 46: expr => . "(" expr ")" ]
    [ 47: expr => . expr "(" arglist ")" ]
    [ 48: expr => . var ]
    [ 49: expr => . var "++" ]
    [ 50: expr => . var "--" ]
    [ 51: expr => . "++" var ]
    [ 52: expr => . "--" var ]
    [ 75: var => . "id" ]
    [ 76: var => . expr "[" exprlist "]" ]
    [ 74: const => . "num" ]
    "+" : shift,and goto state 24
    "-" : shift,and goto state 25
    "~" : shift,and goto state 26
    "++" : shift,and goto state 37
    "--" : shift,and goto state 38
    "!" : shift,and goto state 27
    "(" : shift,and goto state 29
    "id" : shift,and goto state 39
    "num" : shift,and goto state 40
    exprlist : goto state 120
    expr : goto state 36
    const : goto state 28
    var : goto state 23


state 114
    [ 15: stmt => "while" "(" . exprlist ")" stmt ]*
    [ 22: exprlist => . exprlist "," expr ]
    [ 23: exprlist => . expr ]
    [ 24: expr => . var aoptr expr ]
    [ 25: expr => . expr "?" expr ":" expr ]
    [ 26: expr => . expr "||" expr ]
    [ 27: expr => . expr "&&" expr ]
    [ 28: expr => . expr "|" expr ]
    [ 29: expr => . expr "^" expr ]
    [ 30: expr => . expr "&" expr ]
    [ 31: expr => . expr coptr expr ]
    [ 32: expr => . expr ">>" expr ]
    [ 33: expr => . expr "<<" expr ]
    [ 34: expr => . expr ">>>" expr ]
    [ 35: expr => . expr "+" expr ]
    [ 36: expr => . expr "-" expr ]
    [ 37: expr => . expr "*" expr ]
    [ 38: expr => . expr "/" expr ]
    [ 39: expr => . expr "%" expr ]
    [ 40: expr => . expr "**" expr ]
    [ 41: expr => . "+" expr ]
    [ 42: expr => . "-" expr ]
    [ 43: expr => . "~" expr ]
    [ 44: expr => . "!" expr ]
    [ 45: expr => . const ]
    [ 46: expr => . "(" expr ")" ]
    [ 47: expr => . expr "(" arglist ")" ]
    [ 48: expr => . var ]
    [ 49: expr => . var "++" ]
    [ 50: expr => . var "--" ]
    [ 51: expr => . "++" var ]
    [ 52: expr => . "--" var ]
    [ 75: var => . "id" ]
    [ 76: var => . expr "[" exprlist "]" ]
    [ 74: const => . "num" ]
    "+" : shift,and goto state 24
    "-" : shift,and goto state 25
    "~" : shift,and goto state 26
    "++" : shift,and goto state 37
    "--" : shift,and goto state 38
    "!" : shift,and goto state 27
    "(" : shift,and goto state 29
    "id" : shift,and goto state 39
    "num" : shift,and goto state 40
    exprlist : goto state 121
    expr : goto state 36
    const : goto state 28
    var : goto state 23


state 115
    [ 16: stmt => "do" stmt . "while" "(" exprlist ")" ";" ]*
    "while" : shift,and goto state 122


state 116
    [ 17: stmt => "for" "(" . forexpr ";" forexpr ";" forexpr ")" stmt ]*
    [ 20: forexpr => . ]
    [ 21: forexpr => . exprlist ]
    [ 22: exprlist => . exprlist "," expr ]
    [ 23: exprlist => . expr ]
    [ 24: expr => . var aoptr expr ]
    [ 25: expr => . expr "?" expr ":" expr ]
    [ 26: expr => . expr "||" expr ]
    [ 27: expr => . expr "&&" expr ]
    [ 28: expr => . expr "|" expr ]
    [ 29: expr => . expr "^" expr ]
    [ 30: expr => . expr "&" expr ]
    [ 31: expr => . expr coptr expr ]
    [ 32: expr => . expr ">>" expr ]
    [ 33: expr => . expr "<<" expr ]
    [ 34: expr => . expr ">>>" expr ]
    [ 35: expr => . expr "+" expr ]
    [ 36: expr => . expr "-" expr ]
    [ 37: expr => . expr "*" expr ]
    [ 38: expr => . expr "/" expr ]
    [ 39: expr => . expr "%" expr ]
    [ 40: expr => . expr "**" expr ]
    [ 41: expr => . "+" expr ]
    [ 42: expr => . "-" expr ]
    [ 43: expr => . "~" expr ]
    [ 44: expr => . "!" expr ]
    [ 45: expr => . const ]
    [ 46: expr => . "(" expr ")" ]
    [ 47: expr => . expr "(" arglist ")" ]
    [ 48: expr => . var ]
    [ 49: expr => . var "++" ]
    [ 50: expr => . var "--" ]
    [ 51: expr => . "++" var ]
    [ 52: expr => . "--" var ]
    [ 75: var => . "id" ]
    [ 76: var => . expr "[" exprlist "]" ]
    [ 74: const => . "num" ]
    "+" : shift,and goto state 24
    "-" : shift,and goto state 25
    "~" : shift,and goto state 26
    "++" : shift,and goto state 37
    "--" : shift,and goto state 38
    "!" : shift,and goto state 27
    "(" : shift,and goto state 29
    "id" : shift,and goto state 39
    "num" : shift,and goto state 40
    ";" : reduce with rule 20
    forexpr : goto state 123
    exprlist : goto state 124
    expr : goto state 36
    const : goto state 28
    var : goto state 23


state 117
    [ 25: expr => expr "?" expr ":" expr . ]*
    [ 25: expr => expr . "?" expr ":" expr ]*
    [ 26: expr => expr . "||" expr ]*
    [ 27: expr => expr . "&&" expr ]*
    [ 28: expr => expr . "|" expr ]*
    [ 29: expr => expr . "^" expr ]*
    [ 30: expr => expr . "&" expr ]*
    [ 31: expr => expr . coptr expr ]*
    [ 32: expr => expr . ">>" expr ]*
    [ 33: expr => expr . "<<" expr ]*
    [ 34: expr => expr . ">>>" expr ]*
    [ 35: expr => expr . "+" expr ]*
    [ 36: expr => expr . "-" expr ]*
    [ 37: expr => expr . "*" expr ]*
    [ 38: expr => expr . "/" expr ]*
    [ 39: expr => expr . "%" expr ]*
    [ 40: expr => expr . "**" expr ]*
    [ 47: expr => expr . "(" arglist ")" ]*
    [ 76: var => expr . "[" exprlist "]" ]*
    [ 64: coptr => . ">" ]
    [ 65: coptr => . "<" ]
    [ 66: coptr => . ">=" ]
    [ 67: coptr => . "<=" ]
    [ 68: coptr => . "==" ]
    [ 69: coptr => . "!=" ]
    "+" : shift,and goto state 53
    "-" : shift,and goto state 54
    "*" : shift,and goto state 55
    "/" : shift,and goto state 56
    "**" : shift,and goto state 58
    "%" : shift,and goto state 57
    ">" : shift,and goto state 6
    "<" : shift,and goto state 7
    ">=" : shift,and goto state 8
    "<=" : shift,and goto state 9
    "==" : shift,and goto state 10
    "!=" : shift,and goto state 11
    "|" : shift,and goto state 46
    "&" : shift,and goto state 48
    "^" : shift,and goto state 47
    "&&" : shift,and goto state 45
    "||" : shift,and goto state 44
    ">>" : shift,and goto state 50
    "<<" : shift,and goto state 51
    ">>>" : shift,and goto state 52
    "(" : shift,and goto state 59
    "[" : shift,and goto state 60
    "?" : reduce with rule 25
    ":" : reduce with rule 25
    ")" : reduce with rule 25
    "]" : reduce with rule 25
    "," : reduce with rule 25
    ";" : reduce with rule 25
    coptr : goto state 49


state 118
    [ 4: topstmt => "function" "(" argdeflist ")" "{" stmtlist "}" . ]*
    "eof" : reduce with rule 4
    "+" : reduce with rule 4
    "-" : reduce with rule 4
    "~" : reduce with rule 4
    "++" : reduce with rule 4
    "--" : reduce with rule 4
    "!" : reduce with rule 4
    "(" : reduce with rule 4
    "{" : reduce with rule 4
    "id" : reduce with rule 4
    "num" : reduce with rule 4
    ";" : reduce with rule 4
    "if" : reduce with rule 4
    "while" : reduce with rule 4
    "do" : reduce with rule 4
    "for" : reduce with rule 4
    "function" : reduce with rule 4


state 119
    [ 12: stmt => "{" stmtlist "}" . ]*
    "eof" : reduce with rule 12
    "+" : reduce with rule 12
    "-" : reduce with rule 12
    "~" : reduce with rule 12
    "++" : reduce with rule 12
    "--" : reduce with rule 12
    "!" : reduce with rule 12
    "(" : reduce with rule 12
    "{" : reduce with rule 12
    "}" : reduce with rule 12
    "else" : reduce with rule 12
    "id" : reduce with rule 12
    "num" : reduce with rule 12
    ";" : reduce with rule 12
    "if" : reduce with rule 12
    "while" : reduce with rule 12
    "do" : reduce with rule 12
    "for" : reduce with rule 12
    "function" : reduce with rule 12


state 120
    [ 14: stmt => "if" "(" exprlist . ")" stmt elsestmt ]*
    [ 22: exprlist => exprlist . "," expr ]*
    ")" : shift,and goto state 125
    "," : shift,and goto state 71


state 121
    [ 15: stmt => "while" "(" exprlist . ")" stmt ]*
    [ 22: exprlist => exprlist . "," expr ]*
    ")" : shift,and goto state 126
    "," : shift,and goto state 71


state 122
    [ 16: stmt => "do" stmt "while" . "(" exprlist ")" ";" ]*
    "(" : shift,and goto state 127


state 123
    [ 17: stmt => "for" "(" forexpr . ";" forexpr ";" forexpr ")" stmt ]*
    ";" : shift,and goto state 128


state 124
    [ 21: forexpr => exprlist . ]*
    [ 22: exprlist => exprlist . "," expr ]*
    "," : shift,and goto state 71
    ")" : reduce with rule 21
    ";" : reduce with rule 21


state 125
    [ 14: stmt => "if" "(" exprlist ")" . stmt elsestmt ]*
    [ 11: stmt => . ";" ]
    [ 12: stmt => . "{" stmtlist "}" ]
    [ 13: stmt => . exprlist ";" ]
    [ 14: stmt => . "if" "(" exprlist ")" stmt elsestmt ]
    [ 15: stmt => . "while" "(" exprlist ")" stmt ]
    [ 16: stmt => . "do" stmt "while" "(" exprlist ")" ";" ]
    [ 17: stmt => . "for" "(" forexpr ";" forexpr ";" forexpr ")" stmt ]
    [ 22: exprlist => . exprlist "," expr ]
    [ 23: exprlist => . expr ]
    [ 24: expr => . var aoptr expr ]
    [ 25: expr => . expr "?" expr ":" expr ]
    [ 26: expr => . expr "||" expr ]
    [ 27: expr => . expr "&&" expr ]
    [ 28: expr => . expr "|" expr ]
    [ 29: expr => . expr "^" expr ]
    [ 30: expr => . expr "&" expr ]
    [ 31: expr => . expr coptr expr ]
    [ 32: expr => . expr ">>" expr ]
    [ 33: expr => . expr "<<" expr ]
    [ 34: expr => . expr ">>>" expr ]
    [ 35: expr => . expr "+" expr ]
    [ 36: expr => . expr "-" expr ]
    [ 37: expr => . expr "*" expr ]
    [ 38: expr => . expr "/" expr ]
    [ 39: expr => . expr "%" expr ]
    [ 40: expr => . expr "**" expr ]
    [ 41: expr => . "+" expr ]
    [ 42: expr => . "-" expr ]
    [ 43: expr => . "~" expr ]
    [ 44: expr => . "!" expr ]
    [ 45: expr => . const ]
    [ 46: expr => . "(" expr ")" ]
    [ 47: expr => . expr "(" arglist ")" ]
    [ 48: expr => . var ]
    [ 49: expr => . var "++" ]
    [ 50: expr => . var "--" ]
    [ 51: expr => . "++" var ]
    [ 52: expr => . "--" var ]
    [ 75: var => . "id" ]
    [ 76: var => . expr "[" exprlist "]" ]
    [ 74: const => . "num" ]
    "+" : shift,and goto state 24
    "-" : shift,and goto state 25
    "~" : shift,and goto state 26
    "++" : shift,and goto state 37
    "--" : shift,and goto state 38
    "!" : shift,and goto state 27
    "(" : shift,and goto state 29
    "{" : shift,and goto state 99
    "id" : shift,and goto state 39
    "num" : shift,and goto state 40
    ";" : shift,and goto state 98
    "if" : shift,and goto state 101
    "while" : shift,and goto state 102
    "do" : shift,and goto state 103
    "for" : shift,and goto state 104
    stmt : goto state 129
    exprlist : goto state 100
    expr : goto state 36
    const : goto state 28
    var : goto state 23


state 126
    [ 15: stmt => "while" "(" exprlist ")" . stmt ]*
    [ 11: stmt => . ";" ]
    [ 12: stmt => . "{" stmtlist "}" ]
    [ 13: stmt => . exprlist ";" ]
    [ 14: stmt => . "if" "(" exprlist ")" stmt elsestmt ]
    [ 15: stmt => . "while" "(" exprlist ")" stmt ]
    [ 16: stmt => . "do" stmt "while" "(" exprlist ")" ";" ]
    [ 17: stmt => . "for" "(" forexpr ";" forexpr ";" forexpr ")" stmt ]
    [ 22: exprlist => . exprlist "," expr ]
    [ 23: exprlist => . expr ]
    [ 24: expr => . var aoptr expr ]
    [ 25: expr => . expr "?" expr ":" expr ]
    [ 26: expr => . expr "||" expr ]
    [ 27: expr => . expr "&&" expr ]
    [ 28: expr => . expr "|" expr ]
    [ 29: expr => . expr "^" expr ]
    [ 30: expr => . expr "&" expr ]
    [ 31: expr => . expr coptr expr ]
    [ 32: expr => . expr ">>" expr ]
    [ 33: expr => . expr "<<" expr ]
    [ 34: expr => . expr ">>>" expr ]
    [ 35: expr => . expr "+" expr ]
    [ 36: expr => . expr "-" expr ]
    [ 37: expr => . expr "*" expr ]
    [ 38: expr => . expr "/" expr ]
    [ 39: expr => . expr "%" expr ]
    [ 40: expr => . expr "**" expr ]
    [ 41: expr => . "+" expr ]
    [ 42: expr => . "-" expr ]
    [ 43: expr => . "~" expr ]
    [ 44: expr => . "!" expr ]
    [ 45: expr => . const ]
    [ 46: expr => . "(" expr ")" ]
    [ 47: expr => . expr "(" arglist ")" ]
    [ 48: expr => . var ]
    [ 49: expr => . var "++" ]
    [ 50: expr => . var "--" ]
    [ 51: expr => . "++" var ]
    [ 52: expr => . "--" var ]
    [ 75: var => . "id" ]
    [ 76: var => . expr "[" exprlist "]" ]
    [ 74: const => . "num" ]
    "+" : shift,and goto state 24
    "-" : shift,and goto state 25
    "~" : shift,and goto state 26
    "++" : shift,and goto state 37
    "--" : shift,and goto state 38
    "!" : shift,and goto state 27
    "(" : shift,and goto state 29
    "{" : shift,and goto state 99
    "id" : shift,and goto state 39
    "num" : shift,and goto state 40
    ";" : shift,and goto state 98
    "if" : shift,and goto state 101
    "while" : shift,and goto state 102
    "do" : shift,and goto state 103
    "for" : shift,and goto state 104
    stmt : goto state 130
    exprlist : goto state 100
    expr : goto state 36
    const : goto state 28
    var : goto state 23


state 127
    [ 16: stmt => "do" stmt "while" "(" . exprlist ")" ";" ]*
    [ 22: exprlist => . exprlist "," expr ]
    [ 23: exprlist => . expr ]
    [ 24: expr => . var aoptr expr ]
    [ 25: expr => . expr "?" expr ":" expr ]
    [ 26: expr => . expr "||" expr ]
    [ 27: expr => . expr "&&" expr ]
    [ 28: expr => . expr "|" expr ]
    [ 29: expr => . expr "^" expr ]
    [ 30: expr => . expr "&" expr ]
    [ 31: expr => . expr coptr expr ]
    [ 32: expr => . expr ">>" expr ]
    [ 33: expr => . expr "<<" expr ]
    [ 34: expr => . expr ">>>" expr ]
    [ 35: expr => . expr "+" expr ]
    [ 36: expr => . expr "-" expr ]
    [ 37: expr => . expr "*" expr ]
    [ 38: expr => . expr "/" expr ]
    [ 39: expr => . expr "%" expr ]
    [ 40: expr => . expr "**" expr ]
    [ 41: expr => . "+" expr ]
    [ 42: expr => . "-" expr ]
    [ 43: expr => . "~" expr ]
    [ 44: expr => . "!" expr ]
    [ 45: expr => . const ]
    [ 46: expr => . "(" expr ")" ]
    [ 47: expr => . expr "(" arglist ")" ]
    [ 48: expr => . var ]
    [ 49: expr => . var "++" ]
    [ 50: expr => . var "--" ]
    [ 51: expr => . "++" var ]
    [ 52: expr => . "--" var ]
    [ 75: var => . "id" ]
    [ 76: var => . expr "[" exprlist "]" ]
    [ 74: const => . "num" ]
    "+" : shift,and goto state 24
    "-" : shift,and goto state 25
    "~" : shift,and goto state 26
    "++" : shift,and goto state 37
    "--" : shift,and goto state 38
    "!" : shift,and goto state 27
    "(" : shift,and goto state 29
    "id" : shift,and goto state 39
    "num" : shift,and goto state 40
    exprlist : goto state 131
    expr : goto state 36
    const : goto state 28
    var : goto state 23


state 128
    [ 17: stmt => "for" "(" forexpr ";" . forexpr ";" forexpr ")" stmt ]*
    [ 20: forexpr => . ]
    [ 21: forexpr => . exprlist ]
    [ 22: exprlist => . exprlist "," expr ]
    [ 23: exprlist => . expr ]
    [ 24: expr => . var aoptr expr ]
    [ 25: expr => . expr "?" expr ":" expr ]
    [ 26: expr => . expr "||" expr ]
    [ 27: expr => . expr "&&" expr ]
    [ 28: expr => . expr "|" expr ]
    [ 29: expr => . expr "^" expr ]
    [ 30: expr => . expr "&" expr ]
    [ 31: expr => . expr coptr expr ]
    [ 32: expr => . expr ">>" expr ]
    [ 33: expr => . expr "<<" expr ]
    [ 34: expr => . expr ">>>" expr ]
    [ 35: expr => . expr "+" expr ]
    [ 36: expr => . expr "-" expr ]
    [ 37: expr => . expr "*" expr ]
    [ 38: expr => . expr "/" expr ]
    [ 39: expr => . expr "%" expr ]
    [ 40: expr => . expr "**" expr ]
    [ 41: expr => . "+" expr ]
    [ 42: expr => . "-" expr ]
    [ 43: expr => . "~" expr ]
    [ 44: expr => . "!" expr ]
    [ 45: expr => . const ]
    [ 46: expr => . "(" expr ")" ]
    [ 47: expr => . expr "(" arglist ")" ]
    [ 48: expr => . var ]
    [ 49: expr => . var "++" ]
    [ 50: expr => . var "--" ]
    [ 51: expr => . "++" var ]
    [ 52: expr => . "--" var ]
    [ 75: var => . "id" ]
    [ 76: var => . expr "[" exprlist "]" ]
    [ 74: const => . "num" ]
    "+" : shift,and goto state 24
    "-" : shift,and goto state 25
    "~" : shift,and goto state 26
    "++" : shift,and goto state 37
    "--" : shift,and goto state 38
    "!" : shift,and goto state 27
    "(" : shift,and goto state 29
    "id" : shift,and goto state 39
    "num" : shift,and goto state 40
    ";" : reduce with rule 20
    forexpr : goto state 132
    exprlist : goto state 124
    expr : goto state 36
    const : goto state 28
    var : goto state 23


state 129
    [ 14: stmt => "if" "(" exprlist ")" stmt . elsestmt ]*
    [ 18: elsestmt => . ]
    [ 19: elsestmt => . "else" stmt ]
    "else" : shift,and goto state 134
    "eof" : reduce with rule 18
    "+" : reduce with rule 18
    "-" : reduce with rule 18
    "~" : reduce with rule 18
    "++" : reduce with rule 18
    "--" : reduce with rule 18
    "!" : reduce with rule 18
    "(" : reduce with rule 18
    "{" : reduce with rule 18
    "}" : reduce with rule 18
    "id" : reduce with rule 18
    "num" : reduce with rule 18
    ";" : reduce with rule 18
    "if" : reduce with rule 18
    "while" : reduce with rule 18
    "do" : reduce with rule 18
    "for" : reduce with rule 18
    "function" : reduce with rule 18
    elsestmt : goto state 133


state 130
    [ 15: stmt => "while" "(" exprlist ")" stmt . ]*
    "eof" : reduce with rule 15
    "+" : reduce with rule 15
    "-" : reduce with rule 15
    "~" : reduce with rule 15
    "++" : reduce with rule 15
    "--" : reduce with rule 15
    "!" : reduce with rule 15
    "(" : reduce with rule 15
    "{" : reduce with rule 15
    "}" : reduce with rule 15
    "else" : reduce with rule 15
    "id" : reduce with rule 15
    "num" : reduce with rule 15
    ";" : reduce with rule 15
    "if" : reduce with rule 15
    "while" : reduce with rule 15
    "do" : reduce with rule 15
    "for" : reduce with rule 15
    "function" : reduce with rule 15


state 131
    [ 16: stmt => "do" stmt "while" "(" exprlist . ")" ";" ]*
    [ 22: exprlist => exprlist . "," expr ]*
    ")" : shift,and goto state 135
    "," : shift,and goto state 71


state 132
    [ 17: stmt => "for" "(" forexpr ";" forexpr . ";" forexpr ")" stmt ]*
    ";" : shift,and goto state 136


state 133
    [ 14: stmt => "if" "(" exprlist ")" stmt elsestmt . ]*
    "eof" : reduce with rule 14
    "+" : reduce with rule 14
    "-" : reduce with rule 14
    "~" : reduce with rule 14
    "++" : reduce with rule 14
    "--" : reduce with rule 14
    "!" : reduce with rule 14
    "(" : reduce with rule 14
    "{" : reduce with rule 14
    "}" : reduce with rule 14
    "else" : reduce with rule 14
    "id" : reduce with rule 14
    "num" : reduce with rule 14
    ";" : reduce with rule 14
    "if" : reduce with rule 14
    "while" : reduce with rule 14
    "do" : reduce with rule 14
    "for" : reduce with rule 14
    "function" : reduce with rule 14


state 134
    [ 19: elsestmt => "else" . stmt ]*
    [ 11: stmt => . ";" ]
    [ 12: stmt => . "{" stmtlist "}" ]
    [ 13: stmt => . exprlist ";" ]
    [ 14: stmt => . "if" "(" exprlist ")" stmt elsestmt ]
    [ 15: stmt => . "while" "(" exprlist ")" stmt ]
    [ 16: stmt => . "do" stmt "while" "(" exprlist ")" ";" ]
    [ 17: stmt => . "for" "(" forexpr ";" forexpr ";" forexpr ")" stmt ]
    [ 22: exprlist => . exprlist "," expr ]
    [ 23: exprlist => . expr ]
    [ 24: expr => . var aoptr expr ]
    [ 25: expr => . expr "?" expr ":" expr ]
    [ 26: expr => . expr "||" expr ]
    [ 27: expr => . expr "&&" expr ]
    [ 28: expr => . expr "|" expr ]
    [ 29: expr => . expr "^" expr ]
    [ 30: expr => . expr "&" expr ]
    [ 31: expr => . expr coptr expr ]
    [ 32: expr => . expr ">>" expr ]
    [ 33: expr => . expr "<<" expr ]
    [ 34: expr => . expr ">>>" expr ]
    [ 35: expr => . expr "+" expr ]
    [ 36: expr => . expr "-" expr ]
    [ 37: expr => . expr "*" expr ]
    [ 38: expr => . expr "/" expr ]
    [ 39: expr => . expr "%" expr ]
    [ 40: expr => . expr "**" expr ]
    [ 41: expr => . "+" expr ]
    [ 42: expr => . "-" expr ]
    [ 43: expr => . "~" expr ]
    [ 44: expr => . "!" expr ]
    [ 45: expr => . const ]
    [ 46: expr => . "(" expr ")" ]
    [ 47: expr => . expr "(" arglist ")" ]
    [ 48: expr => . var ]
    [ 49: expr => . var "++" ]
    [ 50: expr => . var "--" ]
    [ 51: expr => . "++" var ]
    [ 52: expr => . "--" var ]
    [ 75: var => . "id" ]
    [ 76: var => . expr "[" exprlist "]" ]
    [ 74: const => . "num" ]
    "+" : shift,and goto state 24
    "-" : shift,and goto state 25
    "~" : shift,and goto state 26
    "++" : shift,and goto state 37
    "--" : shift,and goto state 38
    "!" : shift,and goto state 27
    "(" : shift,and goto state 29
    "{" : shift,and goto state 99
    "id" : shift,and goto state 39
    "num" : shift,and goto state 40
    ";" : shift,and goto state 98
    "if" : shift,and goto state 101
    "while" : shift,and goto state 102
    "do" : shift,and goto state 103
    "for" : shift,and goto state 104
    stmt : goto state 137
    exprlist : goto state 100
    expr : goto state 36
    const : goto state 28
    var : goto state 23


state 135
    [ 16: stmt => "do" stmt "while" "(" exprlist ")" . ";" ]*
    ";" : shift,and goto state 138


state 136
    [ 17: stmt => "for" "(" forexpr ";" forexpr ";" . forexpr ")" stmt ]*
    [ 20: forexpr => . ]
    [ 21: forexpr => . exprlist ]
    [ 22: exprlist => . exprlist "," expr ]
    [ 23: exprlist => . expr ]
    [ 24: expr => . var aoptr expr ]
    [ 25: expr => . expr "?" expr ":" expr ]
    [ 26: expr => . expr "||" expr ]
    [ 27: expr => . expr "&&" expr ]
    [ 28: expr => . expr "|" expr ]
    [ 29: expr => . expr "^" expr ]
    [ 30: expr => . expr "&" expr ]
    [ 31: expr => . expr coptr expr ]
    [ 32: expr => . expr ">>" expr ]
    [ 33: expr => . expr "<<" expr ]
    [ 34: expr => . expr ">>>" expr ]
    [ 35: expr => . expr "+" expr ]
    [ 36: expr => . expr "-" expr ]
    [ 37: expr => . expr "*" expr ]
    [ 38: expr => . expr "/" expr ]
    [ 39: expr => . expr "%" expr ]
    [ 40: expr => . expr "**" expr ]
    [ 41: expr => . "+" expr ]
    [ 42: expr => . "-" expr ]
    [ 43: expr => . "~" expr ]
    [ 44: expr => . "!" expr ]
    [ 45: expr => . const ]
    [ 46: expr => . "(" expr ")" ]
    [ 47: expr => . expr "(" arglist ")" ]
    [ 48: expr => . var ]
    [ 49: expr => . var "++" ]
    [ 50: expr => . var "--" ]
    [ 51: expr => . "++" var ]
    [ 52: expr => . "--" var ]
    [ 75: var => . "id" ]
    [ 76: var => . expr "[" exprlist "]" ]
    [ 74: const => . "num" ]
    "+" : shift,and goto state 24
    "-" : shift,and goto state 25
    "~" : shift,and goto state 26
    "++" : shift,and goto state 37
    "--" : shift,and goto state 38
    "!" : shift,and goto state 27
    "(" : shift,and goto state 29
    "id" : shift,and goto state 39
    "num" : shift,and goto state 40
    ")" : reduce with rule 20
    forexpr : goto state 139
    exprlist : goto state 124
    expr : goto state 36
    const : goto state 28
    var : goto state 23


state 137
    [ 19: elsestmt => "else" stmt . ]*
    "eof" : reduce with rule 19
    "+" : reduce with rule 19
    "-" : reduce with rule 19
    "~" : reduce with rule 19
    "++" : reduce with rule 19
    "--" : reduce with rule 19
    "!" : reduce with rule 19
    "(" : reduce with rule 19
    "{" : reduce with rule 19
    "}" : reduce with rule 19
    "else" : reduce with rule 19
    "id" : reduce with rule 19
    "num" : reduce with rule 19
    ";" : reduce with rule 19
    "if" : reduce with rule 19
    "while" : reduce with rule 19
    "do" : reduce with rule 19
    "for" : reduce with rule 19
    "function" : reduce with rule 19


state 138
    [ 16: stmt => "do" stmt "while" "(" exprlist ")" ";" . ]*
    "eof" : reduce with rule 16
    "+" : reduce with rule 16
    "-" : reduce with rule 16
    "~" : reduce with rule 16
    "++" : reduce with rule 16
    "--" : reduce with rule 16
    "!" : reduce with rule 16
    "(" : reduce with rule 16
    "{" : reduce with rule 16
    "}" : reduce with rule 16
    "else" : reduce with rule 16
    "id" : reduce with rule 16
    "num" : reduce with rule 16
    ";" : reduce with rule 16
    "if" : reduce with rule 16
    "while" : reduce with rule 16
    "do" : reduce with rule 16
    "for" : reduce with rule 16
    "function" : reduce with rule 16


state 139
    [ 17: stmt => "for" "(" forexpr ";" forexpr ";" forexpr . ")" stmt ]*
    ")" : shift,and goto state 140


state 140
    [ 17: stmt => "for" "(" forexpr ";" forexpr ";" forexpr ")" . stmt ]*
    [ 11: stmt => . ";" ]
    [ 12: stmt => . "{" stmtlist "}" ]
    [ 13: stmt => . exprlist ";" ]
    [ 14: stmt => . "if" "(" exprlist ")" stmt elsestmt ]
    [ 15: stmt => . "while" "(" exprlist ")" stmt ]
    [ 16: stmt => . "do" stmt "while" "(" exprlist ")" ";" ]
    [ 17: stmt => . "for" "(" forexpr ";" forexpr ";" forexpr ")" stmt ]
    [ 22: exprlist => . exprlist "," expr ]
    [ 23: exprlist => . expr ]
    [ 24: expr => . var aoptr expr ]
    [ 25: expr => . expr "?" expr ":" expr ]
    [ 26: expr => . expr "||" expr ]
    [ 27: expr => . expr "&&" expr ]
    [ 28: expr => . expr "|" expr ]
    [ 29: expr => . expr "^" expr ]
    [ 30: expr => . expr "&" expr ]
    [ 31: expr => . expr coptr expr ]
    [ 32: expr => . expr ">>" expr ]
    [ 33: expr => . expr "<<" expr ]
    [ 34: expr => . expr ">>>" expr ]
    [ 35: expr => . expr "+" expr ]
    [ 36: expr => . expr "-" expr ]
    [ 37: expr => . expr "*" expr ]
    [ 38: expr => . expr "/" expr ]
    [ 39: expr => . expr "%" expr ]
    [ 40: expr => . expr "**" expr ]
    [ 41: expr => . "+" expr ]
    [ 42: expr => . "-" expr ]
    [ 43: expr => . "~" expr ]
    [ 44: expr => . "!" expr ]
    [ 45: expr => . const ]
    [ 46: expr => . "(" expr ")" ]
    [ 47: expr => . expr "(" arglist ")" ]
    [ 48: expr => . var ]
    [ 49: expr => . var "++" ]
    [ 50: expr => . var "--" ]
    [ 51: expr => . "++" var ]
    [ 52: expr => . "--" var ]
    [ 75: var => . "id" ]
    [ 76: var => . expr "[" exprlist "]" ]
    [ 74: const => . "num" ]
    "+" : shift,and goto state 24
    "-" : shift,and goto state 25
    "~" : shift,and goto state 26
    "++" : shift,and goto state 37
    "--" : shift,and goto state 38
    "!" : shift,and goto state 27
    "(" : shift,and goto state 29
    "{" : shift,and goto state 99
    "id" : shift,and goto state 39
    "num" : shift,and goto state 40
    ";" : shift,and goto state 98
    "if" : shift,and goto state 101
    "while" : shift,and goto state 102
    "do" : shift,and goto state 103
    "for" : shift,and goto state 104
    stmt : goto state 141
    exprlist : goto state 100
    expr : goto state 36
    const : goto state 28
    var : goto state 23


state 141
    [ 17: stmt => "for" "(" forexpr ";" forexpr ";" forexpr ")" stmt . ]*
    "eof" : reduce with rule 17
    "+" : reduce with rule 17
    "-" : reduce with rule 17
    "~" : reduce with rule 17
    "++" : reduce with rule 17
    "--" : reduce with rule 17
    "!" : reduce with rule 17
    "(" : reduce with rule 17
    "{" : reduce with rule 17
    "}" : reduce with rule 17
    "else" : reduce with rule 17
    "id" : reduce with rule 17
    "num" : reduce with rule 17
    ";" : reduce with rule 17
    "if" : reduce with rule 17
    "while" : reduce with rule 17
    "do" : reduce with rule 17
    "for" : reduce with rule 17
    "function" : reduce with rule 17


