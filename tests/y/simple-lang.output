state 0
    [ 0: (accept) => . topstmtlist <EOF> ]*
    default action: reduce with rule 2 (topstmtlist)
    topstmtlist : go to state 1


state 1
    [ 0: (accept) => topstmtlist . <EOF> ]*
    [ 1: topstmtlist => topstmtlist . topstmt ]*
    no default action
    <EOF> : shift, and go to state 2
    <NAME> : shift, and go to state 38
    <NUM> : shift, and go to state 41
    "+" : shift, and go to state 25
    "-" : shift, and go to state 26
    "~" : shift, and go to state 27
    "++" : shift, and go to state 39
    "--" : shift, and go to state 40
    "(" : shift, and go to state 30
    "{" : shift, and go to state 101
    ";" : shift, and go to state 100
    "!" : shift, and go to state 28
    "if" : shift, and go to state 103
    "while" : shift, and go to state 104
    "do" : shift, and go to state 105
    "for" : shift, and go to state 106
    "function" : shift, and go to state 5
    topstmt : go to state 3
    stmt : go to state 4
    exprlist : go to state 102
    expr : go to state 37
    const : go to state 29
    var : go to state 24


state 2
    [ 0: (accept) => topstmtlist <EOF> . ]*
    default action: reduce with rule 0 ((accept))


state 3
    [ 1: topstmtlist => topstmtlist topstmt . ]*
    default action: reduce with rule 1 (topstmtlist)


state 4
    [ 3: topstmt => stmt . ]*
    default action: reduce with rule 3 (topstmt)


state 5
    [ 4: topstmt => "function" . "(" argdeflist ")" "{" stmtlist "}" ]*
    no default action
    "(" : shift, and go to state 6


state 6
    [ 4: topstmt => "function" "(" . argdeflist ")" "{" stmtlist "}" ]*
    default action: reduce with rule 6 (argdeflist)
    <NAME> : shift, and go to state 35
    argdeflist : go to state 33
    neargdeflist : go to state 34


state 7
    [ 62: coptr => ">" . ]*
    default action: reduce with rule 62 (coptr)


state 8
    [ 63: coptr => "<" . ]*
    default action: reduce with rule 63 (coptr)


state 9
    [ 64: coptr => ">=" . ]*
    default action: reduce with rule 64 (coptr)


state 10
    [ 65: coptr => "<=" . ]*
    default action: reduce with rule 65 (coptr)


state 11
    [ 66: coptr => "==" . ]*
    default action: reduce with rule 66 (coptr)


state 12
    [ 67: coptr => "!=" . ]*
    default action: reduce with rule 67 (coptr)


state 13
    [ 51: aoptr => "=" . ]*
    default action: reduce with rule 51 (aoptr)


state 14
    [ 52: aoptr => "+=" . ]*
    default action: reduce with rule 52 (aoptr)


state 15
    [ 53: aoptr => "-=" . ]*
    default action: reduce with rule 53 (aoptr)


state 16
    [ 54: aoptr => "*=" . ]*
    default action: reduce with rule 54 (aoptr)


state 17
    [ 55: aoptr => "/=" . ]*
    default action: reduce with rule 55 (aoptr)


state 18
    [ 56: aoptr => "&=" . ]*
    default action: reduce with rule 56 (aoptr)


state 19
    [ 57: aoptr => "|=" . ]*
    default action: reduce with rule 57 (aoptr)


state 20
    [ 58: aoptr => "^=" . ]*
    default action: reduce with rule 58 (aoptr)


state 21
    [ 59: aoptr => ">>=" . ]*
    default action: reduce with rule 59 (aoptr)


state 22
    [ 60: aoptr => "<<=" . ]*
    default action: reduce with rule 60 (aoptr)


state 23
    [ 61: aoptr => "%=" . ]*
    default action: reduce with rule 61 (aoptr)


state 24
    [ 24: expr => var . aoptr expr ]*
    [ 48: expr => var . ]*
    [ 49: expr => var . "++" ]*
    [ 50: expr => var . "--" ]*
    default action: reduce with rule 48 (expr)
    "=" : shift, and go to state 13
    "+=" : shift, and go to state 14
    "-=" : shift, and go to state 15
    "*=" : shift, and go to state 16
    "/=" : shift, and go to state 17
    "&=" : shift, and go to state 18
    "|=" : shift, and go to state 19
    "^=" : shift, and go to state 20
    ">>=" : shift, and go to state 21
    "<<=" : shift, and go to state 22
    "%=" : shift, and go to state 23
    "++" : shift, and go to state 63
    "--" : shift, and go to state 64
    aoptr : go to state 62


state 25
    [ 41: expr => "+" . expr ]*
    no default action
    <NAME> : shift, and go to state 38
    <NUM> : shift, and go to state 41
    "+" : shift, and go to state 25
    "-" : shift, and go to state 26
    "~" : shift, and go to state 27
    "++" : shift, and go to state 39
    "--" : shift, and go to state 40
    "(" : shift, and go to state 30
    "!" : shift, and go to state 28
    expr : go to state 65
    const : go to state 29
    var : go to state 24


state 26
    [ 42: expr => "-" . expr ]*
    no default action
    <NAME> : shift, and go to state 38
    <NUM> : shift, and go to state 41
    "+" : shift, and go to state 25
    "-" : shift, and go to state 26
    "~" : shift, and go to state 27
    "++" : shift, and go to state 39
    "--" : shift, and go to state 40
    "(" : shift, and go to state 30
    "!" : shift, and go to state 28
    expr : go to state 66
    const : go to state 29
    var : go to state 24


state 27
    [ 43: expr => "~" . expr ]*
    no default action
    <NAME> : shift, and go to state 38
    <NUM> : shift, and go to state 41
    "+" : shift, and go to state 25
    "-" : shift, and go to state 26
    "~" : shift, and go to state 27
    "++" : shift, and go to state 39
    "--" : shift, and go to state 40
    "(" : shift, and go to state 30
    "!" : shift, and go to state 28
    expr : go to state 67
    const : go to state 29
    var : go to state 24


state 28
    [ 44: expr => "!" . expr ]*
    no default action
    <NAME> : shift, and go to state 38
    <NUM> : shift, and go to state 41
    "+" : shift, and go to state 25
    "-" : shift, and go to state 26
    "~" : shift, and go to state 27
    "++" : shift, and go to state 39
    "--" : shift, and go to state 40
    "(" : shift, and go to state 30
    "!" : shift, and go to state 28
    expr : go to state 68
    const : go to state 29
    var : go to state 24


state 29
    [ 45: expr => const . ]*
    default action: reduce with rule 45 (expr)


state 30
    [ 46: expr => "(" . expr ")" ]*
    no default action
    <NAME> : shift, and go to state 38
    <NUM> : shift, and go to state 41
    "+" : shift, and go to state 25
    "-" : shift, and go to state 26
    "~" : shift, and go to state 27
    "++" : shift, and go to state 39
    "--" : shift, and go to state 40
    "(" : shift, and go to state 30
    "!" : shift, and go to state 28
    expr : go to state 69
    const : go to state 29
    var : go to state 24


state 31
    [ 77: var => "++" var . ]*
    [ 24: expr => var . aoptr expr ]*
    [ 48: expr => var . ]*
    [ 49: expr => var . "++" ]*
    [ 50: expr => var . "--" ]*
    default action: reduce with rule 48 (expr)
    "++" : shift, and go to state 63
    "--" : shift, and go to state 64
    "=" : reduce with rule 77 (var)
    "+=" : reduce with rule 77 (var)
    "-=" : reduce with rule 77 (var)
    "*=" : reduce with rule 77 (var)
    "/=" : reduce with rule 77 (var)
    "&=" : reduce with rule 77 (var)
    "|=" : reduce with rule 77 (var)
    "^=" : reduce with rule 77 (var)
    ">>=" : reduce with rule 77 (var)
    "<<=" : reduce with rule 77 (var)
    "%=" : reduce with rule 77 (var)
    ")" : reduce with rule 77 (var)
    "," : reduce with rule 77 (var)
    ";" : reduce with rule 77 (var)
    aoptr : go to state 62


state 32
    [ 78: var => "--" var . ]*
    [ 24: expr => var . aoptr expr ]*
    [ 48: expr => var . ]*
    [ 49: expr => var . "++" ]*
    [ 50: expr => var . "--" ]*
    default action: reduce with rule 48 (expr)
    "++" : shift, and go to state 63
    "--" : shift, and go to state 64
    "=" : reduce with rule 78 (var)
    "+=" : reduce with rule 78 (var)
    "-=" : reduce with rule 78 (var)
    "*=" : reduce with rule 78 (var)
    "/=" : reduce with rule 78 (var)
    "&=" : reduce with rule 78 (var)
    "|=" : reduce with rule 78 (var)
    "^=" : reduce with rule 78 (var)
    ">>=" : reduce with rule 78 (var)
    "<<=" : reduce with rule 78 (var)
    "%=" : reduce with rule 78 (var)
    ")" : reduce with rule 78 (var)
    "," : reduce with rule 78 (var)
    ";" : reduce with rule 78 (var)
    aoptr : go to state 62


state 33
    [ 4: topstmt => "function" "(" argdeflist . ")" "{" stmtlist "}" ]*
    no default action
    ")" : shift, and go to state 70


state 34
    [ 5: argdeflist => neargdeflist . ]*
    [ 7: neargdeflist => neargdeflist . "," <NAME> ]*
    default action: reduce with rule 5 (argdeflist)
    "," : shift, and go to state 71


state 35
    [ 8: neargdeflist => <NAME> . ]*
    default action: reduce with rule 8 (neargdeflist)


state 36
    [ 9: stmtlist => stmtlist stmt . ]*
    default action: reduce with rule 9 (stmtlist)


state 37
    [ 23: exprlist => expr . ]*
    [ 25: expr => expr . "?" expr ":" expr ]*
    [ 26: expr => expr . "||" expr ]*
    [ 27: expr => expr . "&&" expr ]*
    [ 28: expr => expr . "|" expr ]*
    [ 29: expr => expr . "^" expr ]*
    [ 30: expr => expr . "&" expr ]*
    [ 31: expr => expr . coptr expr ]*
    [ 32: expr => expr . ">>" expr ]*
    [ 33: expr => expr . "<<" expr ]*
    [ 34: expr => expr . ">>>" expr ]*
    [ 35: expr => expr . "+" expr ]*
    [ 36: expr => expr . "-" expr ]*
    [ 37: expr => expr . "*" expr ]*
    [ 38: expr => expr . "/" expr ]*
    [ 39: expr => expr . "%" expr ]*
    [ 40: expr => expr . "**" expr ]*
    [ 47: expr => expr . "(" arglist ")" ]*
    [ 76: var => expr . "[" exprlist "]" ]*
    default action: reduce with rule 23 (exprlist)
    "+" : shift, and go to state 54
    "-" : shift, and go to state 55
    "*" : shift, and go to state 56
    "/" : shift, and go to state 57
    "**" : shift, and go to state 59
    "?" : shift, and go to state 44
    "%" : shift, and go to state 58
    ">" : shift, and go to state 7
    "<" : shift, and go to state 8
    ">=" : shift, and go to state 9
    "<=" : shift, and go to state 10
    "==" : shift, and go to state 11
    "!=" : shift, and go to state 12
    "&" : shift, and go to state 49
    "|" : shift, and go to state 47
    "^" : shift, and go to state 48
    "<<" : shift, and go to state 52
    ">>" : shift, and go to state 51
    ">>>" : shift, and go to state 53
    "(" : shift, and go to state 60
    "[" : shift, and go to state 61
    "&&" : shift, and go to state 46
    "||" : shift, and go to state 45
    coptr : go to state 50


state 38
    [ 75: var => <NAME> . ]*
    default action: reduce with rule 75 (var)


state 39
    [ 77: var => "++" . var ]*
    no default action
    <NAME> : shift, and go to state 38
    <NUM> : shift, and go to state 41
    "+" : shift, and go to state 25
    "-" : shift, and go to state 26
    "~" : shift, and go to state 27
    "++" : shift, and go to state 39
    "--" : shift, and go to state 40
    "(" : shift, and go to state 30
    "!" : shift, and go to state 28
    expr : go to state 74
    const : go to state 29
    var : go to state 73


state 40
    [ 78: var => "--" . var ]*
    no default action
    <NAME> : shift, and go to state 38
    <NUM> : shift, and go to state 41
    "+" : shift, and go to state 25
    "-" : shift, and go to state 26
    "~" : shift, and go to state 27
    "++" : shift, and go to state 39
    "--" : shift, and go to state 40
    "(" : shift, and go to state 30
    "!" : shift, and go to state 28
    expr : go to state 74
    const : go to state 29
    var : go to state 75


state 41
    [ 74: const => <NUM> . ]*
    default action: reduce with rule 74 (const)


state 42
    [ 68: arglist => narglist . possibleComma ]*
    [ 70: narglist => narglist . "," expr ]*
    default action: reduce with rule 73 (possibleComma)
    "," : shift, and go to state 77
    possibleComma : go to state 76


state 43
    [ 71: narglist => expr . ]*
    [ 25: expr => expr . "?" expr ":" expr ]*
    [ 26: expr => expr . "||" expr ]*
    [ 27: expr => expr . "&&" expr ]*
    [ 28: expr => expr . "|" expr ]*
    [ 29: expr => expr . "^" expr ]*
    [ 30: expr => expr . "&" expr ]*
    [ 31: expr => expr . coptr expr ]*
    [ 32: expr => expr . ">>" expr ]*
    [ 33: expr => expr . "<<" expr ]*
    [ 34: expr => expr . ">>>" expr ]*
    [ 35: expr => expr . "+" expr ]*
    [ 36: expr => expr . "-" expr ]*
    [ 37: expr => expr . "*" expr ]*
    [ 38: expr => expr . "/" expr ]*
    [ 39: expr => expr . "%" expr ]*
    [ 40: expr => expr . "**" expr ]*
    [ 47: expr => expr . "(" arglist ")" ]*
    [ 76: var => expr . "[" exprlist "]" ]*
    default action: reduce with rule 71 (narglist)
    "+" : shift, and go to state 54
    "-" : shift, and go to state 55
    "*" : shift, and go to state 56
    "/" : shift, and go to state 57
    "**" : shift, and go to state 59
    "?" : shift, and go to state 44
    "%" : shift, and go to state 58
    ">" : shift, and go to state 7
    "<" : shift, and go to state 8
    ">=" : shift, and go to state 9
    "<=" : shift, and go to state 10
    "==" : shift, and go to state 11
    "!=" : shift, and go to state 12
    "&" : shift, and go to state 49
    "|" : shift, and go to state 47
    "^" : shift, and go to state 48
    "<<" : shift, and go to state 52
    ">>" : shift, and go to state 51
    ">>>" : shift, and go to state 53
    "(" : shift, and go to state 60
    "[" : shift, and go to state 61
    "&&" : shift, and go to state 46
    "||" : shift, and go to state 45
    coptr : go to state 50


state 44
    [ 25: expr => expr "?" . expr ":" expr ]*
    no default action
    <NAME> : shift, and go to state 38
    <NUM> : shift, and go to state 41
    "+" : shift, and go to state 25
    "-" : shift, and go to state 26
    "~" : shift, and go to state 27
    "++" : shift, and go to state 39
    "--" : shift, and go to state 40
    "(" : shift, and go to state 30
    "!" : shift, and go to state 28
    expr : go to state 78
    const : go to state 29
    var : go to state 24


state 45
    [ 26: expr => expr "||" . expr ]*
    no default action
    <NAME> : shift, and go to state 38
    <NUM> : shift, and go to state 41
    "+" : shift, and go to state 25
    "-" : shift, and go to state 26
    "~" : shift, and go to state 27
    "++" : shift, and go to state 39
    "--" : shift, and go to state 40
    "(" : shift, and go to state 30
    "!" : shift, and go to state 28
    expr : go to state 79
    const : go to state 29
    var : go to state 24


state 46
    [ 27: expr => expr "&&" . expr ]*
    no default action
    <NAME> : shift, and go to state 38
    <NUM> : shift, and go to state 41
    "+" : shift, and go to state 25
    "-" : shift, and go to state 26
    "~" : shift, and go to state 27
    "++" : shift, and go to state 39
    "--" : shift, and go to state 40
    "(" : shift, and go to state 30
    "!" : shift, and go to state 28
    expr : go to state 80
    const : go to state 29
    var : go to state 24


state 47
    [ 28: expr => expr "|" . expr ]*
    no default action
    <NAME> : shift, and go to state 38
    <NUM> : shift, and go to state 41
    "+" : shift, and go to state 25
    "-" : shift, and go to state 26
    "~" : shift, and go to state 27
    "++" : shift, and go to state 39
    "--" : shift, and go to state 40
    "(" : shift, and go to state 30
    "!" : shift, and go to state 28
    expr : go to state 81
    const : go to state 29
    var : go to state 24


state 48
    [ 29: expr => expr "^" . expr ]*
    no default action
    <NAME> : shift, and go to state 38
    <NUM> : shift, and go to state 41
    "+" : shift, and go to state 25
    "-" : shift, and go to state 26
    "~" : shift, and go to state 27
    "++" : shift, and go to state 39
    "--" : shift, and go to state 40
    "(" : shift, and go to state 30
    "!" : shift, and go to state 28
    expr : go to state 82
    const : go to state 29
    var : go to state 24


state 49
    [ 30: expr => expr "&" . expr ]*
    no default action
    <NAME> : shift, and go to state 38
    <NUM> : shift, and go to state 41
    "+" : shift, and go to state 25
    "-" : shift, and go to state 26
    "~" : shift, and go to state 27
    "++" : shift, and go to state 39
    "--" : shift, and go to state 40
    "(" : shift, and go to state 30
    "!" : shift, and go to state 28
    expr : go to state 83
    const : go to state 29
    var : go to state 24


state 50
    [ 31: expr => expr coptr . expr ]*
    no default action
    <NAME> : shift, and go to state 38
    <NUM> : shift, and go to state 41
    "+" : shift, and go to state 25
    "-" : shift, and go to state 26
    "~" : shift, and go to state 27
    "++" : shift, and go to state 39
    "--" : shift, and go to state 40
    "(" : shift, and go to state 30
    "!" : shift, and go to state 28
    expr : go to state 84
    const : go to state 29
    var : go to state 24


state 51
    [ 32: expr => expr ">>" . expr ]*
    no default action
    <NAME> : shift, and go to state 38
    <NUM> : shift, and go to state 41
    "+" : shift, and go to state 25
    "-" : shift, and go to state 26
    "~" : shift, and go to state 27
    "++" : shift, and go to state 39
    "--" : shift, and go to state 40
    "(" : shift, and go to state 30
    "!" : shift, and go to state 28
    expr : go to state 85
    const : go to state 29
    var : go to state 24


state 52
    [ 33: expr => expr "<<" . expr ]*
    no default action
    <NAME> : shift, and go to state 38
    <NUM> : shift, and go to state 41
    "+" : shift, and go to state 25
    "-" : shift, and go to state 26
    "~" : shift, and go to state 27
    "++" : shift, and go to state 39
    "--" : shift, and go to state 40
    "(" : shift, and go to state 30
    "!" : shift, and go to state 28
    expr : go to state 86
    const : go to state 29
    var : go to state 24


state 53
    [ 34: expr => expr ">>>" . expr ]*
    no default action
    <NAME> : shift, and go to state 38
    <NUM> : shift, and go to state 41
    "+" : shift, and go to state 25
    "-" : shift, and go to state 26
    "~" : shift, and go to state 27
    "++" : shift, and go to state 39
    "--" : shift, and go to state 40
    "(" : shift, and go to state 30
    "!" : shift, and go to state 28
    expr : go to state 87
    const : go to state 29
    var : go to state 24


state 54
    [ 35: expr => expr "+" . expr ]*
    no default action
    <NAME> : shift, and go to state 38
    <NUM> : shift, and go to state 41
    "+" : shift, and go to state 25
    "-" : shift, and go to state 26
    "~" : shift, and go to state 27
    "++" : shift, and go to state 39
    "--" : shift, and go to state 40
    "(" : shift, and go to state 30
    "!" : shift, and go to state 28
    expr : go to state 88
    const : go to state 29
    var : go to state 24


state 55
    [ 36: expr => expr "-" . expr ]*
    no default action
    <NAME> : shift, and go to state 38
    <NUM> : shift, and go to state 41
    "+" : shift, and go to state 25
    "-" : shift, and go to state 26
    "~" : shift, and go to state 27
    "++" : shift, and go to state 39
    "--" : shift, and go to state 40
    "(" : shift, and go to state 30
    "!" : shift, and go to state 28
    expr : go to state 89
    const : go to state 29
    var : go to state 24


state 56
    [ 37: expr => expr "*" . expr ]*
    no default action
    <NAME> : shift, and go to state 38
    <NUM> : shift, and go to state 41
    "+" : shift, and go to state 25
    "-" : shift, and go to state 26
    "~" : shift, and go to state 27
    "++" : shift, and go to state 39
    "--" : shift, and go to state 40
    "(" : shift, and go to state 30
    "!" : shift, and go to state 28
    expr : go to state 90
    const : go to state 29
    var : go to state 24


state 57
    [ 38: expr => expr "/" . expr ]*
    no default action
    <NAME> : shift, and go to state 38
    <NUM> : shift, and go to state 41
    "+" : shift, and go to state 25
    "-" : shift, and go to state 26
    "~" : shift, and go to state 27
    "++" : shift, and go to state 39
    "--" : shift, and go to state 40
    "(" : shift, and go to state 30
    "!" : shift, and go to state 28
    expr : go to state 91
    const : go to state 29
    var : go to state 24


state 58
    [ 39: expr => expr "%" . expr ]*
    no default action
    <NAME> : shift, and go to state 38
    <NUM> : shift, and go to state 41
    "+" : shift, and go to state 25
    "-" : shift, and go to state 26
    "~" : shift, and go to state 27
    "++" : shift, and go to state 39
    "--" : shift, and go to state 40
    "(" : shift, and go to state 30
    "!" : shift, and go to state 28
    expr : go to state 92
    const : go to state 29
    var : go to state 24


state 59
    [ 40: expr => expr "**" . expr ]*
    no default action
    <NAME> : shift, and go to state 38
    <NUM> : shift, and go to state 41
    "+" : shift, and go to state 25
    "-" : shift, and go to state 26
    "~" : shift, and go to state 27
    "++" : shift, and go to state 39
    "--" : shift, and go to state 40
    "(" : shift, and go to state 30
    "!" : shift, and go to state 28
    expr : go to state 93
    const : go to state 29
    var : go to state 24


state 60
    [ 47: expr => expr "(" . arglist ")" ]*
    default action: reduce with rule 69 (arglist)
    <NAME> : shift, and go to state 38
    <NUM> : shift, and go to state 41
    "+" : shift, and go to state 25
    "-" : shift, and go to state 26
    "~" : shift, and go to state 27
    "++" : shift, and go to state 39
    "--" : shift, and go to state 40
    "(" : shift, and go to state 30
    "!" : shift, and go to state 28
    expr : go to state 43
    arglist : go to state 94
    narglist : go to state 42
    const : go to state 29
    var : go to state 24


state 61
    [ 76: var => expr "[" . exprlist "]" ]*
    no default action
    <NAME> : shift, and go to state 38
    <NUM> : shift, and go to state 41
    "+" : shift, and go to state 25
    "-" : shift, and go to state 26
    "~" : shift, and go to state 27
    "++" : shift, and go to state 39
    "--" : shift, and go to state 40
    "(" : shift, and go to state 30
    "!" : shift, and go to state 28
    exprlist : go to state 95
    expr : go to state 37
    const : go to state 29
    var : go to state 24


state 62
    [ 24: expr => var aoptr . expr ]*
    no default action
    <NAME> : shift, and go to state 38
    <NUM> : shift, and go to state 41
    "+" : shift, and go to state 25
    "-" : shift, and go to state 26
    "~" : shift, and go to state 27
    "++" : shift, and go to state 39
    "--" : shift, and go to state 40
    "(" : shift, and go to state 30
    "!" : shift, and go to state 28
    expr : go to state 96
    const : go to state 29
    var : go to state 24


state 63
    [ 49: expr => var "++" . ]*
    default action: reduce with rule 49 (expr)


state 64
    [ 50: expr => var "--" . ]*
    default action: reduce with rule 50 (expr)


state 65
    [ 41: expr => "+" expr . ]*
    [ 25: expr => expr . "?" expr ":" expr ]*
    [ 26: expr => expr . "||" expr ]*
    [ 27: expr => expr . "&&" expr ]*
    [ 28: expr => expr . "|" expr ]*
    [ 29: expr => expr . "^" expr ]*
    [ 30: expr => expr . "&" expr ]*
    [ 31: expr => expr . coptr expr ]*
    [ 32: expr => expr . ">>" expr ]*
    [ 33: expr => expr . "<<" expr ]*
    [ 34: expr => expr . ">>>" expr ]*
    [ 35: expr => expr . "+" expr ]*
    [ 36: expr => expr . "-" expr ]*
    [ 37: expr => expr . "*" expr ]*
    [ 38: expr => expr . "/" expr ]*
    [ 39: expr => expr . "%" expr ]*
    [ 40: expr => expr . "**" expr ]*
    [ 47: expr => expr . "(" arglist ")" ]*
    [ 76: var => expr . "[" exprlist "]" ]*
    default action: reduce with rule 41 (expr)
    "(" : shift, and go to state 60
    "[" : shift, and go to state 61
    coptr : go to state 50


state 66
    [ 42: expr => "-" expr . ]*
    [ 25: expr => expr . "?" expr ":" expr ]*
    [ 26: expr => expr . "||" expr ]*
    [ 27: expr => expr . "&&" expr ]*
    [ 28: expr => expr . "|" expr ]*
    [ 29: expr => expr . "^" expr ]*
    [ 30: expr => expr . "&" expr ]*
    [ 31: expr => expr . coptr expr ]*
    [ 32: expr => expr . ">>" expr ]*
    [ 33: expr => expr . "<<" expr ]*
    [ 34: expr => expr . ">>>" expr ]*
    [ 35: expr => expr . "+" expr ]*
    [ 36: expr => expr . "-" expr ]*
    [ 37: expr => expr . "*" expr ]*
    [ 38: expr => expr . "/" expr ]*
    [ 39: expr => expr . "%" expr ]*
    [ 40: expr => expr . "**" expr ]*
    [ 47: expr => expr . "(" arglist ")" ]*
    [ 76: var => expr . "[" exprlist "]" ]*
    default action: reduce with rule 42 (expr)
    "(" : shift, and go to state 60
    "[" : shift, and go to state 61
    coptr : go to state 50


state 67
    [ 43: expr => "~" expr . ]*
    [ 25: expr => expr . "?" expr ":" expr ]*
    [ 26: expr => expr . "||" expr ]*
    [ 27: expr => expr . "&&" expr ]*
    [ 28: expr => expr . "|" expr ]*
    [ 29: expr => expr . "^" expr ]*
    [ 30: expr => expr . "&" expr ]*
    [ 31: expr => expr . coptr expr ]*
    [ 32: expr => expr . ">>" expr ]*
    [ 33: expr => expr . "<<" expr ]*
    [ 34: expr => expr . ">>>" expr ]*
    [ 35: expr => expr . "+" expr ]*
    [ 36: expr => expr . "-" expr ]*
    [ 37: expr => expr . "*" expr ]*
    [ 38: expr => expr . "/" expr ]*
    [ 39: expr => expr . "%" expr ]*
    [ 40: expr => expr . "**" expr ]*
    [ 47: expr => expr . "(" arglist ")" ]*
    [ 76: var => expr . "[" exprlist "]" ]*
    default action: reduce with rule 43 (expr)
    "+" : shift, and go to state 54
    "-" : shift, and go to state 55
    "*" : shift, and go to state 56
    "/" : shift, and go to state 57
    "**" : shift, and go to state 59
    "%" : shift, and go to state 58
    ">" : shift, and go to state 7
    "<" : shift, and go to state 8
    ">=" : shift, and go to state 9
    "<=" : shift, and go to state 10
    "==" : shift, and go to state 11
    "!=" : shift, and go to state 12
    "<<" : shift, and go to state 52
    ">>" : shift, and go to state 51
    ">>>" : shift, and go to state 53
    "(" : shift, and go to state 60
    "[" : shift, and go to state 61
    coptr : go to state 50


state 68
    [ 44: expr => "!" expr . ]*
    [ 25: expr => expr . "?" expr ":" expr ]*
    [ 26: expr => expr . "||" expr ]*
    [ 27: expr => expr . "&&" expr ]*
    [ 28: expr => expr . "|" expr ]*
    [ 29: expr => expr . "^" expr ]*
    [ 30: expr => expr . "&" expr ]*
    [ 31: expr => expr . coptr expr ]*
    [ 32: expr => expr . ">>" expr ]*
    [ 33: expr => expr . "<<" expr ]*
    [ 34: expr => expr . ">>>" expr ]*
    [ 35: expr => expr . "+" expr ]*
    [ 36: expr => expr . "-" expr ]*
    [ 37: expr => expr . "*" expr ]*
    [ 38: expr => expr . "/" expr ]*
    [ 39: expr => expr . "%" expr ]*
    [ 40: expr => expr . "**" expr ]*
    [ 47: expr => expr . "(" arglist ")" ]*
    [ 76: var => expr . "[" exprlist "]" ]*
    default action: reduce with rule 44 (expr)
    "+" : shift, and go to state 54
    "-" : shift, and go to state 55
    "*" : shift, and go to state 56
    "/" : shift, and go to state 57
    "**" : shift, and go to state 59
    "%" : shift, and go to state 58
    ">" : shift, and go to state 7
    "<" : shift, and go to state 8
    ">=" : shift, and go to state 9
    "<=" : shift, and go to state 10
    "==" : shift, and go to state 11
    "!=" : shift, and go to state 12
    "&" : shift, and go to state 49
    "|" : shift, and go to state 47
    "^" : shift, and go to state 48
    "<<" : shift, and go to state 52
    ">>" : shift, and go to state 51
    ">>>" : shift, and go to state 53
    "(" : shift, and go to state 60
    "[" : shift, and go to state 61
    coptr : go to state 50


state 69
    [ 46: expr => "(" expr . ")" ]*
    [ 25: expr => expr . "?" expr ":" expr ]*
    [ 26: expr => expr . "||" expr ]*
    [ 27: expr => expr . "&&" expr ]*
    [ 28: expr => expr . "|" expr ]*
    [ 29: expr => expr . "^" expr ]*
    [ 30: expr => expr . "&" expr ]*
    [ 31: expr => expr . coptr expr ]*
    [ 32: expr => expr . ">>" expr ]*
    [ 33: expr => expr . "<<" expr ]*
    [ 34: expr => expr . ">>>" expr ]*
    [ 35: expr => expr . "+" expr ]*
    [ 36: expr => expr . "-" expr ]*
    [ 37: expr => expr . "*" expr ]*
    [ 38: expr => expr . "/" expr ]*
    [ 39: expr => expr . "%" expr ]*
    [ 40: expr => expr . "**" expr ]*
    [ 47: expr => expr . "(" arglist ")" ]*
    [ 76: var => expr . "[" exprlist "]" ]*
    no default action
    "+" : shift, and go to state 54
    "-" : shift, and go to state 55
    "*" : shift, and go to state 56
    "/" : shift, and go to state 57
    "**" : shift, and go to state 59
    "?" : shift, and go to state 44
    "%" : shift, and go to state 58
    ">" : shift, and go to state 7
    "<" : shift, and go to state 8
    ">=" : shift, and go to state 9
    "<=" : shift, and go to state 10
    "==" : shift, and go to state 11
    "!=" : shift, and go to state 12
    "&" : shift, and go to state 49
    "|" : shift, and go to state 47
    "^" : shift, and go to state 48
    "<<" : shift, and go to state 52
    ">>" : shift, and go to state 51
    ">>>" : shift, and go to state 53
    "(" : shift, and go to state 60
    ")" : shift, and go to state 97
    "[" : shift, and go to state 61
    "&&" : shift, and go to state 46
    "||" : shift, and go to state 45
    coptr : go to state 50


state 70
    [ 4: topstmt => "function" "(" argdeflist ")" . "{" stmtlist "}" ]*
    no default action
    "{" : shift, and go to state 98


state 71
    [ 7: neargdeflist => neargdeflist "," . <NAME> ]*
    no default action
    <NAME> : shift, and go to state 99


state 72
    [ 22: exprlist => exprlist "," . expr ]*
    no default action
    <NAME> : shift, and go to state 38
    <NUM> : shift, and go to state 41
    "+" : shift, and go to state 25
    "-" : shift, and go to state 26
    "~" : shift, and go to state 27
    "++" : shift, and go to state 39
    "--" : shift, and go to state 40
    "(" : shift, and go to state 30
    "!" : shift, and go to state 28
    expr : go to state 107
    const : go to state 29
    var : go to state 24


state 73
    [ 77: var => "++" var . ]*
    [ 24: expr => var . aoptr expr ]*
    [ 48: expr => var . ]*
    [ 49: expr => var . "++" ]*
    [ 50: expr => var . "--" ]*
    default action: reduce with rule 48 (expr)
    "++" : shift, and go to state 63
    "--" : shift, and go to state 64
    ":" : reduce with rule 77 (var)
    "=" : reduce with rule 77 (var)
    "+=" : reduce with rule 77 (var)
    "-=" : reduce with rule 77 (var)
    "*=" : reduce with rule 77 (var)
    "/=" : reduce with rule 77 (var)
    "&=" : reduce with rule 77 (var)
    "|=" : reduce with rule 77 (var)
    "^=" : reduce with rule 77 (var)
    ">>=" : reduce with rule 77 (var)
    "<<=" : reduce with rule 77 (var)
    "%=" : reduce with rule 77 (var)
    ")" : reduce with rule 77 (var)
    "]" : reduce with rule 77 (var)
    "," : reduce with rule 77 (var)
    ";" : reduce with rule 77 (var)
    aoptr : go to state 62


state 74
    [ 76: var => expr . "[" exprlist "]" ]*
    [ 25: expr => expr . "?" expr ":" expr ]*
    [ 26: expr => expr . "||" expr ]*
    [ 27: expr => expr . "&&" expr ]*
    [ 28: expr => expr . "|" expr ]*
    [ 29: expr => expr . "^" expr ]*
    [ 30: expr => expr . "&" expr ]*
    [ 31: expr => expr . coptr expr ]*
    [ 32: expr => expr . ">>" expr ]*
    [ 33: expr => expr . "<<" expr ]*
    [ 34: expr => expr . ">>>" expr ]*
    [ 35: expr => expr . "+" expr ]*
    [ 36: expr => expr . "-" expr ]*
    [ 37: expr => expr . "*" expr ]*
    [ 38: expr => expr . "/" expr ]*
    [ 39: expr => expr . "%" expr ]*
    [ 40: expr => expr . "**" expr ]*
    [ 47: expr => expr . "(" arglist ")" ]*
    no default action
    "+" : shift, and go to state 54
    "-" : shift, and go to state 55
    "*" : shift, and go to state 56
    "/" : shift, and go to state 57
    "**" : shift, and go to state 59
    "?" : shift, and go to state 44
    "%" : shift, and go to state 58
    ">" : shift, and go to state 7
    "<" : shift, and go to state 8
    ">=" : shift, and go to state 9
    "<=" : shift, and go to state 10
    "==" : shift, and go to state 11
    "!=" : shift, and go to state 12
    "&" : shift, and go to state 49
    "|" : shift, and go to state 47
    "^" : shift, and go to state 48
    "<<" : shift, and go to state 52
    ">>" : shift, and go to state 51
    ">>>" : shift, and go to state 53
    "(" : shift, and go to state 60
    "[" : shift, and go to state 61
    "&&" : shift, and go to state 46
    "||" : shift, and go to state 45
    coptr : go to state 50


state 75
    [ 78: var => "--" var . ]*
    [ 24: expr => var . aoptr expr ]*
    [ 48: expr => var . ]*
    [ 49: expr => var . "++" ]*
    [ 50: expr => var . "--" ]*
    default action: reduce with rule 48 (expr)
    "++" : shift, and go to state 63
    "--" : shift, and go to state 64
    ":" : reduce with rule 78 (var)
    "=" : reduce with rule 78 (var)
    "+=" : reduce with rule 78 (var)
    "-=" : reduce with rule 78 (var)
    "*=" : reduce with rule 78 (var)
    "/=" : reduce with rule 78 (var)
    "&=" : reduce with rule 78 (var)
    "|=" : reduce with rule 78 (var)
    "^=" : reduce with rule 78 (var)
    ">>=" : reduce with rule 78 (var)
    "<<=" : reduce with rule 78 (var)
    "%=" : reduce with rule 78 (var)
    ")" : reduce with rule 78 (var)
    "]" : reduce with rule 78 (var)
    "," : reduce with rule 78 (var)
    ";" : reduce with rule 78 (var)
    aoptr : go to state 62


state 76
    [ 68: arglist => narglist possibleComma . ]*
    default action: reduce with rule 68 (arglist)


state 77
    [ 70: narglist => narglist "," . expr ]*
    [ 72: possibleComma => "," . ]*
    default action: reduce with rule 72 (possibleComma)
    <NAME> : shift, and go to state 38
    <NUM> : shift, and go to state 41
    "+" : shift, and go to state 25
    "-" : shift, and go to state 26
    "~" : shift, and go to state 27
    "++" : shift, and go to state 39
    "--" : shift, and go to state 40
    "(" : shift, and go to state 30
    "!" : shift, and go to state 28
    expr : go to state 108
    const : go to state 29
    var : go to state 24


state 78
    [ 25: expr => expr "?" expr . ":" expr ]*
    [ 25: expr => expr . "?" expr ":" expr ]*
    [ 26: expr => expr . "||" expr ]*
    [ 27: expr => expr . "&&" expr ]*
    [ 28: expr => expr . "|" expr ]*
    [ 29: expr => expr . "^" expr ]*
    [ 30: expr => expr . "&" expr ]*
    [ 31: expr => expr . coptr expr ]*
    [ 32: expr => expr . ">>" expr ]*
    [ 33: expr => expr . "<<" expr ]*
    [ 34: expr => expr . ">>>" expr ]*
    [ 35: expr => expr . "+" expr ]*
    [ 36: expr => expr . "-" expr ]*
    [ 37: expr => expr . "*" expr ]*
    [ 38: expr => expr . "/" expr ]*
    [ 39: expr => expr . "%" expr ]*
    [ 40: expr => expr . "**" expr ]*
    [ 47: expr => expr . "(" arglist ")" ]*
    [ 76: var => expr . "[" exprlist "]" ]*
    no default action
    "+" : shift, and go to state 54
    "-" : shift, and go to state 55
    "*" : shift, and go to state 56
    "/" : shift, and go to state 57
    "**" : shift, and go to state 59
    "?" : shift, and go to state 44
    ":" : shift, and go to state 109
    "%" : shift, and go to state 58
    ">" : shift, and go to state 7
    "<" : shift, and go to state 8
    ">=" : shift, and go to state 9
    "<=" : shift, and go to state 10
    "==" : shift, and go to state 11
    "!=" : shift, and go to state 12
    "&" : shift, and go to state 49
    "|" : shift, and go to state 47
    "^" : shift, and go to state 48
    "<<" : shift, and go to state 52
    ">>" : shift, and go to state 51
    ">>>" : shift, and go to state 53
    "(" : shift, and go to state 60
    "[" : shift, and go to state 61
    "&&" : shift, and go to state 46
    "||" : shift, and go to state 45
    coptr : go to state 50


state 79
    [ 26: expr => expr "||" expr . ]*
    [ 25: expr => expr . "?" expr ":" expr ]*
    [ 26: expr => expr . "||" expr ]*
    [ 27: expr => expr . "&&" expr ]*
    [ 28: expr => expr . "|" expr ]*
    [ 29: expr => expr . "^" expr ]*
    [ 30: expr => expr . "&" expr ]*
    [ 31: expr => expr . coptr expr ]*
    [ 32: expr => expr . ">>" expr ]*
    [ 33: expr => expr . "<<" expr ]*
    [ 34: expr => expr . ">>>" expr ]*
    [ 35: expr => expr . "+" expr ]*
    [ 36: expr => expr . "-" expr ]*
    [ 37: expr => expr . "*" expr ]*
    [ 38: expr => expr . "/" expr ]*
    [ 39: expr => expr . "%" expr ]*
    [ 40: expr => expr . "**" expr ]*
    [ 47: expr => expr . "(" arglist ")" ]*
    [ 76: var => expr . "[" exprlist "]" ]*
    default action: reduce with rule 26 (expr)
    "+" : shift, and go to state 54
    "-" : shift, and go to state 55
    "*" : shift, and go to state 56
    "/" : shift, and go to state 57
    "**" : shift, and go to state 59
    "%" : shift, and go to state 58
    ">" : shift, and go to state 7
    "<" : shift, and go to state 8
    ">=" : shift, and go to state 9
    "<=" : shift, and go to state 10
    "==" : shift, and go to state 11
    "!=" : shift, and go to state 12
    "&" : shift, and go to state 49
    "|" : shift, and go to state 47
    "^" : shift, and go to state 48
    "<<" : shift, and go to state 52
    ">>" : shift, and go to state 51
    ">>>" : shift, and go to state 53
    "(" : shift, and go to state 60
    "[" : shift, and go to state 61
    "&&" : shift, and go to state 46
    coptr : go to state 50


state 80
    [ 27: expr => expr "&&" expr . ]*
    [ 25: expr => expr . "?" expr ":" expr ]*
    [ 26: expr => expr . "||" expr ]*
    [ 27: expr => expr . "&&" expr ]*
    [ 28: expr => expr . "|" expr ]*
    [ 29: expr => expr . "^" expr ]*
    [ 30: expr => expr . "&" expr ]*
    [ 31: expr => expr . coptr expr ]*
    [ 32: expr => expr . ">>" expr ]*
    [ 33: expr => expr . "<<" expr ]*
    [ 34: expr => expr . ">>>" expr ]*
    [ 35: expr => expr . "+" expr ]*
    [ 36: expr => expr . "-" expr ]*
    [ 37: expr => expr . "*" expr ]*
    [ 38: expr => expr . "/" expr ]*
    [ 39: expr => expr . "%" expr ]*
    [ 40: expr => expr . "**" expr ]*
    [ 47: expr => expr . "(" arglist ")" ]*
    [ 76: var => expr . "[" exprlist "]" ]*
    default action: reduce with rule 27 (expr)
    "+" : shift, and go to state 54
    "-" : shift, and go to state 55
    "*" : shift, and go to state 56
    "/" : shift, and go to state 57
    "**" : shift, and go to state 59
    "%" : shift, and go to state 58
    ">" : shift, and go to state 7
    "<" : shift, and go to state 8
    ">=" : shift, and go to state 9
    "<=" : shift, and go to state 10
    "==" : shift, and go to state 11
    "!=" : shift, and go to state 12
    "&" : shift, and go to state 49
    "|" : shift, and go to state 47
    "^" : shift, and go to state 48
    "<<" : shift, and go to state 52
    ">>" : shift, and go to state 51
    ">>>" : shift, and go to state 53
    "(" : shift, and go to state 60
    "[" : shift, and go to state 61
    coptr : go to state 50


state 81
    [ 28: expr => expr "|" expr . ]*
    [ 25: expr => expr . "?" expr ":" expr ]*
    [ 26: expr => expr . "||" expr ]*
    [ 27: expr => expr . "&&" expr ]*
    [ 28: expr => expr . "|" expr ]*
    [ 29: expr => expr . "^" expr ]*
    [ 30: expr => expr . "&" expr ]*
    [ 31: expr => expr . coptr expr ]*
    [ 32: expr => expr . ">>" expr ]*
    [ 33: expr => expr . "<<" expr ]*
    [ 34: expr => expr . ">>>" expr ]*
    [ 35: expr => expr . "+" expr ]*
    [ 36: expr => expr . "-" expr ]*
    [ 37: expr => expr . "*" expr ]*
    [ 38: expr => expr . "/" expr ]*
    [ 39: expr => expr . "%" expr ]*
    [ 40: expr => expr . "**" expr ]*
    [ 47: expr => expr . "(" arglist ")" ]*
    [ 76: var => expr . "[" exprlist "]" ]*
    default action: reduce with rule 28 (expr)
    "+" : shift, and go to state 54
    "-" : shift, and go to state 55
    "*" : shift, and go to state 56
    "/" : shift, and go to state 57
    "**" : shift, and go to state 59
    "%" : shift, and go to state 58
    ">" : shift, and go to state 7
    "<" : shift, and go to state 8
    ">=" : shift, and go to state 9
    "<=" : shift, and go to state 10
    "==" : shift, and go to state 11
    "!=" : shift, and go to state 12
    "&" : shift, and go to state 49
    "^" : shift, and go to state 48
    "<<" : shift, and go to state 52
    ">>" : shift, and go to state 51
    ">>>" : shift, and go to state 53
    "(" : shift, and go to state 60
    "[" : shift, and go to state 61
    coptr : go to state 50


state 82
    [ 29: expr => expr "^" expr . ]*
    [ 25: expr => expr . "?" expr ":" expr ]*
    [ 26: expr => expr . "||" expr ]*
    [ 27: expr => expr . "&&" expr ]*
    [ 28: expr => expr . "|" expr ]*
    [ 29: expr => expr . "^" expr ]*
    [ 30: expr => expr . "&" expr ]*
    [ 31: expr => expr . coptr expr ]*
    [ 32: expr => expr . ">>" expr ]*
    [ 33: expr => expr . "<<" expr ]*
    [ 34: expr => expr . ">>>" expr ]*
    [ 35: expr => expr . "+" expr ]*
    [ 36: expr => expr . "-" expr ]*
    [ 37: expr => expr . "*" expr ]*
    [ 38: expr => expr . "/" expr ]*
    [ 39: expr => expr . "%" expr ]*
    [ 40: expr => expr . "**" expr ]*
    [ 47: expr => expr . "(" arglist ")" ]*
    [ 76: var => expr . "[" exprlist "]" ]*
    default action: reduce with rule 29 (expr)
    "+" : shift, and go to state 54
    "-" : shift, and go to state 55
    "*" : shift, and go to state 56
    "/" : shift, and go to state 57
    "**" : shift, and go to state 59
    "%" : shift, and go to state 58
    ">" : shift, and go to state 7
    "<" : shift, and go to state 8
    ">=" : shift, and go to state 9
    "<=" : shift, and go to state 10
    "==" : shift, and go to state 11
    "!=" : shift, and go to state 12
    "&" : shift, and go to state 49
    "<<" : shift, and go to state 52
    ">>" : shift, and go to state 51
    ">>>" : shift, and go to state 53
    "(" : shift, and go to state 60
    "[" : shift, and go to state 61
    coptr : go to state 50


state 83
    [ 30: expr => expr "&" expr . ]*
    [ 25: expr => expr . "?" expr ":" expr ]*
    [ 26: expr => expr . "||" expr ]*
    [ 27: expr => expr . "&&" expr ]*
    [ 28: expr => expr . "|" expr ]*
    [ 29: expr => expr . "^" expr ]*
    [ 30: expr => expr . "&" expr ]*
    [ 31: expr => expr . coptr expr ]*
    [ 32: expr => expr . ">>" expr ]*
    [ 33: expr => expr . "<<" expr ]*
    [ 34: expr => expr . ">>>" expr ]*
    [ 35: expr => expr . "+" expr ]*
    [ 36: expr => expr . "-" expr ]*
    [ 37: expr => expr . "*" expr ]*
    [ 38: expr => expr . "/" expr ]*
    [ 39: expr => expr . "%" expr ]*
    [ 40: expr => expr . "**" expr ]*
    [ 47: expr => expr . "(" arglist ")" ]*
    [ 76: var => expr . "[" exprlist "]" ]*
    default action: reduce with rule 30 (expr)
    "+" : shift, and go to state 54
    "-" : shift, and go to state 55
    "*" : shift, and go to state 56
    "/" : shift, and go to state 57
    "**" : shift, and go to state 59
    "%" : shift, and go to state 58
    ">" : shift, and go to state 7
    "<" : shift, and go to state 8
    ">=" : shift, and go to state 9
    "<=" : shift, and go to state 10
    "==" : shift, and go to state 11
    "!=" : shift, and go to state 12
    "<<" : shift, and go to state 52
    ">>" : shift, and go to state 51
    ">>>" : shift, and go to state 53
    "(" : shift, and go to state 60
    "[" : shift, and go to state 61
    coptr : go to state 50


state 84
    [ 31: expr => expr coptr expr . ]*
    [ 25: expr => expr . "?" expr ":" expr ]*
    [ 26: expr => expr . "||" expr ]*
    [ 27: expr => expr . "&&" expr ]*
    [ 28: expr => expr . "|" expr ]*
    [ 29: expr => expr . "^" expr ]*
    [ 30: expr => expr . "&" expr ]*
    [ 31: expr => expr . coptr expr ]*
    [ 32: expr => expr . ">>" expr ]*
    [ 33: expr => expr . "<<" expr ]*
    [ 34: expr => expr . ">>>" expr ]*
    [ 35: expr => expr . "+" expr ]*
    [ 36: expr => expr . "-" expr ]*
    [ 37: expr => expr . "*" expr ]*
    [ 38: expr => expr . "/" expr ]*
    [ 39: expr => expr . "%" expr ]*
    [ 40: expr => expr . "**" expr ]*
    [ 47: expr => expr . "(" arglist ")" ]*
    [ 76: var => expr . "[" exprlist "]" ]*
    default action: reduce with rule 31 (expr)
    "+" : shift, and go to state 54
    "-" : shift, and go to state 55
    "*" : shift, and go to state 56
    "/" : shift, and go to state 57
    "**" : shift, and go to state 59
    "%" : shift, and go to state 58
    "<<" : shift, and go to state 52
    ">>" : shift, and go to state 51
    ">>>" : shift, and go to state 53
    "(" : shift, and go to state 60
    "[" : shift, and go to state 61
    coptr : go to state 50


state 85
    [ 32: expr => expr ">>" expr . ]*
    [ 25: expr => expr . "?" expr ":" expr ]*
    [ 26: expr => expr . "||" expr ]*
    [ 27: expr => expr . "&&" expr ]*
    [ 28: expr => expr . "|" expr ]*
    [ 29: expr => expr . "^" expr ]*
    [ 30: expr => expr . "&" expr ]*
    [ 31: expr => expr . coptr expr ]*
    [ 32: expr => expr . ">>" expr ]*
    [ 33: expr => expr . "<<" expr ]*
    [ 34: expr => expr . ">>>" expr ]*
    [ 35: expr => expr . "+" expr ]*
    [ 36: expr => expr . "-" expr ]*
    [ 37: expr => expr . "*" expr ]*
    [ 38: expr => expr . "/" expr ]*
    [ 39: expr => expr . "%" expr ]*
    [ 40: expr => expr . "**" expr ]*
    [ 47: expr => expr . "(" arglist ")" ]*
    [ 76: var => expr . "[" exprlist "]" ]*
    default action: reduce with rule 32 (expr)
    "+" : shift, and go to state 54
    "-" : shift, and go to state 55
    "*" : shift, and go to state 56
    "/" : shift, and go to state 57
    "**" : shift, and go to state 59
    "%" : shift, and go to state 58
    "(" : shift, and go to state 60
    "[" : shift, and go to state 61
    coptr : go to state 50


state 86
    [ 33: expr => expr "<<" expr . ]*
    [ 25: expr => expr . "?" expr ":" expr ]*
    [ 26: expr => expr . "||" expr ]*
    [ 27: expr => expr . "&&" expr ]*
    [ 28: expr => expr . "|" expr ]*
    [ 29: expr => expr . "^" expr ]*
    [ 30: expr => expr . "&" expr ]*
    [ 31: expr => expr . coptr expr ]*
    [ 32: expr => expr . ">>" expr ]*
    [ 33: expr => expr . "<<" expr ]*
    [ 34: expr => expr . ">>>" expr ]*
    [ 35: expr => expr . "+" expr ]*
    [ 36: expr => expr . "-" expr ]*
    [ 37: expr => expr . "*" expr ]*
    [ 38: expr => expr . "/" expr ]*
    [ 39: expr => expr . "%" expr ]*
    [ 40: expr => expr . "**" expr ]*
    [ 47: expr => expr . "(" arglist ")" ]*
    [ 76: var => expr . "[" exprlist "]" ]*
    default action: reduce with rule 33 (expr)
    "+" : shift, and go to state 54
    "-" : shift, and go to state 55
    "*" : shift, and go to state 56
    "/" : shift, and go to state 57
    "**" : shift, and go to state 59
    "%" : shift, and go to state 58
    "(" : shift, and go to state 60
    "[" : shift, and go to state 61
    coptr : go to state 50


state 87
    [ 34: expr => expr ">>>" expr . ]*
    [ 25: expr => expr . "?" expr ":" expr ]*
    [ 26: expr => expr . "||" expr ]*
    [ 27: expr => expr . "&&" expr ]*
    [ 28: expr => expr . "|" expr ]*
    [ 29: expr => expr . "^" expr ]*
    [ 30: expr => expr . "&" expr ]*
    [ 31: expr => expr . coptr expr ]*
    [ 32: expr => expr . ">>" expr ]*
    [ 33: expr => expr . "<<" expr ]*
    [ 34: expr => expr . ">>>" expr ]*
    [ 35: expr => expr . "+" expr ]*
    [ 36: expr => expr . "-" expr ]*
    [ 37: expr => expr . "*" expr ]*
    [ 38: expr => expr . "/" expr ]*
    [ 39: expr => expr . "%" expr ]*
    [ 40: expr => expr . "**" expr ]*
    [ 47: expr => expr . "(" arglist ")" ]*
    [ 76: var => expr . "[" exprlist "]" ]*
    default action: reduce with rule 34 (expr)
    "+" : shift, and go to state 54
    "-" : shift, and go to state 55
    "*" : shift, and go to state 56
    "/" : shift, and go to state 57
    "**" : shift, and go to state 59
    "%" : shift, and go to state 58
    "(" : shift, and go to state 60
    "[" : shift, and go to state 61
    coptr : go to state 50


state 88
    [ 35: expr => expr "+" expr . ]*
    [ 25: expr => expr . "?" expr ":" expr ]*
    [ 26: expr => expr . "||" expr ]*
    [ 27: expr => expr . "&&" expr ]*
    [ 28: expr => expr . "|" expr ]*
    [ 29: expr => expr . "^" expr ]*
    [ 30: expr => expr . "&" expr ]*
    [ 31: expr => expr . coptr expr ]*
    [ 32: expr => expr . ">>" expr ]*
    [ 33: expr => expr . "<<" expr ]*
    [ 34: expr => expr . ">>>" expr ]*
    [ 35: expr => expr . "+" expr ]*
    [ 36: expr => expr . "-" expr ]*
    [ 37: expr => expr . "*" expr ]*
    [ 38: expr => expr . "/" expr ]*
    [ 39: expr => expr . "%" expr ]*
    [ 40: expr => expr . "**" expr ]*
    [ 47: expr => expr . "(" arglist ")" ]*
    [ 76: var => expr . "[" exprlist "]" ]*
    default action: reduce with rule 35 (expr)
    "*" : shift, and go to state 56
    "/" : shift, and go to state 57
    "**" : shift, and go to state 59
    "%" : shift, and go to state 58
    "(" : shift, and go to state 60
    "[" : shift, and go to state 61
    coptr : go to state 50


state 89
    [ 36: expr => expr "-" expr . ]*
    [ 25: expr => expr . "?" expr ":" expr ]*
    [ 26: expr => expr . "||" expr ]*
    [ 27: expr => expr . "&&" expr ]*
    [ 28: expr => expr . "|" expr ]*
    [ 29: expr => expr . "^" expr ]*
    [ 30: expr => expr . "&" expr ]*
    [ 31: expr => expr . coptr expr ]*
    [ 32: expr => expr . ">>" expr ]*
    [ 33: expr => expr . "<<" expr ]*
    [ 34: expr => expr . ">>>" expr ]*
    [ 35: expr => expr . "+" expr ]*
    [ 36: expr => expr . "-" expr ]*
    [ 37: expr => expr . "*" expr ]*
    [ 38: expr => expr . "/" expr ]*
    [ 39: expr => expr . "%" expr ]*
    [ 40: expr => expr . "**" expr ]*
    [ 47: expr => expr . "(" arglist ")" ]*
    [ 76: var => expr . "[" exprlist "]" ]*
    default action: reduce with rule 36 (expr)
    "*" : shift, and go to state 56
    "/" : shift, and go to state 57
    "**" : shift, and go to state 59
    "%" : shift, and go to state 58
    "(" : shift, and go to state 60
    "[" : shift, and go to state 61
    coptr : go to state 50


state 90
    [ 37: expr => expr "*" expr . ]*
    [ 25: expr => expr . "?" expr ":" expr ]*
    [ 26: expr => expr . "||" expr ]*
    [ 27: expr => expr . "&&" expr ]*
    [ 28: expr => expr . "|" expr ]*
    [ 29: expr => expr . "^" expr ]*
    [ 30: expr => expr . "&" expr ]*
    [ 31: expr => expr . coptr expr ]*
    [ 32: expr => expr . ">>" expr ]*
    [ 33: expr => expr . "<<" expr ]*
    [ 34: expr => expr . ">>>" expr ]*
    [ 35: expr => expr . "+" expr ]*
    [ 36: expr => expr . "-" expr ]*
    [ 37: expr => expr . "*" expr ]*
    [ 38: expr => expr . "/" expr ]*
    [ 39: expr => expr . "%" expr ]*
    [ 40: expr => expr . "**" expr ]*
    [ 47: expr => expr . "(" arglist ")" ]*
    [ 76: var => expr . "[" exprlist "]" ]*
    default action: reduce with rule 37 (expr)
    "**" : shift, and go to state 59
    "(" : shift, and go to state 60
    "[" : shift, and go to state 61
    coptr : go to state 50


state 91
    [ 38: expr => expr "/" expr . ]*
    [ 25: expr => expr . "?" expr ":" expr ]*
    [ 26: expr => expr . "||" expr ]*
    [ 27: expr => expr . "&&" expr ]*
    [ 28: expr => expr . "|" expr ]*
    [ 29: expr => expr . "^" expr ]*
    [ 30: expr => expr . "&" expr ]*
    [ 31: expr => expr . coptr expr ]*
    [ 32: expr => expr . ">>" expr ]*
    [ 33: expr => expr . "<<" expr ]*
    [ 34: expr => expr . ">>>" expr ]*
    [ 35: expr => expr . "+" expr ]*
    [ 36: expr => expr . "-" expr ]*
    [ 37: expr => expr . "*" expr ]*
    [ 38: expr => expr . "/" expr ]*
    [ 39: expr => expr . "%" expr ]*
    [ 40: expr => expr . "**" expr ]*
    [ 47: expr => expr . "(" arglist ")" ]*
    [ 76: var => expr . "[" exprlist "]" ]*
    default action: reduce with rule 38 (expr)
    "**" : shift, and go to state 59
    "(" : shift, and go to state 60
    "[" : shift, and go to state 61
    coptr : go to state 50


state 92
    [ 39: expr => expr "%" expr . ]*
    [ 25: expr => expr . "?" expr ":" expr ]*
    [ 26: expr => expr . "||" expr ]*
    [ 27: expr => expr . "&&" expr ]*
    [ 28: expr => expr . "|" expr ]*
    [ 29: expr => expr . "^" expr ]*
    [ 30: expr => expr . "&" expr ]*
    [ 31: expr => expr . coptr expr ]*
    [ 32: expr => expr . ">>" expr ]*
    [ 33: expr => expr . "<<" expr ]*
    [ 34: expr => expr . ">>>" expr ]*
    [ 35: expr => expr . "+" expr ]*
    [ 36: expr => expr . "-" expr ]*
    [ 37: expr => expr . "*" expr ]*
    [ 38: expr => expr . "/" expr ]*
    [ 39: expr => expr . "%" expr ]*
    [ 40: expr => expr . "**" expr ]*
    [ 47: expr => expr . "(" arglist ")" ]*
    [ 76: var => expr . "[" exprlist "]" ]*
    default action: reduce with rule 39 (expr)
    "**" : shift, and go to state 59
    "(" : shift, and go to state 60
    "[" : shift, and go to state 61
    coptr : go to state 50


state 93
    [ 40: expr => expr "**" expr . ]*
    [ 25: expr => expr . "?" expr ":" expr ]*
    [ 26: expr => expr . "||" expr ]*
    [ 27: expr => expr . "&&" expr ]*
    [ 28: expr => expr . "|" expr ]*
    [ 29: expr => expr . "^" expr ]*
    [ 30: expr => expr . "&" expr ]*
    [ 31: expr => expr . coptr expr ]*
    [ 32: expr => expr . ">>" expr ]*
    [ 33: expr => expr . "<<" expr ]*
    [ 34: expr => expr . ">>>" expr ]*
    [ 35: expr => expr . "+" expr ]*
    [ 36: expr => expr . "-" expr ]*
    [ 37: expr => expr . "*" expr ]*
    [ 38: expr => expr . "/" expr ]*
    [ 39: expr => expr . "%" expr ]*
    [ 40: expr => expr . "**" expr ]*
    [ 47: expr => expr . "(" arglist ")" ]*
    [ 76: var => expr . "[" exprlist "]" ]*
    default action: reduce with rule 40 (expr)
    "**" : shift, and go to state 59
    "(" : shift, and go to state 60
    "[" : shift, and go to state 61
    coptr : go to state 50


state 94
    [ 47: expr => expr "(" arglist . ")" ]*
    no default action
    ")" : shift, and go to state 110


state 95
    [ 76: var => expr "[" exprlist . "]" ]*
    [ 22: exprlist => exprlist . "," expr ]*
    no default action
    "]" : shift, and go to state 111
    "," : shift, and go to state 72


state 96
    [ 24: expr => var aoptr expr . ]*
    [ 25: expr => expr . "?" expr ":" expr ]*
    [ 26: expr => expr . "||" expr ]*
    [ 27: expr => expr . "&&" expr ]*
    [ 28: expr => expr . "|" expr ]*
    [ 29: expr => expr . "^" expr ]*
    [ 30: expr => expr . "&" expr ]*
    [ 31: expr => expr . coptr expr ]*
    [ 32: expr => expr . ">>" expr ]*
    [ 33: expr => expr . "<<" expr ]*
    [ 34: expr => expr . ">>>" expr ]*
    [ 35: expr => expr . "+" expr ]*
    [ 36: expr => expr . "-" expr ]*
    [ 37: expr => expr . "*" expr ]*
    [ 38: expr => expr . "/" expr ]*
    [ 39: expr => expr . "%" expr ]*
    [ 40: expr => expr . "**" expr ]*
    [ 47: expr => expr . "(" arglist ")" ]*
    [ 76: var => expr . "[" exprlist "]" ]*
    default action: reduce with rule 24 (expr)
    "+" : shift, and go to state 54
    "-" : shift, and go to state 55
    "*" : shift, and go to state 56
    "/" : shift, and go to state 57
    "**" : shift, and go to state 59
    "?" : shift, and go to state 44
    "%" : shift, and go to state 58
    ">" : shift, and go to state 7
    "<" : shift, and go to state 8
    ">=" : shift, and go to state 9
    "<=" : shift, and go to state 10
    "==" : shift, and go to state 11
    "!=" : shift, and go to state 12
    "&" : shift, and go to state 49
    "|" : shift, and go to state 47
    "^" : shift, and go to state 48
    "<<" : shift, and go to state 52
    ">>" : shift, and go to state 51
    ">>>" : shift, and go to state 53
    "(" : shift, and go to state 60
    "[" : shift, and go to state 61
    "&&" : shift, and go to state 46
    "||" : shift, and go to state 45
    coptr : go to state 50


state 97
    [ 46: expr => "(" expr ")" . ]*
    default action: reduce with rule 46 (expr)


state 98
    [ 4: topstmt => "function" "(" argdeflist ")" "{" . stmtlist "}" ]*
    default action: reduce with rule 10 (stmtlist)
    stmtlist : go to state 112


state 99
    [ 7: neargdeflist => neargdeflist "," <NAME> . ]*
    default action: reduce with rule 7 (neargdeflist)


state 100
    [ 11: stmt => ";" . ]*
    default action: reduce with rule 11 (stmt)


state 101
    [ 12: stmt => "{" . stmtlist "}" ]*
    default action: reduce with rule 10 (stmtlist)
    stmtlist : go to state 113


state 102
    [ 13: stmt => exprlist . ";" ]*
    [ 22: exprlist => exprlist . "," expr ]*
    no default action
    "," : shift, and go to state 72
    ";" : shift, and go to state 114


state 103
    [ 14: stmt => "if" . "(" exprlist ")" stmt elsestmt ]*
    no default action
    "(" : shift, and go to state 115


state 104
    [ 15: stmt => "while" . "(" exprlist ")" stmt ]*
    no default action
    "(" : shift, and go to state 116


state 105
    [ 16: stmt => "do" . stmt "while" "(" exprlist ")" ";" ]*
    no default action
    <NAME> : shift, and go to state 38
    <NUM> : shift, and go to state 41
    "+" : shift, and go to state 25
    "-" : shift, and go to state 26
    "~" : shift, and go to state 27
    "++" : shift, and go to state 39
    "--" : shift, and go to state 40
    "(" : shift, and go to state 30
    "{" : shift, and go to state 101
    ";" : shift, and go to state 100
    "!" : shift, and go to state 28
    "if" : shift, and go to state 103
    "while" : shift, and go to state 104
    "do" : shift, and go to state 105
    "for" : shift, and go to state 106
    stmt : go to state 117
    exprlist : go to state 102
    expr : go to state 37
    const : go to state 29
    var : go to state 24


state 106
    [ 17: stmt => "for" . "(" forexpr ";" forexpr ";" forexpr ")" stmt ]*
    no default action
    "(" : shift, and go to state 118


state 107
    [ 22: exprlist => exprlist "," expr . ]*
    [ 25: expr => expr . "?" expr ":" expr ]*
    [ 26: expr => expr . "||" expr ]*
    [ 27: expr => expr . "&&" expr ]*
    [ 28: expr => expr . "|" expr ]*
    [ 29: expr => expr . "^" expr ]*
    [ 30: expr => expr . "&" expr ]*
    [ 31: expr => expr . coptr expr ]*
    [ 32: expr => expr . ">>" expr ]*
    [ 33: expr => expr . "<<" expr ]*
    [ 34: expr => expr . ">>>" expr ]*
    [ 35: expr => expr . "+" expr ]*
    [ 36: expr => expr . "-" expr ]*
    [ 37: expr => expr . "*" expr ]*
    [ 38: expr => expr . "/" expr ]*
    [ 39: expr => expr . "%" expr ]*
    [ 40: expr => expr . "**" expr ]*
    [ 47: expr => expr . "(" arglist ")" ]*
    [ 76: var => expr . "[" exprlist "]" ]*
    default action: reduce with rule 22 (exprlist)
    "+" : shift, and go to state 54
    "-" : shift, and go to state 55
    "*" : shift, and go to state 56
    "/" : shift, and go to state 57
    "**" : shift, and go to state 59
    "?" : shift, and go to state 44
    "%" : shift, and go to state 58
    ">" : shift, and go to state 7
    "<" : shift, and go to state 8
    ">=" : shift, and go to state 9
    "<=" : shift, and go to state 10
    "==" : shift, and go to state 11
    "!=" : shift, and go to state 12
    "&" : shift, and go to state 49
    "|" : shift, and go to state 47
    "^" : shift, and go to state 48
    "<<" : shift, and go to state 52
    ">>" : shift, and go to state 51
    ">>>" : shift, and go to state 53
    "(" : shift, and go to state 60
    "[" : shift, and go to state 61
    "&&" : shift, and go to state 46
    "||" : shift, and go to state 45
    coptr : go to state 50


state 108
    [ 70: narglist => narglist "," expr . ]*
    [ 25: expr => expr . "?" expr ":" expr ]*
    [ 26: expr => expr . "||" expr ]*
    [ 27: expr => expr . "&&" expr ]*
    [ 28: expr => expr . "|" expr ]*
    [ 29: expr => expr . "^" expr ]*
    [ 30: expr => expr . "&" expr ]*
    [ 31: expr => expr . coptr expr ]*
    [ 32: expr => expr . ">>" expr ]*
    [ 33: expr => expr . "<<" expr ]*
    [ 34: expr => expr . ">>>" expr ]*
    [ 35: expr => expr . "+" expr ]*
    [ 36: expr => expr . "-" expr ]*
    [ 37: expr => expr . "*" expr ]*
    [ 38: expr => expr . "/" expr ]*
    [ 39: expr => expr . "%" expr ]*
    [ 40: expr => expr . "**" expr ]*
    [ 47: expr => expr . "(" arglist ")" ]*
    [ 76: var => expr . "[" exprlist "]" ]*
    default action: reduce with rule 70 (narglist)
    "+" : shift, and go to state 54
    "-" : shift, and go to state 55
    "*" : shift, and go to state 56
    "/" : shift, and go to state 57
    "**" : shift, and go to state 59
    "?" : shift, and go to state 44
    "%" : shift, and go to state 58
    ">" : shift, and go to state 7
    "<" : shift, and go to state 8
    ">=" : shift, and go to state 9
    "<=" : shift, and go to state 10
    "==" : shift, and go to state 11
    "!=" : shift, and go to state 12
    "&" : shift, and go to state 49
    "|" : shift, and go to state 47
    "^" : shift, and go to state 48
    "<<" : shift, and go to state 52
    ">>" : shift, and go to state 51
    ">>>" : shift, and go to state 53
    "(" : shift, and go to state 60
    "[" : shift, and go to state 61
    "&&" : shift, and go to state 46
    "||" : shift, and go to state 45
    coptr : go to state 50


state 109
    [ 25: expr => expr "?" expr ":" . expr ]*
    no default action
    <NAME> : shift, and go to state 38
    <NUM> : shift, and go to state 41
    "+" : shift, and go to state 25
    "-" : shift, and go to state 26
    "~" : shift, and go to state 27
    "++" : shift, and go to state 39
    "--" : shift, and go to state 40
    "(" : shift, and go to state 30
    "!" : shift, and go to state 28
    expr : go to state 119
    const : go to state 29
    var : go to state 24


state 110
    [ 47: expr => expr "(" arglist ")" . ]*
    default action: reduce with rule 47 (expr)


state 111
    [ 76: var => expr "[" exprlist "]" . ]*
    default action: reduce with rule 76 (var)


state 112
    [ 4: topstmt => "function" "(" argdeflist ")" "{" stmtlist . "}" ]*
    [ 9: stmtlist => stmtlist . stmt ]*
    no default action
    <NAME> : shift, and go to state 38
    <NUM> : shift, and go to state 41
    "+" : shift, and go to state 25
    "-" : shift, and go to state 26
    "~" : shift, and go to state 27
    "++" : shift, and go to state 39
    "--" : shift, and go to state 40
    "(" : shift, and go to state 30
    "{" : shift, and go to state 101
    "}" : shift, and go to state 120
    ";" : shift, and go to state 100
    "!" : shift, and go to state 28
    "if" : shift, and go to state 103
    "while" : shift, and go to state 104
    "do" : shift, and go to state 105
    "for" : shift, and go to state 106
    stmt : go to state 36
    exprlist : go to state 102
    expr : go to state 37
    const : go to state 29
    var : go to state 24


state 113
    [ 12: stmt => "{" stmtlist . "}" ]*
    [ 9: stmtlist => stmtlist . stmt ]*
    no default action
    <NAME> : shift, and go to state 38
    <NUM> : shift, and go to state 41
    "+" : shift, and go to state 25
    "-" : shift, and go to state 26
    "~" : shift, and go to state 27
    "++" : shift, and go to state 39
    "--" : shift, and go to state 40
    "(" : shift, and go to state 30
    "{" : shift, and go to state 101
    "}" : shift, and go to state 121
    ";" : shift, and go to state 100
    "!" : shift, and go to state 28
    "if" : shift, and go to state 103
    "while" : shift, and go to state 104
    "do" : shift, and go to state 105
    "for" : shift, and go to state 106
    stmt : go to state 36
    exprlist : go to state 102
    expr : go to state 37
    const : go to state 29
    var : go to state 24


state 114
    [ 13: stmt => exprlist ";" . ]*
    default action: reduce with rule 13 (stmt)


state 115
    [ 14: stmt => "if" "(" . exprlist ")" stmt elsestmt ]*
    no default action
    <NAME> : shift, and go to state 38
    <NUM> : shift, and go to state 41
    "+" : shift, and go to state 25
    "-" : shift, and go to state 26
    "~" : shift, and go to state 27
    "++" : shift, and go to state 39
    "--" : shift, and go to state 40
    "(" : shift, and go to state 30
    "!" : shift, and go to state 28
    exprlist : go to state 122
    expr : go to state 37
    const : go to state 29
    var : go to state 24


state 116
    [ 15: stmt => "while" "(" . exprlist ")" stmt ]*
    no default action
    <NAME> : shift, and go to state 38
    <NUM> : shift, and go to state 41
    "+" : shift, and go to state 25
    "-" : shift, and go to state 26
    "~" : shift, and go to state 27
    "++" : shift, and go to state 39
    "--" : shift, and go to state 40
    "(" : shift, and go to state 30
    "!" : shift, and go to state 28
    exprlist : go to state 123
    expr : go to state 37
    const : go to state 29
    var : go to state 24


state 117
    [ 16: stmt => "do" stmt . "while" "(" exprlist ")" ";" ]*
    no default action
    "while" : shift, and go to state 124


state 118
    [ 17: stmt => "for" "(" . forexpr ";" forexpr ";" forexpr ")" stmt ]*
    default action: reduce with rule 20 (forexpr)
    <NAME> : shift, and go to state 38
    <NUM> : shift, and go to state 41
    "+" : shift, and go to state 25
    "-" : shift, and go to state 26
    "~" : shift, and go to state 27
    "++" : shift, and go to state 39
    "--" : shift, and go to state 40
    "(" : shift, and go to state 30
    "!" : shift, and go to state 28
    forexpr : go to state 125
    exprlist : go to state 126
    expr : go to state 37
    const : go to state 29
    var : go to state 24


state 119
    [ 25: expr => expr "?" expr ":" expr . ]*
    [ 25: expr => expr . "?" expr ":" expr ]*
    [ 26: expr => expr . "||" expr ]*
    [ 27: expr => expr . "&&" expr ]*
    [ 28: expr => expr . "|" expr ]*
    [ 29: expr => expr . "^" expr ]*
    [ 30: expr => expr . "&" expr ]*
    [ 31: expr => expr . coptr expr ]*
    [ 32: expr => expr . ">>" expr ]*
    [ 33: expr => expr . "<<" expr ]*
    [ 34: expr => expr . ">>>" expr ]*
    [ 35: expr => expr . "+" expr ]*
    [ 36: expr => expr . "-" expr ]*
    [ 37: expr => expr . "*" expr ]*
    [ 38: expr => expr . "/" expr ]*
    [ 39: expr => expr . "%" expr ]*
    [ 40: expr => expr . "**" expr ]*
    [ 47: expr => expr . "(" arglist ")" ]*
    [ 76: var => expr . "[" exprlist "]" ]*
    default action: reduce with rule 25 (expr)
    "+" : shift, and go to state 54
    "-" : shift, and go to state 55
    "*" : shift, and go to state 56
    "/" : shift, and go to state 57
    "**" : shift, and go to state 59
    "%" : shift, and go to state 58
    ">" : shift, and go to state 7
    "<" : shift, and go to state 8
    ">=" : shift, and go to state 9
    "<=" : shift, and go to state 10
    "==" : shift, and go to state 11
    "!=" : shift, and go to state 12
    "&" : shift, and go to state 49
    "|" : shift, and go to state 47
    "^" : shift, and go to state 48
    "<<" : shift, and go to state 52
    ">>" : shift, and go to state 51
    ">>>" : shift, and go to state 53
    "(" : shift, and go to state 60
    "[" : shift, and go to state 61
    "&&" : shift, and go to state 46
    "||" : shift, and go to state 45
    coptr : go to state 50


state 120
    [ 4: topstmt => "function" "(" argdeflist ")" "{" stmtlist "}" . ]*
    default action: reduce with rule 4 (topstmt)


state 121
    [ 12: stmt => "{" stmtlist "}" . ]*
    default action: reduce with rule 12 (stmt)


state 122
    [ 14: stmt => "if" "(" exprlist . ")" stmt elsestmt ]*
    [ 22: exprlist => exprlist . "," expr ]*
    no default action
    ")" : shift, and go to state 127
    "," : shift, and go to state 72


state 123
    [ 15: stmt => "while" "(" exprlist . ")" stmt ]*
    [ 22: exprlist => exprlist . "," expr ]*
    no default action
    ")" : shift, and go to state 128
    "," : shift, and go to state 72


state 124
    [ 16: stmt => "do" stmt "while" . "(" exprlist ")" ";" ]*
    no default action
    "(" : shift, and go to state 129


state 125
    [ 17: stmt => "for" "(" forexpr . ";" forexpr ";" forexpr ")" stmt ]*
    no default action
    ";" : shift, and go to state 130


state 126
    [ 21: forexpr => exprlist . ]*
    [ 22: exprlist => exprlist . "," expr ]*
    default action: reduce with rule 21 (forexpr)
    "," : shift, and go to state 72


state 127
    [ 14: stmt => "if" "(" exprlist ")" . stmt elsestmt ]*
    no default action
    <NAME> : shift, and go to state 38
    <NUM> : shift, and go to state 41
    "+" : shift, and go to state 25
    "-" : shift, and go to state 26
    "~" : shift, and go to state 27
    "++" : shift, and go to state 39
    "--" : shift, and go to state 40
    "(" : shift, and go to state 30
    "{" : shift, and go to state 101
    ";" : shift, and go to state 100
    "!" : shift, and go to state 28
    "if" : shift, and go to state 103
    "while" : shift, and go to state 104
    "do" : shift, and go to state 105
    "for" : shift, and go to state 106
    stmt : go to state 131
    exprlist : go to state 102
    expr : go to state 37
    const : go to state 29
    var : go to state 24


state 128
    [ 15: stmt => "while" "(" exprlist ")" . stmt ]*
    no default action
    <NAME> : shift, and go to state 38
    <NUM> : shift, and go to state 41
    "+" : shift, and go to state 25
    "-" : shift, and go to state 26
    "~" : shift, and go to state 27
    "++" : shift, and go to state 39
    "--" : shift, and go to state 40
    "(" : shift, and go to state 30
    "{" : shift, and go to state 101
    ";" : shift, and go to state 100
    "!" : shift, and go to state 28
    "if" : shift, and go to state 103
    "while" : shift, and go to state 104
    "do" : shift, and go to state 105
    "for" : shift, and go to state 106
    stmt : go to state 132
    exprlist : go to state 102
    expr : go to state 37
    const : go to state 29
    var : go to state 24


state 129
    [ 16: stmt => "do" stmt "while" "(" . exprlist ")" ";" ]*
    no default action
    <NAME> : shift, and go to state 38
    <NUM> : shift, and go to state 41
    "+" : shift, and go to state 25
    "-" : shift, and go to state 26
    "~" : shift, and go to state 27
    "++" : shift, and go to state 39
    "--" : shift, and go to state 40
    "(" : shift, and go to state 30
    "!" : shift, and go to state 28
    exprlist : go to state 133
    expr : go to state 37
    const : go to state 29
    var : go to state 24


state 130
    [ 17: stmt => "for" "(" forexpr ";" . forexpr ";" forexpr ")" stmt ]*
    default action: reduce with rule 20 (forexpr)
    <NAME> : shift, and go to state 38
    <NUM> : shift, and go to state 41
    "+" : shift, and go to state 25
    "-" : shift, and go to state 26
    "~" : shift, and go to state 27
    "++" : shift, and go to state 39
    "--" : shift, and go to state 40
    "(" : shift, and go to state 30
    "!" : shift, and go to state 28
    forexpr : go to state 134
    exprlist : go to state 126
    expr : go to state 37
    const : go to state 29
    var : go to state 24


state 131
    [ 14: stmt => "if" "(" exprlist ")" stmt . elsestmt ]*
    default action: reduce with rule 18 (elsestmt)
    "else" : shift, and go to state 136
    elsestmt : go to state 135


state 132
    [ 15: stmt => "while" "(" exprlist ")" stmt . ]*
    default action: reduce with rule 15 (stmt)


state 133
    [ 16: stmt => "do" stmt "while" "(" exprlist . ")" ";" ]*
    [ 22: exprlist => exprlist . "," expr ]*
    no default action
    ")" : shift, and go to state 137
    "," : shift, and go to state 72


state 134
    [ 17: stmt => "for" "(" forexpr ";" forexpr . ";" forexpr ")" stmt ]*
    no default action
    ";" : shift, and go to state 138


state 135
    [ 14: stmt => "if" "(" exprlist ")" stmt elsestmt . ]*
    default action: reduce with rule 14 (stmt)


state 136
    [ 19: elsestmt => "else" . stmt ]*
    no default action
    <NAME> : shift, and go to state 38
    <NUM> : shift, and go to state 41
    "+" : shift, and go to state 25
    "-" : shift, and go to state 26
    "~" : shift, and go to state 27
    "++" : shift, and go to state 39
    "--" : shift, and go to state 40
    "(" : shift, and go to state 30
    "{" : shift, and go to state 101
    ";" : shift, and go to state 100
    "!" : shift, and go to state 28
    "if" : shift, and go to state 103
    "while" : shift, and go to state 104
    "do" : shift, and go to state 105
    "for" : shift, and go to state 106
    stmt : go to state 139
    exprlist : go to state 102
    expr : go to state 37
    const : go to state 29
    var : go to state 24


state 137
    [ 16: stmt => "do" stmt "while" "(" exprlist ")" . ";" ]*
    no default action
    ";" : shift, and go to state 140


state 138
    [ 17: stmt => "for" "(" forexpr ";" forexpr ";" . forexpr ")" stmt ]*
    default action: reduce with rule 20 (forexpr)
    <NAME> : shift, and go to state 38
    <NUM> : shift, and go to state 41
    "+" : shift, and go to state 25
    "-" : shift, and go to state 26
    "~" : shift, and go to state 27
    "++" : shift, and go to state 39
    "--" : shift, and go to state 40
    "(" : shift, and go to state 30
    "!" : shift, and go to state 28
    forexpr : go to state 141
    exprlist : go to state 126
    expr : go to state 37
    const : go to state 29
    var : go to state 24


state 139
    [ 19: elsestmt => "else" stmt . ]*
    default action: reduce with rule 19 (elsestmt)


state 140
    [ 16: stmt => "do" stmt "while" "(" exprlist ")" ";" . ]*
    default action: reduce with rule 16 (stmt)


state 141
    [ 17: stmt => "for" "(" forexpr ";" forexpr ";" forexpr . ")" stmt ]*
    no default action
    ")" : shift, and go to state 142


state 142
    [ 17: stmt => "for" "(" forexpr ";" forexpr ";" forexpr ")" . stmt ]*
    no default action
    <NAME> : shift, and go to state 38
    <NUM> : shift, and go to state 41
    "+" : shift, and go to state 25
    "-" : shift, and go to state 26
    "~" : shift, and go to state 27
    "++" : shift, and go to state 39
    "--" : shift, and go to state 40
    "(" : shift, and go to state 30
    "{" : shift, and go to state 101
    ";" : shift, and go to state 100
    "!" : shift, and go to state 28
    "if" : shift, and go to state 103
    "while" : shift, and go to state 104
    "do" : shift, and go to state 105
    "for" : shift, and go to state 106
    stmt : go to state 143
    exprlist : go to state 102
    expr : go to state 37
    const : go to state 29
    var : go to state 24


state 143
    [ 17: stmt => "for" "(" forexpr ";" forexpr ";" forexpr ")" stmt . ]*
    default action: reduce with rule 17 (stmt)


