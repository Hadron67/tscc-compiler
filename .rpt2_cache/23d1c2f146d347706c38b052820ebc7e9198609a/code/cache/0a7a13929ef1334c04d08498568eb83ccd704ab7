{"code":"var Rule = (function () {\r\n    function Rule(g, lhs, action, rhs, index, line) {\r\n        this.g = g;\r\n        this.lhs = lhs;\r\n        this.action = action;\r\n        this.rhs = rhs;\r\n        this.index = index;\r\n        this.line = line;\r\n        this.pr = -1;\r\n        this.vars = null;\r\n    }\r\n    Rule.prototype.toString = function (marker) {\r\n        var ret = this.index + ': ' + this.g.nts[this.lhs].sym + ' =>';\r\n        for (var i = 0; i < this.rhs.length; i++) {\r\n            var r = this.rhs[i];\r\n            if (marker === i) {\r\n                ret += ' .';\r\n            }\r\n            if (this.g.isToken(r)) {\r\n                ret += ' \"' + this.g.tokens[r].sym + '\"';\r\n            }\r\n            else {\r\n                ret += ' ' + this.g.nts[r - this.g.tokenCount].sym;\r\n            }\r\n        }\r\n        if (marker === this.rhs.length) {\r\n            ret += ' .';\r\n        }\r\n        return ret;\r\n    };\r\n    return Rule;\r\n}());\r\nexport { Rule };\r\nvar Grammar = (function () {\r\n    function Grammar() {\r\n        this.tokens = [];\r\n        this.tokenCount = 0;\r\n        this.nts = [];\r\n        this.rules = [];\r\n        this.toString = function (opt) {\r\n            if (opt === void 0) { opt = {}; }\r\n            opt = opt || {};\r\n            var endl = opt.endl || '\\n';\r\n            var escape = opt.escape || false;\r\n            var ret = '';\r\n            this.forEachRule(function (lhs, rule) {\r\n                var s = rule.toString();\r\n                ret += s + '\\n';\r\n            });\r\n            if (opt.firstSets) {\r\n                for (var i = 0; i < this.nts.length; i++) {\r\n                    var s = this.nts[i];\r\n                    ret += 'First(' + s.sym + ') = { ' + s.firstSet.toString(this) + ' }';\r\n                    ret += '\\n';\r\n                }\r\n            }\r\n            if (escape) {\r\n                ret = ret.replace(/</g, '&lt;').replace(/>/g, '&gt;');\r\n            }\r\n            return ret.replace(/\\n/g, endl);\r\n        };\r\n    }\r\n    Grammar.prototype.isToken = function (t) {\r\n        return t < this.tokenCount;\r\n    };\r\n    Grammar.prototype.forEachRule = function (cb) {\r\n        for (var i = 0; i < this.rules.length; i++) {\r\n            var rules = this.rules[i];\r\n            for (var j = 0; j < rules.length; j++) {\r\n                cb(i, rules[j]);\r\n            }\r\n        }\r\n    };\r\n    Grammar.prototype.forEachRuleOfNt = function (lhs, cb) {\r\n        var rules = this.rules[lhs];\r\n        for (var j = 0; j < rules.length; j++) {\r\n            if (cb(rules[j])) {\r\n                break;\r\n            }\r\n        }\r\n    };\r\n    Grammar.prototype.genFirstSets = function () {\r\n        var changed = true;\r\n        while (changed) {\r\n            changed = false;\r\n            for (var i = 0; i < this.nts.length; i++) {\r\n                var rules = this.rules[i];\r\n                var firstSet = this.nts[i].firstSet;\r\n                for (var j = 0; j < rules.length; j++) {\r\n                    var rule = rules[j];\r\n                    if (rule.rhs.length === 0) {\r\n                        changed = changed || firstSet.add(0);\r\n                    }\r\n                    else {\r\n                        for (var k = 0; k < rule.rhs.length; k++) {\r\n                            var ritem = rule.rhs[k];\r\n                            if (this.isToken(ritem)) {\r\n                                changed = changed || firstSet.add(ritem + 1);\r\n                                break;\r\n                            }\r\n                            else {\r\n                                if (i !== ritem) {\r\n                                    changed = changed || firstSet.union(this.nts[ritem - this.tokenCount].firstSet);\r\n                                }\r\n                                if (!firstSet.contains(0)) {\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    Grammar.prototype.findToken = function (t) {\r\n        for (var i = 0; i < this.tokenCount; i++) {\r\n            if (this.tokens[i].sym === t) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    };\r\n    return Grammar;\r\n}());\r\nexport { Grammar };\r\n//# sourceMappingURL=grammar.js.map","map":{"version":3,"file":"grammar.js","sourceRoot":"","sources":["../src/grammar/grammar.ts"],"names":[],"mappings":"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"}}
