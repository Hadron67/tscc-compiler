{"code":"import { State, EndAction } from './state';\r\nimport { DFA } from './dfa';\r\nimport { compile, compileRaw } from './compile';\r\nfunction lexerBuilder(regs) {\r\n    if (regs === void 0) { regs = {}; }\r\n    var stateCount = 0;\r\n    var actions = [];\r\n    var pr = 0;\r\n    function ns() {\r\n        var ret = new State();\r\n        ret.index = stateCount++;\r\n        return ret;\r\n    }\r\n    var head = ns();\r\n    return {\r\n        lexRule: function (reg, id, data, raw) {\r\n            var action = new EndAction();\r\n            action.priority = pr++;\r\n            action.id = id;\r\n            action.data = data || null;\r\n            var cpd = (!!raw ? compileRaw(reg, stateCount) : compile(reg, stateCount, regs));\r\n            stateCount += cpd.stateCount;\r\n            cpd.tail.endAction = action;\r\n            head.epsilonTo(cpd.result);\r\n            actions.push(action);\r\n        },\r\n        done: function () {\r\n            head.removeEpsilons();\r\n            var dhead = head.toDFA();\r\n            var ret = new DFA(dhead.states, actions);\r\n            return ret;\r\n        }\r\n    };\r\n}\r\nfunction lexer(defs, regs) {\r\n    var getdef;\r\n    if (typeof defs !== 'function') {\r\n        getdef = function () {\r\n            return defs.shift() || null;\r\n        };\r\n    }\r\n    else {\r\n        getdef = defs;\r\n    }\r\n    var bd = lexerBuilder(regs);\r\n    var def = getdef();\r\n    while (def !== null) {\r\n        bd.lexRule(def.regexp, def.id, def.data, def.raw);\r\n        def = getdef();\r\n    }\r\n    return bd.done();\r\n}\r\nexport { lexer, lexerBuilder };\r\n//# sourceMappingURL=pattern.js.map","map":{"version":3,"file":"pattern.js","sourceRoot":"","sources":["../src/lexer/pattern.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,KAAK,EAAC,SAAS,EAAE,MAAM,SAAS,CAAC;AAC1C,OAAO,EAAE,GAAG,EAAE,MAAM,OAAO,CAAC;AAC5B,OAAO,EAAE,OAAO,EAAC,UAAU,EAAE,MAAM,WAAW,CAAC;AAQ/C,sBAAyB,IAAkC;IAAlC,qBAAA,EAAA,SAAkC;IACvD,IAAI,UAAU,GAAG,CAAC,CAAC;IACnB,IAAI,OAAO,GAAG,EAAE,CAAC;IACjB,IAAI,EAAE,GAAG,CAAC,CAAC;IACX;QACI,IAAI,GAAG,GAAG,IAAI,KAAK,EAAK,CAAC;QACzB,GAAG,CAAC,KAAK,GAAG,UAAU,EAAE,CAAC;QACzB,MAAM,CAAC,GAAG,CAAC;IACf,CAAC;IACD,IAAI,IAAI,GAAG,EAAE,EAAE,CAAC;IAChB,MAAM,CAAC;QACH,OAAO,EAAE,UAAS,GAAG,EAAC,EAAE,EAAC,IAAI,EAAC,GAAG;YAC7B,IAAI,MAAM,GAAG,IAAI,SAAS,EAAK,CAAC;YAChC,MAAM,CAAC,QAAQ,GAAG,EAAE,EAAE,CAAC;YACvB,MAAM,CAAC,EAAE,GAAG,EAAE,CAAC;YACf,MAAM,CAAC,IAAI,GAAG,IAAI,IAAI,IAAI,CAAC;YAC3B,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,UAAU,CAAI,GAAG,EAAC,UAAU,CAAC,CAAC,CAAC,CAAC,OAAO,CAAI,GAAG,EAAC,UAAU,EAAC,IAAI,CAAC,CAAC,CAAC;YACpF,UAAU,IAAI,GAAG,CAAC,UAAU,CAAC;YAC7B,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC;YAC5B,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YAC3B,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACzB,CAAC;QACD,IAAI,EAAE;YACF,IAAI,CAAC,cAAc,EAAE,CAAC;YACtB,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;YACzB,IAAI,GAAG,GAAG,IAAI,GAAG,CAAI,KAAK,CAAC,MAAM,EAAC,OAAO,CAAC,CAAC;YAC3C,MAAM,CAAC,GAAG,CAAC;QACf,CAAC;KACJ,CAAC;AACN,CAAC;AAQD,eAAkB,IAAI,EAAC,IAAI;IACvB,IAAI,MAAM,CAAC;IACX,EAAE,CAAA,CAAC,OAAO,IAAI,KAAK,UAAU,CAAC,CAAA,CAAC;QAC3B,MAAM,GAAG;YACL,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,IAAI,CAAC;QAChC,CAAC,CAAA;IACL,CAAC;IACD,IAAI,CAAC,CAAC;QACF,MAAM,GAAG,IAAI,CAAC;IAClB,CAAC;IAED,IAAI,EAAE,GAAG,YAAY,CAAI,IAAI,CAAC,CAAC;IAC/B,IAAI,GAAG,GAAG,MAAM,EAAE,CAAC;IACnB,OAAM,GAAG,KAAK,IAAI,EAAC,CAAC;QAChB,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,EAAC,GAAG,CAAC,EAAE,EAAC,GAAG,CAAC,IAAI,EAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAC/C,GAAG,GAAG,MAAM,EAAE,CAAC;IACnB,CAAC;IACD,MAAM,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC;AACrB,CAAC;AAED,OAAO,EAAE,KAAK,EAAC,YAAY,EAAE,CAAC"}}
