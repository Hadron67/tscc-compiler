{"code":"var BSIZE = 32;\r\nvar BitSet = (function () {\r\n    function BitSet(_size) {\r\n        this._size = _size;\r\n        this._s = new Array(Math.ceil(_size / BSIZE));\r\n        for (var i = 0; i < this._s.length; i++) {\r\n            this._s[i] = 0;\r\n        }\r\n    }\r\n    BitSet.prototype.add = function (i) {\r\n        var block = Math.floor(i / BSIZE);\r\n        var offset = i - block * BSIZE;\r\n        var orig = this._s[block];\r\n        this._s[block] |= (1 << offset);\r\n        return orig !== this._s[block];\r\n    };\r\n    BitSet.prototype.addAll = function () {\r\n        for (var i = 0; i < this._s.length; i++) {\r\n            this._s[i] = ~0;\r\n        }\r\n    };\r\n    BitSet.prototype.remove = function (i) {\r\n        var block = Math.floor(i / BSIZE);\r\n        var offset = i - block * BSIZE;\r\n        var orig = this._s[block];\r\n        this._s[block] &= ~(1 << offset);\r\n        return orig !== this._s[block];\r\n    };\r\n    BitSet.prototype.removeAll = function () {\r\n        for (var i = 0; i < this._s.length; i++) {\r\n            this._s[i] = 0;\r\n        }\r\n    };\r\n    BitSet.prototype.contains = function (i) {\r\n        var block = Math.floor(i / BSIZE);\r\n        var offset = i - block * BSIZE;\r\n        return (this._s[block] & (1 << offset)) !== 0;\r\n    };\r\n    BitSet.prototype.union = function (set) {\r\n        var changed = false;\r\n        for (var i = 0; i < this._s.length; i++) {\r\n            var orig = this._s[i];\r\n            this._s[i] |= set._s[i];\r\n            changed = changed || (this._s[i] !== orig);\r\n        }\r\n        return changed;\r\n    };\r\n    BitSet.prototype.hasIntersection = function (set) {\r\n        for (var i = 0; i < this._s.length; i++) {\r\n            if ((this._s[i] & set._s[i]) !== 0) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    BitSet.prototype.equals = function (set) {\r\n        for (var i = 0; i < this._s.length; i++) {\r\n            if (this._s[i] !== set._s[i]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    BitSet.prototype.forEach = function (cb) {\r\n        for (var i = 0; i < this._size; i++) {\r\n            this.contains(i) && cb(i);\r\n        }\r\n    };\r\n    BitSet.prototype.hash = function () {\r\n        var ret = '';\r\n        for (var i = 0; i < this._s.length; i++) {\r\n            ret += this._s[i].toString(16) + '-';\r\n        }\r\n        return ret;\r\n    };\r\n    return BitSet;\r\n}());\r\nexport { BitSet };\r\n//# sourceMappingURL=bitset.js.map","map":{"version":3,"file":"bitset.js","sourceRoot":"","sources":["../src/util/bitset.ts"],"names":[],"mappings":"AACA,IAAM,KAAK,GAAG,EAAE,CAAC;AACjB;IAEI,gBAAoB,KAAa;QAAb,UAAK,GAAL,KAAK,CAAQ;QAC7B,IAAI,CAAC,EAAE,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC;QAC9C,GAAG,CAAA,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC,CAAC;YACpC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC;IACL,CAAC;IACM,oBAAG,GAAV,UAAW,CAAS;QAChB,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;QAClC,IAAI,MAAM,GAAG,CAAC,GAAG,KAAK,GAAG,KAAK,CAAC;QAC/B,IAAI,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;QAC1B,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC;QAChC,MAAM,CAAC,IAAI,KAAK,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;IACnC,CAAC;IACM,uBAAM,GAAb;QACI,GAAG,CAAA,CAAC,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC,CAAC;YAClC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QACpB,CAAC;IACL,CAAC;IACM,uBAAM,GAAb,UAAc,CAAS;QACnB,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;QAClC,IAAI,MAAM,GAAG,CAAC,GAAG,KAAK,GAAG,KAAK,CAAC;QAC/B,IAAI,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;QAC1B,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC;QACjC,MAAM,CAAC,IAAI,KAAK,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;IACnC,CAAC;IACM,0BAAS,GAAhB;QACI,GAAG,CAAA,CAAC,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC,CAAC;YAClC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC;IACL,CAAC;IACM,yBAAQ,GAAf,UAAgB,CAAS;QACrB,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;QAClC,IAAI,MAAM,GAAG,CAAC,GAAG,KAAK,GAAG,KAAK,CAAC;QAC/B,MAAM,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC;IAClD,CAAC;IACM,sBAAK,GAAZ,UAAa,GAAW;QACpB,IAAI,OAAO,GAAG,KAAK,CAAC;QACpB,GAAG,CAAA,CAAC,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC,CAAC;YAClC,IAAI,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACtB,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACxB,OAAO,GAAG,OAAO,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC;QAC/C,CAAC;QACD,MAAM,CAAC,OAAO,CAAC;IACnB,CAAC;IACM,gCAAe,GAAtB,UAAuB,GAAW;QAC9B,GAAG,CAAA,CAAC,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC,CAAC;YAClC,EAAE,CAAA,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAA,CAAC;gBAC/B,MAAM,CAAC,IAAI,CAAC;YAChB,CAAC;QACL,CAAC;QACD,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;IACM,uBAAM,GAAb,UAAc,GAAW;QACrB,GAAG,CAAA,CAAC,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC,CAAC;YAClC,EAAE,CAAA,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAA,CAAC;gBACzB,MAAM,CAAC,KAAK,CAAC;YACjB,CAAC;QACL,CAAC;QACD,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IACM,wBAAO,GAAd,UAAe,EAAsB;QACjC,GAAG,CAAA,CAAC,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,IAAI,CAAC,KAAK,EAAC,CAAC,EAAE,EAAC,CAAC;YAC9B,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;QAC9B,CAAC;IACL,CAAC;IACM,qBAAI,GAAX;QACI,IAAI,GAAG,GAAG,EAAE,CAAC;QACb,GAAG,CAAA,CAAC,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC,CAAC;YAClC,GAAG,IAAI,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;QACzC,CAAC;QACD,MAAM,CAAC,GAAG,CAAC;IACf,CAAC;IACL,aAAC;AAAD,CAAC,AA1ED,IA0EC"}}
