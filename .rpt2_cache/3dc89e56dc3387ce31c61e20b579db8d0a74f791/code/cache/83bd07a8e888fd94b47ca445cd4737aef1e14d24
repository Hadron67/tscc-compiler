{"code":"import { YYTAB } from '../util/common';\r\nimport { endl } from '../util/io';\r\nimport { Action } from './item-set';\r\nvar ParseTable = (function () {\r\n    function ParseTable(g, stateCount) {\r\n        this.g = g;\r\n        var tokenCount = g.tokenCount;\r\n        var ntCount = g.nts.length;\r\n        this.stateCount = stateCount;\r\n        this.shift = new Array(tokenCount * stateCount);\r\n        this.gotot = new Array(ntCount * stateCount);\r\n        for (var i = 0; i < this.shift.length; i++) {\r\n            this.shift[i] = null;\r\n        }\r\n        for (var i = 0; i < this.gotot.length; i++) {\r\n            this.gotot[i] = null;\r\n        }\r\n    }\r\n    ParseTable.prototype.lookupShift = function (state, token) {\r\n        return this.shift[this.g.tokenCount * state + token];\r\n    };\r\n    ParseTable.prototype.lookupGoto = function (state, nt) {\r\n        return this.gotot[this.g.nts.length * state + nt];\r\n    };\r\n    ParseTable.prototype.summary = function (doneList, os) {\r\n        var g = this.g;\r\n        var tokenCount = g.tokenCount;\r\n        var ntCount = g.nts.length;\r\n        var cela = this;\r\n        doneList.forEach(function (set) {\r\n            var i = set.stateIndex;\r\n            var shift = '';\r\n            var reduce = '';\r\n            var gotot = '';\r\n            os.writeln('state ' + i);\r\n            set.forEach(function (item) {\r\n                os.writeln(YYTAB + item.toString({ showTrailer: false }));\r\n            });\r\n            for (var j = 0; j < tokenCount; j++) {\r\n                var item = cela.lookupShift(i, j);\r\n                if (item !== null) {\r\n                    if (item.actionType === Action.SHIFT) {\r\n                        shift += YYTAB + '\"' + g.tokens[j].sym + '\" : ' + 'shift,and goto state ' + item.shift.stateIndex + endl;\r\n                    }\r\n                    else {\r\n                        reduce += YYTAB + '\"' + g.tokens[j].sym + '\" : ' + 'reduce with rule ' + item.rule.index + endl;\r\n                    }\r\n                }\r\n            }\r\n            for (var j = 0; j < ntCount; j++) {\r\n                var item = cela.lookupGoto(i, j);\r\n                if (item !== null) {\r\n                    gotot += YYTAB + '' + g.nts[j].sym + ' : ' + 'goto state ' + item.shift.stateIndex + endl;\r\n                }\r\n            }\r\n            os.writeln(shift + reduce + gotot);\r\n            os.writeln();\r\n        });\r\n    };\r\n    return ParseTable;\r\n}());\r\nexport { ParseTable };\r\n","map":{"mappings":""}}
