{"code":"import { GBuilder } from './gbuilder';\r\nimport { Assoc } from '../grammar/token-entry';\r\nimport { CompilationError as E } from '../util/E';\r\nvar T;\r\n(function (T) {\r\n    T[T[\"EOF\"] = 0] = \"EOF\";\r\n    T[T[\"NAME\"] = 1] = \"NAME\";\r\n    T[T[\"STRING\"] = 2] = \"STRING\";\r\n    T[T[\"TOKEN_DIR\"] = 3] = \"TOKEN_DIR\";\r\n    T[T[\"OPT\"] = 4] = \"OPT\";\r\n    T[T[\"BLOCK\"] = 5] = \"BLOCK\";\r\n    T[T[\"ARROW\"] = 6] = \"ARROW\";\r\n    T[T[\"EOL\"] = 7] = \"EOL\";\r\n    T[T[\"OR\"] = 8] = \"OR\";\r\n    T[T[\"TOKEN\"] = 9] = \"TOKEN\";\r\n    T[T[\"SEPERATOR\"] = 10] = \"SEPERATOR\";\r\n    T[T[\"LEFT_DIR\"] = 11] = \"LEFT_DIR\";\r\n    T[T[\"RIGHT_DIR\"] = 12] = \"RIGHT_DIR\";\r\n    T[T[\"NONASSOC_DIR\"] = 13] = \"NONASSOC_DIR\";\r\n    T[T[\"PREC_DIR\"] = 14] = \"PREC_DIR\";\r\n    T[T[\"REGEXP\"] = 15] = \"REGEXP\";\r\n    T[T[\"STATE_DIR\"] = 16] = \"STATE_DIR\";\r\n    T[T[\"LINE_COMMENT\"] = 17] = \"LINE_COMMENT\";\r\n    T[T[\"BLOCK_COMMENT\"] = 18] = \"BLOCK_COMMENT\";\r\n    T[T[\"OPEN_CURLY_BRA\"] = 19] = \"OPEN_CURLY_BRA\";\r\n    T[T[\"CLOSE_CURLY_BRA\"] = 20] = \"CLOSE_CURLY_BRA\";\r\n})(T || (T = {}));\r\n;\r\nvar tokenNames = [];\r\nfor (var tname in T) {\r\n    tokenNames[T[tname]] = tname;\r\n}\r\nvar Token = (function () {\r\n    function Token() {\r\n        this.val = null;\r\n    }\r\n    Token.prototype.clone = function () {\r\n        var t = new Token();\r\n        t.id = this.id;\r\n        t.line = this.line;\r\n        t.val = this.val;\r\n        return t;\r\n    };\r\n    return Token;\r\n}());\r\nfunction scan(opt) {\r\n    if (opt === void 0) { opt = {}; }\r\n    var highlight = !!opt.isHighlight;\r\n    var line = 1;\r\n    var stream = null;\r\n    var c = null;\r\n    function eof() {\r\n        return c === null;\r\n    }\r\n    function isBlank(c) {\r\n        return c == ' ' || c == '\\n' || c == '\\t';\r\n    }\r\n    function nc() {\r\n        if (c === '\\n') {\r\n            line++;\r\n        }\r\n        stream.next();\r\n        c = stream.peek();\r\n    }\r\n    function err(c1) {\r\n        var s1 = '';\r\n        if (eof()) {\r\n            s1 = 'unexpected end of file';\r\n        }\r\n        else {\r\n            s1 = 'unexpected character \"' + c + '\"';\r\n        }\r\n        if (c1) {\r\n            throw new E(s1 + ' after \"' + c1 + '\"', line);\r\n        }\r\n        else {\r\n            throw new E(s1, line);\r\n        }\r\n    }\r\n    function iss(s) {\r\n        var ii = 0;\r\n        while (ii < s.length) {\r\n            if (s.charAt(ii++) !== c) {\r\n                return false;\r\n            }\r\n            nc();\r\n        }\r\n        return true;\r\n    }\r\n    var escapes = {\r\n        'n': '\\n',\r\n        't': '\\t'\r\n    };\r\n    function escapeChar(regexp) {\r\n        var tc = c;\r\n        if (eof()) {\r\n            return '';\r\n        }\r\n        nc();\r\n        var ret = escapes[tc];\r\n        if (ret !== undefined) {\r\n            return ret;\r\n        }\r\n        else {\r\n            if (regexp) {\r\n                return '\\\\' + tc;\r\n            }\r\n            else {\r\n                if (tc === '\\\\') {\r\n                    return '\\\\';\r\n                }\r\n                else {\r\n                    return '\\\\' + tc;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    function handleString() {\r\n        var eos = c;\r\n        var ret = '';\r\n        nc();\r\n        while (c != eos) {\r\n            if (eof()) {\r\n                throw new E('unterminated string literal', line);\r\n            }\r\n            else if (c === '\\\\') {\r\n                nc();\r\n                ret += escapeChar(false);\r\n            }\r\n            else {\r\n                ret += c;\r\n                nc();\r\n            }\r\n        }\r\n        nc();\r\n        return ret;\r\n    }\r\n    function handleRegExp() {\r\n        var ret = '';\r\n        while (c !== '/') {\r\n            if (eof()) {\r\n                throw new E('unterminated regular expression literal', line);\r\n            }\r\n            else if (c === '\\\\') {\r\n                nc();\r\n                ret += escapeChar(true);\r\n            }\r\n            else {\r\n                ret += c;\r\n                nc();\r\n            }\r\n        }\r\n        nc();\r\n        return ret;\r\n    }\r\n    function next(token) {\r\n        token.val = null;\r\n        while (isBlank(c) && !eof()) {\r\n            nc();\r\n        }\r\n        token.line = line;\r\n        if (eof()) {\r\n            token.id = T.EOF;\r\n            return token;\r\n        }\r\n        lex: switch (c) {\r\n            case '%':\r\n                nc();\r\n                if (iss('token')) {\r\n                    token.id = T.TOKEN_DIR;\r\n                    break lex;\r\n                }\r\n                else if (iss('opt')) {\r\n                    token.id = T.OPT;\r\n                    break lex;\r\n                }\r\n                else if (iss('left')) {\r\n                    token.id = T.LEFT_DIR;\r\n                    break lex;\r\n                }\r\n                else if (iss('right')) {\r\n                    token.id = T.RIGHT_DIR;\r\n                    break lex;\r\n                }\r\n                else if (iss('nonassoc')) {\r\n                    token.id = T.NONASSOC_DIR;\r\n                    break lex;\r\n                }\r\n                else if (iss('prec')) {\r\n                    token.id = T.PREC_DIR;\r\n                    break lex;\r\n                }\r\n                else if (iss('state')) {\r\n                    token.id = T.STATE_DIR;\r\n                    break lex;\r\n                }\r\n                else if (c == '%') {\r\n                    nc();\r\n                    token.id = T.SEPERATOR;\r\n                    break lex;\r\n                }\r\n                err('%');\r\n            case '{':\r\n                nc();\r\n                if (highlight) {\r\n                    token.id = T.OPEN_CURLY_BRA;\r\n                    break lex;\r\n                }\r\n                else {\r\n                    token.id = T.BLOCK;\r\n                    token.val = '';\r\n                    var st = 1;\r\n                    while (st > 0) {\r\n                        if (eof()) {\r\n                            throw new E('unclosed block', line);\r\n                        }\r\n                        if (c == '{') {\r\n                            st++;\r\n                        }\r\n                        else if (c == '}') {\r\n                            st--;\r\n                        }\r\n                        token.val += c;\r\n                        nc();\r\n                    }\r\n                    break lex;\r\n                }\r\n            case '/':\r\n                nc();\r\n                if (c === '/') {\r\n                    nc();\r\n                    token.val = '//';\r\n                    while (c !== '\\n' && !eof()) {\r\n                        token.val += c;\r\n                        nc();\r\n                    }\r\n                    token.id = T.LINE_COMMENT;\r\n                    break lex;\r\n                }\r\n                else if (c === '*') {\r\n                    nc();\r\n                    token.val = '/*';\r\n                    while (!eof()) {\r\n                        if (c === '*') {\r\n                            nc();\r\n                            if (c === '/') {\r\n                                nc();\r\n                                break;\r\n                            }\r\n                            else if (eof()) {\r\n                                break;\r\n                            }\r\n                            else {\r\n                                token.val += '*';\r\n                            }\r\n                        }\r\n                        else {\r\n                            token.val += c;\r\n                            nc();\r\n                        }\r\n                    }\r\n                    token.id = T.BLOCK_COMMENT;\r\n                    break lex;\r\n                }\r\n                else {\r\n                    token.id = T.REGEXP;\r\n                    token.val = handleRegExp();\r\n                    break lex;\r\n                }\r\n            case '|':\r\n                nc();\r\n                token.id = T.OR;\r\n                break lex;\r\n            case ';':\r\n                nc();\r\n                token.id = T.EOL;\r\n                break lex;\r\n            case ':':\r\n                nc();\r\n                token.id = T.ARROW;\r\n                break lex;\r\n            case '-':\r\n                nc();\r\n                if (c == '>') {\r\n                    nc();\r\n                    token.id = T.ARROW;\r\n                    break lex;\r\n                }\r\n                err('-');\r\n            case '\\'':\r\n            case '\"':\r\n                token.id = T.STRING;\r\n                token.val = handleString();\r\n                break lex;\r\n            case '<':\r\n                nc();\r\n                token.id = T.TOKEN;\r\n                token.val = '';\r\n                while (c !== '>' && !eof()) {\r\n                    token.val += c;\r\n                    nc();\r\n                }\r\n                if (eof()) {\r\n                    throw new E('unexpected end of file: incomplete token literal', line);\r\n                }\r\n                nc();\r\n                if (token.val === '') {\r\n                    throw new E('unexpected empty token', line);\r\n                }\r\n                break lex;\r\n            default:\r\n                if (/[A-Za-z_$]/.test(c)) {\r\n                    token.id = T.NAME;\r\n                    token.val = c;\r\n                    nc();\r\n                    while (/[A-Za-z0-9_$]/.test(c) && !eof()) {\r\n                        token.val += c;\r\n                        nc();\r\n                    }\r\n                    break lex;\r\n                }\r\n                nc();\r\n                err();\r\n        }\r\n        ;\r\n    }\r\n    ;\r\n    return {\r\n        next: next,\r\n        init: function (s) {\r\n            stream = s;\r\n            c = s.peek();\r\n        }\r\n    };\r\n}\r\nfunction parse(scanner) {\r\n    var token = new Token();\r\n    var gb = new GBuilder();\r\n    function nt() {\r\n        scanner.next(token);\r\n    }\r\n    function expect(id) {\r\n        if (token.id !== id) {\r\n            throw new E('unexpected token \"' + tokenNames[token.id] + '\",expecting \"' + tokenNames[id] + '\"', token.line);\r\n        }\r\n        nt();\r\n    }\r\n    function file() {\r\n        options();\r\n        expect(T.SEPERATOR);\r\n        rules();\r\n        expect(T.EOF);\r\n    }\r\n    function prTokens(assoc) {\r\n        do {\r\n            if (token.id === T.STRING) {\r\n                gb.defineTokenPrec(token.val, assoc, false, token.line);\r\n            }\r\n            else if (token.id === T.NAME) {\r\n                gb.defineTokenPrec(token.val, assoc, true, token.line);\r\n            }\r\n            else {\r\n                throw new E('unexpected token \"' + tokenNames[token.id] + '\",expecting string or name', token.line);\r\n            }\r\n            nt();\r\n        } while (token.id === T.STRING || token.id === T.NAME);\r\n        gb.incPr();\r\n    }\r\n    function options() {\r\n        while (1) {\r\n            switch (token.id) {\r\n                case T.TOKEN_DIR:\r\n                    nt();\r\n                    do {\r\n                        tokenDef();\r\n                    } while (token.id === T.STRING);\r\n                    break;\r\n                case T.LEFT_DIR:\r\n                    nt();\r\n                    prTokens(Assoc.LEFT);\r\n                    break;\r\n                case T.RIGHT_DIR:\r\n                    nt();\r\n                    prTokens(Assoc.RIGHT);\r\n                    break;\r\n                case T.NONASSOC_DIR:\r\n                    nt();\r\n                    prTokens(Assoc.NON);\r\n                    break;\r\n                case T.OPT:\r\n                    nt();\r\n                    var name = token.val;\r\n                    expect(T.NAME);\r\n                    var s = token.val;\r\n                    expect(T.STRING);\r\n                    gb.setOpt(name, s);\r\n                    break;\r\n                case T.STATE_DIR:\r\n                    nt();\r\n                    var n = token.val;\r\n                    expect(T.NAME);\r\n                    gb.changeState(n);\r\n                    break;\r\n                default: return;\r\n            }\r\n        }\r\n    }\r\n    function tokenDef() {\r\n        var name = token.val;\r\n        var alias = '';\r\n        var tline = token.line;\r\n        if (token.id !== T.STRING && token.id !== T.TOKEN) {\r\n            throw new E('unexpeted token \"' + tokenNames[token.id] + '\",expecting STRING or TOKEN', token.line);\r\n        }\r\n        var isString = token.id === T.STRING;\r\n        nt();\r\n        if (token.id === T.NAME) {\r\n            alias = token.val;\r\n            nt();\r\n        }\r\n        gb.defToken(name, alias, tline);\r\n    }\r\n    function rules() {\r\n        rule();\r\n        while (token.id !== T.SEPERATOR) {\r\n            rule();\r\n        }\r\n        nt();\r\n    }\r\n    function rule() {\r\n        var lhs = token.clone();\r\n        expect(T.NAME);\r\n        expect(T.ARROW);\r\n        gb.prepareRule(lhs.val, lhs.line);\r\n        ruleItems();\r\n        gb.commitRule();\r\n        while (token.id === T.OR) {\r\n            nt();\r\n            gb.prepareRule(lhs.val, lhs.line);\r\n            ruleItems();\r\n            gb.commitRule();\r\n        }\r\n        expect(T.EOL);\r\n    }\r\n    function ruleItems() {\r\n        while (token.id === T.NAME || token.id === T.TOKEN || token.id === T.STRING || token.id === T.BLOCK) {\r\n            var t = token.clone();\r\n            if (token.id === T.NAME) {\r\n                nt();\r\n                gb.addRuleItem(t.val, false, t.line);\r\n            }\r\n            else if (token.id === T.STRING || token.id === T.TOKEN) {\r\n                nt();\r\n                gb.addRuleItem(t.val, true, t.line);\r\n            }\r\n            if (token.id === T.BLOCK) {\r\n                gb.addAction(token.val);\r\n                nt();\r\n            }\r\n        }\r\n        if (token.id === T.PREC_DIR) {\r\n            nt();\r\n            var t = token.val;\r\n            var line = token.line;\r\n            if (token.id === T.STRING) {\r\n                gb.defineRulePr(t, false, line);\r\n                nt();\r\n            }\r\n            else if (token.id === T.NAME) {\r\n                gb.defineRulePr(t, true, line);\r\n                nt();\r\n            }\r\n            else {\r\n                throw new E('unexpected token \"' + tokenNames[token.id] + '\",expecting string or name', token.line);\r\n            }\r\n            if (token.id === T.BLOCK) {\r\n                gb.addAction(token.val);\r\n                nt();\r\n            }\r\n        }\r\n    }\r\n    nt();\r\n    file();\r\n    return gb.build();\r\n}\r\nfunction commentFilter(scanner) {\r\n    return {\r\n        next: function (token) {\r\n            do {\r\n                scanner.next(token);\r\n            } while (token.id === T.BLOCK_COMMENT || token.id === T.LINE_COMMENT);\r\n        },\r\n        init: function (s) {\r\n            scanner.init(s);\r\n        }\r\n    };\r\n}\r\nvar highlightUtil = {\r\n    T: T,\r\n    Token: Token,\r\n    scanner: scan\r\n};\r\nfunction parseSource(source) {\r\n    var scanner = scan();\r\n    scanner.init(source);\r\n    return parse(commentFilter(scanner));\r\n}\r\nexport { highlightUtil, parseSource };\r\n//# sourceMappingURL=gparser.js.map","map":{"version":3,"file":"gparser.js","sourceRoot":"","sources":["../src/parser/gparser.ts"],"names":[],"mappings":"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"}}
