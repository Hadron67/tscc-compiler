{"code":"function sorter(cmp) {\r\n    var a = [];\r\n    function insert(i, obj) {\r\n        a.push(null);\r\n        for (var j = a.length - 1; j > i; j--) {\r\n            a[j] = a[j - 1];\r\n        }\r\n        a[i] = obj;\r\n    }\r\n    return {\r\n        add: function (b) {\r\n            var i;\r\n            for (i = 0; i < a.length; i++) {\r\n                if ((i === 0 || cmp(b, a[i - 1]) >= 0) && cmp(b, a[i]) <= 0) {\r\n                    break;\r\n                }\r\n            }\r\n            insert(i, b);\r\n        },\r\n        done: function () {\r\n            return a;\r\n        }\r\n    };\r\n}\r\nvar RowEntry = (function () {\r\n    function RowEntry(emptyCount, row) {\r\n        this.emptyCount = emptyCount;\r\n        this.row = row;\r\n        this.dp = 0;\r\n    }\r\n    return RowEntry;\r\n}());\r\nexport function compress(source) {\r\n    function empty(i, j) {\r\n        j = j - sorted[i].dp;\r\n        return j < 0 || j >= source.columns || source.isEmpty(sorted[i].row, j);\r\n    }\r\n    function fit(i, dp) {\r\n        for (var j = 0; j < source.columns; j++) {\r\n            if (!empty(i, j)) {\r\n                for (var k = 0; k < i; k++) {\r\n                    if (!empty(k, j + dp)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    function getFitdp(i) {\r\n        var dp = 0;\r\n        while (source.isEmpty(sorted[i].row, -dp)) {\r\n            dp--;\r\n        }\r\n        while (!fit(i, dp)) {\r\n            dp++;\r\n        }\r\n        return dp;\r\n    }\r\n    var tmpsorted = sorter(function (a, b) {\r\n        return a.emptyCount < b.emptyCount ? -1 :\r\n            a.emptyCount > b.emptyCount ? 1 : 0;\r\n    });\r\n    for (var i = 0; i < source.rows; i++) {\r\n        tmpsorted.add(new RowEntry(source.emptyCount(i), i));\r\n    }\r\n    var sorted = tmpsorted.done();\r\n    var maxdp = 0, mindp = 0;\r\n    var dps = new Array(source.rows);\r\n    dps[sorted[0].row] = sorted[0].dp = 0;\r\n    for (var i = 1; i < sorted.length; i++) {\r\n        var row = sorted[i].row;\r\n        var dp = getFitdp(i);\r\n        dps[row] = sorted[i].dp = dp;\r\n        dp > maxdp && (maxdp = dp);\r\n        dp < mindp && (mindp = dp);\r\n    }\r\n    for (var i = 0; i < dps.length; i++) {\r\n        dps[i] -= mindp;\r\n    }\r\n    return {\r\n        dps: dps,\r\n        len: maxdp + source.columns - mindp\r\n    };\r\n}\r\n//# sourceMappingURL=compress.js.map","map":{"version":3,"file":"compress.js","sourceRoot":"","sources":["../src/util/compress.ts"],"names":[],"mappings":"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"}}
