{"code":"import * as tslib_1 from \"tslib\";\r\nexport var endl = '\\n';\r\nvar OutputStream = (function () {\r\n    function OutputStream() {\r\n    }\r\n    OutputStream.prototype.writeln = function (s) {\r\n        s && this.write(s);\r\n        this.write(endl);\r\n    };\r\n    return OutputStream;\r\n}());\r\nexport { OutputStream };\r\nvar StringOS = (function (_super) {\r\n    tslib_1.__extends(StringOS, _super);\r\n    function StringOS() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.s = '';\r\n        return _this;\r\n    }\r\n    StringOS.prototype.write = function (s) {\r\n        this.s += s;\r\n    };\r\n    StringOS.prototype.reset = function () {\r\n        this.s = '';\r\n    };\r\n    return StringOS;\r\n}(OutputStream));\r\nexport { StringOS };\r\nexport function StringIS(s) {\r\n    var i = 0;\r\n    return {\r\n        peek: function () {\r\n            return s.charAt(i) || null;\r\n        },\r\n        next: function () {\r\n            var ret = this.peek();\r\n            i++;\r\n            return ret;\r\n        }\r\n    };\r\n}\r\nexport function biss(iss) {\r\n    var backup = [];\r\n    return {\r\n        peek: function () {\r\n            return backup.length > 0 ? backup[backup.length - 1] : iss.peek();\r\n        },\r\n        next: function () {\r\n            if (backup.length > 0) {\r\n                return backup.pop();\r\n            }\r\n            else {\r\n                return iss.next();\r\n            }\r\n        },\r\n        backup: function (c) {\r\n            backup.push(c);\r\n        }\r\n    };\r\n}\r\n","map":{"mappings":""}}
