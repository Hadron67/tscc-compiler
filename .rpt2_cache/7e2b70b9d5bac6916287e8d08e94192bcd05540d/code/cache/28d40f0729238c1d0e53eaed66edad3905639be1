{"code":"export class JsccError {\r\n    constructor(msg, type = 'Error') {\r\n        this.msg = msg;\r\n        this.type = type;\r\n    }\r\n    toString(opt = {}) {\r\n        var escape = !!opt.escape;\r\n        var ret = this.type;\r\n        if (opt.typeClass) {\r\n            ret = '<span class=\"' + opt.typeClass + '\">' + ret + '</span>';\r\n        }\r\n        ret += ': ';\r\n        ret += escape ? this.msg.replace(/</g, '&lt').replace(/>/g, '&gt') : this.msg;\r\n        return ret;\r\n    }\r\n}\r\nexport class CompilationError extends JsccError {\r\n    constructor(msg, line) {\r\n        super(msg, 'CompilationError');\r\n        this.line = line;\r\n    }\r\n    toString(opt) {\r\n        return super.toString(opt) + `(at line ${this.line})`;\r\n    }\r\n}\r\n","map":{"mappings":""}}
