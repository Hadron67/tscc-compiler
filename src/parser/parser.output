state 0(start)
    [\x9,\xa],\xd,' ' -> state 1
    '"' -> state 2
    '$',['A','Z'],'_',['a','z'] -> state 3
    '%' -> state 4
    ''' -> state 5
    '(' -> state 6
    ')' -> state 7
    '*' -> state 8
    '+' -> state 9
    ',' -> state 10
    '-' -> state 11
    '/' -> state 12
    ':' -> state 13
    ';' -> state 14
    '<' -> state 15
    '=' -> state 16
    '>' -> state 17
    '?' -> state 18
    '[' -> state 19
    ']' -> state 20
    '^' -> state 21
    '{' -> state 22
    '|' -> state 23
    '}' -> state 24

state 1(end 0)
    [\x9,\xa],\xd,' ' -> state 1

state 2
    [\x0,\x9],[\xb,'!'],['#','['],[']',oo) -> state 25
    '"' -> state 26
    '\' -> state 27

state 3(end 3)
    '$',['A','Z'],'_',['a','z'] -> state 28
    ['0','9'] -> state 29

state 4
    '%' -> state 30
    'e' -> state 31
    'h' -> state 32
    'i' -> state 33
    'l' -> state 34
    'n' -> state 35
    'o' -> state 36
    'p' -> state 37
    'r' -> state 38
    't' -> state 39
    'u' -> state 40

state 5
    [\x0,\x9],[\xb,'&'],['(','['],[']',oo) -> state 41
    ''' -> state 42
    '\' -> state 43

state 6(end 22)

state 7(end 23)

state 8(end 28)

state 9(end 29)

state 10(end 37)

state 11(end 30)

state 12
    '*' -> state 44
    '/' -> state 45

state 13(end 31)

state 14(end 33)

state 15(end 21)

state 16(end 24)
    '>' -> state 46

state 17(end 20)

state 18(end 27)

state 19(end 25)

state 20(end 26)

state 21(end 36)

state 22(end 5)

state 23(end 35)

state 24(end 6)

state 25
    [\x0,\x9],[\xb,'!'],['#','['],[']',oo) -> state 25
    '"' -> state 26
    '\' -> state 27

state 26(end 4)

state 27
    '"',''','\','b','f','n','r','t' -> state 47
    'u','x' -> state 48

state 28(end 3)
    '$',['A','Z'],'_',['a','z'] -> state 28
    ['0','9'] -> state 29

state 29(end 3)
    '$',['A','Z'],'_',['a','z'] -> state 28
    ['0','9'] -> state 29

state 30(end 34)

state 31
    'm' -> state 49
    'x' -> state 50

state 32
    'e' -> state 51

state 33
    'n' -> state 52

state 34
    'e' -> state 53

state 35
    'o' -> state 54

state 36
    'p' -> state 55
    'u' -> state 56

state 37
    'r' -> state 57

state 38
    'i' -> state 58

state 39
    'y' -> state 59

state 40
    's' -> state 60

state 41
    [\x0,\x9],[\xb,'&'],['(','['],[']',oo) -> state 41
    ''' -> state 42
    '\' -> state 43

state 42(end 4)

state 43
    '"',''','\','b','f','n','r','t' -> state 61
    'u','x' -> state 62

state 44
    [\x0,')'],['+','.'],['0',oo) -> state 63
    '*' -> state 64
    '/' -> state 65

state 45(end 2)
    [\x0,\x9],[\xb,oo) -> state 66

state 46(end 32)

state 47
    [\x0,\x9],[\xb,'!'],['#','['],[']',oo) -> state 25
    '"' -> state 26
    '\' -> state 27

state 48
    ['0','9'],['A','F'],['a','f'] -> state 67

state 49
    'p' -> state 68

state 50
    't' -> state 69

state 51
    'a' -> state 70

state 52
    'i' -> state 71

state 53
    'f' -> state 72
    'x' -> state 73

state 54
    'n' -> state 74

state 55
    't' -> state 75

state 56
    't' -> state 76

state 57
    'e' -> state 77

state 58
    'g' -> state 78

state 59
    'p' -> state 79

state 60
    'e' -> state 80

state 61
    [\x0,\x9],[\xb,'&'],['(','['],[']',oo) -> state 41
    ''' -> state 42
    '\' -> state 43

state 62
    ['0','9'],['A','F'],['a','f'] -> state 81

state 63
    [\x0,')'],['+','.'],['0',oo) -> state 63
    '*' -> state 64
    '/' -> state 82

state 64
    [\x0,'.'],['0',oo) -> state 83
    '/' -> state 84

state 65
    '/' -> state 85

state 66(end 2)
    [\x0,\x9],[\xb,oo) -> state 66

state 67
    [\x0,\x9],[\xb,'!'],['#','/'],[':','@'],['G','['],[']','`'],['g',oo) -> state 25
    '"' -> state 26
    ['0','9'],['A','F'],['a','f'] -> state 86
    '\' -> state 27

state 68
    't' -> state 87

state 69
    'r' -> state 88

state 70
    'd' -> state 89

state 71
    't' -> state 90

state 72
    't' -> state 91

state 73(end 8)

state 74
    'a' -> state 92

state 75
    'i' -> state 93

state 76
    'p' -> state 94

state 77
    'c' -> state 95

state 78
    'h' -> state 96

state 79
    'e' -> state 97

state 80(end 12)

state 81
    [\x0,\x9],[\xb,'&'],['(','/'],[':','@'],['G','['],[']','`'],['g',oo) -> state 41
    ''' -> state 42
    ['0','9'],['A','F'],['a','f'] -> state 98
    '\' -> state 43

state 82
    [\x0,')'],['+','.'],['0',oo) -> state 63
    '*' -> state 64
    '/' -> state 82

state 83
    [\x0,')'],['+','.'],['0',oo) -> state 63
    '*' -> state 64
    '/' -> state 65

state 84(end 1)

state 85
    [\x0,')'],['+','.'],['0',oo) -> state 63
    '*' -> state 64
    '/' -> state 65

state 86
    [\x0,\x9],[\xb,'!'],['#','/'],[':','@'],['G','['],[']','`'],['g',oo) -> state 25
    '"' -> state 26
    ['0','9'],['A','F'],['a','f'] -> state 86
    '\' -> state 27

state 87
    'y' -> state 99

state 88
    'a' -> state 100

state 89
    'e' -> state 101

state 90(end 18)

state 91(end 9)

state 92
    's' -> state 102

state 93
    'o' -> state 103

state 94
    'u' -> state 104

state 95(end 17)

state 96
    't' -> state 105

state 97(end 16)

state 98
    [\x0,\x9],[\xb,'&'],['(','/'],[':','@'],['G','['],[']','`'],['g',oo) -> state 41
    ''' -> state 42
    ['0','9'],['A','F'],['a','f'] -> state 98
    '\' -> state 43

state 99(end 15)

state 100
    '_' -> state 106

state 101
    'r' -> state 107

state 102
    's' -> state 108

state 103
    'n' -> state 109

state 104
    't' -> state 110

state 105(end 10)

state 106
    'a' -> state 111

state 107(end 13)

state 108
    'o' -> state 112

state 109(end 7)

state 110(end 19)

state 111
    'r' -> state 113

state 112
    'c' -> state 114

state 113
    'g' -> state 115

state 114(end 11)

state 115(end 14)



state 0(start)(end 38)
    [\x0,'z'],'|',['~',oo) -> state 1
    '{' -> state 2
    '}' -> state 3

state 1(end 38)
    [\x0,'z'],'|',['~',oo) -> state 1

state 2(end 39)

state 3(end 40)



state 0(start)
    [\x0,oo) -> state 1

state 1(end 41)
    [\x0,oo) -> state 1



state 0
    [ 0: (accept) => . start <EOF> ]*
    [ 2: start => . options "%%" body @0 "%%" epilogue ]
    [ 3: options => . options option ]
    [ 4: options => . ]
    default action: reduce with rule 4
    start : go to state 1
    options : go to state 2


state 1
    [ 0: (accept) => start . <EOF> ]*
    no default action
    <EOF> : shift, and go to state 3


state 2
    [ 2: start => options . "%%" body @0 "%%" epilogue ]*
    [ 3: options => options . option ]*
    [ 6: option => . "%lex" @1 states_ "{" lexBody "}" ]
    [ 7: option => . associativeDir assocTokens ]
    [ 8: option => . "%option" "{" optionBody "}" ]
    [ 9: option => . "%header" block ]
    [ 10: option => . "%extra_arg" block ]
    [ 11: option => . "%type" block ]
    [ 12: option => . "%init" block block ]
    [ 13: option => . "%output" <STRING> ]
    [ 16: associativeDir => . "%left" ]
    [ 17: associativeDir => . "%right" ]
    [ 18: associativeDir => . "%nonassoc" ]
    no default action
    "%option" : shift, and go to state 8
    "%lex" : shift, and go to state 6
    "%left" : shift, and go to state 14
    "%right" : shift, and go to state 15
    "%nonassoc" : shift, and go to state 16
    "%header" : shift, and go to state 9
    "%extra_arg" : shift, and go to state 10
    "%type" : shift, and go to state 11
    "%init" : shift, and go to state 12
    "%output" : shift, and go to state 13
    "%%" : shift, and go to state 4
    option : go to state 5
    associativeDir : go to state 7


state 3
    [ 0: (accept) => start <EOF> . ]*
    default action: reduce with rule 0


state 4
    [ 2: start => options "%%" . body @0 "%%" epilogue ]*
    [ 71: body => . body bodyItem ]
    [ 72: body => . bodyItem ]
    [ 73: bodyItem => . compoundRule ]
    [ 75: compoundRule => . <NAME> @6 arrow rules ";" ]
    no default action
    <NAME> : shift, and go to state 20
    body : go to state 17
    bodyItem : go to state 18
    compoundRule : go to state 19


state 5
    [ 3: options => options option . ]*
    default action: reduce with rule 3


state 6
    [ 6: option => "%lex" . @1 states_ "{" lexBody "}" ]*
    [ 5: @1 => . ]
    default action: reduce with rule 5
    @1 : go to state 21


state 7
    [ 7: option => associativeDir . assocTokens ]*
    [ 19: assocTokens => . assocTokens assocToken ]
    [ 20: assocTokens => . assocToken ]
    [ 21: assocToken => . tokenRef ]
    [ 22: assocToken => . <NAME> ]
    [ 97: tokenRef => . "<" <NAME> ">" ]
    [ 98: tokenRef => . <STRING> ]
    no default action
    <NAME> : shift, and go to state 25
    <STRING> : shift, and go to state 96
    "<" : shift, and go to state 95
    assocTokens : go to state 22
    assocToken : go to state 23
    tokenRef : go to state 24


state 8
    [ 8: option => "%option" . "{" optionBody "}" ]*
    no default action
    "{" : shift, and go to state 26


state 9
    [ 9: option => "%header" . block ]*
    [ 106: block => . @9 "{" innerBlock @10 "}" ]
    [ 104: @9 => . ]
    default action: reduce with rule 104
    block : go to state 27
    @9 : go to state 118


state 10
    [ 10: option => "%extra_arg" . block ]*
    [ 106: block => . @9 "{" innerBlock @10 "}" ]
    [ 104: @9 => . ]
    default action: reduce with rule 104
    block : go to state 28
    @9 : go to state 118


state 11
    [ 11: option => "%type" . block ]*
    [ 106: block => . @9 "{" innerBlock @10 "}" ]
    [ 104: @9 => . ]
    default action: reduce with rule 104
    block : go to state 29
    @9 : go to state 118


state 12
    [ 12: option => "%init" . block block ]*
    [ 106: block => . @9 "{" innerBlock @10 "}" ]
    [ 104: @9 => . ]
    default action: reduce with rule 104
    block : go to state 30
    @9 : go to state 118


state 13
    [ 13: option => "%output" . <STRING> ]*
    no default action
    <STRING> : shift, and go to state 31


state 14
    [ 16: associativeDir => "%left" . ]*
    default action: reduce with rule 16


state 15
    [ 17: associativeDir => "%right" . ]*
    default action: reduce with rule 17


state 16
    [ 18: associativeDir => "%nonassoc" . ]*
    default action: reduce with rule 18


state 17
    [ 2: start => options "%%" body . @0 "%%" epilogue ]*
    [ 71: body => body . bodyItem ]*
    [ 1: @0 => . ]
    [ 73: bodyItem => . compoundRule ]
    [ 75: compoundRule => . <NAME> @6 arrow rules ";" ]
    default action: reduce with rule 1
    <NAME> : shift, and go to state 20
    @0 : go to state 32
    bodyItem : go to state 33
    compoundRule : go to state 19


state 18
    [ 72: body => bodyItem . ]*
    default action: reduce with rule 72


state 19
    [ 73: bodyItem => compoundRule . ]*
    default action: reduce with rule 73


state 20
    [ 75: compoundRule => <NAME> . @6 arrow rules ";" ]*
    [ 74: @6 => . ]
    default action: reduce with rule 74
    @6 : go to state 34


state 21
    [ 6: option => "%lex" @1 . states_ "{" lexBody "}" ]*
    [ 25: states_ => . "<" states ">" ]
    [ 26: states_ => . ]
    default action: reduce with rule 26
    "<" : shift, and go to state 36
    states_ : go to state 35


state 22
    [ 7: option => associativeDir assocTokens . ]*
    [ 19: assocTokens => assocTokens . assocToken ]*
    [ 21: assocToken => . tokenRef ]
    [ 22: assocToken => . <NAME> ]
    [ 97: tokenRef => . "<" <NAME> ">" ]
    [ 98: tokenRef => . <STRING> ]
    default action: reduce with rule 7
    <NAME> : shift, and go to state 25
    <STRING> : shift, and go to state 96
    "<" : shift, and go to state 95
    assocToken : go to state 37
    tokenRef : go to state 24


state 23
    [ 20: assocTokens => assocToken . ]*
    default action: reduce with rule 20


state 24
    [ 21: assocToken => tokenRef . ]*
    default action: reduce with rule 21


state 25
    [ 22: assocToken => <NAME> . ]*
    default action: reduce with rule 22


state 26
    [ 8: option => "%option" "{" . optionBody "}" ]*
    [ 23: optionBody => . optionBody <NAME> "=" <STRING> ]
    [ 24: optionBody => . ]
    default action: reduce with rule 24
    optionBody : go to state 38


state 27
    [ 9: option => "%header" block . ]*
    default action: reduce with rule 9


state 28
    [ 10: option => "%extra_arg" block . ]*
    default action: reduce with rule 10


state 29
    [ 11: option => "%type" block . ]*
    default action: reduce with rule 11


state 30
    [ 12: option => "%init" block . block ]*
    [ 106: block => . @9 "{" innerBlock @10 "}" ]
    [ 104: @9 => . ]
    default action: reduce with rule 104
    block : go to state 39
    @9 : go to state 118


state 31
    [ 13: option => "%output" <STRING> . ]*
    default action: reduce with rule 13


state 32
    [ 2: start => options "%%" body @0 . "%%" epilogue ]*
    no default action
    "%%" : shift, and go to state 40


state 33
    [ 71: body => body bodyItem . ]*
    default action: reduce with rule 71


state 34
    [ 75: compoundRule => <NAME> @6 . arrow rules ";" ]*
    [ 76: arrow => . ":" ]
    [ 77: arrow => . "=>" ]
    no default action
    ":" : shift, and go to state 42
    "=>" : shift, and go to state 43
    arrow : go to state 41


state 35
    [ 6: option => "%lex" @1 states_ . "{" lexBody "}" ]*
    no default action
    "{" : shift, and go to state 44


state 36
    [ 25: states_ => "<" . states ">" ]*
    [ 27: states => . <NAME> ]
    [ 28: states => . states "," <NAME> ]
    no default action
    <NAME> : shift, and go to state 46
    states : go to state 45


state 37
    [ 19: assocTokens => assocTokens assocToken . ]*
    default action: reduce with rule 19


state 38
    [ 8: option => "%option" "{" optionBody . "}" ]*
    [ 23: optionBody => optionBody . <NAME> "=" <STRING> ]*
    no default action
    <NAME> : shift, and go to state 48
    "}" : shift, and go to state 47


state 39
    [ 12: option => "%init" block block . ]*
    default action: reduce with rule 12


state 40
    [ 2: start => options "%%" body @0 "%%" . epilogue ]*
    [ 14: epilogue => . ]
    [ 15: epilogue => . <ANY_EPLOGUE_CODE> ]
    default action: reduce with rule 14
    <ANY_EPLOGUE_CODE> : shift, and go to state 50
    epilogue : go to state 49


state 41
    [ 75: compoundRule => <NAME> @6 arrow . rules ";" ]*
    [ 78: rules => . rules "|" rule ]
    [ 79: rules => . rule ]
    [ 81: rule => . @7 ruleHead ruleBody ruleTrailer ]
    [ 80: @7 => . ]
    default action: reduce with rule 80
    rules : go to state 51
    rule : go to state 52
    @7 : go to state 53


state 42
    [ 76: arrow => ":" . ]*
    default action: reduce with rule 76


state 43
    [ 77: arrow => "=>" . ]*
    default action: reduce with rule 77


state 44
    [ 6: option => "%lex" @1 states_ "{" . lexBody "}" ]*
    [ 29: lexBody => . lexBody lexBodyItem ]
    [ 30: lexBody => . ]
    default action: reduce with rule 30
    lexBody : go to state 54


state 45
    [ 25: states_ => "<" states . ">" ]*
    [ 28: states => states . "," <NAME> ]*
    no default action
    ">" : shift, and go to state 55
    "," : shift, and go to state 56


state 46
    [ 27: states => <NAME> . ]*
    default action: reduce with rule 27


state 47
    [ 8: option => "%option" "{" optionBody "}" . ]*
    default action: reduce with rule 8


state 48
    [ 23: optionBody => optionBody <NAME> . "=" <STRING> ]*
    no default action
    "=" : shift, and go to state 57


state 49
    [ 2: start => options "%%" body @0 "%%" epilogue . ]*
    default action: reduce with rule 2


state 50
    [ 15: epilogue => <ANY_EPLOGUE_CODE> . ]*
    default action: reduce with rule 15


state 51
    [ 75: compoundRule => <NAME> @6 arrow rules . ";" ]*
    [ 78: rules => rules . "|" rule ]*
    no default action
    ";" : shift, and go to state 61
    "|" : shift, and go to state 62


state 52
    [ 79: rules => rule . ]*
    default action: reduce with rule 79


state 53
    [ 81: rule => @7 . ruleHead ruleBody ruleTrailer ]*
    [ 82: ruleHead => . "%use" "(" varUseList ")" ]
    [ 83: ruleHead => . ]
    default action: reduce with rule 83
    "%use" : shift, and go to state 64
    ruleHead : go to state 63


state 54
    [ 6: option => "%lex" @1 states_ "{" lexBody . "}" ]*
    [ 29: lexBody => lexBody . lexBodyItem ]*
    [ 32: lexBodyItem => . <NAME> @2 "=" "<" regexp ">" ]
    [ 33: lexBodyItem => . newState "<" regexp ">" lexAction_ ]
    [ 34: lexBodyItem => . newState "<" <NAME> ":" regexp ">" lexAction_ ]
    [ 35: newState => . ]
    default action: reduce with rule 35
    <NAME> : shift, and go to state 67
    "}" : shift, and go to state 65
    lexBodyItem : go to state 66
    newState : go to state 68


state 55
    [ 25: states_ => "<" states ">" . ]*
    default action: reduce with rule 25


state 56
    [ 28: states => states "," . <NAME> ]*
    no default action
    <NAME> : shift, and go to state 69


state 57
    [ 23: optionBody => optionBody <NAME> "=" . <STRING> ]*
    no default action
    <STRING> : shift, and go to state 70


state 58
    [ 107: innerBlock => innerBlock innerBlockItem . ]*
    default action: reduce with rule 107


state 59
    [ 109: innerBlockItem => <ANY_CODE> . ]*
    default action: reduce with rule 109


state 60
    [ 112: innerBlockItem => @11 . "{" innerBlock @12 "}" ]*
    no default action
    "{" : shift, and go to state 71


state 61
    [ 75: compoundRule => <NAME> @6 arrow rules ";" . ]*
    default action: reduce with rule 75


state 62
    [ 78: rules => rules "|" . rule ]*
    [ 81: rule => . @7 ruleHead ruleBody ruleTrailer ]
    [ 80: @7 => . ]
    default action: reduce with rule 80
    rule : go to state 72
    @7 : go to state 53


state 63
    [ 81: rule => @7 ruleHead . ruleBody ruleTrailer ]*
    [ 86: ruleBody => . ruleItems ]
    [ 87: ruleBody => . "%empty" ]
    [ 88: ruleItems => . ruleItems ruleItem ]
    [ 89: ruleItems => . ]
    default action: reduce with rule 89
    "%empty" : shift, and go to state 75
    ruleBody : go to state 73
    ruleItems : go to state 74


state 64
    [ 82: ruleHead => "%use" . "(" varUseList ")" ]*
    no default action
    "(" : shift, and go to state 76


state 65
    [ 6: option => "%lex" @1 states_ "{" lexBody "}" . ]*
    default action: reduce with rule 6


state 66
    [ 29: lexBody => lexBody lexBodyItem . ]*
    default action: reduce with rule 29


state 67
    [ 32: lexBodyItem => <NAME> . @2 "=" "<" regexp ">" ]*
    [ 31: @2 => . ]
    default action: reduce with rule 31
    @2 : go to state 77


state 68
    [ 33: lexBodyItem => newState . "<" regexp ">" lexAction_ ]*
    [ 34: lexBodyItem => newState . "<" <NAME> ":" regexp ">" lexAction_ ]*
    no default action
    "<" : shift, and go to state 78


state 69
    [ 28: states => states "," <NAME> . ]*
    default action: reduce with rule 28


state 70
    [ 23: optionBody => optionBody <NAME> "=" <STRING> . ]*
    default action: reduce with rule 23


state 71
    [ 112: innerBlockItem => @11 "{" . innerBlock @12 "}" ]*
    [ 107: innerBlock => . innerBlock innerBlockItem ]
    [ 108: innerBlock => . ]
    default action: reduce with rule 108
    innerBlock : go to state 79


state 72
    [ 78: rules => rules "|" rule . ]*
    default action: reduce with rule 78


state 73
    [ 81: rule => @7 ruleHead ruleBody . ruleTrailer ]*
    [ 99: ruleTrailer => . ]
    [ 100: ruleTrailer => . rulePrec ]
    [ 101: ruleTrailer => . rulePrec lexAction ]
    [ 102: rulePrec => . "%prec" <NAME> ]
    [ 103: rulePrec => . "%prec" tokenRef ]
    default action: reduce with rule 99
    "%prec" : shift, and go to state 82
    ruleTrailer : go to state 80
    rulePrec : go to state 81


state 74
    [ 86: ruleBody => ruleItems . ]*
    [ 88: ruleItems => ruleItems . ruleItem ]*
    [ 92: ruleItem => . <NAME> ]
    [ 94: ruleItem => . <NAME> "=" @8 <NAME> ]
    [ 95: ruleItem => . itemName tokenRef ]
    [ 96: ruleItem => . itemName lexAction ]
    [ 90: itemName => . <NAME> "=" ]
    [ 91: itemName => . ]
    default action: reduce with rule 91
    <NAME> : shift, and go to state 84
    "%prec" : reduce with rule 86
    ";" : reduce with rule 86
    "|" : reduce with rule 86
    itemName : go to state 85
    ruleItem : go to state 83


state 75
    [ 87: ruleBody => "%empty" . ]*
    default action: reduce with rule 87


state 76
    [ 82: ruleHead => "%use" "(" . varUseList ")" ]*
    [ 84: varUseList => . varUseList "," <NAME> ]
    [ 85: varUseList => . <NAME> ]
    no default action
    <NAME> : shift, and go to state 87
    varUseList : go to state 86


state 77
    [ 32: lexBodyItem => <NAME> @2 . "=" "<" regexp ">" ]*
    no default action
    "=" : shift, and go to state 88


state 78
    [ 33: lexBodyItem => newState "<" . regexp ">" lexAction_ ]*
    [ 34: lexBodyItem => newState "<" . <NAME> ":" regexp ">" lexAction_ ]*
    [ 48: regexp => . @4 union ]
    [ 47: @4 => . ]
    default action: reduce with rule 47
    <NAME> : shift, and go to state 90
    regexp : go to state 89
    @4 : go to state 126


state 79
    [ 112: innerBlockItem => @11 "{" innerBlock . @12 "}" ]*
    [ 107: innerBlock => innerBlock . innerBlockItem ]*
    [ 111: @12 => . ]
    [ 109: innerBlockItem => . <ANY_CODE> ]
    [ 112: innerBlockItem => . @11 "{" innerBlock @12 "}" ]
    [ 110: @11 => . ]
    default action: reduce with rule 110
    <ANY_CODE> : shift, and go to state 59
    "}" : reduce with rule 111
    innerBlockItem : go to state 58
    @11 : go to state 60
    @12 : go to state 91


state 80
    [ 81: rule => @7 ruleHead ruleBody ruleTrailer . ]*
    default action: reduce with rule 81


state 81
    [ 100: ruleTrailer => rulePrec . ]*
    [ 101: ruleTrailer => rulePrec . lexAction ]*
    [ 39: lexAction => . @3 "[" lexActions "]" ]
    [ 40: lexAction => . block ]
    [ 38: @3 => . ]
    [ 106: block => . @9 "{" innerBlock @10 "}" ]
    [ 104: @9 => . ]
    default action: reduce with rule 100
    "{" : reduce with rule 104
    "[" : reduce with rule 38
    lexAction : go to state 92
    @3 : go to state 123
    block : go to state 124
    @9 : go to state 118


state 82
    [ 102: rulePrec => "%prec" . <NAME> ]*
    [ 103: rulePrec => "%prec" . tokenRef ]*
    [ 97: tokenRef => . "<" <NAME> ">" ]
    [ 98: tokenRef => . <STRING> ]
    no default action
    <NAME> : shift, and go to state 93
    <STRING> : shift, and go to state 96
    "<" : shift, and go to state 95
    tokenRef : go to state 94


state 83
    [ 88: ruleItems => ruleItems ruleItem . ]*
    default action: reduce with rule 88


state 84
    [ 92: ruleItem => <NAME> . ]*
    [ 94: ruleItem => <NAME> . "=" @8 <NAME> ]*
    [ 90: itemName => <NAME> . "=" ]*
    default action: reduce with rule 92
    "=" : shift, and go to state 97


state 85
    [ 95: ruleItem => itemName . tokenRef ]*
    [ 96: ruleItem => itemName . lexAction ]*
    [ 97: tokenRef => . "<" <NAME> ">" ]
    [ 98: tokenRef => . <STRING> ]
    [ 39: lexAction => . @3 "[" lexActions "]" ]
    [ 40: lexAction => . block ]
    [ 38: @3 => . ]
    [ 106: block => . @9 "{" innerBlock @10 "}" ]
    [ 104: @9 => . ]
    default action: reduce with rule 38
    <STRING> : shift, and go to state 96
    "<" : shift, and go to state 95
    "{" : reduce with rule 104
    lexAction : go to state 99
    @3 : go to state 123
    tokenRef : go to state 98
    block : go to state 124
    @9 : go to state 118


state 86
    [ 82: ruleHead => "%use" "(" varUseList . ")" ]*
    [ 84: varUseList => varUseList . "," <NAME> ]*
    no default action
    ")" : shift, and go to state 100
    "," : shift, and go to state 101


state 87
    [ 85: varUseList => <NAME> . ]*
    default action: reduce with rule 85


state 88
    [ 32: lexBodyItem => <NAME> @2 "=" . "<" regexp ">" ]*
    no default action
    "<" : shift, and go to state 102


state 89
    [ 33: lexBodyItem => newState "<" regexp . ">" lexAction_ ]*
    no default action
    ">" : shift, and go to state 103


state 90
    [ 34: lexBodyItem => newState "<" <NAME> . ":" regexp ">" lexAction_ ]*
    no default action
    ":" : shift, and go to state 104


state 91
    [ 112: innerBlockItem => @11 "{" innerBlock @12 . "}" ]*
    no default action
    "}" : shift, and go to state 105


state 92
    [ 101: ruleTrailer => rulePrec lexAction . ]*
    default action: reduce with rule 101


state 93
    [ 102: rulePrec => "%prec" <NAME> . ]*
    default action: reduce with rule 102


state 94
    [ 103: rulePrec => "%prec" tokenRef . ]*
    default action: reduce with rule 103


state 95
    [ 97: tokenRef => "<" . <NAME> ">" ]*
    no default action
    <NAME> : shift, and go to state 106


state 96
    [ 98: tokenRef => <STRING> . ]*
    default action: reduce with rule 98


state 97
    [ 94: ruleItem => <NAME> "=" . @8 <NAME> ]*
    [ 90: itemName => <NAME> "=" . ]*
    [ 93: @8 => . ]
    default action: reduce with rule 90
    <NAME> : reduce with rule 93
    @8 : go to state 107


state 98
    [ 95: ruleItem => itemName tokenRef . ]*
    default action: reduce with rule 95


state 99
    [ 96: ruleItem => itemName lexAction . ]*
    default action: reduce with rule 96


state 100
    [ 82: ruleHead => "%use" "(" varUseList ")" . ]*
    default action: reduce with rule 82


state 101
    [ 84: varUseList => varUseList "," . <NAME> ]*
    no default action
    <NAME> : shift, and go to state 108


state 102
    [ 32: lexBodyItem => <NAME> @2 "=" "<" . regexp ">" ]*
    [ 48: regexp => . @4 union ]
    [ 47: @4 => . ]
    default action: reduce with rule 47
    regexp : go to state 109
    @4 : go to state 126


state 103
    [ 33: lexBodyItem => newState "<" regexp ">" . lexAction_ ]*
    [ 36: lexAction_ => . ":" lexAction ]
    [ 37: lexAction_ => . ]
    default action: reduce with rule 37
    ":" : shift, and go to state 111
    lexAction_ : go to state 110


state 104
    [ 34: lexBodyItem => newState "<" <NAME> ":" . regexp ">" lexAction_ ]*
    [ 48: regexp => . @4 union ]
    [ 47: @4 => . ]
    default action: reduce with rule 47
    regexp : go to state 112
    @4 : go to state 126


state 105
    [ 112: innerBlockItem => @11 "{" innerBlock @12 "}" . ]*
    default action: reduce with rule 112


state 106
    [ 97: tokenRef => "<" <NAME> . ">" ]*
    no default action
    ">" : shift, and go to state 119


state 107
    [ 94: ruleItem => <NAME> "=" @8 . <NAME> ]*
    no default action
    <NAME> : shift, and go to state 120


state 108
    [ 84: varUseList => varUseList "," <NAME> . ]*
    default action: reduce with rule 84


state 109
    [ 32: lexBodyItem => <NAME> @2 "=" "<" regexp . ">" ]*
    no default action
    ">" : shift, and go to state 121


state 110
    [ 33: lexBodyItem => newState "<" regexp ">" lexAction_ . ]*
    default action: reduce with rule 33


state 111
    [ 36: lexAction_ => ":" . lexAction ]*
    [ 39: lexAction => . @3 "[" lexActions "]" ]
    [ 40: lexAction => . block ]
    [ 38: @3 => . ]
    [ 106: block => . @9 "{" innerBlock @10 "}" ]
    [ 104: @9 => . ]
    default action: reduce with rule 38
    "{" : reduce with rule 104
    lexAction : go to state 122
    @3 : go to state 123
    block : go to state 124
    @9 : go to state 118


state 112
    [ 34: lexBodyItem => newState "<" <NAME> ":" regexp . ">" lexAction_ ]*
    no default action
    ">" : shift, and go to state 125


state 113
    [ 42: lexActions => lexActionItem . ]*
    default action: reduce with rule 42


state 114
    [ 43: lexActionItem => "+" . <NAME> ]*
    no default action
    <NAME> : shift, and go to state 129


state 115
    [ 44: lexActionItem => "-" . ]*
    default action: reduce with rule 44


state 116
    [ 45: lexActionItem => block . ]*
    default action: reduce with rule 45


state 117
    [ 46: lexActionItem => "=" . <STRING> ]*
    no default action
    <STRING> : shift, and go to state 130


state 118
    [ 106: block => @9 . "{" innerBlock @10 "}" ]*
    no default action
    "{" : shift, and go to state 131


state 119
    [ 97: tokenRef => "<" <NAME> ">" . ]*
    default action: reduce with rule 97


state 120
    [ 94: ruleItem => <NAME> "=" @8 <NAME> . ]*
    default action: reduce with rule 94


state 121
    [ 32: lexBodyItem => <NAME> @2 "=" "<" regexp ">" . ]*
    default action: reduce with rule 32


state 122
    [ 36: lexAction_ => ":" lexAction . ]*
    default action: reduce with rule 36


state 123
    [ 39: lexAction => @3 . "[" lexActions "]" ]*
    no default action
    "[" : shift, and go to state 132


state 124
    [ 40: lexAction => block . ]*
    default action: reduce with rule 40


state 125
    [ 34: lexBodyItem => newState "<" <NAME> ":" regexp ">" . lexAction_ ]*
    [ 36: lexAction_ => . ":" lexAction ]
    [ 37: lexAction_ => . ]
    default action: reduce with rule 37
    ":" : shift, and go to state 111
    lexAction_ : go to state 133


state 126
    [ 48: regexp => @4 . union ]*
    [ 49: union => . union "|" simpleRE ]
    [ 50: union => . simpleRE ]
    [ 51: simpleRE => . simpleRE basicRE ]
    [ 52: simpleRE => . basicRE ]
    [ 54: basicRE => . @5 primitiveRE rePostfix ]
    [ 53: @5 => . ]
    default action: reduce with rule 53
    union : go to state 134
    simpleRE : go to state 135
    basicRE : go to state 136
    @5 : go to state 137


state 127
    [ 63: inverse_ => "^" . ]*
    default action: reduce with rule 63


state 128
    [ 41: lexActions => lexActions "," . lexActionItem ]*
    [ 43: lexActionItem => . "+" <NAME> ]
    [ 44: lexActionItem => . "-" ]
    [ 45: lexActionItem => . block ]
    [ 46: lexActionItem => . "=" <STRING> ]
    [ 106: block => . @9 "{" innerBlock @10 "}" ]
    [ 104: @9 => . ]
    default action: reduce with rule 104
    "=" : shift, and go to state 117
    "+" : shift, and go to state 114
    "-" : shift, and go to state 115
    lexActionItem : go to state 141
    block : go to state 116
    @9 : go to state 118


state 129
    [ 43: lexActionItem => "+" <NAME> . ]*
    default action: reduce with rule 43


state 130
    [ 46: lexActionItem => "=" <STRING> . ]*
    default action: reduce with rule 46


state 131
    [ 106: block => @9 "{" . innerBlock @10 "}" ]*
    [ 107: innerBlock => . innerBlock innerBlockItem ]
    [ 108: innerBlock => . ]
    default action: reduce with rule 108
    innerBlock : go to state 142


state 132
    [ 39: lexAction => @3 "[" . lexActions "]" ]*
    [ 41: lexActions => . lexActions "," lexActionItem ]
    [ 42: lexActions => . lexActionItem ]
    [ 43: lexActionItem => . "+" <NAME> ]
    [ 44: lexActionItem => . "-" ]
    [ 45: lexActionItem => . block ]
    [ 46: lexActionItem => . "=" <STRING> ]
    [ 106: block => . @9 "{" innerBlock @10 "}" ]
    [ 104: @9 => . ]
    default action: reduce with rule 104
    "=" : shift, and go to state 117
    "+" : shift, and go to state 114
    "-" : shift, and go to state 115
    lexActions : go to state 143
    lexActionItem : go to state 113
    block : go to state 116
    @9 : go to state 118


state 133
    [ 34: lexBodyItem => newState "<" <NAME> ":" regexp ">" lexAction_ . ]*
    default action: reduce with rule 34


state 134
    [ 48: regexp => @4 union . ]*
    [ 49: union => union . "|" simpleRE ]*
    default action: reduce with rule 48
    "|" : shift, and go to state 144


state 135
    [ 50: union => simpleRE . ]*
    [ 51: simpleRE => simpleRE . basicRE ]*
    [ 54: basicRE => . @5 primitiveRE rePostfix ]
    [ 53: @5 => . ]
    default action: reduce with rule 53
    ">" : reduce with rule 50
    ")" : reduce with rule 50
    "|" : reduce with rule 50
    basicRE : go to state 145
    @5 : go to state 137


state 136
    [ 52: simpleRE => basicRE . ]*
    default action: reduce with rule 52


state 137
    [ 54: basicRE => @5 . primitiveRE rePostfix ]*
    [ 59: primitiveRE => . "(" regexp ")" ]
    [ 60: primitiveRE => . "[" inverse_ setRE_ "]" ]
    [ 61: primitiveRE => . "<" <NAME> ">" ]
    [ 62: primitiveRE => . <STRING> ]
    no default action
    <STRING> : shift, and go to state 150
    "<" : shift, and go to state 149
    "(" : shift, and go to state 147
    "[" : shift, and go to state 148
    primitiveRE : go to state 146


state 138
    [ 65: setRE_ => setRE . ]*
    [ 67: setRE => setRE . "," setREItem ]*
    default action: reduce with rule 65
    "," : shift, and go to state 151


state 139
    [ 68: setRE => setREItem . ]*
    default action: reduce with rule 68


state 140
    [ 69: setREItem => <STRING> . ]*
    [ 70: setREItem => <STRING> . "-" <STRING> ]*
    default action: reduce with rule 69
    "-" : shift, and go to state 152


state 141
    [ 41: lexActions => lexActions "," lexActionItem . ]*
    default action: reduce with rule 41


state 142
    [ 106: block => @9 "{" innerBlock . @10 "}" ]*
    [ 107: innerBlock => innerBlock . innerBlockItem ]*
    [ 105: @10 => . ]
    [ 109: innerBlockItem => . <ANY_CODE> ]
    [ 112: innerBlockItem => . @11 "{" innerBlock @12 "}" ]
    [ 110: @11 => . ]
    default action: reduce with rule 105
    <ANY_CODE> : shift, and go to state 59
    "{" : reduce with rule 110
    @10 : go to state 153
    innerBlockItem : go to state 58
    @11 : go to state 60


state 143
    [ 39: lexAction => @3 "[" lexActions . "]" ]*
    [ 41: lexActions => lexActions . "," lexActionItem ]*
    no default action
    "]" : shift, and go to state 154
    "," : shift, and go to state 128


state 144
    [ 49: union => union "|" . simpleRE ]*
    [ 51: simpleRE => . simpleRE basicRE ]
    [ 52: simpleRE => . basicRE ]
    [ 54: basicRE => . @5 primitiveRE rePostfix ]
    [ 53: @5 => . ]
    default action: reduce with rule 53
    simpleRE : go to state 155
    basicRE : go to state 136
    @5 : go to state 137


state 145
    [ 51: simpleRE => simpleRE basicRE . ]*
    default action: reduce with rule 51


state 146
    [ 54: basicRE => @5 primitiveRE . rePostfix ]*
    [ 55: rePostfix => . "+" ]
    [ 56: rePostfix => . "?" ]
    [ 57: rePostfix => . "*" ]
    [ 58: rePostfix => . ]
    default action: reduce with rule 58
    "?" : shift, and go to state 158
    "*" : shift, and go to state 159
    "+" : shift, and go to state 157
    rePostfix : go to state 156


state 147
    [ 59: primitiveRE => "(" . regexp ")" ]*
    [ 48: regexp => . @4 union ]
    [ 47: @4 => . ]
    default action: reduce with rule 47
    regexp : go to state 160
    @4 : go to state 126


state 148
    [ 60: primitiveRE => "[" . inverse_ setRE_ "]" ]*
    [ 63: inverse_ => . "^" ]
    [ 64: inverse_ => . ]
    default action: reduce with rule 64
    "^" : shift, and go to state 127
    inverse_ : go to state 161


state 149
    [ 61: primitiveRE => "<" . <NAME> ">" ]*
    no default action
    <NAME> : shift, and go to state 162


state 150
    [ 62: primitiveRE => <STRING> . ]*
    default action: reduce with rule 62


state 151
    [ 67: setRE => setRE "," . setREItem ]*
    [ 69: setREItem => . <STRING> ]
    [ 70: setREItem => . <STRING> "-" <STRING> ]
    no default action
    <STRING> : shift, and go to state 140
    setREItem : go to state 163


state 152
    [ 70: setREItem => <STRING> "-" . <STRING> ]*
    no default action
    <STRING> : shift, and go to state 164


state 153
    [ 106: block => @9 "{" innerBlock @10 . "}" ]*
    no default action
    "}" : shift, and go to state 165


state 154
    [ 39: lexAction => @3 "[" lexActions "]" . ]*
    default action: reduce with rule 39


state 155
    [ 49: union => union "|" simpleRE . ]*
    [ 51: simpleRE => simpleRE . basicRE ]*
    [ 54: basicRE => . @5 primitiveRE rePostfix ]
    [ 53: @5 => . ]
    default action: reduce with rule 53
    ">" : reduce with rule 49
    ")" : reduce with rule 49
    "|" : reduce with rule 49
    basicRE : go to state 145
    @5 : go to state 137


state 156
    [ 54: basicRE => @5 primitiveRE rePostfix . ]*
    default action: reduce with rule 54


state 157
    [ 55: rePostfix => "+" . ]*
    default action: reduce with rule 55


state 158
    [ 56: rePostfix => "?" . ]*
    default action: reduce with rule 56


state 159
    [ 57: rePostfix => "*" . ]*
    default action: reduce with rule 57


state 160
    [ 59: primitiveRE => "(" regexp . ")" ]*
    no default action
    ")" : shift, and go to state 166


state 161
    [ 60: primitiveRE => "[" inverse_ . setRE_ "]" ]*
    [ 65: setRE_ => . setRE ]
    [ 66: setRE_ => . ]
    [ 67: setRE => . setRE "," setREItem ]
    [ 68: setRE => . setREItem ]
    [ 69: setREItem => . <STRING> ]
    [ 70: setREItem => . <STRING> "-" <STRING> ]
    default action: reduce with rule 66
    <STRING> : shift, and go to state 140
    setRE_ : go to state 167
    setRE : go to state 138
    setREItem : go to state 139


state 162
    [ 61: primitiveRE => "<" <NAME> . ">" ]*
    no default action
    ">" : shift, and go to state 168


state 163
    [ 67: setRE => setRE "," setREItem . ]*
    default action: reduce with rule 67


state 164
    [ 70: setREItem => <STRING> "-" <STRING> . ]*
    default action: reduce with rule 70


state 165
    [ 106: block => @9 "{" innerBlock @10 "}" . ]*
    default action: reduce with rule 106


state 166
    [ 59: primitiveRE => "(" regexp ")" . ]*
    default action: reduce with rule 59


state 167
    [ 60: primitiveRE => "[" inverse_ setRE_ . "]" ]*
    no default action
    "]" : shift, and go to state 169


state 168
    [ 61: primitiveRE => "<" <NAME> ">" . ]*
    default action: reduce with rule 61


state 169
    [ 60: primitiveRE => "[" inverse_ setRE_ "]" . ]*
    default action: reduce with rule 60


