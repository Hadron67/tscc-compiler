state 0(start)
    [\x9,\xa],\xd,' ' -> state 1
    '"' -> state 2
    '$',['A','Z'],'_',['a','z'] -> state 3
    '%' -> state 4
    ''' -> state 5
    '(' -> state 6
    ')' -> state 7
    '*' -> state 8
    '+' -> state 9
    ',' -> state 10
    '-' -> state 11
    '/' -> state 12
    ':' -> state 13
    ';' -> state 14
    '<' -> state 15
    '=' -> state 16
    '>' -> state 17
    '?' -> state 18
    '[' -> state 19
    ']' -> state 20
    '^' -> state 21
    '{' -> state 22
    '|' -> state 23
    '}' -> state 24

state 1(end 0)
    [\x9,\xa],\xd,' ' -> state 1

state 2
    [\x0,\x9],[\xb,'!'],['#','['],[']',oo) -> state 25
    '"' -> state 26
    '\' -> state 27

state 3(end 3)
    '$',['A','Z'],'_',['a','z'] -> state 28
    ['0','9'] -> state 29

state 4
    '%' -> state 30
    'e' -> state 31
    'h' -> state 32
    'l' -> state 33
    'n' -> state 34
    'o' -> state 35
    'r' -> state 36
    'u' -> state 37

state 5
    [\x0,\x9],[\xb,'&'],['(','['],[']',oo) -> state 38
    ''' -> state 39
    '\' -> state 40

state 6(end 18)

state 7(end 19)

state 8(end 24)

state 9(end 25)

state 10(end 33)

state 11(end 26)

state 12
    '*' -> state 41
    '/' -> state 42

state 13(end 27)

state 14(end 29)

state 15(end 17)

state 16(end 20)
    '>' -> state 43

state 17(end 16)

state 18(end 23)

state 19(end 21)

state 20(end 22)

state 21(end 32)

state 22(end 5)

state 23(end 31)

state 24(end 6)

state 25
    [\x0,\x9],[\xb,'!'],['#','['],[']',oo) -> state 25
    '"' -> state 26
    '\' -> state 27

state 26(end 4)

state 27
    '"',''','\','b','f','n','r','t' -> state 44
    'u','x' -> state 45

state 28(end 3)
    '$',['A','Z'],'_',['a','z'] -> state 28
    ['0','9'] -> state 29

state 29(end 3)
    '$',['A','Z'],'_',['a','z'] -> state 28
    ['0','9'] -> state 29

state 30(end 30)

state 31
    'm' -> state 46
    'x' -> state 47

state 32
    'e' -> state 48

state 33
    'e' -> state 49

state 34
    'o' -> state 50

state 35
    'p' -> state 51

state 36
    'i' -> state 52

state 37
    's' -> state 53

state 38
    [\x0,\x9],[\xb,'&'],['(','['],[']',oo) -> state 38
    ''' -> state 39
    '\' -> state 40

state 39(end 4)

state 40
    '"',''','\','b','f','n','r','t' -> state 54
    'u','x' -> state 55

state 41
    [\x0,')'],['+','.'],['0',oo) -> state 56
    '*' -> state 57
    '/' -> state 58

state 42(end 2)
    [\x0,\x9],[\xb,oo) -> state 59

state 43(end 28)

state 44
    [\x0,\x9],[\xb,'!'],['#','['],[']',oo) -> state 25
    '"' -> state 26
    '\' -> state 27

state 45
    ['0','9'],['A','F'],['a','f'] -> state 60

state 46
    'p' -> state 61

state 47
    't' -> state 62

state 48
    'a' -> state 63

state 49
    'f' -> state 64
    'x' -> state 65

state 50
    'n' -> state 66

state 51
    't' -> state 67

state 52
    'g' -> state 68

state 53
    'e' -> state 69

state 54
    [\x0,\x9],[\xb,'&'],['(','['],[']',oo) -> state 38
    ''' -> state 39
    '\' -> state 40

state 55
    ['0','9'],['A','F'],['a','f'] -> state 70

state 56
    [\x0,')'],['+','.'],['0',oo) -> state 56
    '*' -> state 57
    '/' -> state 71

state 57
    [\x0,'.'],['0',oo) -> state 72
    '/' -> state 73

state 58
    '/' -> state 74

state 59(end 2)
    [\x0,\x9],[\xb,oo) -> state 59

state 60
    [\x0,\x9],[\xb,'!'],['#','/'],[':','@'],['G','['],[']','`'],['g',oo) -> state 25
    '"' -> state 26
    ['0','9'],['A','F'],['a','f'] -> state 75
    '\' -> state 27

state 61
    't' -> state 76

state 62
    'r' -> state 77

state 63
    'd' -> state 78

state 64
    't' -> state 79

state 65(end 8)

state 66
    'a' -> state 80

state 67
    'i' -> state 81

state 68
    'h' -> state 82

state 69(end 12)

state 70
    [\x0,\x9],[\xb,'&'],['(','/'],[':','@'],['G','['],[']','`'],['g',oo) -> state 38
    ''' -> state 39
    ['0','9'],['A','F'],['a','f'] -> state 83
    '\' -> state 40

state 71
    [\x0,')'],['+','.'],['0',oo) -> state 56
    '*' -> state 57
    '/' -> state 71

state 72
    [\x0,')'],['+','.'],['0',oo) -> state 56
    '*' -> state 57
    '/' -> state 58

state 73(end 1)

state 74
    [\x0,')'],['+','.'],['0',oo) -> state 56
    '*' -> state 57
    '/' -> state 58

state 75
    [\x0,\x9],[\xb,'!'],['#','/'],[':','@'],['G','['],[']','`'],['g',oo) -> state 25
    '"' -> state 26
    ['0','9'],['A','F'],['a','f'] -> state 75
    '\' -> state 27

state 76
    'y' -> state 84

state 77
    'a' -> state 85

state 78
    'e' -> state 86

state 79(end 9)

state 80
    's' -> state 87

state 81
    'o' -> state 88

state 82
    't' -> state 89

state 83
    [\x0,\x9],[\xb,'&'],['(','/'],[':','@'],['G','['],[']','`'],['g',oo) -> state 38
    ''' -> state 39
    ['0','9'],['A','F'],['a','f'] -> state 83
    '\' -> state 40

state 84(end 15)

state 85
    '_' -> state 90

state 86
    'r' -> state 91

state 87
    's' -> state 92

state 88
    'n' -> state 93

state 89(end 10)

state 90
    'a' -> state 94

state 91(end 13)

state 92
    'o' -> state 95

state 93(end 7)

state 94
    'r' -> state 96

state 95
    'c' -> state 97

state 96
    'g' -> state 98

state 97(end 11)

state 98(end 14)



state 0(start)(end 34)
    [\x0,'z'],'|',['~',oo) -> state 1
    '{' -> state 2
    '}' -> state 3

state 1(end 34)
    [\x0,'z'],'|',['~',oo) -> state 1

state 2(end 35)

state 3(end 36)



state 0
    [ 0: (accept) => . start <EOF> ]*
    [ 1: start => . options "%%" body "%%" ]
    [ 2: options => . options option ]
    [ 3: options => . ]
    default action: reduce with rule 3
    start : goto state 1
    options : goto state 2


state 1
    [ 0: (accept) => start . <EOF> ]*
    no default action
    <EOF> : shift, and goto state 3


state 2
    [ 1: start => options . "%%" body "%%" ]*
    [ 2: options => options . option ]*
    [ 5: option => . "%lex" @0 states_ "{" lexBody "}" ]
    [ 6: option => . associativeDir assocTokens ]
    [ 7: option => . "%option" "{" optionBody "}" ]
    [ 8: option => . "%header" block ]
    [ 9: option => . "%extra_arg" block ]
    [ 10: associativeDir => . "%left" ]
    [ 11: associativeDir => . "%right" ]
    [ 12: associativeDir => . "%nonassoc" ]
    no default action
    "%option" : shift, and goto state 8
    "%lex" : shift, and goto state 6
    "%left" : shift, and goto state 11
    "%right" : shift, and goto state 12
    "%nonassoc" : shift, and goto state 13
    "%header" : shift, and goto state 9
    "%extra_arg" : shift, and goto state 10
    "%%" : shift, and goto state 4
    option : goto state 5
    associativeDir : goto state 7


state 3
    [ 0: (accept) => start <EOF> . ]*
    default action: reduce with rule 0


state 4
    [ 1: start => options "%%" . body "%%" ]*
    [ 62: body => . body bodyItem ]
    [ 63: body => . bodyItem ]
    [ 64: bodyItem => . compoundRule ]
    [ 66: compoundRule => . <NAME> @5 arrow rules ";" ]
    no default action
    <NAME> : shift, and goto state 17
    body : goto state 14
    bodyItem : goto state 15
    compoundRule : goto state 16


state 5
    [ 2: options => options option . ]*
    default action: reduce with rule 2


state 6
    [ 5: option => "%lex" . @0 states_ "{" lexBody "}" ]*
    [ 4: @0 => . ]
    default action: reduce with rule 4
    @0 : goto state 18


state 7
    [ 6: option => associativeDir . assocTokens ]*
    [ 13: assocTokens => . assocTokens tokenRef ]
    [ 14: assocTokens => . tokenRef ]
    [ 86: tokenRef => . "<" <NAME> ">" ]
    [ 87: tokenRef => . <STRING> ]
    no default action
    <STRING> : shift, and goto state 77
    "<" : shift, and goto state 76
    assocTokens : goto state 19
    tokenRef : goto state 20


state 8
    [ 7: option => "%option" . "{" optionBody "}" ]*
    no default action
    "{" : shift, and goto state 21


state 9
    [ 8: option => "%header" . block ]*
    [ 90: block => . @8 "{" innerBlock @9 "}" ]
    [ 88: @8 => . ]
    default action: reduce with rule 88
    block : goto state 22
    @8 : goto state 101


state 10
    [ 9: option => "%extra_arg" . block ]*
    [ 90: block => . @8 "{" innerBlock @9 "}" ]
    [ 88: @8 => . ]
    default action: reduce with rule 88
    block : goto state 23
    @8 : goto state 101


state 11
    [ 10: associativeDir => "%left" . ]*
    default action: reduce with rule 10


state 12
    [ 11: associativeDir => "%right" . ]*
    default action: reduce with rule 11


state 13
    [ 12: associativeDir => "%nonassoc" . ]*
    default action: reduce with rule 12


state 14
    [ 1: start => options "%%" body . "%%" ]*
    [ 62: body => body . bodyItem ]*
    [ 64: bodyItem => . compoundRule ]
    [ 66: compoundRule => . <NAME> @5 arrow rules ";" ]
    no default action
    <NAME> : shift, and goto state 17
    "%%" : shift, and goto state 24
    bodyItem : goto state 25
    compoundRule : goto state 16


state 15
    [ 63: body => bodyItem . ]*
    default action: reduce with rule 63


state 16
    [ 64: bodyItem => compoundRule . ]*
    default action: reduce with rule 64


state 17
    [ 66: compoundRule => <NAME> . @5 arrow rules ";" ]*
    [ 65: @5 => . ]
    default action: reduce with rule 65
    @5 : goto state 26


state 18
    [ 5: option => "%lex" @0 . states_ "{" lexBody "}" ]*
    [ 17: states_ => . "<" states ">" ]
    [ 18: states_ => . ]
    default action: reduce with rule 18
    "<" : shift, and goto state 28
    states_ : goto state 27


state 19
    [ 6: option => associativeDir assocTokens . ]*
    [ 13: assocTokens => assocTokens . tokenRef ]*
    [ 86: tokenRef => . "<" <NAME> ">" ]
    [ 87: tokenRef => . <STRING> ]
    default action: reduce with rule 6
    <STRING> : shift, and goto state 77
    "<" : shift, and goto state 76
    tokenRef : goto state 29


state 20
    [ 14: assocTokens => tokenRef . ]*
    default action: reduce with rule 14


state 21
    [ 7: option => "%option" "{" . optionBody "}" ]*
    [ 15: optionBody => . optionBody <NAME> "=" <STRING> ]
    [ 16: optionBody => . ]
    default action: reduce with rule 16
    optionBody : goto state 30


state 22
    [ 8: option => "%header" block . ]*
    default action: reduce with rule 8


state 23
    [ 9: option => "%extra_arg" block . ]*
    default action: reduce with rule 9


state 24
    [ 1: start => options "%%" body "%%" . ]*
    default action: reduce with rule 1


state 25
    [ 62: body => body bodyItem . ]*
    default action: reduce with rule 62


state 26
    [ 66: compoundRule => <NAME> @5 . arrow rules ";" ]*
    [ 67: arrow => . ":" ]
    [ 68: arrow => . "=>" ]
    no default action
    ":" : shift, and goto state 32
    "=>" : shift, and goto state 33
    arrow : goto state 31


state 27
    [ 5: option => "%lex" @0 states_ . "{" lexBody "}" ]*
    no default action
    "{" : shift, and goto state 34


state 28
    [ 17: states_ => "<" . states ">" ]*
    [ 19: states => . <NAME> ]
    [ 20: states => . states "," <NAME> ]
    no default action
    <NAME> : shift, and goto state 36
    states : goto state 35


state 29
    [ 13: assocTokens => assocTokens tokenRef . ]*
    default action: reduce with rule 13


state 30
    [ 7: option => "%option" "{" optionBody . "}" ]*
    [ 15: optionBody => optionBody . <NAME> "=" <STRING> ]*
    no default action
    <NAME> : shift, and goto state 38
    "}" : shift, and goto state 37


state 31
    [ 66: compoundRule => <NAME> @5 arrow . rules ";" ]*
    [ 69: rules => . rules "|" rule ]
    [ 70: rules => . rule ]
    [ 72: rule => . @6 ruleHead ruleItems ]
    [ 71: @6 => . ]
    default action: reduce with rule 71
    rules : goto state 39
    rule : goto state 40
    @6 : goto state 41


state 32
    [ 67: arrow => ":" . ]*
    default action: reduce with rule 67


state 33
    [ 68: arrow => "=>" . ]*
    default action: reduce with rule 68


state 34
    [ 5: option => "%lex" @0 states_ "{" . lexBody "}" ]*
    [ 21: lexBody => . lexBody lexBodyItem ]
    [ 22: lexBody => . ]
    default action: reduce with rule 22
    lexBody : goto state 42


state 35
    [ 17: states_ => "<" states . ">" ]*
    [ 20: states => states . "," <NAME> ]*
    no default action
    ">" : shift, and goto state 43
    "," : shift, and goto state 44


state 36
    [ 19: states => <NAME> . ]*
    default action: reduce with rule 19


state 37
    [ 7: option => "%option" "{" optionBody "}" . ]*
    default action: reduce with rule 7


state 38
    [ 15: optionBody => optionBody <NAME> . "=" <STRING> ]*
    no default action
    "=" : shift, and goto state 45


state 39
    [ 66: compoundRule => <NAME> @5 arrow rules . ";" ]*
    [ 69: rules => rules . "|" rule ]*
    no default action
    ";" : shift, and goto state 49
    "|" : shift, and goto state 50


state 40
    [ 70: rules => rule . ]*
    default action: reduce with rule 70


state 41
    [ 72: rule => @6 . ruleHead ruleItems ]*
    [ 73: ruleHead => . "%use" "(" varUseList ")" ]
    [ 74: ruleHead => . ]
    default action: reduce with rule 74
    "%use" : shift, and goto state 52
    ruleHead : goto state 51


state 42
    [ 5: option => "%lex" @0 states_ "{" lexBody . "}" ]*
    [ 21: lexBody => lexBody . lexBodyItem ]*
    [ 24: lexBodyItem => . <NAME> @1 "=" "<" regexp ">" ]
    [ 25: lexBodyItem => . "<" regexp ">" lexAction_ ]
    [ 26: lexBodyItem => . "<" <NAME> ":" regexp ">" lexAction_ ]
    no default action
    <NAME> : shift, and goto state 55
    "}" : shift, and goto state 53
    "<" : shift, and goto state 56
    lexBodyItem : goto state 54


state 43
    [ 17: states_ => "<" states ">" . ]*
    default action: reduce with rule 17


state 44
    [ 20: states => states "," . <NAME> ]*
    no default action
    <NAME> : shift, and goto state 57


state 45
    [ 15: optionBody => optionBody <NAME> "=" . <STRING> ]*
    no default action
    <STRING> : shift, and goto state 58


state 46
    [ 91: innerBlock => innerBlock innerBlockItem . ]*
    default action: reduce with rule 91


state 47
    [ 93: innerBlockItem => <ANY_CODE> . ]*
    default action: reduce with rule 93


state 48
    [ 94: innerBlockItem => block . ]*
    default action: reduce with rule 94


state 49
    [ 66: compoundRule => <NAME> @5 arrow rules ";" . ]*
    default action: reduce with rule 66


state 50
    [ 69: rules => rules "|" . rule ]*
    [ 72: rule => . @6 ruleHead ruleItems ]
    [ 71: @6 => . ]
    default action: reduce with rule 71
    rule : goto state 59
    @6 : goto state 41


state 51
    [ 72: rule => @6 ruleHead . ruleItems ]*
    [ 77: ruleItems => . ruleItems ruleItem ]
    [ 78: ruleItems => . ]
    default action: reduce with rule 78
    ruleItems : goto state 60


state 52
    [ 73: ruleHead => "%use" . "(" varUseList ")" ]*
    no default action
    "(" : shift, and goto state 61


state 53
    [ 5: option => "%lex" @0 states_ "{" lexBody "}" . ]*
    default action: reduce with rule 5


state 54
    [ 21: lexBody => lexBody lexBodyItem . ]*
    default action: reduce with rule 21


state 55
    [ 24: lexBodyItem => <NAME> . @1 "=" "<" regexp ">" ]*
    [ 23: @1 => . ]
    default action: reduce with rule 23
    @1 : goto state 62


state 56
    [ 25: lexBodyItem => "<" . regexp ">" lexAction_ ]*
    [ 26: lexBodyItem => "<" . <NAME> ":" regexp ">" lexAction_ ]*
    [ 39: regexp => . @3 union ]
    [ 38: @3 => . ]
    default action: reduce with rule 38
    <NAME> : shift, and goto state 64
    regexp : goto state 63
    @3 : goto state 92


state 57
    [ 20: states => states "," <NAME> . ]*
    default action: reduce with rule 20


state 58
    [ 15: optionBody => optionBody <NAME> "=" <STRING> . ]*
    default action: reduce with rule 15


state 59
    [ 69: rules => rules "|" rule . ]*
    default action: reduce with rule 69


state 60
    [ 72: rule => @6 ruleHead ruleItems . ]*
    [ 77: ruleItems => ruleItems . ruleItem ]*
    [ 81: ruleItem => . <NAME> ]
    [ 83: ruleItem => . <NAME> "=" @7 <NAME> ]
    [ 84: ruleItem => . itemName tokenRef ]
    [ 85: ruleItem => . itemName lexAction ]
    [ 79: itemName => . <NAME> "=" ]
    [ 80: itemName => . ]
    default action: reduce with rule 80
    <NAME> : shift, and goto state 66
    ";" : reduce with rule 72
    "|" : reduce with rule 72
    itemName : goto state 67
    ruleItem : goto state 65


state 61
    [ 73: ruleHead => "%use" "(" . varUseList ")" ]*
    [ 75: varUseList => . varUseList "," <NAME> ]
    [ 76: varUseList => . <NAME> ]
    no default action
    <NAME> : shift, and goto state 69
    varUseList : goto state 68


state 62
    [ 24: lexBodyItem => <NAME> @1 . "=" "<" regexp ">" ]*
    no default action
    "=" : shift, and goto state 70


state 63
    [ 25: lexBodyItem => "<" regexp . ">" lexAction_ ]*
    no default action
    ">" : shift, and goto state 71


state 64
    [ 26: lexBodyItem => "<" <NAME> . ":" regexp ">" lexAction_ ]*
    no default action
    ":" : shift, and goto state 72


state 65
    [ 77: ruleItems => ruleItems ruleItem . ]*
    default action: reduce with rule 77


state 66
    [ 81: ruleItem => <NAME> . ]*
    [ 83: ruleItem => <NAME> . "=" @7 <NAME> ]*
    [ 79: itemName => <NAME> . "=" ]*
    default action: reduce with rule 81
    "=" : shift, and goto state 73


state 67
    [ 84: ruleItem => itemName . tokenRef ]*
    [ 85: ruleItem => itemName . lexAction ]*
    [ 86: tokenRef => . "<" <NAME> ">" ]
    [ 87: tokenRef => . <STRING> ]
    [ 30: lexAction => . @2 "[" lexActions "]" ]
    [ 31: lexAction => . block ]
    [ 29: @2 => . ]
    [ 90: block => . @8 "{" innerBlock @9 "}" ]
    [ 88: @8 => . ]
    default action: reduce with rule 29
    <STRING> : shift, and goto state 77
    "<" : shift, and goto state 76
    "{" : reduce with rule 88
    lexAction : goto state 75
    @2 : goto state 89
    tokenRef : goto state 74
    block : goto state 90
    @8 : goto state 101


state 68
    [ 73: ruleHead => "%use" "(" varUseList . ")" ]*
    [ 75: varUseList => varUseList . "," <NAME> ]*
    no default action
    ")" : shift, and goto state 78
    "," : shift, and goto state 79


state 69
    [ 76: varUseList => <NAME> . ]*
    default action: reduce with rule 76


state 70
    [ 24: lexBodyItem => <NAME> @1 "=" . "<" regexp ">" ]*
    no default action
    "<" : shift, and goto state 80


state 71
    [ 25: lexBodyItem => "<" regexp ">" . lexAction_ ]*
    [ 27: lexAction_ => . ":" lexAction ]
    [ 28: lexAction_ => . ]
    default action: reduce with rule 28
    ":" : shift, and goto state 82
    lexAction_ : goto state 81


state 72
    [ 26: lexBodyItem => "<" <NAME> ":" . regexp ">" lexAction_ ]*
    [ 39: regexp => . @3 union ]
    [ 38: @3 => . ]
    default action: reduce with rule 38
    regexp : goto state 83
    @3 : goto state 92


state 73
    [ 83: ruleItem => <NAME> "=" . @7 <NAME> ]*
    [ 79: itemName => <NAME> "=" . ]*
    [ 82: @7 => . ]
    default action: reduce with rule 79
    <NAME> : reduce with rule 82
    @7 : goto state 84


state 74
    [ 84: ruleItem => itemName tokenRef . ]*
    default action: reduce with rule 84


state 75
    [ 85: ruleItem => itemName lexAction . ]*
    default action: reduce with rule 85


state 76
    [ 86: tokenRef => "<" . <NAME> ">" ]*
    no default action
    <NAME> : shift, and goto state 85


state 77
    [ 87: tokenRef => <STRING> . ]*
    default action: reduce with rule 87


state 78
    [ 73: ruleHead => "%use" "(" varUseList ")" . ]*
    default action: reduce with rule 73


state 79
    [ 75: varUseList => varUseList "," . <NAME> ]*
    no default action
    <NAME> : shift, and goto state 86


state 80
    [ 24: lexBodyItem => <NAME> @1 "=" "<" . regexp ">" ]*
    [ 39: regexp => . @3 union ]
    [ 38: @3 => . ]
    default action: reduce with rule 38
    regexp : goto state 87
    @3 : goto state 92


state 81
    [ 25: lexBodyItem => "<" regexp ">" lexAction_ . ]*
    default action: reduce with rule 25


state 82
    [ 27: lexAction_ => ":" . lexAction ]*
    [ 30: lexAction => . @2 "[" lexActions "]" ]
    [ 31: lexAction => . block ]
    [ 29: @2 => . ]
    [ 90: block => . @8 "{" innerBlock @9 "}" ]
    [ 88: @8 => . ]
    default action: reduce with rule 29
    "{" : reduce with rule 88
    lexAction : goto state 88
    @2 : goto state 89
    block : goto state 90
    @8 : goto state 101


state 83
    [ 26: lexBodyItem => "<" <NAME> ":" regexp . ">" lexAction_ ]*
    no default action
    ">" : shift, and goto state 91


state 84
    [ 83: ruleItem => <NAME> "=" @7 . <NAME> ]*
    no default action
    <NAME> : shift, and goto state 94


state 85
    [ 86: tokenRef => "<" <NAME> . ">" ]*
    no default action
    ">" : shift, and goto state 95


state 86
    [ 75: varUseList => varUseList "," <NAME> . ]*
    default action: reduce with rule 75


state 87
    [ 24: lexBodyItem => <NAME> @1 "=" "<" regexp . ">" ]*
    no default action
    ">" : shift, and goto state 102


state 88
    [ 27: lexAction_ => ":" lexAction . ]*
    default action: reduce with rule 27


state 89
    [ 30: lexAction => @2 . "[" lexActions "]" ]*
    no default action
    "[" : shift, and goto state 103


state 90
    [ 31: lexAction => block . ]*
    default action: reduce with rule 31


state 91
    [ 26: lexBodyItem => "<" <NAME> ":" regexp ">" . lexAction_ ]*
    [ 27: lexAction_ => . ":" lexAction ]
    [ 28: lexAction_ => . ]
    default action: reduce with rule 28
    ":" : shift, and goto state 82
    lexAction_ : goto state 104


state 92
    [ 39: regexp => @3 . union ]*
    [ 40: union => . union "|" simpleRE ]
    [ 41: union => . simpleRE ]
    [ 42: simpleRE => . simpleRE basicRE ]
    [ 43: simpleRE => . basicRE ]
    [ 45: basicRE => . @4 primitiveRE rePostfix ]
    [ 44: @4 => . ]
    default action: reduce with rule 44
    union : goto state 105
    simpleRE : goto state 106
    basicRE : goto state 107
    @4 : goto state 108


state 93
    [ 54: inverse_ => "^" . ]*
    default action: reduce with rule 54


state 94
    [ 83: ruleItem => <NAME> "=" @7 <NAME> . ]*
    default action: reduce with rule 83


state 95
    [ 86: tokenRef => "<" <NAME> ">" . ]*
    default action: reduce with rule 86


state 96
    [ 33: lexActions => lexActionItem . ]*
    default action: reduce with rule 33


state 97
    [ 34: lexActionItem => "+" . <NAME> ]*
    no default action
    <NAME> : shift, and goto state 113


state 98
    [ 35: lexActionItem => "-" . ]*
    default action: reduce with rule 35


state 99
    [ 36: lexActionItem => block . ]*
    default action: reduce with rule 36


state 100
    [ 37: lexActionItem => "=" . <STRING> ]*
    no default action
    <STRING> : shift, and goto state 114


state 101
    [ 90: block => @8 . "{" innerBlock @9 "}" ]*
    no default action
    "{" : shift, and goto state 115


state 102
    [ 24: lexBodyItem => <NAME> @1 "=" "<" regexp ">" . ]*
    default action: reduce with rule 24


state 103
    [ 30: lexAction => @2 "[" . lexActions "]" ]*
    [ 32: lexActions => . lexActions "," lexActionItem ]
    [ 33: lexActions => . lexActionItem ]
    [ 34: lexActionItem => . "+" <NAME> ]
    [ 35: lexActionItem => . "-" ]
    [ 36: lexActionItem => . block ]
    [ 37: lexActionItem => . "=" <STRING> ]
    [ 90: block => . @8 "{" innerBlock @9 "}" ]
    [ 88: @8 => . ]
    default action: reduce with rule 88
    "=" : shift, and goto state 100
    "+" : shift, and goto state 97
    "-" : shift, and goto state 98
    lexActions : goto state 116
    lexActionItem : goto state 96
    block : goto state 99
    @8 : goto state 101


state 104
    [ 26: lexBodyItem => "<" <NAME> ":" regexp ">" lexAction_ . ]*
    default action: reduce with rule 26


state 105
    [ 39: regexp => @3 union . ]*
    [ 40: union => union . "|" simpleRE ]*
    default action: reduce with rule 39
    "|" : shift, and goto state 117


state 106
    [ 41: union => simpleRE . ]*
    [ 42: simpleRE => simpleRE . basicRE ]*
    [ 45: basicRE => . @4 primitiveRE rePostfix ]
    [ 44: @4 => . ]
    default action: reduce with rule 44
    ">" : reduce with rule 41
    ")" : reduce with rule 41
    "|" : reduce with rule 41
    basicRE : goto state 118
    @4 : goto state 108


state 107
    [ 43: simpleRE => basicRE . ]*
    default action: reduce with rule 43


state 108
    [ 45: basicRE => @4 . primitiveRE rePostfix ]*
    [ 50: primitiveRE => . "(" regexp ")" ]
    [ 51: primitiveRE => . "[" inverse_ setRE_ "]" ]
    [ 52: primitiveRE => . "<" <NAME> ">" ]
    [ 53: primitiveRE => . <STRING> ]
    no default action
    <STRING> : shift, and goto state 123
    "<" : shift, and goto state 122
    "(" : shift, and goto state 120
    "[" : shift, and goto state 121
    primitiveRE : goto state 119


state 109
    [ 56: setRE_ => setRE . ]*
    [ 58: setRE => setRE . "," setREItem ]*
    default action: reduce with rule 56
    "," : shift, and goto state 124


state 110
    [ 59: setRE => setREItem . ]*
    default action: reduce with rule 59


state 111
    [ 60: setREItem => <STRING> . ]*
    [ 61: setREItem => <STRING> . "-" <STRING> ]*
    default action: reduce with rule 60
    "-" : shift, and goto state 125


state 112
    [ 32: lexActions => lexActions "," . lexActionItem ]*
    [ 34: lexActionItem => . "+" <NAME> ]
    [ 35: lexActionItem => . "-" ]
    [ 36: lexActionItem => . block ]
    [ 37: lexActionItem => . "=" <STRING> ]
    [ 90: block => . @8 "{" innerBlock @9 "}" ]
    [ 88: @8 => . ]
    default action: reduce with rule 88
    "=" : shift, and goto state 100
    "+" : shift, and goto state 97
    "-" : shift, and goto state 98
    lexActionItem : goto state 126
    block : goto state 99
    @8 : goto state 101


state 113
    [ 34: lexActionItem => "+" <NAME> . ]*
    default action: reduce with rule 34


state 114
    [ 37: lexActionItem => "=" <STRING> . ]*
    default action: reduce with rule 37


state 115
    [ 90: block => @8 "{" . innerBlock @9 "}" ]*
    [ 91: innerBlock => . innerBlock innerBlockItem ]
    [ 92: innerBlock => . ]
    default action: reduce with rule 92
    innerBlock : goto state 127


state 116
    [ 30: lexAction => @2 "[" lexActions . "]" ]*
    [ 32: lexActions => lexActions . "," lexActionItem ]*
    no default action
    "]" : shift, and goto state 128
    "," : shift, and goto state 112


state 117
    [ 40: union => union "|" . simpleRE ]*
    [ 42: simpleRE => . simpleRE basicRE ]
    [ 43: simpleRE => . basicRE ]
    [ 45: basicRE => . @4 primitiveRE rePostfix ]
    [ 44: @4 => . ]
    default action: reduce with rule 44
    simpleRE : goto state 129
    basicRE : goto state 107
    @4 : goto state 108


state 118
    [ 42: simpleRE => simpleRE basicRE . ]*
    default action: reduce with rule 42


state 119
    [ 45: basicRE => @4 primitiveRE . rePostfix ]*
    [ 46: rePostfix => . "+" ]
    [ 47: rePostfix => . "?" ]
    [ 48: rePostfix => . "*" ]
    [ 49: rePostfix => . ]
    default action: reduce with rule 49
    "?" : shift, and goto state 132
    "*" : shift, and goto state 133
    "+" : shift, and goto state 131
    rePostfix : goto state 130


state 120
    [ 50: primitiveRE => "(" . regexp ")" ]*
    [ 39: regexp => . @3 union ]
    [ 38: @3 => . ]
    default action: reduce with rule 38
    regexp : goto state 134
    @3 : goto state 92


state 121
    [ 51: primitiveRE => "[" . inverse_ setRE_ "]" ]*
    [ 54: inverse_ => . "^" ]
    [ 55: inverse_ => . ]
    default action: reduce with rule 55
    "^" : shift, and goto state 93
    inverse_ : goto state 135


state 122
    [ 52: primitiveRE => "<" . <NAME> ">" ]*
    no default action
    <NAME> : shift, and goto state 136


state 123
    [ 53: primitiveRE => <STRING> . ]*
    default action: reduce with rule 53


state 124
    [ 58: setRE => setRE "," . setREItem ]*
    [ 60: setREItem => . <STRING> ]
    [ 61: setREItem => . <STRING> "-" <STRING> ]
    no default action
    <STRING> : shift, and goto state 111
    setREItem : goto state 137


state 125
    [ 61: setREItem => <STRING> "-" . <STRING> ]*
    no default action
    <STRING> : shift, and goto state 138


state 126
    [ 32: lexActions => lexActions "," lexActionItem . ]*
    default action: reduce with rule 32


state 127
    [ 90: block => @8 "{" innerBlock . @9 "}" ]*
    [ 91: innerBlock => innerBlock . innerBlockItem ]*
    [ 89: @9 => . ]
    [ 93: innerBlockItem => . <ANY_CODE> ]
    [ 94: innerBlockItem => . block ]
    [ 90: block => . @8 "{" innerBlock @9 "}" ]
    [ 88: @8 => . ]
    default action: reduce with rule 88
    <ANY_CODE> : shift, and goto state 47
    "}" : reduce with rule 89
    block : goto state 48
    @8 : goto state 101
    @9 : goto state 139
    innerBlockItem : goto state 46


state 128
    [ 30: lexAction => @2 "[" lexActions "]" . ]*
    default action: reduce with rule 30


state 129
    [ 40: union => union "|" simpleRE . ]*
    [ 42: simpleRE => simpleRE . basicRE ]*
    [ 45: basicRE => . @4 primitiveRE rePostfix ]
    [ 44: @4 => . ]
    default action: reduce with rule 44
    ">" : reduce with rule 40
    ")" : reduce with rule 40
    "|" : reduce with rule 40
    basicRE : goto state 118
    @4 : goto state 108


state 130
    [ 45: basicRE => @4 primitiveRE rePostfix . ]*
    default action: reduce with rule 45


state 131
    [ 46: rePostfix => "+" . ]*
    default action: reduce with rule 46


state 132
    [ 47: rePostfix => "?" . ]*
    default action: reduce with rule 47


state 133
    [ 48: rePostfix => "*" . ]*
    default action: reduce with rule 48


state 134
    [ 50: primitiveRE => "(" regexp . ")" ]*
    no default action
    ")" : shift, and goto state 140


state 135
    [ 51: primitiveRE => "[" inverse_ . setRE_ "]" ]*
    [ 56: setRE_ => . setRE ]
    [ 57: setRE_ => . ]
    [ 58: setRE => . setRE "," setREItem ]
    [ 59: setRE => . setREItem ]
    [ 60: setREItem => . <STRING> ]
    [ 61: setREItem => . <STRING> "-" <STRING> ]
    default action: reduce with rule 57
    <STRING> : shift, and goto state 111
    setRE_ : goto state 141
    setRE : goto state 109
    setREItem : goto state 110


state 136
    [ 52: primitiveRE => "<" <NAME> . ">" ]*
    no default action
    ">" : shift, and goto state 142


state 137
    [ 58: setRE => setRE "," setREItem . ]*
    default action: reduce with rule 58


state 138
    [ 61: setREItem => <STRING> "-" <STRING> . ]*
    default action: reduce with rule 61


state 139
    [ 90: block => @8 "{" innerBlock @9 . "}" ]*
    no default action
    "}" : shift, and goto state 143


state 140
    [ 50: primitiveRE => "(" regexp ")" . ]*
    default action: reduce with rule 50


state 141
    [ 51: primitiveRE => "[" inverse_ setRE_ . "]" ]*
    no default action
    "]" : shift, and goto state 144


state 142
    [ 52: primitiveRE => "<" <NAME> ">" . ]*
    default action: reduce with rule 52


state 143
    [ 90: block => @8 "{" innerBlock @9 "}" . ]*
    default action: reduce with rule 90


state 144
    [ 51: primitiveRE => "[" inverse_ setRE_ "]" . ]*
    default action: reduce with rule 51


