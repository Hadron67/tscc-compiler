state 0
    [ 0: (accept) => . start <EOF> ]*
    default action: reduce with rule 4
    start : go to state 1
    options : go to state 2


state 1
    [ 0: (accept) => start . <EOF> ]*
    no default action
    <EOF> : shift, and go to state 3


state 2
    [ 2: start => options . "%%" body "%%" @0 epilogue ]*
    [ 3: options => options . option ]*
    no default action
    "%option" : shift, and go to state 8
    "%lex" : shift, and go to state 6
    "%token" : shift, and go to state 14
    "%left" : shift, and go to state 17
    "%right" : shift, and go to state 18
    "%nonassoc" : shift, and go to state 19
    "%header" : shift, and go to state 9
    "%extra_arg" : shift, and go to state 10
    "%type" : shift, and go to state 11
    "%init" : shift, and go to state 12
    "%output" : shift, and go to state 13
    "%token_hook" : shift, and go to state 15
    "%touch" : shift, and go to state 16
    "%%" : shift, and go to state 4
    option : go to state 5
    associativeDir : go to state 7


state 3
    [ 0: (accept) => start <EOF> . ]*
    default action: reduce with rule 0


state 4
    [ 2: start => options "%%" . body "%%" @0 epilogue ]*
    no default action
    <NAME> : shift, and go to state 23
    body : go to state 20
    bodyItem : go to state 21
    compoundRule : go to state 22


state 5
    [ 3: options => options option . ]*
    default action: reduce with rule 3


state 6
    [ 6: option => "%lex" . @1 states_ "{" lexBody "}" ]*
    default action: reduce with rule 5
    @1 : go to state 24


state 7
    [ 7: option => associativeDir . assocTokens ]*
    no default action
    <NAME> : shift, and go to state 28
    <STRING> : shift, and go to state 120
    "<" : shift, and go to state 119
    assocTokens : go to state 25
    assocToken : go to state 26
    tokenRef : go to state 27


state 8
    [ 8: option => "%option" . "{" optionBody "}" ]*
    no default action
    "{" : shift, and go to state 29


state 9
    [ 9: option => "%header" . block ]*
    no default action
    "{" : shift, and go to state 31
    block : go to state 30


state 10
    [ 10: option => "%extra_arg" . block ]*
    no default action
    "{" : shift, and go to state 31
    block : go to state 32


state 11
    [ 11: option => "%type" . block ]*
    no default action
    "{" : shift, and go to state 31
    block : go to state 33


state 12
    [ 12: option => "%init" . block block ]*
    no default action
    "{" : shift, and go to state 31
    block : go to state 34


state 13
    [ 13: option => "%output" . <STRING> ]*
    no default action
    <STRING> : shift, and go to state 35


state 14
    [ 14: option => "%token" . tokenDefs ]*
    no default action
    "<" : shift, and go to state 37
    tokenDefs : go to state 36


state 15
    [ 15: option => "%token_hook" . "(" <NAME> ")" block ]*
    no default action
    "(" : shift, and go to state 38


state 16
    [ 16: option => "%touch" . touchTokenList ]*
    no default action
    <STRING> : shift, and go to state 120
    "<" : shift, and go to state 119
    touchTokenList : go to state 39
    tokenRef : go to state 40


state 17
    [ 23: associativeDir => "%left" . ]*
    default action: reduce with rule 23


state 18
    [ 24: associativeDir => "%right" . ]*
    default action: reduce with rule 24


state 19
    [ 25: associativeDir => "%nonassoc" . ]*
    default action: reduce with rule 25


state 20
    [ 2: start => options "%%" body . "%%" @0 epilogue ]*
    [ 83: body => body . bodyItem ]*
    no default action
    <NAME> : shift, and go to state 23
    "%%" : shift, and go to state 41
    bodyItem : go to state 42
    compoundRule : go to state 22


state 21
    [ 84: body => bodyItem . ]*
    default action: reduce with rule 84


state 22
    [ 85: bodyItem => compoundRule . ]*
    default action: reduce with rule 85


state 23
    [ 87: compoundRule => <NAME> . @7 arrow rules ";" ]*
    default action: reduce with rule 86
    @7 : go to state 43


state 24
    [ 6: option => "%lex" @1 . states_ "{" lexBody "}" ]*
    default action: reduce with rule 33
    "<" : shift, and go to state 45
    states_ : go to state 44


state 25
    [ 7: option => associativeDir assocTokens . ]*
    [ 26: assocTokens => assocTokens . assocToken ]*
    default action: reduce with rule 7
    <NAME> : shift, and go to state 28
    <STRING> : shift, and go to state 120
    "<" : shift, and go to state 119
    assocToken : go to state 46
    tokenRef : go to state 27


state 26
    [ 27: assocTokens => assocToken . ]*
    default action: reduce with rule 27


state 27
    [ 28: assocToken => tokenRef . ]*
    default action: reduce with rule 28


state 28
    [ 29: assocToken => <NAME> . ]*
    default action: reduce with rule 29


state 29
    [ 8: option => "%option" "{" . optionBody "}" ]*
    default action: reduce with rule 31
    optionBody : go to state 47


state 30
    [ 9: option => "%header" block . ]*
    default action: reduce with rule 9


state 31
    [ 118: block => "{" . @10 innerBlock "}" @11 ]*
    default action: reduce with rule 116
    @10 : go to state 48


state 32
    [ 10: option => "%extra_arg" block . ]*
    default action: reduce with rule 10


state 33
    [ 11: option => "%type" block . ]*
    default action: reduce with rule 11


state 34
    [ 12: option => "%init" block . block ]*
    no default action
    "{" : shift, and go to state 31
    block : go to state 49


state 35
    [ 13: option => "%output" <STRING> . ]*
    default action: reduce with rule 13


state 36
    [ 14: option => "%token" tokenDefs . ]*
    [ 17: tokenDefs => tokenDefs . "<" <NAME> ">" ]*
    default action: reduce with rule 14
    "<" : shift, and go to state 50


state 37
    [ 18: tokenDefs => "<" . <NAME> ">" ]*
    no default action
    <NAME> : shift, and go to state 51


state 38
    [ 15: option => "%token_hook" "(" . <NAME> ")" block ]*
    no default action
    <NAME> : shift, and go to state 52


state 39
    [ 16: option => "%touch" touchTokenList . ]*
    [ 19: touchTokenList => touchTokenList . tokenRef ]*
    default action: reduce with rule 16
    <STRING> : shift, and go to state 120
    "<" : shift, and go to state 119
    tokenRef : go to state 53


state 40
    [ 20: touchTokenList => tokenRef . ]*
    default action: reduce with rule 20


state 41
    [ 2: start => options "%%" body "%%" . @0 epilogue ]*
    default action: reduce with rule 1
    @0 : go to state 54


state 42
    [ 83: body => body bodyItem . ]*
    default action: reduce with rule 83


state 43
    [ 87: compoundRule => <NAME> @7 . arrow rules ";" ]*
    no default action
    ":" : shift, and go to state 56
    "=>" : shift, and go to state 57
    arrow : go to state 55


state 44
    [ 6: option => "%lex" @1 states_ . "{" lexBody "}" ]*
    no default action
    "{" : shift, and go to state 58


state 45
    [ 32: states_ => "<" . states ">" ]*
    no default action
    <NAME> : shift, and go to state 60
    states : go to state 59


state 46
    [ 26: assocTokens => assocTokens assocToken . ]*
    default action: reduce with rule 26


state 47
    [ 8: option => "%option" "{" optionBody . "}" ]*
    [ 30: optionBody => optionBody . <NAME> "=" <STRING> ]*
    no default action
    <NAME> : shift, and go to state 62
    "}" : shift, and go to state 61


state 48
    [ 118: block => "{" @10 . innerBlock "}" @11 ]*
    default action: reduce with rule 120
    innerBlock : go to state 63


state 49
    [ 12: option => "%init" block block . ]*
    default action: reduce with rule 12


state 50
    [ 17: tokenDefs => tokenDefs "<" . <NAME> ">" ]*
    no default action
    <NAME> : shift, and go to state 64


state 51
    [ 18: tokenDefs => "<" <NAME> . ">" ]*
    no default action
    ">" : shift, and go to state 65


state 52
    [ 15: option => "%token_hook" "(" <NAME> . ")" block ]*
    no default action
    ")" : shift, and go to state 66


state 53
    [ 19: touchTokenList => touchTokenList tokenRef . ]*
    default action: reduce with rule 19


state 54
    [ 2: start => options "%%" body "%%" @0 . epilogue ]*
    default action: reduce with rule 21
    <ANY_CODE> : shift, and go to state 68
    epilogue : go to state 67


state 55
    [ 87: compoundRule => <NAME> @7 arrow . rules ";" ]*
    default action: reduce with rule 92
    rules : go to state 69
    rule : go to state 70
    @8 : go to state 71


state 56
    [ 88: arrow => ":" . ]*
    default action: reduce with rule 88


state 57
    [ 89: arrow => "=>" . ]*
    default action: reduce with rule 89


state 58
    [ 6: option => "%lex" @1 states_ "{" . lexBody "}" ]*
    default action: reduce with rule 37
    lexBody : go to state 72


state 59
    [ 32: states_ => "<" states . ">" ]*
    [ 35: states => states . "," <NAME> ]*
    no default action
    ">" : shift, and go to state 73
    "," : shift, and go to state 74


state 60
    [ 34: states => <NAME> . ]*
    default action: reduce with rule 34


state 61
    [ 8: option => "%option" "{" optionBody "}" . ]*
    default action: reduce with rule 8


state 62
    [ 30: optionBody => optionBody <NAME> . "=" <STRING> ]*
    no default action
    "=" : shift, and go to state 75


state 63
    [ 118: block => "{" @10 innerBlock . "}" @11 ]*
    [ 119: innerBlock => innerBlock . innerBlockItem ]*
    no default action
    "{" : shift, and go to state 79
    "}" : shift, and go to state 76
    <ANY_CODE> : shift, and go to state 78
    innerBlockItem : go to state 77


state 64
    [ 17: tokenDefs => tokenDefs "<" <NAME> . ">" ]*
    no default action
    ">" : shift, and go to state 80


state 65
    [ 18: tokenDefs => "<" <NAME> ">" . ]*
    default action: reduce with rule 18


state 66
    [ 15: option => "%token_hook" "(" <NAME> ")" . block ]*
    no default action
    "{" : shift, and go to state 31
    block : go to state 81


state 67
    [ 2: start => options "%%" body "%%" @0 epilogue . ]*
    default action: reduce with rule 2


state 68
    [ 22: epilogue => <ANY_CODE> . ]*
    default action: reduce with rule 22


state 69
    [ 87: compoundRule => <NAME> @7 arrow rules . ";" ]*
    [ 90: rules => rules . "|" rule ]*
    no default action
    ";" : shift, and go to state 82
    "|" : shift, and go to state 83


state 70
    [ 91: rules => rule . ]*
    default action: reduce with rule 91


state 71
    [ 93: rule => @8 . ruleHead ruleBody ruleTrailer ]*
    default action: reduce with rule 95
    "%use" : shift, and go to state 85
    ruleHead : go to state 84


state 72
    [ 6: option => "%lex" @1 states_ "{" lexBody . "}" ]*
    [ 36: lexBody => lexBody . lexBodyItem ]*
    default action: reduce with rule 42
    <NAME> : shift, and go to state 88
    "}" : shift, and go to state 86
    lexBodyItem : go to state 87
    newState : go to state 89


state 73
    [ 32: states_ => "<" states ">" . ]*
    default action: reduce with rule 32


state 74
    [ 35: states => states "," . <NAME> ]*
    no default action
    <NAME> : shift, and go to state 90


state 75
    [ 30: optionBody => optionBody <NAME> "=" . <STRING> ]*
    no default action
    <STRING> : shift, and go to state 91


state 76
    [ 118: block => "{" @10 innerBlock "}" . @11 ]*
    default action: reduce with rule 117
    @11 : go to state 92


state 77
    [ 119: innerBlock => innerBlock innerBlockItem . ]*
    default action: reduce with rule 119


state 78
    [ 121: innerBlockItem => <ANY_CODE> . ]*
    default action: reduce with rule 121


state 79
    [ 124: innerBlockItem => "{" . @12 innerBlock "}" @13 ]*
    default action: reduce with rule 122
    @12 : go to state 93


state 80
    [ 17: tokenDefs => tokenDefs "<" <NAME> ">" . ]*
    default action: reduce with rule 17


state 81
    [ 15: option => "%token_hook" "(" <NAME> ")" block . ]*
    default action: reduce with rule 15


state 82
    [ 87: compoundRule => <NAME> @7 arrow rules ";" . ]*
    default action: reduce with rule 87


state 83
    [ 90: rules => rules "|" . rule ]*
    default action: reduce with rule 92
    rule : go to state 94
    @8 : go to state 71


state 84
    [ 93: rule => @8 ruleHead . ruleBody ruleTrailer ]*
    default action: reduce with rule 101
    "%empty" : shift, and go to state 97
    ruleBody : go to state 95
    ruleItems : go to state 96


state 85
    [ 94: ruleHead => "%use" . "(" varUseList ")" ]*
    no default action
    "(" : shift, and go to state 98


state 86
    [ 6: option => "%lex" @1 states_ "{" lexBody "}" . ]*
    default action: reduce with rule 6


state 87
    [ 36: lexBody => lexBody lexBodyItem . ]*
    default action: reduce with rule 36


state 88
    [ 39: lexBodyItem => <NAME> . @2 "=" "<" regexp ">" ]*
    default action: reduce with rule 38
    @2 : go to state 99


state 89
    [ 40: lexBodyItem => newState . "<" regexp ">" lexAction_ ]*
    [ 41: lexBodyItem => newState . "<" <NAME> ":" regexp ">" lexAction_ ]*
    no default action
    "<" : shift, and go to state 100


state 90
    [ 35: states => states "," <NAME> . ]*
    default action: reduce with rule 35


state 91
    [ 30: optionBody => optionBody <NAME> "=" <STRING> . ]*
    default action: reduce with rule 30


state 92
    [ 118: block => "{" @10 innerBlock "}" @11 . ]*
    default action: reduce with rule 118


state 93
    [ 124: innerBlockItem => "{" @12 . innerBlock "}" @13 ]*
    default action: reduce with rule 120
    innerBlock : go to state 101


state 94
    [ 90: rules => rules "|" rule . ]*
    default action: reduce with rule 90


state 95
    [ 93: rule => @8 ruleHead ruleBody . ruleTrailer ]*
    default action: reduce with rule 111
    "%prec" : shift, and go to state 104
    ruleTrailer : go to state 102
    rulePrec : go to state 103


state 96
    [ 98: ruleBody => ruleItems . ]*
    [ 100: ruleItems => ruleItems . ruleItem ]*
    default action: reduce with rule 103
    <NAME> : shift, and go to state 106
    "%prec" : reduce with rule 98
    ";" : reduce with rule 98
    "|" : reduce with rule 98
    itemName : go to state 107
    ruleItem : go to state 105


state 97
    [ 99: ruleBody => "%empty" . ]*
    default action: reduce with rule 99


state 98
    [ 94: ruleHead => "%use" "(" . varUseList ")" ]*
    no default action
    <NAME> : shift, and go to state 109
    varUseList : go to state 108


state 99
    [ 39: lexBodyItem => <NAME> @2 . "=" "<" regexp ">" ]*
    no default action
    "=" : shift, and go to state 110


state 100
    [ 40: lexBodyItem => newState "<" . regexp ">" lexAction_ ]*
    [ 41: lexBodyItem => newState "<" . <NAME> ":" regexp ">" lexAction_ ]*
    default action: reduce with rule 58
    <NAME> : shift, and go to state 112
    "%least" : shift, and go to state 114
    regexp : go to state 111
    innerRegexp : go to state 113
    @5 : go to state 152


state 101
    [ 124: innerBlockItem => "{" @12 innerBlock . "}" @13 ]*
    [ 119: innerBlock => innerBlock . innerBlockItem ]*
    no default action
    "{" : shift, and go to state 79
    "}" : shift, and go to state 115
    <ANY_CODE> : shift, and go to state 78
    innerBlockItem : go to state 77


state 102
    [ 93: rule => @8 ruleHead ruleBody ruleTrailer . ]*
    default action: reduce with rule 93


state 103
    [ 112: ruleTrailer => rulePrec . ]*
    [ 113: ruleTrailer => rulePrec . lexAction ]*
    default action: reduce with rule 47
    "[" : reduce with rule 45
    ";" : reduce with rule 112
    "|" : reduce with rule 112
    lexAction : go to state 116
    @3 : go to state 149
    @4 : go to state 150


state 104
    [ 114: rulePrec => "%prec" . <NAME> ]*
    [ 115: rulePrec => "%prec" . tokenRef ]*
    no default action
    <NAME> : shift, and go to state 117
    <STRING> : shift, and go to state 120
    "<" : shift, and go to state 119
    tokenRef : go to state 118


state 105
    [ 100: ruleItems => ruleItems ruleItem . ]*
    default action: reduce with rule 100


state 106
    [ 104: ruleItem => <NAME> . ]*
    [ 106: ruleItem => <NAME> . "=" @9 <NAME> ]*
    [ 102: itemName => <NAME> . "=" ]*
    default action: reduce with rule 104
    "=" : shift, and go to state 121


state 107
    [ 107: ruleItem => itemName . tokenRef ]*
    [ 108: ruleItem => itemName . lexAction ]*
    default action: reduce with rule 47
    <STRING> : shift, and go to state 120
    "<" : shift, and go to state 119
    "[" : reduce with rule 45
    lexAction : go to state 123
    @3 : go to state 149
    @4 : go to state 150
    tokenRef : go to state 122


state 108
    [ 94: ruleHead => "%use" "(" varUseList . ")" ]*
    [ 96: varUseList => varUseList . "," <NAME> ]*
    no default action
    ")" : shift, and go to state 124
    "," : shift, and go to state 125


state 109
    [ 97: varUseList => <NAME> . ]*
    default action: reduce with rule 97


state 110
    [ 39: lexBodyItem => <NAME> @2 "=" . "<" regexp ">" ]*
    no default action
    "<" : shift, and go to state 126


state 111
    [ 40: lexBodyItem => newState "<" regexp . ">" lexAction_ ]*
    no default action
    ">" : shift, and go to state 127


state 112
    [ 41: lexBodyItem => newState "<" <NAME> . ":" regexp ">" lexAction_ ]*
    no default action
    ":" : shift, and go to state 128


state 113
    [ 56: regexp => innerRegexp . ]*
    default action: reduce with rule 56


state 114
    [ 57: regexp => "%least" . innerRegexp ]*
    default action: reduce with rule 58
    innerRegexp : go to state 129
    @5 : go to state 152


state 115
    [ 124: innerBlockItem => "{" @12 innerBlock "}" . @13 ]*
    default action: reduce with rule 123
    @13 : go to state 130


state 116
    [ 113: ruleTrailer => rulePrec lexAction . ]*
    default action: reduce with rule 113


state 117
    [ 114: rulePrec => "%prec" <NAME> . ]*
    default action: reduce with rule 114


state 118
    [ 115: rulePrec => "%prec" tokenRef . ]*
    default action: reduce with rule 115


state 119
    [ 109: tokenRef => "<" . <NAME> ">" ]*
    no default action
    <NAME> : shift, and go to state 132


state 120
    [ 110: tokenRef => <STRING> . ]*
    default action: reduce with rule 110


state 121
    [ 106: ruleItem => <NAME> "=" . @9 <NAME> ]*
    [ 102: itemName => <NAME> "=" . ]*
    default action: reduce with rule 102
    <NAME> : reduce with rule 105
    @9 : go to state 133


state 122
    [ 107: ruleItem => itemName tokenRef . ]*
    default action: reduce with rule 107


state 123
    [ 108: ruleItem => itemName lexAction . ]*
    default action: reduce with rule 108


state 124
    [ 94: ruleHead => "%use" "(" varUseList ")" . ]*
    default action: reduce with rule 94


state 125
    [ 96: varUseList => varUseList "," . <NAME> ]*
    no default action
    <NAME> : shift, and go to state 134


state 126
    [ 39: lexBodyItem => <NAME> @2 "=" "<" . regexp ">" ]*
    default action: reduce with rule 58
    "%least" : shift, and go to state 114
    regexp : go to state 135
    innerRegexp : go to state 113
    @5 : go to state 152


state 127
    [ 40: lexBodyItem => newState "<" regexp ">" . lexAction_ ]*
    default action: reduce with rule 44
    ":" : shift, and go to state 137
    lexAction_ : go to state 136


state 128
    [ 41: lexBodyItem => newState "<" <NAME> ":" . regexp ">" lexAction_ ]*
    default action: reduce with rule 58
    "%least" : shift, and go to state 114
    regexp : go to state 138
    innerRegexp : go to state 113
    @5 : go to state 152


state 129
    [ 57: regexp => "%least" innerRegexp . ]*
    default action: reduce with rule 57


state 130
    [ 124: innerBlockItem => "{" @12 innerBlock "}" @13 . ]*
    default action: reduce with rule 124


state 131
    [ 129: always => "%always" . ]*
    default action: reduce with rule 129


state 132
    [ 109: tokenRef => "<" <NAME> . ">" ]*
    no default action
    ">" : shift, and go to state 145


state 133
    [ 106: ruleItem => <NAME> "=" @9 . <NAME> ]*
    no default action
    <NAME> : shift, and go to state 146


state 134
    [ 96: varUseList => varUseList "," <NAME> . ]*
    default action: reduce with rule 96


state 135
    [ 39: lexBodyItem => <NAME> @2 "=" "<" regexp . ">" ]*
    no default action
    ">" : shift, and go to state 147


state 136
    [ 40: lexBodyItem => newState "<" regexp ">" lexAction_ . ]*
    default action: reduce with rule 40


state 137
    [ 43: lexAction_ => ":" . lexAction ]*
    default action: reduce with rule 47
    "[" : reduce with rule 45
    lexAction : go to state 148
    @3 : go to state 149
    @4 : go to state 150


state 138
    [ 41: lexBodyItem => newState "<" <NAME> ":" regexp . ">" lexAction_ ]*
    no default action
    ">" : shift, and go to state 151


state 139
    [ 50: lexActions => lexActionItem . ]*
    default action: reduce with rule 50


state 140
    [ 51: lexActionItem => "+" . <NAME> ]*
    no default action
    <NAME> : shift, and go to state 155


state 141
    [ 52: lexActionItem => "-" . ]*
    default action: reduce with rule 52


state 142
    [ 53: lexActionItem => "=>" . <NAME> ]*
    no default action
    <NAME> : shift, and go to state 156


state 143
    [ 54: lexActionItem => "=" . <STRING> ]*
    no default action
    <STRING> : shift, and go to state 157


state 144
    [ 55: lexActionItem => actionBlock . ]*
    default action: reduce with rule 55


state 145
    [ 109: tokenRef => "<" <NAME> ">" . ]*
    default action: reduce with rule 109


state 146
    [ 106: ruleItem => <NAME> "=" @9 <NAME> . ]*
    default action: reduce with rule 106


state 147
    [ 39: lexBodyItem => <NAME> @2 "=" "<" regexp ">" . ]*
    default action: reduce with rule 39


state 148
    [ 43: lexAction_ => ":" lexAction . ]*
    default action: reduce with rule 43


state 149
    [ 46: lexAction => @3 . "[" lexActions "]" ]*
    no default action
    "[" : shift, and go to state 158


state 150
    [ 48: lexAction => @4 . actionBlock ]*
    default action: reduce with rule 130
    "%always" : shift, and go to state 131
    actionBlock : go to state 159
    always : go to state 160


state 151
    [ 41: lexBodyItem => newState "<" <NAME> ":" regexp ">" . lexAction_ ]*
    default action: reduce with rule 44
    ":" : shift, and go to state 137
    lexAction_ : go to state 161


state 152
    [ 59: innerRegexp => @5 . union ]*
    default action: reduce with rule 64
    union : go to state 162
    simpleRE : go to state 163
    basicRE : go to state 164
    @6 : go to state 165


state 153
    [ 75: inverse_ => "^" . ]*
    default action: reduce with rule 75


state 154
    [ 49: lexActions => lexActions "," . lexActionItem ]*
    default action: reduce with rule 130
    "%always" : shift, and go to state 131
    "=" : shift, and go to state 143
    "+" : shift, and go to state 140
    "-" : shift, and go to state 141
    "=>" : shift, and go to state 142
    lexActionItem : go to state 169
    actionBlock : go to state 144
    always : go to state 160


state 155
    [ 51: lexActionItem => "+" <NAME> . ]*
    default action: reduce with rule 51


state 156
    [ 53: lexActionItem => "=>" <NAME> . ]*
    default action: reduce with rule 53


state 157
    [ 54: lexActionItem => "=" <STRING> . ]*
    default action: reduce with rule 54


state 158
    [ 46: lexAction => @3 "[" . lexActions "]" ]*
    default action: reduce with rule 130
    "%always" : shift, and go to state 131
    "=" : shift, and go to state 143
    "+" : shift, and go to state 140
    "-" : shift, and go to state 141
    "=>" : shift, and go to state 142
    lexActions : go to state 170
    lexActionItem : go to state 139
    actionBlock : go to state 144
    always : go to state 160


state 159
    [ 48: lexAction => @4 actionBlock . ]*
    default action: reduce with rule 48


state 160
    [ 128: actionBlock => always . "{" @14 @15 innerActionBlock "}" @16 ]*
    no default action
    "{" : shift, and go to state 171


state 161
    [ 41: lexBodyItem => newState "<" <NAME> ":" regexp ">" lexAction_ . ]*
    default action: reduce with rule 41


state 162
    [ 59: innerRegexp => @5 union . ]*
    [ 60: union => union . "|" simpleRE ]*
    default action: reduce with rule 59
    "|" : shift, and go to state 172


state 163
    [ 61: union => simpleRE . ]*
    [ 62: simpleRE => simpleRE . basicRE ]*
    default action: reduce with rule 64
    ">" : reduce with rule 61
    ")" : reduce with rule 61
    "|" : reduce with rule 61
    basicRE : go to state 173
    @6 : go to state 165


state 164
    [ 63: simpleRE => basicRE . ]*
    default action: reduce with rule 63


state 165
    [ 65: basicRE => @6 . primitiveRE rePostfix ]*
    no default action
    <STRING> : shift, and go to state 179
    "%import" : shift, and go to state 178
    "<" : shift, and go to state 177
    "(" : shift, and go to state 175
    "[" : shift, and go to state 176
    primitiveRE : go to state 174


state 166
    [ 77: setRE_ => setRE . ]*
    [ 79: setRE => setRE . "," setREItem ]*
    default action: reduce with rule 77
    "," : shift, and go to state 180


state 167
    [ 80: setRE => setREItem . ]*
    default action: reduce with rule 80


state 168
    [ 81: setREItem => <STRING> . ]*
    [ 82: setREItem => <STRING> . "-" <STRING> ]*
    default action: reduce with rule 81
    "-" : shift, and go to state 181


state 169
    [ 49: lexActions => lexActions "," lexActionItem . ]*
    default action: reduce with rule 49


state 170
    [ 46: lexAction => @3 "[" lexActions . "]" ]*
    [ 49: lexActions => lexActions . "," lexActionItem ]*
    no default action
    "]" : shift, and go to state 182
    "," : shift, and go to state 154


state 171
    [ 128: actionBlock => always "{" . @14 @15 innerActionBlock "}" @16 ]*
    default action: reduce with rule 125
    @14 : go to state 183


state 172
    [ 60: union => union "|" . simpleRE ]*
    default action: reduce with rule 64
    simpleRE : go to state 184
    basicRE : go to state 164
    @6 : go to state 165


state 173
    [ 62: simpleRE => simpleRE basicRE . ]*
    default action: reduce with rule 62


state 174
    [ 65: basicRE => @6 primitiveRE . rePostfix ]*
    default action: reduce with rule 69
    "?" : shift, and go to state 187
    "*" : shift, and go to state 188
    "+" : shift, and go to state 186
    rePostfix : go to state 185


state 175
    [ 70: primitiveRE => "(" . innerRegexp ")" ]*
    default action: reduce with rule 58
    innerRegexp : go to state 189
    @5 : go to state 152


state 176
    [ 71: primitiveRE => "[" . inverse_ setRE_ "]" ]*
    default action: reduce with rule 76
    "^" : shift, and go to state 153
    inverse_ : go to state 190


state 177
    [ 72: primitiveRE => "<" . <NAME> ">" ]*
    no default action
    <NAME> : shift, and go to state 191


state 178
    [ 73: primitiveRE => "%import" . "(" <STRING> ")" ]*
    no default action
    "(" : shift, and go to state 192


state 179
    [ 74: primitiveRE => <STRING> . ]*
    default action: reduce with rule 74


state 180
    [ 79: setRE => setRE "," . setREItem ]*
    no default action
    <STRING> : shift, and go to state 168
    setREItem : go to state 193


state 181
    [ 82: setREItem => <STRING> "-" . <STRING> ]*
    no default action
    <STRING> : shift, and go to state 194


state 182
    [ 46: lexAction => @3 "[" lexActions "]" . ]*
    default action: reduce with rule 46


state 183
    [ 128: actionBlock => always "{" @14 . @15 innerActionBlock "}" @16 ]*
    default action: reduce with rule 126
    @15 : go to state 202


state 184
    [ 60: union => union "|" simpleRE . ]*
    [ 62: simpleRE => simpleRE . basicRE ]*
    default action: reduce with rule 64
    ">" : reduce with rule 60
    ")" : reduce with rule 60
    "|" : reduce with rule 60
    basicRE : go to state 173
    @6 : go to state 165


state 185
    [ 65: basicRE => @6 primitiveRE rePostfix . ]*
    default action: reduce with rule 65


state 186
    [ 66: rePostfix => "+" . ]*
    default action: reduce with rule 66


state 187
    [ 67: rePostfix => "?" . ]*
    default action: reduce with rule 67


state 188
    [ 68: rePostfix => "*" . ]*
    default action: reduce with rule 68


state 189
    [ 70: primitiveRE => "(" innerRegexp . ")" ]*
    no default action
    ")" : shift, and go to state 203


state 190
    [ 71: primitiveRE => "[" inverse_ . setRE_ "]" ]*
    default action: reduce with rule 78
    <STRING> : shift, and go to state 168
    setRE_ : go to state 204
    setRE : go to state 166
    setREItem : go to state 167


state 191
    [ 72: primitiveRE => "<" <NAME> . ">" ]*
    no default action
    ">" : shift, and go to state 205


state 192
    [ 73: primitiveRE => "%import" "(" . <STRING> ")" ]*
    no default action
    <STRING> : shift, and go to state 206


state 193
    [ 79: setRE => setRE "," setREItem . ]*
    default action: reduce with rule 79


state 194
    [ 82: setREItem => <STRING> "-" <STRING> . ]*
    default action: reduce with rule 82


state 195
    [ 131: innerActionBlock => innerActionBlock innerActionBlockItem . ]*
    default action: reduce with rule 131


state 196
    [ 133: innerActionBlockItem => <ANY_CODE> . ]*
    default action: reduce with rule 133


state 197
    [ 134: innerActionBlockItem => "$$" . ]*
    default action: reduce with rule 134


state 198
    [ 135: innerActionBlockItem => "$token" . ]*
    default action: reduce with rule 135


state 199
    [ 136: innerActionBlockItem => "$matched" . ]*
    default action: reduce with rule 136


state 200
    [ 137: innerActionBlockItem => <EMIT_TOKEN> . ]*
    default action: reduce with rule 137


state 201
    [ 141: innerActionBlockItem => "{" . @17 @18 innerActionBlock "}" @19 ]*
    default action: reduce with rule 138
    @17 : go to state 207


state 202
    [ 128: actionBlock => always "{" @14 @15 . innerActionBlock "}" @16 ]*
    default action: reduce with rule 132
    innerActionBlock : go to state 208


state 203
    [ 70: primitiveRE => "(" innerRegexp ")" . ]*
    default action: reduce with rule 70


state 204
    [ 71: primitiveRE => "[" inverse_ setRE_ . "]" ]*
    no default action
    "]" : shift, and go to state 209


state 205
    [ 72: primitiveRE => "<" <NAME> ">" . ]*
    default action: reduce with rule 72


state 206
    [ 73: primitiveRE => "%import" "(" <STRING> . ")" ]*
    no default action
    ")" : shift, and go to state 210


state 207
    [ 141: innerActionBlockItem => "{" @17 . @18 innerActionBlock "}" @19 ]*
    default action: reduce with rule 139
    @18 : go to state 211


state 208
    [ 128: actionBlock => always "{" @14 @15 innerActionBlock . "}" @16 ]*
    [ 131: innerActionBlock => innerActionBlock . innerActionBlockItem ]*
    no default action
    "{" : shift, and go to state 201
    "}" : shift, and go to state 212
    <ANY_CODE> : shift, and go to state 196
    "$$" : shift, and go to state 197
    "$token" : shift, and go to state 198
    "$matched" : shift, and go to state 199
    <EMIT_TOKEN> : shift, and go to state 200
    innerActionBlockItem : go to state 195


state 209
    [ 71: primitiveRE => "[" inverse_ setRE_ "]" . ]*
    default action: reduce with rule 71


state 210
    [ 73: primitiveRE => "%import" "(" <STRING> ")" . ]*
    default action: reduce with rule 73


state 211
    [ 141: innerActionBlockItem => "{" @17 @18 . innerActionBlock "}" @19 ]*
    default action: reduce with rule 132
    innerActionBlock : go to state 213


state 212
    [ 128: actionBlock => always "{" @14 @15 innerActionBlock "}" . @16 ]*
    default action: reduce with rule 127
    @16 : go to state 214


state 213
    [ 141: innerActionBlockItem => "{" @17 @18 innerActionBlock . "}" @19 ]*
    [ 131: innerActionBlock => innerActionBlock . innerActionBlockItem ]*
    no default action
    "{" : shift, and go to state 201
    "}" : shift, and go to state 215
    <ANY_CODE> : shift, and go to state 196
    "$$" : shift, and go to state 197
    "$token" : shift, and go to state 198
    "$matched" : shift, and go to state 199
    <EMIT_TOKEN> : shift, and go to state 200
    innerActionBlockItem : go to state 195


state 214
    [ 128: actionBlock => always "{" @14 @15 innerActionBlock "}" @16 . ]*
    default action: reduce with rule 128


state 215
    [ 141: innerActionBlockItem => "{" @17 @18 innerActionBlock "}" . @19 ]*
    default action: reduce with rule 140
    @19 : go to state 216


state 216
    [ 141: innerActionBlockItem => "{" @17 @18 innerActionBlock "}" @19 . ]*
    default action: reduce with rule 141


