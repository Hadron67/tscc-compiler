state 0(start)
    [\x9,\xa],\xd,' ' -> state 1
    '(' -> state 2
    ')' -> state 3
    '*' -> state 4
    '+' -> state 5
    '-' -> state 6
    '.' -> state 7
    '/' -> state 8
    ['0','9'] -> state 9

state 1(end 0)
    [\x9,\xa],\xd,' ' -> state 1

state 2(end 6)

state 3(end 7)

state 4(end 4)

state 5(end 2)

state 6(end 3)

state 7
    ['0','9'] -> state 10

state 8(end 5)

state 9(end 1)
    '.' -> state 11
    ['0','9'] -> state 9
    'E','e' -> state 12

state 10(end 1)
    ['0','9'] -> state 10
    'E','e' -> state 12

state 11(end 1)
    ['0','9'] -> state 13
    'E','e' -> state 12

state 12
    ['0','9'] -> state 14

state 13(end 1)
    ['0','9'] -> state 13
    'E','e' -> state 12

state 14(end 1)
    ['0','9'] -> state 14



state 0
    [ 0: (accept) => . start <EOF> ]*
    [ 1: start => . expr ]
    [ 2: expr => . expr "+" expr ]
    [ 3: expr => . expr "-" expr ]
    [ 4: expr => . expr "*" expr ]
    [ 5: expr => . expr "/" expr ]
    [ 6: expr => . "+" expr ]
    [ 7: expr => . "-" expr ]
    [ 8: expr => . "(" expr ")" ]
    [ 9: expr => . <NUM> ]
    no default action
    <NUM> : shift, and goto state 3
    "+" : shift, and goto state 5
    "-" : shift, and goto state 6
    "(" : shift, and goto state 7
    start : goto state 1
    expr : goto state 2


state 1
    [ 0: (accept) => start . <EOF> ]*
    no default action
    <EOF> : shift, and goto state 4


state 2
    [ 1: start => expr . ]*
    [ 2: expr => expr . "+" expr ]*
    [ 3: expr => expr . "-" expr ]*
    [ 4: expr => expr . "*" expr ]*
    [ 5: expr => expr . "/" expr ]*
    default action: reduce with rule 1
    "+" : shift, and goto state 8
    "-" : shift, and goto state 9
    "*" : shift, and goto state 10
    "/" : shift, and goto state 11


state 3
    [ 9: expr => <NUM> . ]*
    default action: reduce with rule 9


state 4
    [ 0: (accept) => start <EOF> . ]*
    default action: reduce with rule 0


state 5
    [ 6: expr => "+" . expr ]*
    [ 2: expr => . expr "+" expr ]
    [ 3: expr => . expr "-" expr ]
    [ 4: expr => . expr "*" expr ]
    [ 5: expr => . expr "/" expr ]
    [ 6: expr => . "+" expr ]
    [ 7: expr => . "-" expr ]
    [ 8: expr => . "(" expr ")" ]
    [ 9: expr => . <NUM> ]
    no default action
    <NUM> : shift, and goto state 3
    "+" : shift, and goto state 5
    "-" : shift, and goto state 6
    "(" : shift, and goto state 7
    expr : goto state 12


state 6
    [ 7: expr => "-" . expr ]*
    [ 2: expr => . expr "+" expr ]
    [ 3: expr => . expr "-" expr ]
    [ 4: expr => . expr "*" expr ]
    [ 5: expr => . expr "/" expr ]
    [ 6: expr => . "+" expr ]
    [ 7: expr => . "-" expr ]
    [ 8: expr => . "(" expr ")" ]
    [ 9: expr => . <NUM> ]
    no default action
    <NUM> : shift, and goto state 3
    "+" : shift, and goto state 5
    "-" : shift, and goto state 6
    "(" : shift, and goto state 7
    expr : goto state 13


state 7
    [ 8: expr => "(" . expr ")" ]*
    [ 2: expr => . expr "+" expr ]
    [ 3: expr => . expr "-" expr ]
    [ 4: expr => . expr "*" expr ]
    [ 5: expr => . expr "/" expr ]
    [ 6: expr => . "+" expr ]
    [ 7: expr => . "-" expr ]
    [ 8: expr => . "(" expr ")" ]
    [ 9: expr => . <NUM> ]
    no default action
    <NUM> : shift, and goto state 3
    "+" : shift, and goto state 5
    "-" : shift, and goto state 6
    "(" : shift, and goto state 7
    expr : goto state 14


state 8
    [ 2: expr => expr "+" . expr ]*
    [ 2: expr => . expr "+" expr ]
    [ 3: expr => . expr "-" expr ]
    [ 4: expr => . expr "*" expr ]
    [ 5: expr => . expr "/" expr ]
    [ 6: expr => . "+" expr ]
    [ 7: expr => . "-" expr ]
    [ 8: expr => . "(" expr ")" ]
    [ 9: expr => . <NUM> ]
    no default action
    <NUM> : shift, and goto state 3
    "+" : shift, and goto state 5
    "-" : shift, and goto state 6
    "(" : shift, and goto state 7
    expr : goto state 15


state 9
    [ 3: expr => expr "-" . expr ]*
    [ 2: expr => . expr "+" expr ]
    [ 3: expr => . expr "-" expr ]
    [ 4: expr => . expr "*" expr ]
    [ 5: expr => . expr "/" expr ]
    [ 6: expr => . "+" expr ]
    [ 7: expr => . "-" expr ]
    [ 8: expr => . "(" expr ")" ]
    [ 9: expr => . <NUM> ]
    no default action
    <NUM> : shift, and goto state 3
    "+" : shift, and goto state 5
    "-" : shift, and goto state 6
    "(" : shift, and goto state 7
    expr : goto state 16


state 10
    [ 4: expr => expr "*" . expr ]*
    [ 2: expr => . expr "+" expr ]
    [ 3: expr => . expr "-" expr ]
    [ 4: expr => . expr "*" expr ]
    [ 5: expr => . expr "/" expr ]
    [ 6: expr => . "+" expr ]
    [ 7: expr => . "-" expr ]
    [ 8: expr => . "(" expr ")" ]
    [ 9: expr => . <NUM> ]
    no default action
    <NUM> : shift, and goto state 3
    "+" : shift, and goto state 5
    "-" : shift, and goto state 6
    "(" : shift, and goto state 7
    expr : goto state 17


state 11
    [ 5: expr => expr "/" . expr ]*
    [ 2: expr => . expr "+" expr ]
    [ 3: expr => . expr "-" expr ]
    [ 4: expr => . expr "*" expr ]
    [ 5: expr => . expr "/" expr ]
    [ 6: expr => . "+" expr ]
    [ 7: expr => . "-" expr ]
    [ 8: expr => . "(" expr ")" ]
    [ 9: expr => . <NUM> ]
    no default action
    <NUM> : shift, and goto state 3
    "+" : shift, and goto state 5
    "-" : shift, and goto state 6
    "(" : shift, and goto state 7
    expr : goto state 18


state 12
    [ 6: expr => "+" expr . ]*
    [ 2: expr => expr . "+" expr ]*
    [ 3: expr => expr . "-" expr ]*
    [ 4: expr => expr . "*" expr ]*
    [ 5: expr => expr . "/" expr ]*
    default action: reduce with rule 6


state 13
    [ 7: expr => "-" expr . ]*
    [ 2: expr => expr . "+" expr ]*
    [ 3: expr => expr . "-" expr ]*
    [ 4: expr => expr . "*" expr ]*
    [ 5: expr => expr . "/" expr ]*
    default action: reduce with rule 7


state 14
    [ 8: expr => "(" expr . ")" ]*
    [ 2: expr => expr . "+" expr ]*
    [ 3: expr => expr . "-" expr ]*
    [ 4: expr => expr . "*" expr ]*
    [ 5: expr => expr . "/" expr ]*
    no default action
    "+" : shift, and goto state 8
    "-" : shift, and goto state 9
    "*" : shift, and goto state 10
    "/" : shift, and goto state 11
    ")" : shift, and goto state 19


state 15
    [ 2: expr => expr "+" expr . ]*
    [ 2: expr => expr . "+" expr ]*
    [ 3: expr => expr . "-" expr ]*
    [ 4: expr => expr . "*" expr ]*
    [ 5: expr => expr . "/" expr ]*
    default action: reduce with rule 2
    "*" : shift, and goto state 10
    "/" : shift, and goto state 11


state 16
    [ 3: expr => expr "-" expr . ]*
    [ 2: expr => expr . "+" expr ]*
    [ 3: expr => expr . "-" expr ]*
    [ 4: expr => expr . "*" expr ]*
    [ 5: expr => expr . "/" expr ]*
    default action: reduce with rule 3
    "*" : shift, and goto state 10
    "/" : shift, and goto state 11


state 17
    [ 4: expr => expr "*" expr . ]*
    [ 2: expr => expr . "+" expr ]*
    [ 3: expr => expr . "-" expr ]*
    [ 4: expr => expr . "*" expr ]*
    [ 5: expr => expr . "/" expr ]*
    default action: reduce with rule 4


state 18
    [ 5: expr => expr "/" expr . ]*
    [ 2: expr => expr . "+" expr ]*
    [ 3: expr => expr . "-" expr ]*
    [ 4: expr => expr . "*" expr ]*
    [ 5: expr => expr . "/" expr ]*
    default action: reduce with rule 5


state 19
    [ 8: expr => "(" expr ")" . ]*
    default action: reduce with rule 8


