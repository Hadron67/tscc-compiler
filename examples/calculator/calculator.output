\x9 -> c0, \xa -> c0, \xd -> c0, ' ' -> c0, '(' -> c1, ')' -> c2, '*' -> c3, '+' -> c4, '-' -> c5, '.' -> c6, '/' -> c7, 
'0' -> c8, '1' -> c8, '2' -> c8, '3' -> c8, '4' -> c8, '5' -> c8, '6' -> c8, '7' -> c8, '8' -> c8, '9' -> c8, 'E' -> c9, 
'I' -> c10, 'J' -> c11, 'K' -> c12, 'e' -> c13, 'i' -> c10, 'j' -> c11, 'k' -> c12, 'p' -> c14, 'x' -> c15, '|' -> c16, 

state 0:
    c0: state 1
    c1: state 2
    c2: state 3
    c3: state 4
    c4: state 5
    c5: state 6
    c6: state 7
    c7: state 8
    c8: state 9
    c13: state 10
    c16: state 11
state 1:
    end = 0
    c0: state 1
state 2:
    end = 10
state 3:
    end = 11
state 4:
    end = 7
state 5:
    end = 5
state 6:
    end = 6
state 7:
    c8: state 12
state 8:
    end = 8
state 9:
    end = 1
    c6: state 13
    c8: state 9
    c9: state 14
    c10: state 15
    c11: state 16
    c12: state 17
    c13: state 14
state 10:
    c15: state 18
state 11:
    end = 9
state 12:
    end = 1
    c8: state 12
    c9: state 14
    c10: state 15
    c11: state 16
    c12: state 17
    c13: state 14
state 13:
    end = 1
    c8: state 19
    c9: state 14
    c10: state 15
    c11: state 16
    c12: state 17
    c13: state 14
state 14:
    c8: state 20
state 15:
    end = 2
state 16:
    end = 3
state 17:
    end = 4
state 18:
    c14: state 21
state 19:
    end = 1
    c8: state 19
    c9: state 14
    c10: state 15
    c11: state 16
    c12: state 17
    c13: state 14
state 20:
    end = 1
    c8: state 20
    c10: state 15
    c11: state 16
    c12: state 17
state 21:
    end = 12


state 0
    [ 0: (accept) => . start <EOF> ]*
    [ 1: start => . expr ]
    [ 2: expr => . expr "+" expr ]
    [ 3: expr => . expr "-" expr ]
    [ 4: expr => . expr "*" expr ]
    [ 5: expr => . expr "/" expr ]
    [ 6: expr => . "+" expr ]
    [ 7: expr => . "-" expr ]
    [ 8: expr => . expr "*" ]
    [ 9: expr => . "(" expr ")" ]
    [ 10: expr => . "|" expr "|" ]
    [ 11: expr => . <CONST> ]
    [ 12: expr => . <I> ]
    [ 13: expr => . <J> ]
    [ 14: expr => . <K> ]
    [ 15: expr => . funcs ]
    [ 16: funcs => . "exp" "(" expr ")" ]
    no default action
    <CONST> : shift, and go to state 3
    <I> : shift, and go to state 4
    <J> : shift, and go to state 5
    <K> : shift, and go to state 6
    "+" : shift, and go to state 10
    "-" : shift, and go to state 11
    "|" : shift, and go to state 13
    "(" : shift, and go to state 12
    "exp" : shift, and go to state 8
    start : go to state 1
    expr : go to state 2
    funcs : go to state 7


state 1
    [ 0: (accept) => start . <EOF> ]*
    no default action
    <EOF> : shift, and go to state 9


state 2
    [ 1: start => expr . ]*
    [ 2: expr => expr . "+" expr ]*
    [ 3: expr => expr . "-" expr ]*
    [ 4: expr => expr . "*" expr ]*
    [ 5: expr => expr . "/" expr ]*
    [ 8: expr => expr . "*" ]*
    default action: reduce with rule 1
    "+" : shift, and go to state 15
    "-" : shift, and go to state 16
    "*" : shift, and go to state 17
    "/" : shift, and go to state 18


state 3
    [ 11: expr => <CONST> . ]*
    default action: reduce with rule 11


state 4
    [ 12: expr => <I> . ]*
    default action: reduce with rule 12


state 5
    [ 13: expr => <J> . ]*
    default action: reduce with rule 13


state 6
    [ 14: expr => <K> . ]*
    default action: reduce with rule 14


state 7
    [ 15: expr => funcs . ]*
    default action: reduce with rule 15


state 8
    [ 16: funcs => "exp" . "(" expr ")" ]*
    no default action
    "(" : shift, and go to state 14


state 9
    [ 0: (accept) => start <EOF> . ]*
    default action: reduce with rule 0


state 10
    [ 6: expr => "+" . expr ]*
    [ 2: expr => . expr "+" expr ]
    [ 3: expr => . expr "-" expr ]
    [ 4: expr => . expr "*" expr ]
    [ 5: expr => . expr "/" expr ]
    [ 6: expr => . "+" expr ]
    [ 7: expr => . "-" expr ]
    [ 8: expr => . expr "*" ]
    [ 9: expr => . "(" expr ")" ]
    [ 10: expr => . "|" expr "|" ]
    [ 11: expr => . <CONST> ]
    [ 12: expr => . <I> ]
    [ 13: expr => . <J> ]
    [ 14: expr => . <K> ]
    [ 15: expr => . funcs ]
    [ 16: funcs => . "exp" "(" expr ")" ]
    no default action
    <CONST> : shift, and go to state 3
    <I> : shift, and go to state 4
    <J> : shift, and go to state 5
    <K> : shift, and go to state 6
    "+" : shift, and go to state 10
    "-" : shift, and go to state 11
    "|" : shift, and go to state 13
    "(" : shift, and go to state 12
    "exp" : shift, and go to state 8
    expr : go to state 19
    funcs : go to state 7


state 11
    [ 7: expr => "-" . expr ]*
    [ 2: expr => . expr "+" expr ]
    [ 3: expr => . expr "-" expr ]
    [ 4: expr => . expr "*" expr ]
    [ 5: expr => . expr "/" expr ]
    [ 6: expr => . "+" expr ]
    [ 7: expr => . "-" expr ]
    [ 8: expr => . expr "*" ]
    [ 9: expr => . "(" expr ")" ]
    [ 10: expr => . "|" expr "|" ]
    [ 11: expr => . <CONST> ]
    [ 12: expr => . <I> ]
    [ 13: expr => . <J> ]
    [ 14: expr => . <K> ]
    [ 15: expr => . funcs ]
    [ 16: funcs => . "exp" "(" expr ")" ]
    no default action
    <CONST> : shift, and go to state 3
    <I> : shift, and go to state 4
    <J> : shift, and go to state 5
    <K> : shift, and go to state 6
    "+" : shift, and go to state 10
    "-" : shift, and go to state 11
    "|" : shift, and go to state 13
    "(" : shift, and go to state 12
    "exp" : shift, and go to state 8
    expr : go to state 20
    funcs : go to state 7


state 12
    [ 9: expr => "(" . expr ")" ]*
    [ 2: expr => . expr "+" expr ]
    [ 3: expr => . expr "-" expr ]
    [ 4: expr => . expr "*" expr ]
    [ 5: expr => . expr "/" expr ]
    [ 6: expr => . "+" expr ]
    [ 7: expr => . "-" expr ]
    [ 8: expr => . expr "*" ]
    [ 9: expr => . "(" expr ")" ]
    [ 10: expr => . "|" expr "|" ]
    [ 11: expr => . <CONST> ]
    [ 12: expr => . <I> ]
    [ 13: expr => . <J> ]
    [ 14: expr => . <K> ]
    [ 15: expr => . funcs ]
    [ 16: funcs => . "exp" "(" expr ")" ]
    no default action
    <CONST> : shift, and go to state 3
    <I> : shift, and go to state 4
    <J> : shift, and go to state 5
    <K> : shift, and go to state 6
    "+" : shift, and go to state 10
    "-" : shift, and go to state 11
    "|" : shift, and go to state 13
    "(" : shift, and go to state 12
    "exp" : shift, and go to state 8
    expr : go to state 21
    funcs : go to state 7


state 13
    [ 10: expr => "|" . expr "|" ]*
    [ 2: expr => . expr "+" expr ]
    [ 3: expr => . expr "-" expr ]
    [ 4: expr => . expr "*" expr ]
    [ 5: expr => . expr "/" expr ]
    [ 6: expr => . "+" expr ]
    [ 7: expr => . "-" expr ]
    [ 8: expr => . expr "*" ]
    [ 9: expr => . "(" expr ")" ]
    [ 10: expr => . "|" expr "|" ]
    [ 11: expr => . <CONST> ]
    [ 12: expr => . <I> ]
    [ 13: expr => . <J> ]
    [ 14: expr => . <K> ]
    [ 15: expr => . funcs ]
    [ 16: funcs => . "exp" "(" expr ")" ]
    no default action
    <CONST> : shift, and go to state 3
    <I> : shift, and go to state 4
    <J> : shift, and go to state 5
    <K> : shift, and go to state 6
    "+" : shift, and go to state 10
    "-" : shift, and go to state 11
    "|" : shift, and go to state 13
    "(" : shift, and go to state 12
    "exp" : shift, and go to state 8
    expr : go to state 22
    funcs : go to state 7


state 14
    [ 16: funcs => "exp" "(" . expr ")" ]*
    [ 2: expr => . expr "+" expr ]
    [ 3: expr => . expr "-" expr ]
    [ 4: expr => . expr "*" expr ]
    [ 5: expr => . expr "/" expr ]
    [ 6: expr => . "+" expr ]
    [ 7: expr => . "-" expr ]
    [ 8: expr => . expr "*" ]
    [ 9: expr => . "(" expr ")" ]
    [ 10: expr => . "|" expr "|" ]
    [ 11: expr => . <CONST> ]
    [ 12: expr => . <I> ]
    [ 13: expr => . <J> ]
    [ 14: expr => . <K> ]
    [ 15: expr => . funcs ]
    [ 16: funcs => . "exp" "(" expr ")" ]
    no default action
    <CONST> : shift, and go to state 3
    <I> : shift, and go to state 4
    <J> : shift, and go to state 5
    <K> : shift, and go to state 6
    "+" : shift, and go to state 10
    "-" : shift, and go to state 11
    "|" : shift, and go to state 13
    "(" : shift, and go to state 12
    "exp" : shift, and go to state 8
    expr : go to state 23
    funcs : go to state 7


state 15
    [ 2: expr => expr "+" . expr ]*
    [ 2: expr => . expr "+" expr ]
    [ 3: expr => . expr "-" expr ]
    [ 4: expr => . expr "*" expr ]
    [ 5: expr => . expr "/" expr ]
    [ 6: expr => . "+" expr ]
    [ 7: expr => . "-" expr ]
    [ 8: expr => . expr "*" ]
    [ 9: expr => . "(" expr ")" ]
    [ 10: expr => . "|" expr "|" ]
    [ 11: expr => . <CONST> ]
    [ 12: expr => . <I> ]
    [ 13: expr => . <J> ]
    [ 14: expr => . <K> ]
    [ 15: expr => . funcs ]
    [ 16: funcs => . "exp" "(" expr ")" ]
    no default action
    <CONST> : shift, and go to state 3
    <I> : shift, and go to state 4
    <J> : shift, and go to state 5
    <K> : shift, and go to state 6
    "+" : shift, and go to state 10
    "-" : shift, and go to state 11
    "|" : shift, and go to state 13
    "(" : shift, and go to state 12
    "exp" : shift, and go to state 8
    expr : go to state 24
    funcs : go to state 7


state 16
    [ 3: expr => expr "-" . expr ]*
    [ 2: expr => . expr "+" expr ]
    [ 3: expr => . expr "-" expr ]
    [ 4: expr => . expr "*" expr ]
    [ 5: expr => . expr "/" expr ]
    [ 6: expr => . "+" expr ]
    [ 7: expr => . "-" expr ]
    [ 8: expr => . expr "*" ]
    [ 9: expr => . "(" expr ")" ]
    [ 10: expr => . "|" expr "|" ]
    [ 11: expr => . <CONST> ]
    [ 12: expr => . <I> ]
    [ 13: expr => . <J> ]
    [ 14: expr => . <K> ]
    [ 15: expr => . funcs ]
    [ 16: funcs => . "exp" "(" expr ")" ]
    no default action
    <CONST> : shift, and go to state 3
    <I> : shift, and go to state 4
    <J> : shift, and go to state 5
    <K> : shift, and go to state 6
    "+" : shift, and go to state 10
    "-" : shift, and go to state 11
    "|" : shift, and go to state 13
    "(" : shift, and go to state 12
    "exp" : shift, and go to state 8
    expr : go to state 25
    funcs : go to state 7


state 17
    [ 4: expr => expr "*" . expr ]*
    [ 8: expr => expr "*" . ]*
    [ 2: expr => . expr "+" expr ]
    [ 3: expr => . expr "-" expr ]
    [ 4: expr => . expr "*" expr ]
    [ 5: expr => . expr "/" expr ]
    [ 6: expr => . "+" expr ]
    [ 7: expr => . "-" expr ]
    [ 8: expr => . expr "*" ]
    [ 9: expr => . "(" expr ")" ]
    [ 10: expr => . "|" expr "|" ]
    [ 11: expr => . <CONST> ]
    [ 12: expr => . <I> ]
    [ 13: expr => . <J> ]
    [ 14: expr => . <K> ]
    [ 15: expr => . funcs ]
    [ 16: funcs => . "exp" "(" expr ")" ]
    default action: reduce with rule 8
    <CONST> : shift, and go to state 3
    <I> : shift, and go to state 4
    <J> : shift, and go to state 5
    <K> : shift, and go to state 6
    "|" : shift, and go to state 13
    "(" : shift, and go to state 12
    "exp" : shift, and go to state 8
    expr : go to state 26
    funcs : go to state 7


state 18
    [ 5: expr => expr "/" . expr ]*
    [ 2: expr => . expr "+" expr ]
    [ 3: expr => . expr "-" expr ]
    [ 4: expr => . expr "*" expr ]
    [ 5: expr => . expr "/" expr ]
    [ 6: expr => . "+" expr ]
    [ 7: expr => . "-" expr ]
    [ 8: expr => . expr "*" ]
    [ 9: expr => . "(" expr ")" ]
    [ 10: expr => . "|" expr "|" ]
    [ 11: expr => . <CONST> ]
    [ 12: expr => . <I> ]
    [ 13: expr => . <J> ]
    [ 14: expr => . <K> ]
    [ 15: expr => . funcs ]
    [ 16: funcs => . "exp" "(" expr ")" ]
    no default action
    <CONST> : shift, and go to state 3
    <I> : shift, and go to state 4
    <J> : shift, and go to state 5
    <K> : shift, and go to state 6
    "+" : shift, and go to state 10
    "-" : shift, and go to state 11
    "|" : shift, and go to state 13
    "(" : shift, and go to state 12
    "exp" : shift, and go to state 8
    expr : go to state 27
    funcs : go to state 7


state 19
    [ 6: expr => "+" expr . ]*
    [ 2: expr => expr . "+" expr ]*
    [ 3: expr => expr . "-" expr ]*
    [ 4: expr => expr . "*" expr ]*
    [ 5: expr => expr . "/" expr ]*
    [ 8: expr => expr . "*" ]*
    default action: reduce with rule 6


state 20
    [ 7: expr => "-" expr . ]*
    [ 2: expr => expr . "+" expr ]*
    [ 3: expr => expr . "-" expr ]*
    [ 4: expr => expr . "*" expr ]*
    [ 5: expr => expr . "/" expr ]*
    [ 8: expr => expr . "*" ]*
    default action: reduce with rule 7


state 21
    [ 9: expr => "(" expr . ")" ]*
    [ 2: expr => expr . "+" expr ]*
    [ 3: expr => expr . "-" expr ]*
    [ 4: expr => expr . "*" expr ]*
    [ 5: expr => expr . "/" expr ]*
    [ 8: expr => expr . "*" ]*
    no default action
    "+" : shift, and go to state 15
    "-" : shift, and go to state 16
    "*" : shift, and go to state 17
    "/" : shift, and go to state 18
    ")" : shift, and go to state 28


state 22
    [ 10: expr => "|" expr . "|" ]*
    [ 2: expr => expr . "+" expr ]*
    [ 3: expr => expr . "-" expr ]*
    [ 4: expr => expr . "*" expr ]*
    [ 5: expr => expr . "/" expr ]*
    [ 8: expr => expr . "*" ]*
    no default action
    "+" : shift, and go to state 15
    "-" : shift, and go to state 16
    "*" : shift, and go to state 17
    "/" : shift, and go to state 18
    "|" : shift, and go to state 29


state 23
    [ 16: funcs => "exp" "(" expr . ")" ]*
    [ 2: expr => expr . "+" expr ]*
    [ 3: expr => expr . "-" expr ]*
    [ 4: expr => expr . "*" expr ]*
    [ 5: expr => expr . "/" expr ]*
    [ 8: expr => expr . "*" ]*
    no default action
    "+" : shift, and go to state 15
    "-" : shift, and go to state 16
    "*" : shift, and go to state 17
    "/" : shift, and go to state 18
    ")" : shift, and go to state 30


state 24
    [ 2: expr => expr "+" expr . ]*
    [ 2: expr => expr . "+" expr ]*
    [ 3: expr => expr . "-" expr ]*
    [ 4: expr => expr . "*" expr ]*
    [ 5: expr => expr . "/" expr ]*
    [ 8: expr => expr . "*" ]*
    default action: reduce with rule 2
    "*" : shift, and go to state 17
    "/" : shift, and go to state 18


state 25
    [ 3: expr => expr "-" expr . ]*
    [ 2: expr => expr . "+" expr ]*
    [ 3: expr => expr . "-" expr ]*
    [ 4: expr => expr . "*" expr ]*
    [ 5: expr => expr . "/" expr ]*
    [ 8: expr => expr . "*" ]*
    default action: reduce with rule 3
    "*" : shift, and go to state 17
    "/" : shift, and go to state 18


state 26
    [ 4: expr => expr "*" expr . ]*
    [ 2: expr => expr . "+" expr ]*
    [ 3: expr => expr . "-" expr ]*
    [ 4: expr => expr . "*" expr ]*
    [ 5: expr => expr . "/" expr ]*
    [ 8: expr => expr . "*" ]*
    default action: reduce with rule 4


state 27
    [ 5: expr => expr "/" expr . ]*
    [ 2: expr => expr . "+" expr ]*
    [ 3: expr => expr . "-" expr ]*
    [ 4: expr => expr . "*" expr ]*
    [ 5: expr => expr . "/" expr ]*
    [ 8: expr => expr . "*" ]*
    default action: reduce with rule 5


state 28
    [ 9: expr => "(" expr ")" . ]*
    default action: reduce with rule 9


state 29
    [ 10: expr => "|" expr "|" . ]*
    default action: reduce with rule 10


state 30
    [ 16: funcs => "exp" "(" expr ")" . ]*
    default action: reduce with rule 16


