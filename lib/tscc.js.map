{"version":3,"file":"tscc.js","sources":["../src/util/io.ts","../src/util/common.ts","../src/util/bitset.ts","../src/grammar/token-set.ts","../src/grammar/item-set.ts","../src/util/list.ts","../src/grammar/token-entry.ts","../src/grammar/ptable.ts","../src/grammar/ptable-gen.ts","../src/top/parse-test.ts","../src/util/E.ts","../src/util/compress.ts","../src/util/initarray.ts","../src/grammar/ptable-compress.ts","../src/grammar/grammar.ts","../src/parser/file.ts","../src/util/interval-set.ts","../src/lexer/char-set.ts","../src/lexer/state.ts","../src/lexer/dfa.ts","../src/util/coroutine.ts","../src/parser/node.ts","../src/lexer/builder.ts","../src/lexer/action.ts","../src/parser/gbuilder.ts","../src/parser/parser.ts","../src/codegen/templates/ts.ts","../src/codegen/template.ts","../src/util/class-detect.ts","../src/lexer/dfa-table.ts","../src/top/result.ts","../src/main.ts"],"sourcesContent":["\nexport var endl = '\\n';\n\nexport abstract class OutputStream {\n    abstract write(s?: string | number): any;\n    writeln(s?: string | number): any{\n        s && this.write(s);\n        this.write(endl);\n    }\n}\nexport class StringOS extends OutputStream {\n    public s: string = '';\n    write(s: string | number): any{\n        this.s += s;\n    }\n    reset(): any{\n        this.s = '';\n    }\n}\n\nexport interface InputStream{\n    peek(): string;\n    next(): string;\n}\nexport interface BackupIs extends InputStream{\n    backup(s: string): void;\n}\nexport function StringIS(s: string): InputStream{\n    var i = 0;\n    return {\n        peek: function(){\n            return s.charAt(i) || null;\n        },\n        next: function(){\n            var ret = this.peek();\n            i++;\n            return ret;\n        }\n    };\n}\nexport function biss(iss: InputStream): BackupIs{\n    var backup: string[] = [];\n    return {\n        peek: function(){\n            return backup.length > 0 ? backup[backup.length - 1] : iss.peek();\n        },\n        next: function(){\n            if(backup.length > 0){\n                return backup.pop();\n            }\n            else {\n                return iss.next();\n            }\n        },\n        backup: function(c: string){\n            backup.push(c);\n        }\n    };\n}","\nexport var YYTAB: string = '    ';\nexport var DEBUG: boolean = true;\n\nexport interface Console{\n    assert(expr: boolean): any;\n    log(s: string): void;\n}\n\nexport var console: Console = {\n    assert(expr){\n        if(!expr){\n            throw new Error('Assertion failed');\n        }\n    },\n    log(s){},\n};\n\nexport function setDebugger(d: Console){\n    return console.log = d.log;\n}\nexport function setTab(t: string): string{\n    return YYTAB = t;\n}\n\n\n\n","\nconst BSIZE = 32;\nexport class BitSet{\n    private _s: number[];\n    constructor(private _size: number){\n        this._s = new Array(Math.ceil(_size / BSIZE));\n        for(var i = 0; i < this._s.length; i++){\n            this._s[i] = 0;\n        }\n    }\n    public add(i: number): boolean{\n        var block = Math.floor(i / BSIZE);\n        var offset = i - block * BSIZE;\n        var orig = this._s[block];\n        this._s[block] |= (1 << offset);\n        return orig !== this._s[block];\n    }\n    public addAll(): void{\n        for(var i = 0;i < this._s.length;i++){\n            this._s[i] = ~0;\n        }\n    }\n    public remove(i: number): boolean{\n        var block = Math.floor(i / BSIZE);\n        var offset = i - block * BSIZE;\n        var orig = this._s[block];\n        this._s[block] &= ~(1 << offset);\n        return orig !== this._s[block];\n    }\n    public removeAll(): void{\n        for(var i = 0;i < this._s.length;i++){\n            this._s[i] = 0;\n        }\n    }\n    public contains(i: number): boolean{\n        var block = Math.floor(i / BSIZE);\n        var offset = i - block * BSIZE;\n        return (this._s[block] & (1 << offset)) !== 0;\n    }\n    public union(set: BitSet, mask?: BitSet): boolean{\n        var changed = false;\n        for(var i = 0;i < this._s.length;i++){\n            var orig = this._s[i];\n            var source = set._s[i];\n            mask && (source &= mask._s[i]);\n            this._s[i] |= source;\n            changed = (this._s[i] !== orig) || changed;\n        }\n        return changed;\n    }\n    public hasIntersection(set: BitSet): boolean{\n        for(var i = 0;i < this._s.length;i++){\n            if((this._s[i] & set._s[i]) !== 0){\n                return true;\n            }\n        }\n        return false;\n    }\n    public equals(set: BitSet): boolean{\n        for(var i = 0;i < this._s.length;i++){\n            if(this._s[i] !== set._s[i]){\n                return false;\n            }\n        }\n        return true;\n    }\n    public forEach(cb: (i: number) => any){\n        for(var i = 0;i < this._size;i++){\n            this.contains(i) && cb(i);\n        }\n    }\n    public hash(): string{\n        var ret = '';\n        for(var i = 0;i < this._s.length;i++){\n            ret += this._s[i].toString(16) + '-';\n        }\n        return ret;\n    }\n}\n\n","import { BitSet } from '../util/bitset';\nimport { TokenEntry } from './token-entry';\n\nexport class TokenSet extends BitSet{\n    constructor(tcount: number){\n        super(tcount);\n    }\n    toString(g: TokenEntry): string{\n        var ret = '';\n        var first = true;\n        if(this.contains(0)){\n            ret += '\"\"';\n            first = false;\n        }\n        for(var i = 0;i < g.tokenCount;i++){\n            if(this.contains(i + 1)){\n                if(!first){\n                    ret += ',';\n                }\n                ret += '\"' + g.tokens[i].sym + '\"';\n                first = false;\n            }\n        }\n        return ret;\n    }\n}","import { TokenSet } from './token-set';\nimport { Rule, Grammar } from './grammar';\nimport { ListNode } from '../util/list';\nimport { endl } from '../util/io';\n\nexport enum Action {\n    NONE = 1,\n    SHIFT,\n    REDUCE\n}\n\nexport class Item{\n    public marker: number = 0;\n    public lah: TokenSet;\n    public rule: Rule;\n    public isKernel: boolean;\n    public shift: ItemSet = null;\n    public actionType = Action.NONE;\n    public changed: boolean = true;\n    static NULL: Item = {} as Item;\n    constructor(rule: Rule, ik: boolean){\n        this.rule = rule;\n        this.isKernel = ik;\n        this.lah = new TokenSet(rule.g.tokenCount);\n    }\n    canShift(): boolean{\n        return this.rule.rhs.length > this.marker;\n    }\n    getShift(): number{\n        return this.rule.rhs[this.marker];\n    }\n    toString(opt: { showlah?: boolean, showTrailer?: boolean } = {}): string{\n        var showlah = (opt && opt.showlah) || false;\n        var showTrailer = (opt && opt.showTrailer) || false;\n        var r = this.rule;\n        var ret = '[ ' + this.rule.toString(this.marker) + (showlah ? ',{ ' + this.lah.toString(this.rule.g) + ' }' : '') + ' ]';\n    \n        this.isKernel && (ret += '*');\n        if(showTrailer){\n            switch(this.actionType){\n                case Action.NONE: ret += '(-)';break;\n                case Action.SHIFT: ret += '(s' + this.shift.stateIndex + ')';break;\n                case Action.REDUCE: ret += '(r)';break;\n            }\n        }\n        return ret;\n    }\n    hash(): string{\n        return this.rule.index + '-' + this.marker;\n    }\n    hasRRConflictWith(i: Item): boolean{\n        return this.actionType === Action.REDUCE && i.actionType === Action.REDUCE && this.rule.index !== i.rule.index && this.lah.hasIntersection(i.lah);\n    }\n    getFollowSet(set: TokenSet): void{\n        var g = this.rule.g;\n        var i;\n        for(i = this.marker + 1;i < this.rule.rhs.length;i++){\n            var mItem = this.rule.rhs[i];\n            if(g.isToken(mItem)){\n                set.add(mItem + 1);\n                break;\n            }\n            else {\n                //var set1 = g.sym[mItem].firstSet\n                var set1 = g.nts[-mItem - 1].firstSet\n                set.union(set1);\n                set.remove(0);\n                if(!set1.contains(0)){\n                    break;\n                }\n            }\n        }\n        if(i === this.rule.rhs.length){\n            set.union(this.lah);\n        }\n    }\n}\n\nexport class ItemSet implements ListNode<ItemSet>{\n    g: Grammar;\n    // it: { [s: string]: Item } = {};\n    items: Item[] = [];\n    // item table, indexed by rule number\n    itemTable: Item[][] = [];\n    complete: boolean = false;\n\n    index: number = -1;\n    stateIndex: number = 0;\n\n    prev: ItemSet = null;\n    next: ItemSet = null;\n    data: ItemSet;\n    merges: number[] = [];\n\n    constructor(g: Grammar){\n        this.g = g;\n        this.data = this;\n    }\n\n    add(rule: Rule, marker: number, ik: boolean, lah: TokenSet, reset: boolean): boolean{\n        var entry = this.itemTable[rule.index] = this.itemTable[rule.index] || [];\n        var it = entry[marker];\n        if(it === undefined){\n            var n = new Item(rule,ik);\n            n.marker = marker;\n            if(lah){\n                n.lah.union(lah);\n            }\n            entry[marker] = n;\n            this.items.push(n);\n            return true;\n        }\n        else if(lah){\n            var ret = it.lah.union(lah);\n            if(reset && ret && it.canShift()){\n                it.actionType = Action.NONE;\n            }\n            ret && (it.changed = true);\n            return ret;\n        }\n    }\n    contains(){\n        \n    }\n    closure(): void{\n        var changed = true;\n        var tSet = new TokenSet(this.g.tokenCount);\n        var cela = this;\n        while(changed){\n            changed = false;\n            for(var item of this.items){\n                if(item.changed && item.canShift()){\n                    var ritem = item.getShift();\n                    if(ritem < 0){\n                        tSet.removeAll();\n                        item.getFollowSet(tSet);\n                        this.g.forEachRuleOfNt(-ritem - 1, rule => {\n                            changed = cela.add(rule, 0, false, tSet, false) || changed;\n                            return false;\n                        });\n                    }\n                }\n                item.changed = false;\n            }\n        }\n    }\n    toString(opt: { showlah?: boolean, showTrailer?: boolean }): string{\n        var showlah = (opt && opt.showlah) || false;\n        var showTrailer = (opt && opt.showTrailer) || false;\n        var opt2 = { showTrailer: showTrailer };\n        var ret = 's' + this.stateIndex + '';\n        if(this.index !== null){\n            ret += '(i' + this.index;\n        }\n        else {\n            ret += '(i?';\n        }\n        if(this.merges.length > 0){\n            ret += ',merged from ';\n            for(var i = 0;i < this.merges.length;i++){\n                if(i > 0){\n                    ret += ',';\n                }\n                ret += 'i' + this.merges[i];\n            }\n        }\n        ret += ')' + endl;\n        for(var item of this.items){\n            ret += item.toString(opt2) + endl;\n        }\n        return ret;\n    }\n    kernelHash(): string{\n        var ret = 0;\n        for(var item of this.items){\n            if(item.isKernel){\n                ret += item.rule.index << 5 + item.rule.index + item.marker;\n            }\n        }\n        return String(ret);\n    }\n    forEach(cb: (it: Item) => void){\n        for(var item of this.items){\n            cb(item);\n        }\n    }\n    canMergeTo(s: ItemSet): boolean{\n        // for(var h1 in this.it){\n        //     var it1 = this.it[h1];\n        //     var found = false,hasConflict = false,hasIdentical = false;\n        //     for(var h2 in s.it){\n        //         var it2 = s.it[h2];\n        //         if(it1.rule.index === it2.rule.index && it1.marker === it2.marker){\n        //             hasIdentical = it1.lah.equals(it2.lah);\n        //             found = it1.isKernel && it2.isKernel;\n        //         }\n        //         hasConflict = hasConflict || it1.hasRRConflictWith(it2);\n        //         if(it2.isKernel && this.it[h2] === undefined){\n        //             return false;\n        //         }\n        //     }\n        //     if(it1.isKernel && !found || hasConflict && !hasIdentical){\n        //         return false;\n        //     }\n        // }\n        for(var i = 0; i < this.g.rules.length; i++){\n            var t1 = this.itemTable[i], t2 = s.itemTable[i];\n            if(t1 || t2){\n                var rhs = this.g.rules[i].rhs;\n                // check for identical LR0 kernel items\n                for(var j = 0; j <= rhs.length; j++){\n                    if(\n                        t1 && t1[j] && t1[j].isKernel && (!t2 || !t2[j] || !t2[j].isKernel)\n                    ||  t2 && t2[j] && t2[j].isKernel && (!t1 || !t1[j] || !t1[j].isKernel)\n                    ){\n                        return false;\n                    }\n                }\n                // check for RR conflict\n                if(\n                    t1 && t2\n                &&  t1[j] && t2[j]  \n                &&  !t1[j].lah.equals(t2[j].lah) \n                &&  t1[j].lah.hasIntersection(t2[j].lah)\n                ){\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    mergeTo(s: ItemSet): boolean{\n        var ret = false;\n        for(var it of s.items){\n            ret = this.add(it.rule, it.marker, it.isKernel, it.lah, true) || ret;\n        }\n        this.merges.push(s.index);\n        return ret;\n    }\n}\n","\nexport interface ListNode<T>{\n    prev: ListNode<T>;\n    next: ListNode<T>;\n    data: T;\n}\n\nexport class List<T>{\n    public head: ListNode<T>;\n    public tail: ListNode<T>;\n    public size: number = 0;\n    constructor(){\n        this.head = { prev: null, next: null, data: null};\n        this.tail = { prev: null, next: null, data: null};\n        this.head.next = this.tail;\n        this.tail.prev = this.head;\n    }\n    append(n: ListNode<T>): void{\n        n.prev = this.tail.prev;\n        n.next = this.tail;\n        this.tail.prev.next = n;\n        this.tail.prev = n;\n        this.size++;\n    }\n    pull(): T{\n        var n = this.head.next;\n        this.head.next = n.next;\n        n.next.prev = this.head;\n        n.prev = n.next = null;\n        this.size--;\n        return n.data;\n    }\n    isEmpty(): boolean{\n        return this.size === 0;\n    }\n    forEach(cb: (a: T) => void): void{\n        for(var a = this.head.next;a !== this.tail;a = a.next){\n            cb(a.data);\n        }\n    }\n    remove(n: ListNode<T>): void{\n        n.next.prev = n.prev;\n        n.prev.next = n.next;\n        this.size--;\n    }\n    iterator(){\n        let p = this.head;\n        let cela = this;\n        return (): T => {\n            return p !== cela.tail ? (p = p.next, p.data) : null;\n        }\n    }\n}","import { Locatable } from \"../util/located\";\nimport { Position } from \"../parser/node\";\n\nexport enum Assoc {\n    UNDEFINED = 0,\n    LEFT,\n    RIGHT,\n    NON\n};\nexport interface TokenDef {\n    index: number,\n    sym: string,\n    alias: string,\n    pr: number,\n    assoc: Assoc,\n    used: boolean,\n    appears: Position[]\n}\nexport interface TokenEntry{\n    tokenCount: number;\n    tokens: TokenDef[];\n    isToken(t: number): boolean;\n}\nexport function convertTokenToString(t: TokenDef): string{\n    return t.alias === null ? `<${t.sym}>` : `\"${t.alias}\"`;\n}","import { Grammar } from './grammar';\nimport { YYTAB } from '../util/common';\nimport { endl, OutputStream } from '../util/io';\nimport { Action, Item, ItemSet } from './item-set';\nimport { List } from '../util/list';\nimport { convertTokenToString } from './token-entry';\n\nexport interface IParseTable{\n    readonly g: Grammar;\n    readonly stateCount: number;\n    defred: number[];\n    lookupShift(state: number, token: number): Item;\n    lookupGoto(state: number, nt: number): Item;\n};\n\nexport function printParseTable(os: OutputStream, cela: IParseTable, doneList: List<ItemSet>){\n    var g = cela.g;\n    var tokenCount = g.tokenCount;\n    var ntCount = g.nts.length;\n    // function printSet(set: ItemSet, lines: string[]){\n    //     var i = set.stateIndex;\n\n    //     lines.push(`state ${i}`);        \n    //     set.forEach(function(item){\n    //         lines.push(YYTAB + item.toString({ showTrailer: false }));\n    //     });\n    //     if(cela.defred[i] !== -1){\n    //         lines.push(`${YYTAB}default action: reduce with rule ${cela.defred[i]}`);\n    //     }\n    //     else {\n    //         lines.push(YYTAB + 'no default action');\n    //     }\n    //     for(var j = 0;j < tokenCount;j++){\n    //         var item = cela.lookupShift(i,j);\n    //         if(item !== null && item !== Item.NULL){\n    //             if(item.actionType === Action.SHIFT){\n    //                 lines.push(`${YYTAB}${convertTokenToString(g.tokens[j])} : shift, and goto state ${item.shift.stateIndex}`);\n    //             }\n    //             else {\n    //                 lines.push(`${YYTAB}${convertTokenToString(g.tokens[j])} : reduce with rule ${item.rule.index}`);\n    //             }\n    //         }\n    //     }\n    //     for(var j = 0;j < ntCount;j++){\n    //         var item = cela.lookupGoto(i,j);\n    //         if(item !== null){\n    //             lines.push(`${YYTAB}${g.nts[j].sym} : goto state ${item.shift.stateIndex}`);\n    //         }\n    //     }\n    //     lines.push('');\n    // }\n    // let it = doneList.iterator();\n    // let lines: string[] = [];\n    // function writeOne(){\n    //     let set = it();\n    //     if(set !== null){\n    //         lines.length = 0;\n    //         printSet(set, lines);\n    //         os.write(lines.join(endl), writeOne);\n    //     }\n    //     else {\n    //         done && done\n    //     }\n    // }\n    doneList.forEach(function(set){\n        var i = set.stateIndex;\n        var shift = '';\n        var reduce = '';\n        var gotot = '';\n        var defred = '';\n        os.writeln(`state ${i}`);        \n        set.forEach(function(item){\n            os.writeln(YYTAB + item.toString({ showTrailer: false }));\n        });\n        if(cela.defred[i] !== -1){\n            os.writeln(`${YYTAB}default action: reduce with rule ${cela.defred[i]}`);\n        }\n        else {\n            os.writeln(YYTAB + 'no default action');\n        }\n        for(var j = 0;j < tokenCount;j++){\n            var item = cela.lookupShift(i,j);\n            if(item !== null && item !== Item.NULL){\n                if(item.actionType === Action.SHIFT){\n                    shift += `${YYTAB}${convertTokenToString(g.tokens[j])} : shift, and go to state ${item.shift.stateIndex}${endl}`;\n                }\n                else {\n                    reduce += `${YYTAB}${convertTokenToString(g.tokens[j])} : reduce with rule ${item.rule.index}${endl}`;\n                }\n            }\n        }\n        for(var j = 0;j < ntCount;j++){\n            var item = cela.lookupGoto(i,j);\n            if(item !== null){\n                gotot += `${YYTAB}${g.nts[j].sym} : go to state ${item.shift.stateIndex}${endl}`;\n            }\n        }\n        os.writeln(shift + reduce + gotot);\n        os.writeln('');\n    });\n}\n\nexport class ParseTable implements IParseTable{\n    g: Grammar;\n    stateCount: number;\n    shift: Item[];\n    gotot: Item[];\n\n    defred: number[] = null;\n    constructor(g: Grammar, stateCount: number){\n        this.g = g;\n        var tokenCount = g.tokenCount;\n        var ntCount = g.nts.length;\n        this.stateCount = stateCount;\n        this.shift = new Array(tokenCount * stateCount);\n        this.gotot = new Array(ntCount * stateCount);\n        for(var i = 0;i < this.shift.length;i++){\n            this.shift[i] = null;\n        }\n        for(var i = 0;i < this.gotot.length;i++){\n            this.gotot[i] = null;\n        }\n    }\n    forEachShift(cb: (it: Item, state: number, token: number) => any){\n        for(let state = 0; state < this.stateCount; state++){\n            for(let tk = 0; tk < this.g.tokens.length; tk++){\n                let item = this.lookupShift(state, tk);\n                item && cb(item, state, tk);\n            }\n        }\n    }\n    forEachGoto(cb: (it: Item, state: number, nt: number) => any){\n        for(let state = 0; state < this.stateCount; state++){\n            for(let nt = 0; nt < this.g.nts.length; nt++){\n                let item = this.lookupGoto(state, nt);\n                item && cb(item, state, nt);\n            }\n        }\n    }\n    lookupShift(state: number, token: number): Item{\n        return this.shift[this.g.tokenCount * state + token];\n    }\n    lookupGoto(state: number, nt: number): Item{\n        return this.gotot[this.g.nts.length * state + nt];\n    }\n    private _getDefRed(state: number, apool: number[]): number{\n        for(let i = 0; i < apool.length; i++){\n            apool[i] = 0;\n        }\n        for(let tk = 0; tk < this.g.tokenCount; tk++){\n            let item = this.lookupShift(state, tk);\n            item && item.actionType === Action.REDUCE && apool[item.rule.index]++;\n        }\n        let ret = 0;\n        for(let i = 0;i < apool.length;i++){\n            apool[i] > apool[ret] && (ret = i);\n        }\n        return apool[ret] > 0 ? ret : -1;\n    }\n    findDefAct(){\n        this.defred = new Array(this.stateCount);\n        let apool = new Array(this.g.rules.length);\n        for(let i = 0;i < this.stateCount; i++){\n            let def = this._getDefRed(i, apool);\n            this.defred[i] = def;\n            if(def !== -1){\n                for(let tk = 0;tk < this.g.tokens.length;tk++){\n                    let item = this.lookupShift(i, tk);\n                    item && item.actionType === Action.REDUCE && item.rule.index === def &&\n                    (this.shift[this.g.tokenCount * i + tk] = null);\n                }\n            }\n        }\n    }\n}\n","import { BitSet } from '../util/bitset';\nimport { Grammar } from './grammar';\nimport { console,YYTAB } from '../util/common';\nimport { OutputStream,endl } from '../util/io';\nimport { Item,Action,ItemSet } from './item-set';\nimport { List } from '../util/list';\nimport { ParseTable } from './ptable';\nimport { TokenDef, Assoc, convertTokenToString } from './token-entry';\nimport { TokenSet } from './token-set';\n\nenum ConflictType {\n    RR = 0, SR = 1\n};\nexport class Conflict{\n    type: ConflictType;\n    set: ItemSet;\n    token: TokenDef;\n    used: Item;\n    discarded: Item;\n    static cNames: string[] = ['reduce/reduce','shift/reduce'];\n    toString(): string{\n        return `state ${this.set.stateIndex}, ${Conflict.cNames[this.type]} conflict:${endl}` +\n        `${YYTAB}token: ${convertTokenToString(this.token)}${endl}` +\n        `${YYTAB}used rule: ${this.used.toString()}${endl}` +\n        `${YYTAB}discarded rule: ${this.discarded.toString()}`;\n    }\n}\n\nexport function genInitialSet(g: Grammar): ItemSet{\n    var start = g.nts[0].rules[0];\n    var iset = new ItemSet(g);\n    iset.index = 0;\n    var set1 = new TokenSet(g.tokenCount);\n    set1.add(1);// eof\n    iset.add(start,0,true,set1,false);\n    return iset;\n}\n/**\n * implementation of the Hanolee algorithm\n * @param g \n */\nexport function genItemSets(g: Grammar): { result: List<ItemSet>, iterations: number }{\n    var htable: {[s: string]: ItemSet[]} = {}; \n    var iterations = 0;\n    function addToTable(iset: ItemSet){\n        var h = iset.kernelHash();\n        if(htable[h] === undefined){\n            htable[h] = [];\n        }\n        htable[h].push(iset);\n    }\n    function forEachInBucket(set: ItemSet, cb: (s: ItemSet) => any){\n        var b = htable[set.kernelHash()];\n        if(b !== undefined){\n            for(var i = 0;i < b.length;i++){\n                if(cb(b[i])) break;\n            }\n        }\n    }\n    var index = 1;\n    var todoList = new List<ItemSet>();\n    var incList = new List<ItemSet>();\n    var doneList = new List<ItemSet>();\n    todoList.append(genInitialSet(g));\n\n    while(!todoList.isEmpty() || !incList.isEmpty()){\n        var comeFrom = null;\n        //phase 1,generate transition item set from incomplete list.\n        if(!incList.isEmpty()){\n            var set = comeFrom = incList.pull();\n            set.forEach(function(item){\n                if(item.actionType === Action.NONE){\n                    console.assert(item.canShift());\n                    var shift = item.getShift();\n                    var newSet = new ItemSet(g);\n                    newSet.index = index++;\n                    todoList.append(newSet);\n                    //mark all the symbols in 'set'\n                    set.forEach(item1 => {\n                        if(item1.canShift()){\n                            var rItem = item1.getShift();\n                            if(rItem === shift){\n                                item1.actionType = Action.SHIFT;\n                                item1.shift = newSet;\n                                newSet.add(item1.rule,item1.marker + 1,true,item1.lah,false);\n                            }\n                        }\n                    });\n                }\n            });\n            set.complete = true;\n            doneList.append(set);\n        }\n\n        //phase 2,find possible merges,and do them.\n        while(!todoList.isEmpty()){\n            var set = todoList.pull();\n            set.closure();\n            set.forEach(item => {\n                if(!item.canShift()){\n                    item.actionType = Action.REDUCE;\n                }\n            });\n            var merged = null;\n\n            forEachInBucket(set, gSet => {\n                if(gSet.canMergeTo(set)){\n                    if(gSet.mergeTo(set)){\n                        if(gSet.complete){\n                            merged = gSet;\n                        }\n                    }\n                    //fix previous transition actions to merged set\n                    if(comeFrom !== null){\n                        comeFrom.forEach(function(sItem){\n                            if(sItem.actionType === Action.SHIFT && sItem.shift === set){\n                                sItem.shift = gSet;\n                            }\n                        });\n                    }\n                    set = null;\n                    return true;\n                }\n                return false;\n            });\n            //if set is merged with another complete set,\n            if(merged !== null){\n                doneList.remove(merged);\n                incList.append(merged);\n                merged.complete = false;\n            }\n            //not merged\n            else if(set !== null){\n                incList.append(set);\n                addToTable(set);\n            }\n        }\n        iterations++;\n    }\n    var i = 0;\n    doneList.forEach(set => {\n        set.stateIndex = i++;\n    });\n\n    return {\n        result: doneList,\n        iterations: iterations,\n    };\n}\n\nexport function genParseTable(g: Grammar, doneList: List<ItemSet>): { result: ParseTable, conflicts: Conflict[] }{\n    var conflicts = [];\n    function resolveSRConflict(set: ItemSet, shift: Item, reduce: Item){\n        var token = g.tokens[shift.getShift()];\n        if(token.assoc !== Assoc.UNDEFINED){\n            var ruleP = reduce.rule.pr;\n            if(ruleP !== -1){\n                if(ruleP > token.pr){\n                    return reduce;\n                }\n                else if(ruleP < token.pr){\n                    return shift;\n                }\n                else {\n                    if(token.assoc === Assoc.LEFT){\n                        return reduce;\n                    }\n                    else if(token.assoc === Assoc.RIGHT){\n                        return shift;\n                    }\n                    else if(token.assoc === Assoc.NON){\n                        return Item.NULL;\n                    }\n                    else {\n                        console.assert(false);\n                    }\n                }\n            }\n        }\n        var cf = new Conflict();\n        cf.type = ConflictType.SR;\n        cf.set = set;\n        cf.token = token;\n        cf.used = shift;\n        cf.discarded = reduce;\n        conflicts.push(cf);\n        return shift;\n    }\n    function resolveRRConflict(set: ItemSet, r1: Item, r2: Item, token: number){\n        let tdef = g.tokens[token];\n        if(r1.rule.pr !== -1 && r2.rule.pr !== -1 && r1.rule.pr !== r2.rule.pr){\n            return r1.rule.pr > r2.rule.pr ? r1 : r2;\n        }\n        else {\n            var used = r1.rule.index > r2.rule.index ? r2 : r1;\n            var discarded = r1.rule.index > r2.rule.index ? r1 : r2;\n            var cf = new Conflict();\n            cf.type = ConflictType.RR;\n            cf.set = set;\n            cf.token = tdef;\n            cf.used = used;\n            cf.discarded = discarded;\n            conflicts.push(cf);\n            return used;\n        }\n    }\n    var ptable = new ParseTable(g,doneList.size);\n    doneList.forEach(set => {\n        set.forEach(item => {\n            if(item.actionType === Action.SHIFT){\n                var sItem = item.getShift();\n                if(g.isToken(sItem)){\n                    // do shift\n                    var tindex = set.stateIndex * g.tokenCount + sItem;\n                    var cItem = ptable.shift[tindex];\n                    if(cItem !== null){\n                        // shift-reduce conflict\n                        if(cItem.actionType === Action.REDUCE){\n                            ptable.shift[tindex] = resolveSRConflict(set,item,cItem);\n                        }\n                        else {\n                            // shift-shift conflicts shouldnt occur\n                            console.assert(cItem.shift === item.shift);\n                        }\n                    }\n                    else {\n                        ptable.shift[tindex] = item;\n                    }\n                }\n                else {\n                    // do goto\n                    var tindex = set.stateIndex * g.nts.length + (-sItem - 1);\n                    ptable.gotot[tindex] = item;\n                }\n            }\n            else if(item.actionType === Action.REDUCE){\n                for(var i = 0;i < g.tokenCount;i++){\n                    if(item.lah.contains(i + 1)){\n                        var index = set.stateIndex * g.tokenCount + i;\n                        var cItem = ptable.shift[index];\n                        if(cItem !== null){\n                            if(cItem.actionType === Action.REDUCE){\n                                ptable.shift[index] = resolveRRConflict(set,cItem,item,i);\n                            }\n                            else if(cItem.actionType === Action.SHIFT){\n                                ptable.shift[index] = resolveSRConflict(set,cItem,item);\n                            }\n                        }\n                        else {\n                            ptable.shift[index] = item;\n                        }\n                    }\n                }\n            }\n            else {\n                console.assert(false);\n            }\n        });\n    });\n\n    return {\n        result: ptable,\n        conflicts: conflicts\n    };\n}","import { JsccError as E } from '../util/E';\nimport { Action, Item } from '../grammar/item-set';\nimport { Grammar, Rule } from '../grammar/grammar';\nimport { ParseTable, IParseTable } from '../grammar/ptable';\nimport { TokenDef, convertTokenToString } from '../grammar/token-entry';\n\nfunction testParse(g: Grammar, pt: IParseTable, tokens: string[], onErr: (msg: string) => any): string[]{\n    var tk: TokenDef[] = [];\n    for(let tname of tokens){\n        let tdef: TokenDef;\n        if(/<[^>]+>/.test(tname)){\n            tdef = g.findTokenByName(tname.substr(1, tname.length - 2));\n            if(tdef === null){\n                onErr(`cannot recognize ${tname} as a token`);\n                return [];\n            }\n        }\n        else {\n            let defs = g.findTokensByAlias(tname);\n            if(defs.length === 0){\n                onErr(`cannot recognize \"${tname}\" as a token`);\n                return [];\n            }\n            if(defs.length > 1){\n                let msg = '';\n                for(let def of defs){\n                    msg += `<${def.sym}> `;\n                }\n                onErr(`cannot recognize \"${tname}\" as a token, since it can be ${msg}`);\n                return [];\n            }\n            tdef = defs[0];\n        }\n        tk.push(tdef);\n    }\n    var state = [ 0 ];\n    var stack: string[] = [];\n    var ret: string[] = [];\n    function s(){\n        return state[state.length - 1];\n    }\n    function shift(ns: number){\n        state.push(ns);\n        let tdef = tk.shift();\n        // tdef.alias === null ? stack.push(`<${tdef.sym}>`) : stack.push(tdef.alias);\n        stack.push(convertTokenToString(tdef));\n        // stack.push(g.tokens[tk.shift()].sym);\n    }\n    function reduce(rule: Rule){\n        state.length -= rule.rhs.length;\n        stack.length -= rule.rhs.length;\n        stack.push(rule.lhs.sym);\n        var gotot = pt.lookupGoto(s(),rule.lhs.index).shift.stateIndex;\n        state.push(gotot);\n    }\n    function dump(){\n        var ret = '';\n        for(let s of stack){\n            ret += s + ' ';\n        }\n        ret += '| ';\n        for(let tdef of tk){\n            ret += convertTokenToString(tdef);\n            ret += ' ';\n        }\n        return ret;\n    }\n    ret.push(dump());\n    do{\n        let item = pt.lookupShift(s(),tk[0] ? tk[0].index : 0);\n        if(item !== null){\n            if(item === Item.NULL){\n                ret.push('syntax error!');\n                break;\n            }\n            else if(item.actionType === Action.SHIFT){\n                if(tk.length === 0){\n                    ret.push('accepted!');\n                    break;\n                }\n                shift(item.shift.stateIndex);\n            }\n            else if(item.actionType === Action.REDUCE){\n                if(reduce(item.rule)){\n                    break;\n                }\n            }\n            else {\n                console.assert(false);\n            }\n        }\n        else {\n            let ri = pt.defred[s()];\n            if(ri !== -1){\n                reduce(g.rules[ri]);\n            }\n            else {\n                ret.push('syntax error!');\n                break;\n            }\n        }\n        ret.push(dump());\n    }while(true);\n    return ret;\n}\n\nexport { testParse }","export interface Option{\n    typeClass?: string;\n    escape?: boolean;\n}\nexport class InternalError{\n    constructor(public msg: string){}\n    toString(){\n        return this.msg;\n    }\n}\nexport class JsccError{\n    constructor(public msg: string, public type: string = 'Error'){}\n    public toString(opt: Option = {}): string{\n        var escape = !!opt.escape;\n        var ret = this.type;\n        if(opt.typeClass){\n            ret = `<span class=\"${opt.typeClass}\">${ret}</span>`;\n        }\n        ret += ': ';\n        ret += escape ? this.msg.replace(/</g,'&lt').replace(/>/g,'&gt') : this.msg;\n        return ret;\n    }    \n}\nexport class CompilationError extends JsccError{\n    constructor(msg: string, public line: number){\n        super(msg, 'CompilationError');\n    }\n    public toString(opt: Option){\n        return `${super.toString(opt)} (at line ${this.line})`;\n    }\n}\nexport class JsccWarning extends JsccError{\n    constructor(msg: string){\n        super(msg, 'Warning');\n    }\n}","\nexport interface Table{\n    readonly rows: number;\n    readonly columns: number;\n    isEmpty(i: number,j: number): boolean;\n    emptyCount(row: number): number;\n}\nfunction sorter(cmp: (a: RowEntry, b: RowEntry) => number){\n    var a: RowEntry[] = [];\n    function insert(i,obj){\n        a.push(null);\n        for(var j = a.length - 1;j > i;j--){\n            a[j] = a[j - 1];\n        }\n        a[i] = obj;\n    }\n    return {\n        add(b: RowEntry): void{\n            var i: number;\n            for(i = 0;i < a.length;i++){\n                if((i === 0 || cmp(b,a[i - 1]) >= 0) && cmp(b,a[i]) <= 0){\n                    break;\n                }\n            }\n            insert(i,b);\n        },\n        done(): RowEntry[]{\n            return a;\n        }\n    };\n}\nclass RowEntry{\n    public dp: number | null = 0;\n    constructor(public emptyCount: number, public row: number){}\n}\n\n/**\n * implementation of double displacement first-fit-decreasing method\n */\nexport function compress(source: Table): { dps: number[], len: number }{\n    function empty(i: number, j: number): boolean{\n        j = j - sorted[i].dp;\n        return j < 0 || j >= source.columns || source.isEmpty(sorted[i].row,j);\n    }\n    function fit(i: number, dp: number): boolean{\n        for(var j = 0;j < source.columns;j++){\n            if(!empty(i,j)){\n                for(var k = 0;k < i;k++){\n                    if(!empty(k,j + dp)){\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n    function getFitdp(i: number): number{\n        var dp = 0;\n        while(-dp < source.columns && source.isEmpty(sorted[i].row,-dp)){ dp--; }\n        while(!fit(i,dp)){ dp++; }\n        return dp;\n    }\n    var tmpsorted = sorter((a, b) => {\n        return a.emptyCount < b.emptyCount ? -1 :\n            a.emptyCount > b.emptyCount ? 1 : 0;\n    });\n    for(var i = 0;i < source.rows;i++){\n        tmpsorted.add(new RowEntry(source.emptyCount(i),i));\n    }\n\n    var sorted = tmpsorted.done();\n    //the row with least empty entries has displacement 0\n    var maxdp = 0, mindp = 0;\n    var dps = new Array(source.rows);\n    let initDp = 0;\n    while(-initDp < source.columns && source.isEmpty(sorted[0].row, -initDp)){ initDp--; }\n    dps[sorted[0].row] = sorted[0].dp = initDp;\n    \n    for(var i = 1;i < sorted.length;i++){\n        let row = sorted[i].row;\n        let dp = getFitdp(i);\n        dps[row] = sorted[i].dp = dp;\n        dp > maxdp && (maxdp = dp);\n        dp < mindp && (mindp = dp);\n    }\n\n    // for(var i = 0;i < dps.length;i++){\n    //     dps[i] -= mindp;\n    // }\n\n    return {\n        dps: dps,\n        len: maxdp + source.columns// - mindp\n    };\n}\n","export function initArray<T>(len: number, cb: (i: number) => T){\n    let ret: T[] = new Array(len);\n    for(let i = 0; i < len; i++){\n        ret[i] = cb(i);\n    }\n    return ret;\n}","import { ParseTable, IParseTable } from './ptable';\nimport { compress, Table } from '../util/compress';\nimport { Item } from './item-set';\nimport { Grammar } from './grammar';\nimport { console } from '../util/common';\nimport { initArray } from '../util/initarray';\n\nfunction action(pt: ParseTable): Table{\n    let emCount: number[] = [];\n    for(let state = 0;state < pt.stateCount;state++){\n        emCount.push(0);\n        for(let tk = 0;tk < pt.g.tokens.length;tk++){\n            pt.lookupShift(state, tk) === null && (emCount[state]++);\n        }\n    }\n    return {\n        rows: pt.stateCount,\n        columns: pt.g.tokens.length,\n        isEmpty(state, token){\n            return pt.lookupShift(state, token) === null;\n        },\n        emptyCount(state){\n            return emCount[state];\n        }\n    };\n}\n\nfunction gotot(pt: ParseTable): Table{\n    let emCount: number[] = [];\n    for(let state = 0;state < pt.stateCount;state++){\n        emCount.push(0);\n        for(let nt = 0;nt < pt.g.nts.length;nt++){\n            pt.lookupShift(state, nt) === null && (emCount[state]++);\n        }\n    }\n    return {\n        rows: pt.stateCount,\n        columns: pt.g.nts.length,\n        isEmpty(state, nt){\n            return pt.lookupGoto(state, nt) === null;\n        },\n        emptyCount(nt){\n            return emCount[nt];\n        }\n    };\n}\n\n\nexport class CompressedPTable implements IParseTable{\n    g: Grammar;\n    stateCount: number;\n    // action table\n    pact: Item[];\n    // displacement of action table\n    disact: number[];\n    // check \n    checkact: number[];\n    // default reduction\n    defred: number[];\n\n    pgoto: Item[];\n    disgoto: number[];\n    checkgoto: number[];\n\n    private _trim(){\n        while(this.pact[this.pact.length - 1] === null){\n            this.pact.pop();\n            this.checkact.pop();\n        }\n        while(this.pgoto[this.pgoto.length - 1] === null){\n            this.pgoto.pop();\n            this.checkgoto.pop();\n        }\n    }\n    constructor(ptable: ParseTable){\n        this.g = ptable.g;\n        this.defred = ptable.defred;\n        this.stateCount = ptable.stateCount;\n\n        let actionCResult = compress(action(ptable));\n        let gotoCResult = compress(gotot(ptable));\n        this.disact = actionCResult.dps;\n        this.disgoto = gotoCResult.dps;\n\n        this.pact = initArray<Item>(actionCResult.len, () => null);\n        this.checkact = initArray<number>(actionCResult.len, () => 0);\n        let cela = this;\n        ptable.forEachShift((it, state, token) => {\n            console.assert(cela.pact[cela.disact[state] + token] === null);\n            cela.pact[cela.disact[state] + token] = it;\n            cela.checkact[cela.disact[state] + token] = state;\n        });\n\n        this.pgoto = initArray<Item>(gotoCResult.len, () => null);\n        this.checkgoto = initArray<number>(gotoCResult.len, () => 0);\n        ptable.forEachGoto((it, state, nt) => {\n            console.assert(cela.pgoto[cela.disgoto[state] + nt] === null);\n            cela.pgoto[cela.disgoto[state] + nt] = it;\n            cela.checkgoto[cela.disgoto[state] + nt] = state;\n        });\n        this._trim();\n    }\n    lookupShift(state: number, token: number){\n        let index = this.disact[state] + token;\n        if(index >= 0 && index < this.pact.length && this.checkact[index] === state){\n            return this.pact[this.disact[state] + token];\n        }\n        else {\n            return null;\n        }\n    }\n    lookupGoto(state: number, nt: number){\n        let index = this.disgoto[state] + nt;\n        if(index >= 0 && index < this.pgoto.length && this.checkgoto[index] === state){\n            return this.pgoto[this.disgoto[state] + nt];\n        }\n        else {\n            return null;\n        }\n    }\n}\n","import { TokenSet } from './token-set';\nimport { TokenDef, TokenEntry, Assoc, convertTokenToString } from './token-entry'\nimport { LexAction } from '../lexer/action';\nimport { Context } from '../util/context';\nimport { CompilationError } from '../util/E';\nimport { Position } from '../parser/node';\n\nexport interface NtDef{\n    index: number,\n    sym: string,\n    firstSet: TokenSet,\n    used: boolean,\n    rules: Rule[],\n    parents: { rule: Rule, pos: number }[];\n}\ninterface Located<T>{\n    val: T;\n    pos: Position\n}\nexport class Rule{\n    public pr: number = -1;\n    public rhs: number[] = [];\n    public action: LexAction = null;\n    public index = 0;\n    public vars: { [s: string]: Located<number> } = {};\n    public usedVars: { [s: string]: Located<number> } = {};\n    constructor(\n        public g: Grammar, \n        public lhs: NtDef,\n        public pos: Position \n    ){}\n\n    calcPr(){\n        if(this.pr === -1){\n            for(let i = this.rhs.length - 1; i >= 0; i--){\n                let item = this.rhs[i];\n                if(item >= 0){\n                    this.g.tokens[item].assoc !== Assoc.UNDEFINED && \n                    (this.pr = this.g.tokens[item].pr);\n                }\n            }\n        }\n    }\n    getVarSp(v: string, ecb: (msg: string) => any): number{\n        if(this.lhs.parents.length !== 1){\n            if(this.lhs.parents.length > 1){\n                ecb(\"LHS of the rule is referenced by more than one rule\");\n            }\n            else {\n                ecb(\"this rule is unreachable\");\n            }\n            return null;\n        }\n        let ret = this.rhs.length;\n        let pos = this.lhs.parents[0].pos;\n        let rule: Rule = this.lhs.parents[0].rule;\n        while(true){\n            let vdef = rule.vars[v];\n            if(vdef !== undefined && vdef.val < pos){\n                ret += pos - vdef.val;\n                return ret;\n            }\n            if(rule.lhs.parents.length !== 1){\n                if(rule.lhs.parents.length > 1){\n                    ecb(`\"${rule.lhs.sym}\" is referenced by more than one rule or unreachable`);\n                }\n                else {\n                    ecb(\"variable is undefined\");\n                }\n                return null;\n            }\n            ret += pos;\n            pos = rule.lhs.parents[0].pos;\n            rule = rule.lhs.parents[0].rule;\n        }\n    }\n    public toString(marker?: number){\n        var ret = this.index + ': ' + this.lhs.sym + ' =>';\n        for(var i = 0;i < this.rhs.length;i++){\n            var r = this.rhs[i];\n            if(marker === i){\n                ret += ' .';\n            }\n            if(r >= 0){\n                // ret += ' <' + this.g.tokens[r].sym + '>';\n                ret += ' ' + convertTokenToString(this.g.tokens[r]);\n            }\n            else {\n                ret += ' ' + this.g.nts[-r - 1].sym;\n            }\n        }\n        if(marker === this.rhs.length){\n            ret += ' .';\n        }\n        return ret;\n    }\n}\n\nexport class Grammar implements TokenEntry{\n    public tokens: TokenDef[] = [];\n    public tokenCount: number = 0;\n    public nts: NtDef[] = [];\n    public rules: Rule[] = [];\n\n    isToken(t: number): boolean{\n        return t >= 0;\n    }\n\n    forEachRule(cb: (index: number, rule: Rule) => void): void{\n        for(var i = 0;i < this.nts.length;i++){\n            var rules = this.nts[i].rules;\n            for(var j = 0;j < rules.length;j++){\n                cb(i,rules[j]);\n            }\n        }\n    }\n    forEachRuleOfNt(lhs: number, cb: (rule: Rule) => boolean): void{\n        var rules = this.nts[lhs].rules;\n        for(var j = 0;j < rules.length;j++){\n            if(cb(rules[j])){\n                break;\n            }\n        }\n    }\n    genFirstSets(): void{\n        var changed = true;\n        let mask = new TokenSet(this.tokens.length);\n        mask.addAll();\n        mask.remove(0);\n        while(changed){\n            changed = false;\n            // iterate for each non terminal\n            for(var nt = 0;nt < this.nts.length;nt++){\n                var rules = this.nts[nt].rules;\n                var firstSet = this.nts[nt].firstSet;\n                for(var j = 0;j < rules.length;j++){\n                    var rule = rules[j];\n                    for(var k = 0;k < rule.rhs.length;k++){\n                        var ritem = rule.rhs[k];\n                        if(this.isToken(ritem)){\n                            changed = firstSet.add(ritem + 1) || changed;\n                            break;\n                        }\n                        else {\n                            ritem = -ritem - 1;\n                            if(nt !== ritem){\n                                changed = firstSet.union(this.nts[ritem].firstSet, mask) || changed;\n                            }\n                            if(!this.nts[ritem].firstSet.contains(0)){\n                                break;\n                            }\n                        }\n                    }\n                    k === rule.rhs.length && (changed = firstSet.add(0) || changed);\n                }\n            }\n        }\n    }\n    toString(opt: { endl?: string, escape?: boolean, firstSets?: boolean } = {}){\n        opt = opt || {};\n        var endl = opt.endl || endl;\n        var escape = opt.escape || false;\n        var ret = '';\n        this.forEachRule((lhs, rule) => {\n            var s = rule.toString();\n            ret += s + endl;\n        });\n        if(opt.firstSets){\n            for(var i = 0;i < this.nts.length;i++){\n                var s = this.nts[i];\n                ret += `First(${s.sym}) = { ${s.firstSet.toString(this)} }${endl}`;\n            }\n        }\n        if(escape){\n            ret = ret.replace(/</g,'&lt;').replace(/>/g,'&gt;');\n        }\n        return ret.replace(/\\n/g,endl);\n    }\n    findTokenByName(t: string): TokenDef{\n        for(let tk of this.tokens){\n            if(tk.sym === t){\n                return tk;\n            }\n        }\n        return null;\n    }\n    findTokensByAlias(t: string): TokenDef[]{\n        let ret: TokenDef[] = [];\n        for(let tk of this.tokens){\n            tk.alias === t && ret.push(tk);\n        }\n        return ret;\n    }\n}\n","import { Grammar } from '../grammar/grammar.js';\nimport { LexAction } from '../lexer/action';\nimport { DFA } from '../lexer/dfa';\nimport { JNode, newNode } from './node';\nimport { DFATable } from '../lexer/dfa-table';\n\nexport class File{\n    name: string;\n    eol: string = '\\n';\n    grammar: Grammar = null;\n    lexDFA: DFA<LexAction>[] = [];\n    dfaTables: DFATable<LexAction>[] = [];\n    opt: {[s: string]: { name: JNode, val: JNode }} = {};\n    \n    prefix: string = 'jj';\n    header: JNode[] = [];\n    output: JNode = null;\n    extraArgs: JNode = null;\n    initArg: JNode = null;\n    initBody: JNode = null;\n    epilogue: JNode = null;\n    sematicType: JNode = null;\n}\n","// 区间集合\n\nimport { DEBUG } from './common';\n\nexport var oo = Number.POSITIVE_INFINITY;\nexport var _oo = Number.NEGATIVE_INFINITY;\nclass Interval<T>{\n    public a: number;\n    public b: number;\n    public prev: Interval<T>;\n    public next: Interval<T>;\n    public parent: IntervalSet<T>;\n    public data: T = null;\n    constructor(a: number, b: number){\n        this.a = a;\n        this.b = b;\n    }\n    \n    public insertBefore(a: number, b: number, data?: T){\n        if(this.parent.isValid(this) && !this.parent.noMerge && this.a === b + 1){\n            this.a = a;\n            return this;\n        }\n        else {\n            var it = this.parent.createInterval(a, b, data);\n            it.prev = this.prev;\n            it.next = this;\n            this.prev.next = it;\n            this.prev = it;\n            return it;\n        }\n    }\n    public contains(a: number): boolean{\n        return this.a <= a && this.b >= a;\n    }\n    public overlaps(a: number, b: number): boolean{\n        // return !(cm(a,this.b) > 0 || cm(b,this.a) < 0);\n        return !(a > this.b || b < this.a);\n    }\n    public insertAfter(a: number, b: number, data?: T): Interval<T>{\n        if(this.parent.isValid(this) && !this.parent.noMerge && this.b === a - 1){\n            this.b = b;\n            return this;\n        }\n        else {\n            var it = this.parent.createInterval(a, b, data);\n            it.prev = this;\n            it.next = this.next;\n            this.next.prev = it;\n            this.next = it;\n            return it;\n        }\n    }\n    public splitLeft(a: number): Interval<T>{\n        //DEBUG && console.assert(this.parent.noMerge);\n        if(a > this.a){\n            // don't pass the data, use union instead\n            var ret = this.insertBefore(this.a, a - 1, this.data);\n            this.a = a;\n            return ret;\n        }\n        return this;\n    }\n    public splitRight(b: number): Interval<T>{\n        //DEBUG && console.assert(this.parent.noMerge);\n        if(b < this.b){\n            var ret = this.insertAfter(b + 1, this.b, this.data);\n            this.b = b;\n            return ret;\n        }\n        return this;\n    }\n    public remove(): Interval<T>{\n        this.prev.next = this.next;\n        this.next.prev = this.prev;\n        return this;\n    }\n    public checkMerge(): Interval<T>{\n        if(this.a !== _oo && this.prev.a !== null && this.a === this.prev.b + 1){\n            this.a = this.prev.a;\n            this.prev.remove();\n        }\n        if(this.b !== oo && this.next.a !== null && this.b === this.next.a - 1){\n            this.b = this.next.b;\n            this.next.remove();\n        }\n        return this;\n    }\n    public toString(mapper: (a: number) => string): string{\n        var ret = '';\n        function dfmapper(c: number): string{\n            return c === oo ? '+oo' : c === _oo ? '-oo' : c.toString();\n        }\n        var a = (mapper || dfmapper)(this.a);\n        var b = (mapper || dfmapper)(this.b);\n        if(this.a === this.b){\n            ret += a;\n        }\n        else{\n            ret += this.a === _oo ? '(' + a : '[' + a;\n            ret += ',';\n            ret += this.b === oo ? b + ')' : b + ']';\n        }\n        this.data && (ret += this.parent.dataOp.stringify(this.data));\n        return ret;\n    }\n}\nfunction checkArg(a: number, b: number){\n    if(a > b){\n        throw new Error(`illegal argument: \"a\"(${a}) must be no more than \"b\"(${b})`);\n    }\n}\nexport interface DataOperator<T> {\n    createData(): T;\n    union(dest: T, src: T): void;\n    stringify(d: T): string;\n}\nexport class IntervalSet<T>{\n    public head: Interval<T>;\n    public tail: Interval<T>;\n    public noMerge: boolean;\n    public dataOp: DataOperator<T>;\n\n    constructor(dataOp?: DataOperator<T>){\n        this.head = new Interval(0,0);\n        this.head.parent = this;\n        this.tail = new Interval(null,null);\n        this.tail.parent = this;\n        this.head.next = this.tail;\n        this.tail.prev = this.head;\n    \n        this.noMerge = typeof dataOp !== 'undefined';\n        this.dataOp = dataOp || null;\n    }\n    isValid(it: Interval<T>): boolean{\n        return it !== this.head && it !== this.tail;\n    }\n    createInterval(a: number, b: number, data: T = null): Interval<T>{\n        var ret = new Interval<T>(a,b);\n        ret.parent = this;\n        this.dataOp && (ret.data = this.dataOp.createData(), data !== null && this.dataOp.union(ret.data, data));\n        return ret;\n    }\n    fitPoint(a: number, b: number): Interval<T>{\n        for(var it = this.head;it !== this.tail;it = it.next){\n            if((it === this.head || a > it.b) && (it.next === this.tail || b < it.next.a)){\n                return it;\n            }\n        }\n        return null;\n    }\n    overlaped(a: number, b: number): Interval<T>[]{\n        var start = null,end = null;\n        var it = this.head.next;\n        for(;it !== this.tail && !it.overlaps(a,b);it = it.next);\n        if(it === this.tail){\n            return null;\n        }\n        start = end = it;\n        for(;it !== this.tail && it.overlaps(a,b);it = it.next){\n            end = it;\n        }\n        return [start,end];\n    }\n    /**\n     * add an interval into the set\n     * @param data - The extra data associated with the added interval, which is only valid when noMerge = true\n     * \n     */\n    add(a: number, b: number = a, data?: T){\n        var noMerge = this.noMerge;\n        // /b = b || a;\n        DEBUG && checkArg(a,b);\n        var overlap = this.overlaped(a,b);\n        if(overlap === null){\n            this.fitPoint(a,b).insertAfter(a,b,data);\n        }\n        else {\n            if(!noMerge){\n                var a1 = a < overlap[0].a ? a : overlap[0].a;\n                var b1 = b > overlap[1].b ? b : overlap[1].b;\n                overlap[0].a = a1;\n                overlap[0].b = b1;\n                overlap[0].next = overlap[1].next;\n                overlap[1].next.prev = overlap[0];\n                overlap[0].checkMerge();\n            }\n            else {\n                if(overlap[0].contains(a)){\n                    overlap[0].splitLeft(a);\n                }\n                else {\n                    overlap[0].insertBefore(a, overlap[0].a - 1, data);\n                }\n                if(overlap[1].contains(b)) {\n                    overlap[1].splitRight(b);\n                }\n                else {\n                    overlap[1].insertAfter(overlap[1].b + 1, b, data);\n                }\n                for(var it = overlap[0];it !== overlap[1];it = it.next){\n                    // it.dataSet.add(data);\n                    this.dataOp.union(it.data, data);\n                    if(it.b + 1 < it.next.a){\n                        it.insertAfter(it.b + 1, it.next.a - 1, data);\n                        it = it.next;\n                    }\n                }\n                // overlap[1].dataSet.add(data);\n                this.dataOp.union(overlap[1].data, data);\n            }\n        }\n        return this;\n    }\n    remove(a: number, b: number): IntervalSet<T>{\n        checkArg(a,b);\n        var overlap = this.overlaped(a,b);\n        if(overlap !== null){\n            overlap[0].contains(a) && overlap[0].splitLeft(a);\n            overlap[1].contains(b) && overlap[1].splitRight(b);\n            overlap[0].prev.next = overlap[1].next;\n            overlap[1].next.prev = overlap[0].prev;\n        }\n        return this;\n    }\n    removeAll(): IntervalSet<T>{\n        this.head.next = this.tail;\n        this.tail.prev = this.head;\n        return this;\n    }\n    forEach(cb: (a: number, b: number, it: Interval<T>) => any): IntervalSet<T>{\n        for(var it = this.head.next;it !== this.tail;it = it.next){\n            cb(it.a,it.b,it);\n        }\n        return this;\n    }\n    union(s: IntervalSet<T>): IntervalSet<T>{\n        for(var it = s.head.next;it !== s.tail;it = it.next){\n            this.add(it.a,it.b);\n        }\n        return this;\n    }\n    contains(a: number): boolean{\n        for(var it = this.head.next;it !== this.tail;it = it.next){\n            if(it.contains(a)){\n                return true;\n            }\n        }\n        return false;\n    }\n    toString(mapper: (a: number) => string){\n        var ret = '';\n        var t = false;\n        for(var it = this.head.next;it !== this.tail;it = it.next){\n            if(t){\n                ret += ',';\n            }\n            t = true;\n            ret += it.toString(mapper);\n        }\n        return ret === '' ? 'phi' : ret;\n    }\n}","import { oo, _oo, IntervalSet, DataOperator } from '../util/interval-set';\n\nexport class CharSet<T> extends IntervalSet<T>{\n    constructor(datac?: DataOperator<T>){\n        super(datac);\n    }\n    addAll(): void{\n        super.add(0, oo);\n    }\n    constainsAll(): boolean{\n        let c = this.head.next;\n        return c.next === this.tail && c.a === 0 && c.b === oo;\n    }\n    toString(): string{\n        return super.toString(function(c){\n            if(c !== oo && c !== _oo){\n                if(c >= 0x20 && c <= 0x7e){\n                    return '\\'' + String.fromCharCode(c as number) + '\\'';\n                }\n                else {\n                    return '\\\\x' + (c as number).toString(16);\n                }\n            }\n            else if(c === oo){\n                return 'oo';\n            }\n            else {\n                return '-oo';\n            }\n        });\n    }\n}\n","import { BitSet } from '../util/bitset';\nimport { YYTAB } from '../util/common';\nimport { CharSet } from './char-set';\nimport { console } from '../util/common';\nimport { DFA } from './dfa.js';\n// import { DataSet } from '../util/interval-set';\nimport { OutputStream, StringOS, endl } from '../util/io';\n\nexport enum Action{\n    START = 0,\n    END,\n    NONE\n}\nvar maxlen = 0;\nexport class Arc<T>{\n    chars: CharSet<any> = new CharSet<any>();\n    from: State<T>;\n    to: State<T>;\n    constructor(from: State<T>, to: State<T>){\n        this.from = from;\n        this.to = to;\n    }\n}\nexport class EndAction<T>{\n    priority: number = 0;\n    least: boolean = false;\n    id: number = 0;\n    data: T = null;\n}\nexport class State<T>{\n    valid: boolean = false;\n    arcs: Arc<T>[] = [];\n    epsilons: State<T>[] = [];\n    index: number = 0;\n    isStart: boolean = false;\n    isEnd: boolean = false;\n    marker: boolean = false;\n    endAction: EndAction<T> = null;\n    constructor(endAction?: EndAction<T>){\n        this.endAction = endAction || null;\n    }\n    findArc(to: State<T>): Arc<T>{\n        for(var arc of this.arcs){\n            if(arc.to === to){\n                return arc;\n            }\n        }\n        return null;\n    }\n    /**\n     * create an arc and link the state to another with that arc.\n     * \n     * @param {State} s\n     * @returns {Arc} the created arc.\n     */\n    to(s: State<T>): Arc<T>{\n        var arc = this.findArc(s);\n        if(arc === null){\n            arc = new Arc<T>(this, s);\n            this.arcs.push(arc);\n        }\n        s.valid = true;\n        return arc;\n    }\n    epsilonTo(s: State<T>): void{\n        this.epsilons.push(s);\n    }\n    hasDefinate(){\n        return this.arcs.length === 1 && this.arcs[0].chars.constainsAll();\n    }\n    iterator(epOnly: boolean = false): () => State<T>{\n        var queue: State<T>[] = [this];\n        var states: State<T>[] = [this];\n    \n        this.marker = true;\n        return () => {\n            if(queue.length > 0){\n                var s = queue.pop();\n                if(!epOnly){\n                    for(let arc of s.arcs){\n                        var to = arc.to;\n                        if(!to.marker){\n                            queue.push(to);\n                            states.push(to);\n                            to.marker = true;\n                        }\n                    }\n                }\n                for(let to of s.epsilons){\n                    if(!to.marker){\n                        queue.push(to);\n                        states.push(to);\n                        to.marker = true;\n                    }\n                }\n                return s;\n            }\n            else {\n                for(var state of states){\n                    state.marker = false;\n                }\n                return null;\n            }\n        };\n    }\n    forEach(cb: (s: State<T>) => void, epOnly: boolean = false): void{\n        var queue: State<T>[] = [this];\n        var states: State<T>[] = [this];\n    \n        this.marker = true;\n        while(queue.length > 0){\n            var s = queue.pop();\n            cb(s);\n            if(!epOnly){\n                for(let arc of s.arcs){\n                    var to = arc.to;\n                    if(!to.marker){\n                        queue.push(to);\n                        states.push(to);\n                        to.marker = true;\n                    }\n                }\n            }\n            for(let to of s.epsilons){\n                if(!to.marker){\n                    queue.push(to);\n                    states.push(to);\n                    to.marker = true;\n                }\n            }\n        }\n        for(var state of states){\n            state.marker = false;\n        }\n    }\n    number(): void{\n        var i = 0;\n        this.forEach(function(state){\n            state.index = i++;\n        });\n    }\n    print(os: OutputStream, recursive: boolean = true){\n        function single(cela: State<T>): string{\n            let ret = '';\n            ret += `state ${cela.index}`;\n            if(cela.isStart){\n                ret += '(start)';\n            }\n            if(cela.endAction){\n                ret += `(end ${cela.endAction.id})`;\n                //ret += '(end: ' + cela.endAction.id + ')';\n            }\n            ret += endl;\n            for(var i = 0;i < cela.arcs.length;i++){\n                var arc = cela.arcs[i];\n                ret += (`${YYTAB}${arc.chars.toString()} -> state ${arc.to.index}${endl}`);\n                // ret += YYTAB + arc.chars.toString() + ' -> state ' + arc.to.index + '\\n';\n            }\n            if(cela.epsilons.length > 0){\n                // ret += YYTAB + 'epsilon: ';\n                ret += `${YYTAB}epsilon: `;\n                for(var i = 0;i < cela.epsilons.length;i++){\n                    if(i > 0){\n                        // ret += ',';\n                        ret += ',';\n                    }\n                    // ret += cela.epsilons[i].index;\n                    ret += cela.epsilons[i].index.toString();\n                }\n                // ret += '\\n';\n                ret += endl;\n            }\n            return ret;\n        }\n        if(!recursive){\n            os.write(single(this));\n        }\n        else {\n            var ret = '';\n            this.forEach(state => {\n                os.write(single(state));\n            });\n        }\n    }\n    toString(recursive: boolean = true): string{\n        let ss = new StringOS();\n        this.print(ss, recursive);\n        return ss.s;\n    }\n\n    copyEndFrom(state: State<T>): void{\n        if(state.endAction !== null){\n            if(this.endAction !== null){\n                if(this.endAction.priority < state.endAction.priority){\n                    this.endAction = state.endAction;\n                }\n            }\n            else {\n                this.endAction = state.endAction;\n            }\n        }\n    }\n    removeEpsilons(): void{\n        var cela = this;\n        var valid: State<T>[] = [this];\n        this.forEach(function(s){\n            if(s.valid){\n                valid.push(s);\n            }\n        });\n        for(var i = 0;i < valid.length;i++){\n            var s = valid[i];\n            s.forEach(function(state){\n                if(state !== s){\n                    for(var j = 0;j < state.arcs.length;j++){\n                        var arc = state.arcs[j];\n                        s.to(arc.to).chars.union(arc.chars);\n                    }\n                    //s.isEnd = s.isEnd || state.isEnd;\n                    s.copyEndFrom(state);\n                }\n            },true);\n            s.epsilons.length = 0;\n        }\n        for(var i = 0;i < valid.length;i++){\n            valid[i].index = i;\n        }\n    }\n    count(): number{\n        var c = 0;\n        this.forEach(function(){\n            c++;\n        });\n        return c;\n    }\n    \n    size(): number{\n        var i = 0;\n        this.forEach(function(){\n            i++;\n        });\n        return i;\n    }\n    /**\n     * get all the characters that this state can accept\n     * @param {CharSet} set The set that the resulting characters add into\n     */\n    allChars(set: CharSet<State<T>[]>){\n        var cela = this;\n        for(var i = 0;i < this.arcs.length;i++){\n            //set.union(this.arcs[i].chars);\n            var arc = this.arcs[i];\n            arc.chars.forEach(function(a, b){\n                set.add(a, b, [arc.to]);\n            });\n        }\n    }\n    /**\n     * @param {string} char\n     * @returns {State}\n     */\n    getState(char: number): State<T>{\n        for(var i = 0;i < this.arcs.length;i++){\n            var arc = this.arcs[i];\n            if(arc.chars.contains(char)){\n                return arc.to;\n            }\n        }\n        return null;\n    }\n    hasArc(): boolean{\n        return this.arcs.length > 0;\n    }\n    clone(){\n\n    }\n    toDFA(): { head: State<T>, states: State<T>[] }{\n\n        var dfaStates: { [s: string]: CompoundState<T> } = {};\n        var states: State<T>[] = [];\n        var dfaCount = 0;\n        var stateCount = this.count();\n    \n        var set = new CharSet<State<T>[]>({\n            createData: () => [],\n            union(dest: State<T>[], src: State<T>[]){\n                for(let s of src){\n                    let dup = false;\n                    for(let destt of dest){\n                        if(s === destt){\n                            dup = true;\n                            break;\n                        }\n                    }\n                    !dup && dest.push(s);\n                }\n            },\n            stringify: d => '' // not needed here, actually\n        });\n\n        var cela = this;\n        \n        // initiation,put {start} into the dfaStates.\n        var initState = new CompoundState(stateCount,[this]);\n        initState.index = dfaCount++;\n        states.push(initState);\n        var lastState = initState;\n        dfaStates[initState.hash()] = initState;\n\n        var queue: CompoundState<T>[] = [initState];\n    \n        while(queue.length > 0){\n            var s = queue.shift();\n            // clear set and arc array\n            set.removeAll();\n            // find all the characters that this state can accept\n            s.allChars(set);\n            set.forEach(function(chara,charb,it){\n                var cpState = new CompoundState<T>(stateCount, it.data);\n                var cphash = cpState.hash();\n                if(dfaStates[cphash]){\n                    // this state est deja connu\n                    cpState = dfaStates[cphash];\n                }\n                else {\n                    dfaStates[cphash] = cpState;\n                    (cpState.endAction === null || !cpState.endAction.least) && queue.push(cpState);\n                    cpState.index = dfaCount++;\n                    states.push(cpState);\n                }\n                s.to(cpState).chars.add(chara,charb);\n            });\n        }\n        initState.release();\n        return {\n            head: initState,\n            states: states\n        };\n    }\n}\n\nclass CompoundState<T> extends State<T>{\n    stateSet: BitSet;\n    states: State<T>[];\n    constructor(stateCount: number, states: State<T>[]){\n        super();\n        this.isEnd = this.isStart = false;\n        this.valid = true;\n        this.states = states;\n        this.stateSet = new BitSet(stateCount);\n        for(var i = 0;i < states.length;i++){\n            this.stateSet.add(states[i].index);\n            //this.isEnd = this.isEnd || states[i].isEnd;\n            this.copyEndFrom(states[i]);\n            this.isStart = this.isStart || states[i].isStart;\n        }\n    }\n    hash(): string{\n        return this.stateSet.hash();\n    }\n\n    allChars(set: CharSet<State<T>[]>){\n        for(var i = 0;i < this.states.length;i++){\n            // State.prototype.allChars.call(this.states[i],set);\n            this.states[i].allChars(set);\n        }\n    }\n    forEach(cb: (s: CompoundState<T>) => void){\n        super.forEach(cb);\n    }\n    release(){\n        this.forEach(function(state){\n            state.states.length = 0;\n        });\n    }\n}\n","import { InputStream,biss, OutputStream } from '../util/io.js';\nimport { State, EndAction, Arc } from './state';\n\nexport class DFA<T>{\n    start: State<T>;\n    constructor(public states: State<T>[]){\n        this.start = states[0];\n    }\n    forEachArc(cb: (arc: Arc<T>, from: State<T>, to: State<T>) => any){\n        for(let from of this.states){\n            for(let arc of from.arcs){\n                cb(arc, from, arc.to);\n            }\n        }\n    }\n    print(os: OutputStream){\n        for(let s of this.states){\n            s.print(os, false);\n            os.writeln();\n        }\n    }\n    toString(): string{\n        var ret = '';\n        for(var i = 0;i < this.states.length;i++){\n            ret += this.states[i].toString() + '\\n';\n        }\n        return ret;\n    }\n    \n    matcher(stream: InputStream){\n        var bs = biss(stream);\n        var backups = [];\n        var matched = [];\n        var marker = null;\n        var c = bs.peek();\n        var cs;\n        function nc(){\n            if(marker !== null){\n                backups.push(c);\n            }\n            matched.push(c);\n            bs.next();\n            c = bs.peek();\n        }\n        function rollback(){\n            cs = marker;\n            marker = null;\n            while(backups.length > 0){\n                bs.backup(backups.pop());\n                matched.pop();\n            }\n        }\n        var cela = this;\n        return function(){\n            c = bs.peek();\n            cs = cela.start;\n            matched.length = 0;\n            backups.length = 0;\n            marker = null;\n            var ns;\n            while(true){\n                if(cs.endAction !== null){\n                    // this state is an end state,be carefull\n                    if(cs.hasArc()){\n                        ns = c !== null ? cs.getState(c.charCodeAt(0)) : null;\n                        if(ns === null){\n                            return { matched: matched.join(''),action: cs.endAction };\n                        }\n                        else {\n                            backups.length = 0;\n                            marker = cs;\n                            cs = ns;\n                            nc();\n                        }\n                    }\n                    else {\n                        return { matched: matched.join(''),action: cs.endAction };\n                    }\n                }\n                else {\n                    ns = c !== null ? cs.getState(c.charCodeAt(0)) : null;\n                    if(ns === null){\n                        if(marker !== null){\n                            rollback();\n                            return { matched: matched.join(''),action: cs.endAction };\n                        }\n                        else if(c === null){\n                            //eof\n                            return null;\n                        }\n                        else {\n                            throw new Error('unexpected character \"' + c + '\"');\n                        }\n                    }\n                    else {\n                        cs = ns;\n                        nc();\n                    }\n                }\n            }\n            // return null;\n        }\n    }\n}\n","// export interface Coroutine<T>{\n//     run(a: T): void;\n//     fail(): void;\n// };\n\nexport type Coroutine<T> = (success: boolean, data: T) => any;\n\nexport class CoroutineMgr<T>{\n    private _blocked: {[s: string]: Coroutine<T>[]} = {};\n\n    constructor(public getRes: (s: string) => T){}\n\n    wait(s: string, cr: Coroutine<T>){\n        let r = this.getRes(s);\n        if(r === undefined){\n            this._blocked[s] || (this._blocked[s] = []);\n            this._blocked[s].push(cr);\n        }\n        else {\n            cr(true, r);\n        }\n    }\n    signal(s: string, data: T){\n        let crs = this._blocked[s];\n        if(crs !== undefined){\n            for(let cr of crs){\n                cr(true, data);\n            }\n            delete this._blocked[s];\n        }\n    }\n    fail(){\n        for(let s in this._blocked){\n            for(let cr of this._blocked[s]){\n                cr(false ,null);\n            }\n        }\n    }\n}","import { endl } from \"../util/io\";\n\nexport interface Position{\n    startLine: number;\n    startColumn: number;\n    endLine: number;\n    endColumn: number;\n}\nexport interface JNode extends Position{\n    val: string;\n    ext?: any;\n}\nexport function newNode(val: string): JNode{\n    return {\n        val: val,\n        startLine: -1,\n        startColumn: 0,\n        endLine: 0,\n        endColumn: 0\n    };\n}\nexport function nodeBetween(from: Position, to: Position, val: string){\n    return {\n        val: val,\n        startLine: from.startLine,\n        startColumn: from.startColumn,\n        endLine: to.endLine,\n        endColumn: to.endColumn\n    };\n}\nexport function posToString(pos: Position){\n    if(pos.startLine !== -1){\n        return `line ${pos.startLine + 1}, column ${pos.startColumn + 1}`;\n    }\n    else {\n        return '<internal-position>';\n    }\n}\nexport function markPosition(pos: Position, lines: string[], marker: string = '^'): string{\n    function repeat(s: string, t: number){\n        let ret = '';\n        while(t --> 0){\n            ret += s;\n        }\n        return ret;\n    }\n    function width(s: string){\n        let ret = 0;\n        for(let i = 0;i < s.length; i++){\n            ret += s.charCodeAt(i) > 0xff ? 2 : 1;\n        }\n        return ret;\n    }\n    if(pos.startLine !== -1){\n        let ret = `(line ${pos.startLine + 1}, column ${pos.startColumn + 1}):` + endl;\n        let line = pos.startLine, col = pos.startColumn;\n        ret += lines[line] + endl;\n        ret += repeat(' ', col);\n        let length = width(lines[line]);\n        while(line <= pos.endLine && col <= pos.endColumn){\n            ret += marker;\n            if(col++ >= length){\n                col = 0;\n                line++;\n                ret += endl + lines[line] + endl;\n                length = width(lines[line]);\n            }\n        }\n        return ret;\n    }\n    else {\n        return '<internal position>';\n    }\n}","import { State, Arc, EndAction } from './state';\nimport { Context } from '../util/context';\nimport { JsccError } from '../util/E';\nimport { DFA } from './dfa';\nimport { Coroutine, CoroutineMgr } from '../util/coroutine';\nimport { LexAction } from './action';\nimport { markPosition, Position, JNode, newNode } from '../parser/node';\nimport { endl } from '../util/io';\n\n// internal \n// these two are copied from the scanner source code of typescript2.6\nconst unicodeES5IdentifierStart = [170, 170, 181, 181, 186, 186, 192, 214, 216, 246, 248, 705, 710, 721, 736, 740, 748, 748, 750, 750, 880, 884, 886, 887, 890, 893, 902, 902, 904, 906, 908, 908, 910, 929, 931, 1013, 1015, 1153, 1162, 1319, 1329, 1366, 1369, 1369, 1377, 1415, 1488, 1514, 1520, 1522, 1568, 1610, 1646, 1647, 1649, 1747, 1749, 1749, 1765, 1766, 1774, 1775, 1786, 1788, 1791, 1791, 1808, 1808, 1810, 1839, 1869, 1957, 1969, 1969, 1994, 2026, 2036, 2037, 2042, 2042, 2048, 2069, 2074, 2074, 2084, 2084, 2088, 2088, 2112, 2136, 2208, 2208, 2210, 2220, 2308, 2361, 2365, 2365, 2384, 2384, 2392, 2401, 2417, 2423, 2425, 2431, 2437, 2444, 2447, 2448, 2451, 2472, 2474, 2480, 2482, 2482, 2486, 2489, 2493, 2493, 2510, 2510, 2524, 2525, 2527, 2529, 2544, 2545, 2565, 2570, 2575, 2576, 2579, 2600, 2602, 2608, 2610, 2611, 2613, 2614, 2616, 2617, 2649, 2652, 2654, 2654, 2674, 2676, 2693, 2701, 2703, 2705, 2707, 2728, 2730, 2736, 2738, 2739, 2741, 2745, 2749, 2749, 2768, 2768, 2784, 2785, 2821, 2828, 2831, 2832, 2835, 2856, 2858, 2864, 2866, 2867, 2869, 2873, 2877, 2877, 2908, 2909, 2911, 2913, 2929, 2929, 2947, 2947, 2949, 2954, 2958, 2960, 2962, 2965, 2969, 2970, 2972, 2972, 2974, 2975, 2979, 2980, 2984, 2986, 2990, 3001, 3024, 3024, 3077, 3084, 3086, 3088, 3090, 3112, 3114, 3123, 3125, 3129, 3133, 3133, 3160, 3161, 3168, 3169, 3205, 3212, 3214, 3216, 3218, 3240, 3242, 3251, 3253, 3257, 3261, 3261, 3294, 3294, 3296, 3297, 3313, 3314, 3333, 3340, 3342, 3344, 3346, 3386, 3389, 3389, 3406, 3406, 3424, 3425, 3450, 3455, 3461, 3478, 3482, 3505, 3507, 3515, 3517, 3517, 3520, 3526, 3585, 3632, 3634, 3635, 3648, 3654, 3713, 3714, 3716, 3716, 3719, 3720, 3722, 3722, 3725, 3725, 3732, 3735, 3737, 3743, 3745, 3747, 3749, 3749, 3751, 3751, 3754, 3755, 3757, 3760, 3762, 3763, 3773, 3773, 3776, 3780, 3782, 3782, 3804, 3807, 3840, 3840, 3904, 3911, 3913, 3948, 3976, 3980, 4096, 4138, 4159, 4159, 4176, 4181, 4186, 4189, 4193, 4193, 4197, 4198, 4206, 4208, 4213, 4225, 4238, 4238, 4256, 4293, 4295, 4295, 4301, 4301, 4304, 4346, 4348, 4680, 4682, 4685, 4688, 4694, 4696, 4696, 4698, 4701, 4704, 4744, 4746, 4749, 4752, 4784, 4786, 4789, 4792, 4798, 4800, 4800, 4802, 4805, 4808, 4822, 4824, 4880, 4882, 4885, 4888, 4954, 4992, 5007, 5024, 5108, 5121, 5740, 5743, 5759, 5761, 5786, 5792, 5866, 5870, 5872, 5888, 5900, 5902, 5905, 5920, 5937, 5952, 5969, 5984, 5996, 5998, 6000, 6016, 6067, 6103, 6103, 6108, 6108, 6176, 6263, 6272, 6312, 6314, 6314, 6320, 6389, 6400, 6428, 6480, 6509, 6512, 6516, 6528, 6571, 6593, 6599, 6656, 6678, 6688, 6740, 6823, 6823, 6917, 6963, 6981, 6987, 7043, 7072, 7086, 7087, 7098, 7141, 7168, 7203, 7245, 7247, 7258, 7293, 7401, 7404, 7406, 7409, 7413, 7414, 7424, 7615, 7680, 7957, 7960, 7965, 7968, 8005, 8008, 8013, 8016, 8023, 8025, 8025, 8027, 8027, 8029, 8029, 8031, 8061, 8064, 8116, 8118, 8124, 8126, 8126, 8130, 8132, 8134, 8140, 8144, 8147, 8150, 8155, 8160, 8172, 8178, 8180, 8182, 8188, 8305, 8305, 8319, 8319, 8336, 8348, 8450, 8450, 8455, 8455, 8458, 8467, 8469, 8469, 8473, 8477, 8484, 8484, 8486, 8486, 8488, 8488, 8490, 8493, 8495, 8505, 8508, 8511, 8517, 8521, 8526, 8526, 8544, 8584, 11264, 11310, 11312, 11358, 11360, 11492, 11499, 11502, 11506, 11507, 11520, 11557, 11559, 11559, 11565, 11565, 11568, 11623, 11631, 11631, 11648, 11670, 11680, 11686, 11688, 11694, 11696, 11702, 11704, 11710, 11712, 11718, 11720, 11726, 11728, 11734, 11736, 11742, 11823, 11823, 12293, 12295, 12321, 12329, 12337, 12341, 12344, 12348, 12353, 12438, 12445, 12447, 12449, 12538, 12540, 12543, 12549, 12589, 12593, 12686, 12704, 12730, 12784, 12799, 13312, 19893, 19968, 40908, 40960, 42124, 42192, 42237, 42240, 42508, 42512, 42527, 42538, 42539, 42560, 42606, 42623, 42647, 42656, 42735, 42775, 42783, 42786, 42888, 42891, 42894, 42896, 42899, 42912, 42922, 43000, 43009, 43011, 43013, 43015, 43018, 43020, 43042, 43072, 43123, 43138, 43187, 43250, 43255, 43259, 43259, 43274, 43301, 43312, 43334, 43360, 43388, 43396, 43442, 43471, 43471, 43520, 43560, 43584, 43586, 43588, 43595, 43616, 43638, 43642, 43642, 43648, 43695, 43697, 43697, 43701, 43702, 43705, 43709, 43712, 43712, 43714, 43714, 43739, 43741, 43744, 43754, 43762, 43764, 43777, 43782, 43785, 43790, 43793, 43798, 43808, 43814, 43816, 43822, 43968, 44002, 44032, 55203, 55216, 55238, 55243, 55291, 63744, 64109, 64112, 64217, 64256, 64262, 64275, 64279, 64285, 64285, 64287, 64296, 64298, 64310, 64312, 64316, 64318, 64318, 64320, 64321, 64323, 64324, 64326, 64433, 64467, 64829, 64848, 64911, 64914, 64967, 65008, 65019, 65136, 65140, 65142, 65276, 65313, 65338, 65345, 65370, 65382, 65470, 65474, 65479, 65482, 65487, 65490, 65495, 65498, 65500, ];\nconst unicodeES5IdentifierPart = [170, 170, 181, 181, 186, 186, 192, 214, 216, 246, 248, 705, 710, 721, 736, 740, 748, 748, 750, 750, 768, 884, 886, 887, 890, 893, 902, 902, 904, 906, 908, 908, 910, 929, 931, 1013, 1015, 1153, 1155, 1159, 1162, 1319, 1329, 1366, 1369, 1369, 1377, 1415, 1425, 1469, 1471, 1471, 1473, 1474, 1476, 1477, 1479, 1479, 1488, 1514, 1520, 1522, 1552, 1562, 1568, 1641, 1646, 1747, 1749, 1756, 1759, 1768, 1770, 1788, 1791, 1791, 1808, 1866, 1869, 1969, 1984, 2037, 2042, 2042, 2048, 2093, 2112, 2139, 2208, 2208, 2210, 2220, 2276, 2302, 2304, 2403, 2406, 2415, 2417, 2423, 2425, 2431, 2433, 2435, 2437, 2444, 2447, 2448, 2451, 2472, 2474, 2480, 2482, 2482, 2486, 2489, 2492, 2500, 2503, 2504, 2507, 2510, 2519, 2519, 2524, 2525, 2527, 2531, 2534, 2545, 2561, 2563, 2565, 2570, 2575, 2576, 2579, 2600, 2602, 2608, 2610, 2611, 2613, 2614, 2616, 2617, 2620, 2620, 2622, 2626, 2631, 2632, 2635, 2637, 2641, 2641, 2649, 2652, 2654, 2654, 2662, 2677, 2689, 2691, 2693, 2701, 2703, 2705, 2707, 2728, 2730, 2736, 2738, 2739, 2741, 2745, 2748, 2757, 2759, 2761, 2763, 2765, 2768, 2768, 2784, 2787, 2790, 2799, 2817, 2819, 2821, 2828, 2831, 2832, 2835, 2856, 2858, 2864, 2866, 2867, 2869, 2873, 2876, 2884, 2887, 2888, 2891, 2893, 2902, 2903, 2908, 2909, 2911, 2915, 2918, 2927, 2929, 2929, 2946, 2947, 2949, 2954, 2958, 2960, 2962, 2965, 2969, 2970, 2972, 2972, 2974, 2975, 2979, 2980, 2984, 2986, 2990, 3001, 3006, 3010, 3014, 3016, 3018, 3021, 3024, 3024, 3031, 3031, 3046, 3055, 3073, 3075, 3077, 3084, 3086, 3088, 3090, 3112, 3114, 3123, 3125, 3129, 3133, 3140, 3142, 3144, 3146, 3149, 3157, 3158, 3160, 3161, 3168, 3171, 3174, 3183, 3202, 3203, 3205, 3212, 3214, 3216, 3218, 3240, 3242, 3251, 3253, 3257, 3260, 3268, 3270, 3272, 3274, 3277, 3285, 3286, 3294, 3294, 3296, 3299, 3302, 3311, 3313, 3314, 3330, 3331, 3333, 3340, 3342, 3344, 3346, 3386, 3389, 3396, 3398, 3400, 3402, 3406, 3415, 3415, 3424, 3427, 3430, 3439, 3450, 3455, 3458, 3459, 3461, 3478, 3482, 3505, 3507, 3515, 3517, 3517, 3520, 3526, 3530, 3530, 3535, 3540, 3542, 3542, 3544, 3551, 3570, 3571, 3585, 3642, 3648, 3662, 3664, 3673, 3713, 3714, 3716, 3716, 3719, 3720, 3722, 3722, 3725, 3725, 3732, 3735, 3737, 3743, 3745, 3747, 3749, 3749, 3751, 3751, 3754, 3755, 3757, 3769, 3771, 3773, 3776, 3780, 3782, 3782, 3784, 3789, 3792, 3801, 3804, 3807, 3840, 3840, 3864, 3865, 3872, 3881, 3893, 3893, 3895, 3895, 3897, 3897, 3902, 3911, 3913, 3948, 3953, 3972, 3974, 3991, 3993, 4028, 4038, 4038, 4096, 4169, 4176, 4253, 4256, 4293, 4295, 4295, 4301, 4301, 4304, 4346, 4348, 4680, 4682, 4685, 4688, 4694, 4696, 4696, 4698, 4701, 4704, 4744, 4746, 4749, 4752, 4784, 4786, 4789, 4792, 4798, 4800, 4800, 4802, 4805, 4808, 4822, 4824, 4880, 4882, 4885, 4888, 4954, 4957, 4959, 4992, 5007, 5024, 5108, 5121, 5740, 5743, 5759, 5761, 5786, 5792, 5866, 5870, 5872, 5888, 5900, 5902, 5908, 5920, 5940, 5952, 5971, 5984, 5996, 5998, 6000, 6002, 6003, 6016, 6099, 6103, 6103, 6108, 6109, 6112, 6121, 6155, 6157, 6160, 6169, 6176, 6263, 6272, 6314, 6320, 6389, 6400, 6428, 6432, 6443, 6448, 6459, 6470, 6509, 6512, 6516, 6528, 6571, 6576, 6601, 6608, 6617, 6656, 6683, 6688, 6750, 6752, 6780, 6783, 6793, 6800, 6809, 6823, 6823, 6912, 6987, 6992, 7001, 7019, 7027, 7040, 7155, 7168, 7223, 7232, 7241, 7245, 7293, 7376, 7378, 7380, 7414, 7424, 7654, 7676, 7957, 7960, 7965, 7968, 8005, 8008, 8013, 8016, 8023, 8025, 8025, 8027, 8027, 8029, 8029, 8031, 8061, 8064, 8116, 8118, 8124, 8126, 8126, 8130, 8132, 8134, 8140, 8144, 8147, 8150, 8155, 8160, 8172, 8178, 8180, 8182, 8188, 8204, 8205, 8255, 8256, 8276, 8276, 8305, 8305, 8319, 8319, 8336, 8348, 8400, 8412, 8417, 8417, 8421, 8432, 8450, 8450, 8455, 8455, 8458, 8467, 8469, 8469, 8473, 8477, 8484, 8484, 8486, 8486, 8488, 8488, 8490, 8493, 8495, 8505, 8508, 8511, 8517, 8521, 8526, 8526, 8544, 8584, 11264, 11310, 11312, 11358, 11360, 11492, 11499, 11507, 11520, 11557, 11559, 11559, 11565, 11565, 11568, 11623, 11631, 11631, 11647, 11670, 11680, 11686, 11688, 11694, 11696, 11702, 11704, 11710, 11712, 11718, 11720, 11726, 11728, 11734, 11736, 11742, 11744, 11775, 11823, 11823, 12293, 12295, 12321, 12335, 12337, 12341, 12344, 12348, 12353, 12438, 12441, 12442, 12445, 12447, 12449, 12538, 12540, 12543, 12549, 12589, 12593, 12686, 12704, 12730, 12784, 12799, 13312, 19893, 19968, 40908, 40960, 42124, 42192, 42237, 42240, 42508, 42512, 42539, 42560, 42607, 42612, 42621, 42623, 42647, 42655, 42737, 42775, 42783, 42786, 42888, 42891, 42894, 42896, 42899, 42912, 42922, 43000, 43047, 43072, 43123, 43136, 43204, 43216, 43225, 43232, 43255, 43259, 43259, 43264, 43309, 43312, 43347, 43360, 43388, 43392, 43456, 43471, 43481, 43520, 43574, 43584, 43597, 43600, 43609, 43616, 43638, 43642, 43643, 43648, 43714, 43739, 43741, 43744, 43759, 43762, 43766, 43777, 43782, 43785, 43790, 43793, 43798, 43808, 43814, 43816, 43822, 43968, 44010, 44012, 44013, 44016, 44025, 44032, 55203, 55216, 55238, 55243, 55291, 63744, 64109, 64112, 64217, 64256, 64262, 64275, 64279, 64285, 64296, 64298, 64310, 64312, 64316, 64318, 64318, 64320, 64321, 64323, 64324, 64326, 64433, 64467, 64829, 64848, 64911, 64914, 64967, 65008, 65019, 65024, 65039, 65056, 65062, 65075, 65076, 65101, 65103, 65136, 65140, 65142, 65276, 65296, 65305, 65313, 65338, 65343, 65343, 65345, 65370, 65382, 65470, 65474, 65479, 65482, 65487, 65490, 65495, 65498, 65500, ];\n\nconst unicodeES3IdentifierStart = [170, 170, 181, 181, 186, 186, 192, 214, 216, 246, 248, 543, 546, 563, 592, 685, 688, 696, 699, 705, 720, 721, 736, 740, 750, 750, 890, 890, 902, 902, 904, 906, 908, 908, 910, 929, 931, 974, 976, 983, 986, 1011, 1024, 1153, 1164, 1220, 1223, 1224, 1227, 1228, 1232, 1269, 1272, 1273, 1329, 1366, 1369, 1369, 1377, 1415, 1488, 1514, 1520, 1522, 1569, 1594, 1600, 1610, 1649, 1747, 1749, 1749, 1765, 1766, 1786, 1788, 1808, 1808, 1810, 1836, 1920, 1957, 2309, 2361, 2365, 2365, 2384, 2384, 2392, 2401, 2437, 2444, 2447, 2448, 2451, 2472, 2474, 2480, 2482, 2482, 2486, 2489, 2524, 2525, 2527, 2529, 2544, 2545, 2565, 2570, 2575, 2576, 2579, 2600, 2602, 2608, 2610, 2611, 2613, 2614, 2616, 2617, 2649, 2652, 2654, 2654, 2674, 2676, 2693, 2699, 2701, 2701, 2703, 2705, 2707, 2728, 2730, 2736, 2738, 2739, 2741, 2745, 2749, 2749, 2768, 2768, 2784, 2784, 2821, 2828, 2831, 2832, 2835, 2856, 2858, 2864, 2866, 2867, 2870, 2873, 2877, 2877, 2908, 2909, 2911, 2913, 2949, 2954, 2958, 2960, 2962, 2965, 2969, 2970, 2972, 2972, 2974, 2975, 2979, 2980, 2984, 2986, 2990, 2997, 2999, 3001, 3077, 3084, 3086, 3088, 3090, 3112, 3114, 3123, 3125, 3129, 3168, 3169, 3205, 3212, 3214, 3216, 3218, 3240, 3242, 3251, 3253, 3257, 3294, 3294, 3296, 3297, 3333, 3340, 3342, 3344, 3346, 3368, 3370, 3385, 3424, 3425, 3461, 3478, 3482, 3505, 3507, 3515, 3517, 3517, 3520, 3526, 3585, 3632, 3634, 3635, 3648, 3654, 3713, 3714, 3716, 3716, 3719, 3720, 3722, 3722, 3725, 3725, 3732, 3735, 3737, 3743, 3745, 3747, 3749, 3749, 3751, 3751, 3754, 3755, 3757, 3760, 3762, 3763, 3773, 3773, 3776, 3780, 3782, 3782, 3804, 3805, 3840, 3840, 3904, 3911, 3913, 3946, 3976, 3979, 4096, 4129, 4131, 4135, 4137, 4138, 4176, 4181, 4256, 4293, 4304, 4342, 4352, 4441, 4447, 4514, 4520, 4601, 4608, 4614, 4616, 4678, 4680, 4680, 4682, 4685, 4688, 4694, 4696, 4696, 4698, 4701, 4704, 4742, 4744, 4744, 4746, 4749, 4752, 4782, 4784, 4784, 4786, 4789, 4792, 4798, 4800, 4800, 4802, 4805, 4808, 4814, 4816, 4822, 4824, 4846, 4848, 4878, 4880, 4880, 4882, 4885, 4888, 4894, 4896, 4934, 4936, 4954, 5024, 5108, 5121, 5740, 5743, 5750, 5761, 5786, 5792, 5866, 6016, 6067, 6176, 6263, 6272, 6312, 7680, 7835, 7840, 7929, 7936, 7957, 7960, 7965, 7968, 8005, 8008, 8013, 8016, 8023, 8025, 8025, 8027, 8027, 8029, 8029, 8031, 8061, 8064, 8116, 8118, 8124, 8126, 8126, 8130, 8132, 8134, 8140, 8144, 8147, 8150, 8155, 8160, 8172, 8178, 8180, 8182, 8188, 8319, 8319, 8450, 8450, 8455, 8455, 8458, 8467, 8469, 8469, 8473, 8477, 8484, 8484, 8486, 8486, 8488, 8488, 8490, 8493, 8495, 8497, 8499, 8505, 8544, 8579, 12293, 12295, 12321, 12329, 12337, 12341, 12344, 12346, 12353, 12436, 12445, 12446, 12449, 12538, 12540, 12542, 12549, 12588, 12593, 12686, 12704, 12727, 13312, 19893, 19968, 40869, 40960, 42124, 44032, 55203, 63744, 64045, 64256, 64262, 64275, 64279, 64285, 64285, 64287, 64296, 64298, 64310, 64312, 64316, 64318, 64318, 64320, 64321, 64323, 64324, 64326, 64433, 64467, 64829, 64848, 64911, 64914, 64967, 65008, 65019, 65136, 65138, 65140, 65140, 65142, 65276, 65313, 65338, 65345, 65370, 65382, 65470, 65474, 65479, 65482, 65487, 65490, 65495, 65498, 65500, ];\nconst unicodeES3IdentifierPart = [170, 170, 181, 181, 186, 186, 192, 214, 216, 246, 248, 543, 546, 563, 592, 685, 688, 696, 699, 705, 720, 721, 736, 740, 750, 750, 768, 846, 864, 866, 890, 890, 902, 902, 904, 906, 908, 908, 910, 929, 931, 974, 976, 983, 986, 1011, 1024, 1153, 1155, 1158, 1164, 1220, 1223, 1224, 1227, 1228, 1232, 1269, 1272, 1273, 1329, 1366, 1369, 1369, 1377, 1415, 1425, 1441, 1443, 1465, 1467, 1469, 1471, 1471, 1473, 1474, 1476, 1476, 1488, 1514, 1520, 1522, 1569, 1594, 1600, 1621, 1632, 1641, 1648, 1747, 1749, 1756, 1759, 1768, 1770, 1773, 1776, 1788, 1808, 1836, 1840, 1866, 1920, 1968, 2305, 2307, 2309, 2361, 2364, 2381, 2384, 2388, 2392, 2403, 2406, 2415, 2433, 2435, 2437, 2444, 2447, 2448, 2451, 2472, 2474, 2480, 2482, 2482, 2486, 2489, 2492, 2492, 2494, 2500, 2503, 2504, 2507, 2509, 2519, 2519, 2524, 2525, 2527, 2531, 2534, 2545, 2562, 2562, 2565, 2570, 2575, 2576, 2579, 2600, 2602, 2608, 2610, 2611, 2613, 2614, 2616, 2617, 2620, 2620, 2622, 2626, 2631, 2632, 2635, 2637, 2649, 2652, 2654, 2654, 2662, 2676, 2689, 2691, 2693, 2699, 2701, 2701, 2703, 2705, 2707, 2728, 2730, 2736, 2738, 2739, 2741, 2745, 2748, 2757, 2759, 2761, 2763, 2765, 2768, 2768, 2784, 2784, 2790, 2799, 2817, 2819, 2821, 2828, 2831, 2832, 2835, 2856, 2858, 2864, 2866, 2867, 2870, 2873, 2876, 2883, 2887, 2888, 2891, 2893, 2902, 2903, 2908, 2909, 2911, 2913, 2918, 2927, 2946, 2947, 2949, 2954, 2958, 2960, 2962, 2965, 2969, 2970, 2972, 2972, 2974, 2975, 2979, 2980, 2984, 2986, 2990, 2997, 2999, 3001, 3006, 3010, 3014, 3016, 3018, 3021, 3031, 3031, 3047, 3055, 3073, 3075, 3077, 3084, 3086, 3088, 3090, 3112, 3114, 3123, 3125, 3129, 3134, 3140, 3142, 3144, 3146, 3149, 3157, 3158, 3168, 3169, 3174, 3183, 3202, 3203, 3205, 3212, 3214, 3216, 3218, 3240, 3242, 3251, 3253, 3257, 3262, 3268, 3270, 3272, 3274, 3277, 3285, 3286, 3294, 3294, 3296, 3297, 3302, 3311, 3330, 3331, 3333, 3340, 3342, 3344, 3346, 3368, 3370, 3385, 3390, 3395, 3398, 3400, 3402, 3405, 3415, 3415, 3424, 3425, 3430, 3439, 3458, 3459, 3461, 3478, 3482, 3505, 3507, 3515, 3517, 3517, 3520, 3526, 3530, 3530, 3535, 3540, 3542, 3542, 3544, 3551, 3570, 3571, 3585, 3642, 3648, 3662, 3664, 3673, 3713, 3714, 3716, 3716, 3719, 3720, 3722, 3722, 3725, 3725, 3732, 3735, 3737, 3743, 3745, 3747, 3749, 3749, 3751, 3751, 3754, 3755, 3757, 3769, 3771, 3773, 3776, 3780, 3782, 3782, 3784, 3789, 3792, 3801, 3804, 3805, 3840, 3840, 3864, 3865, 3872, 3881, 3893, 3893, 3895, 3895, 3897, 3897, 3902, 3911, 3913, 3946, 3953, 3972, 3974, 3979, 3984, 3991, 3993, 4028, 4038, 4038, 4096, 4129, 4131, 4135, 4137, 4138, 4140, 4146, 4150, 4153, 4160, 4169, 4176, 4185, 4256, 4293, 4304, 4342, 4352, 4441, 4447, 4514, 4520, 4601, 4608, 4614, 4616, 4678, 4680, 4680, 4682, 4685, 4688, 4694, 4696, 4696, 4698, 4701, 4704, 4742, 4744, 4744, 4746, 4749, 4752, 4782, 4784, 4784, 4786, 4789, 4792, 4798, 4800, 4800, 4802, 4805, 4808, 4814, 4816, 4822, 4824, 4846, 4848, 4878, 4880, 4880, 4882, 4885, 4888, 4894, 4896, 4934, 4936, 4954, 4969, 4977, 5024, 5108, 5121, 5740, 5743, 5750, 5761, 5786, 5792, 5866, 6016, 6099, 6112, 6121, 6160, 6169, 6176, 6263, 6272, 6313, 7680, 7835, 7840, 7929, 7936, 7957, 7960, 7965, 7968, 8005, 8008, 8013, 8016, 8023, 8025, 8025, 8027, 8027, 8029, 8029, 8031, 8061, 8064, 8116, 8118, 8124, 8126, 8126, 8130, 8132, 8134, 8140, 8144, 8147, 8150, 8155, 8160, 8172, 8178, 8180, 8182, 8188, 8255, 8256, 8319, 8319, 8400, 8412, 8417, 8417, 8450, 8450, 8455, 8455, 8458, 8467, 8469, 8469, 8473, 8477, 8484, 8484, 8486, 8486, 8488, 8488, 8490, 8493, 8495, 8497, 8499, 8505, 8544, 8579, 12293, 12295, 12321, 12335, 12337, 12341, 12344, 12346, 12353, 12436, 12441, 12442, 12445, 12446, 12449, 12542, 12549, 12588, 12593, 12686, 12704, 12727, 13312, 19893, 19968, 40869, 40960, 42124, 44032, 55203, 63744, 64045, 64256, 64262, 64275, 64279, 64285, 64296, 64298, 64310, 64312, 64316, 64318, 64318, 64320, 64321, 64323, 64324, 64326, 64433, 64467, 64829, 64848, 64911, 64914, 64967, 65008, 65019, 65056, 65059, 65075, 65076, 65101, 65103, 65136, 65138, 65140, 65140, 65142, 65276, 65296, 65305, 65313, 65338, 65343, 65343, 65345, 65370, 65381, 65470, 65474, 65479, 65482, 65487, 65490, 65495, 65498, 65500, ];\n\nclass CmdArray{\n    opcodes: (() => void)[] = [];\n    constructor(public label: string){}\n}\n\ninterface varDef{\n    pos: Position;\n    cmds: CmdArray;\n};\nexport interface LexBuilder<T>{\n    prepareVar(vname: JNode);\n    endVar();\n    prepareLex();\n    selectState(s: string);\n    newState();\n    end(action: T, least: boolean, label: string);\n    enterUnion();\n    endUnionItem();\n    leaveUnion();\n    enterSimple();\n    simplePostfix(postfix: '' | '?' | '+' | '*');\n    addString(s: string);\n    addVar(vname: JNode);\n    beginSet(inverse: boolean);\n    addSetItem(from: JNode, to: JNode);\n    addSetItemRaw(from: number, to: number);\n    endSet();\n    importVar(n: JNode);\n    build(): DFA<T>[];\n    getPossibleAlias(): string;\n    readonly requiringState: CoroutineMgr<number>;\n}\n\nexport function createLexBuilder<T>(ctx: Context): LexBuilder<T>{\n    let _head: State<T> = new State<T>();\n    let _currentState: State<T> = null;\n    let _unionStack: { head: State<T>, tail: State<T> }[] = [];\n    // naive stack    +1s\n    let  _simpleStack: State<T>[] = [];\n    let _currentArc: Arc<T> = null;\n    let _isInverse: boolean = false;\n    let possibleAlias: string = null;\n    let _first = false;\n\n    let _scount = 0;\n    let _regexpVars: {[s: string]: varDef} = {};\n    let _states: CmdArray[] = [new CmdArray('')];\n\n    let _stateMap: {[s: string]: number} = { DEFAULT: 0 };\n    let requiringState: CoroutineMgr<number>;\n    let _selectedStates: CmdArray[] = [];\n    let _selectedVar: CmdArray = null;\n    \n    // exec\n    let _ar: { pc: number, cmds: CmdArray }[] = [];\n\n    let internalLexVars: {[s: string]: () => any} = {\n        'es3UnicodeIDStart': () => loadSet(unicodeES3IdentifierStart),\n        'es3UnicodeIDPart': () => loadSet(unicodeES3IdentifierPart),\n        'es5UnicodeIDStart': () => loadSet(unicodeES5IdentifierStart),\n        'es5UnicodeIDPart': () => loadSet(unicodeES5IdentifierPart),\n    };\n\n    requiringState = new CoroutineMgr<number>(s => _stateMap[s]);\n    // loadInternal();\n    return {\n        prepareVar,\n        endVar,\n        prepareLex,\n        selectState,\n        newState,\n        end,\n        enterUnion,\n        endUnionItem,\n        leaveUnion,\n        enterSimple,\n        simplePostfix,\n        addString,\n        addVar,\n        beginSet,\n        addSetItem,\n        addSetItemRaw,\n        endSet,\n        build,\n        importVar,\n        getPossibleAlias: () => possibleAlias,\n        requiringState\n    };\n\n    function _emit(func: () => void){\n        if(_selectedVar !== null){\n            _selectedVar.opcodes.push(func);\n        }\n        else {\n            for(let sn of _selectedStates){\n                sn.opcodes.push(func);\n            }\n        }\n    }\n    function _exec(a: CmdArray): DFA<T>{\n        _head = _currentState = new State<T>();\n        _head.isStart = true;\n        _unionStack.length = 0;\n        _simpleStack.length = 0;\n        _currentArc = null;\n        _isInverse = false;\n        _ar.length = 0;\n        _ar.push({\n            pc: 0,\n            cmds: a\n        });\n        while(_ar.length > 0){\n            let top = _ar[_ar.length - 1];\n            top.cmds.opcodes[top.pc++]();\n            top = _ar[_ar.length - 1];\n            top.pc >= top.cmds.opcodes.length && _ar.pop();\n        }\n        _head.removeEpsilons();\n        var dhead = _head.toDFA();\n        var ret = new DFA<T>(dhead.states);\n        return ret;\n        //return null;\n    }\n    function singlePosErr(msg: string, pos: Position){\n        ctx.requireLines((ctx, lines) => {\n            ctx.err(new JsccError(msg + ' ' + markPosition(pos, lines), 'Compilation error'));\n        });\n    }\n    function redefineErr(what: string, prev: Position, current: Position){\n        ctx.requireLines((ctx, lines) => {\n            let msg = what + ' ' + markPosition(current, lines) + endl;\n            msg += 'previous defination was at ' + markPosition(prev, lines);\n            ctx.err(new JsccError(msg));\n        });\n    }\n\n    function prepareVar(vname: JNode){\n        let vdef = _regexpVars[vname.val];\n        if(vdef !== undefined){\n            redefineErr(`variable \"${vname.val}\" was already defined`, vdef.pos, vname);\n        }\n        vdef = _regexpVars[vname.val] = {\n            pos: vname,\n            cmds: new CmdArray(vname.val)\n        };\n        _selectedVar = vdef.cmds;\n    }\n    function endVar(){\n        _selectedVar = null;\n    }\n\n    function prepareLex(){\n        _selectedStates.length = 0;\n    }\n    function selectState(s: string){\n        var sn = _stateMap[s];\n        if(sn === undefined){\n            sn = _stateMap[s] = _states.length;\n            _states.push(new CmdArray(''));\n            requiringState.signal(s, sn);\n        }\n        _selectedStates.push(_states[_stateMap[s]]);\n    }\n\n    function newState(){\n        _first = true;\n        possibleAlias = null;\n        _emit(() => {\n            _currentState = new State<T>();\n            _head.epsilonTo(_currentState);\n        });\n    }\n    function end(action: T, least: boolean, label: string = '(untitled)'){\n        for(let sn of _selectedStates){\n            sn.label = `<${label}>`;\n        }\n        _emit(() => {\n            let ac = new EndAction<T>();\n            ac.id = ac.priority = _scount++;\n            ac.data = action;\n            ac.least = least;\n            _currentState.endAction = ac;\n        });\n    }\n\n    //#region union\n    function enterUnion(){\n        _emit(() => {\n            var nhead = new State<T>();\n            _currentState.epsilonTo(nhead);\n            _currentState = new State<T>();\n            nhead.epsilonTo(_currentState);\n            _unionStack.push({\n                head: nhead,\n                tail: new State<T>()\n            });\n        });\n    }\n    function endUnionItem(){\n        _emit(() => {\n            let top = _unionStack[_unionStack.length - 1];\n            _currentState.epsilonTo(top.tail);\n            _currentState = new State<T>();\n            top.head.epsilonTo(_currentState);\n        });\n    }\n    function leaveUnion(){\n        _emit(() => {\n            _currentState = _unionStack.pop().tail;\n        });\n    }\n    //#endregion\n\n    //#region simple\n    function enterSimple(){\n        _emit(() => {\n            _simpleStack.push(_currentState);\n        });\n    }\n    function simplePostfix(postfix: '' | '?' | '+' | '*'){\n        postfix === '' || (possibleAlias = null, _first = false);\n        _emit(() => {\n            let top = _simpleStack.pop();\n            if(postfix === '?'){\n                top.epsilonTo(_currentState);\n            }\n            else if(postfix === '+'){\n                _currentState.epsilonTo(top);\n            }\n            else if(postfix === '*'){\n                _currentState.epsilonTo(top);\n                _currentState = top;\n            }\n        });\n    }\n\n    //#region primitive\n    function addString(s: string){\n        if(_first){\n            possibleAlias = s;\n            _first = false;\n        }\n        else {\n            possibleAlias = null;\n        }\n        _emit(() => {\n            for(let i = 0;i < s.length;i++){\n                let ns = new State<T>();\n                _currentState.to(ns).chars.add(s.charCodeAt(i));\n                _currentState = ns;\n            }\n        });\n    }\n    function addVar(vname: JNode){\n        _first = false;\n        possibleAlias = null;\n        _emit(() => {\n            let vdef = _regexpVars[vname.val];\n            if(vdef === undefined){\n                singlePosErr(`use of undefined variable \"${vname.val}\"`, vname);\n                return;\n            }\n            let cmds = vdef.cmds;\n            // check for circular dependence\n            for(let i = 0;i < _ar.length;i++){\n                let aitem = _ar[i];\n                if(aitem.cmds === cmds){\n                    let msg = `circular dependence in lexical variable detected: ${cmds.label}`;\n                    for(i++;i < _ar.length;i++){\n                        msg += ` -> ${_ar[i].cmds.label}`;\n                    }\n                    msg += ` -> ${cmds.label}`;\n                    singlePosErr(msg, vname);\n                    // Don't stop executing, for detecting furthur errors.\n                    return;\n                }\n            }\n            _ar.push({\n                pc: 0,\n                cmds: cmds\n            });\n        });\n    }\n    function beginSet(inverse: boolean){\n        _first = false;\n        possibleAlias = null;\n        _emit(() => {\n            _isInverse = inverse;\n            let ns = new State<T>();\n            _currentArc = _currentState.to(ns);\n            _currentState = ns;\n            inverse && _currentArc.chars.addAll();\n        });\n    }\n    function addSetItem(from: JNode, to: JNode){\n        if(from.val.length !== 1){\n            // ctx.err(new CompilationError(`character expected in union, got \"${from}\"`, line1));\n            singlePosErr(`character expected in union, got \"${from.val}\"`, from);\n            return;\n        }\n        if(from !== to && to.val.length !== 1){\n            // ctx.err(new CompilationError(`character expected in union, got \"${to}\"`, line2));\n            singlePosErr(`character expected in union, got \"${to.val}\"`, to);\n            return;\n        }\n        if(from.val.charCodeAt(0) > to.val.charCodeAt(0)){\n            singlePosErr(\n                `left hand side must be larger than right hand side in wild card character (got '${from.val}' > '${to.val}')`\n            , to);\n            return;\n        }\n        addSetItemRaw(from.val.charCodeAt(0), to.val.charCodeAt(0));\n    }\n    function addSetItemRaw(from: number, to: number){\n        _emit(() => {\n            _isInverse ? \n            _currentArc.chars.remove(from, to) : \n            _currentArc.chars.add   (from, to);\n        });\n    }\n    function endSet(){\n        _emit(() => {\n            _currentArc = null;\n        });\n    }\n\n    function build(): DFA<T>[]{\n        let dfas: DFA<T>[] = [];\n        for(let state of _states){\n            dfas.push(_exec(state));\n        }\n        requiringState.fail();\n        return dfas;\n    }\n    function loadSet(arcs: number[]){\n        if(arcs.length % 2 !== 0){\n            throw new Error('invalid character set array');\n        }\n        beginSet(false);\n        for(let i = 0, _a = arcs; i < _a.length; i += 2){\n            addSetItemRaw(_a[i], _a[i + 1]);\n        }\n        endSet();\n    }\n    function importVar(vn: JNode){\n        let cb = internalLexVars[vn.val];\n        if(cb === undefined){\n            singlePosErr(`import variable \"${vn.val}\" does not exist`, vn);\n            return;\n        }\n        cb();\n    }\n    //#endregion\n}","import { TokenDef } from \"../grammar/token-entry\";\nimport { CodeGenerator } from '../codegen/code-generator';\nimport { Position } from \"../parser/node\";\n\n// export interface LexAction{\n//     toCode(c: CodeGenerator);\n//     token: number;\n// };\ntype Codecb = (c: CodeGenerator) => any;\nexport function pushStateAction(sn: number): Codecb{\n    return c => {\n        c.pushLexState(sn);\n    }\n}\nexport function switchToStateAction(sn: number): Codecb{\n    return c => {\n        c.switchToLexState(sn);\n    }\n}\nexport class LexAction{\n    token: TokenDef = null;\n    actions: Codecb[] = [];\n\n    toCode(c: CodeGenerator){\n        for(let act of this.actions){\n            act !== null && act(c);\n        }\n    }\n\n    returnToken(tk: TokenDef){\n        this.token = tk;\n    }\n    raw(s: string){\n        this.actions.push(c => c.raw(s));\n    }\n    pushState(n: number){\n        this.actions.push(pushStateAction(n));\n    }\n    placeHolder(){\n        let ret = this.actions.length;\n        this.actions.push(null);\n        return ret;\n    }\n    set(n: number, cb: Codecb){\n        this.actions[n] = cb;\n    }\n    popState(){\n        this.actions.push(c => c.popLexState());\n    }\n    beginBlock(pos: Position, always: boolean){\n        this.actions.push(c => c.beginBlock(pos, always));\n    }\n    setImg(s: string){\n        this.actions.push(c => c.setImg(s));\n    }\n    endBlock(pos: Position){\n        this.actions.push(c => c.endBlock(pos));\n    }\n    lhs(){\n        this.actions.push(c => c.lhs());\n    }\n    tokenObj(){\n        this.actions.push(c => c.tokenObj());\n    }\n    matched(){\n        this.actions.push(c => c.matched());\n    }\n}","import { Grammar,Rule, NtDef } from '../grammar/grammar';\nimport { File } from './file';\nimport { BitSet } from '../util/bitset';\nimport { TokenSet } from '../grammar/token-set';\nimport { Assoc, TokenDef } from '../grammar/token-entry';\nimport { JsccError, JsccWarning } from '../util/E';\nimport { Context } from '../util/context';\nimport { LexBuilder, createLexBuilder } from '../lexer/builder';\nimport { LexAction, pushStateAction, switchToStateAction } from '../lexer/action';\nimport { Coroutine, CoroutineMgr } from '../util/coroutine';\nimport { Located } from '../util/located';\nimport { JNode, newNode, markPosition, Position, posToString } from './node';\nimport { endl } from '../util/io';\n\ninterface NtPlaceHolder{\n    nt: number;\n    rItem: number;\n};\n\ninterface RuleLoc{\n    rule: Rule;\n    pos: number;\n    line: number;\n};\n\nexport enum TokenRefType {\n    TOKEN = 0,\n    STRING = 1,\n    NAME = 2\n};\n\ninterface PseudoToken{\n    assoc: Assoc;\n    pr: number;\n    pos: Position;\n}\n\nexport interface GBuilder{\n    defToken(name: JNode, alias: string): TokenDef;\n    getTokenID(t: JNode);\n    getTokenByAlias(a: JNode): TokenDef;\n    getTokenByName(t: JNode): TokenDef;\n    defineTokenPrec(tid: JNode, assoc: Assoc, type: TokenRefType);\n    setLineTerminator(eol: string);\n    setOpt(name: JNode, value: JNode);\n    setOutput(n: JNode);\n    setHeader(h: JNode);\n    setExtraArg(a: JNode);\n    setType(t: JNode);\n    setInit(arg: JNode, body: JNode);\n    setEpilogue(ep: JNode);\n    incPr();\n    prepareRule(lhs: JNode);\n    addRuleUseVar(vname: JNode);\n    addRuleSematicVar(vname: JNode);\n    addRuleItem(id: JNode, type: TokenRefType);\n    addAction(b: LexAction);\n    defineRulePr(token: JNode, type: TokenRefType);\n    commitRule();\n    addPushStateAction(act: LexAction, vn: JNode);\n    addSwitchToStateAction(act: LexAction, vn: JNode);\n    addEmitTokenAction(act: LexAction, tn: JNode);\n    build(): File;\n    readonly lexBuilder: LexBuilder<LexAction>;\n}\n\nexport function createFileBuilder(ctx: Context): GBuilder{\n    let file: File = new File();\n    let grammar: Grammar = new Grammar();\n\n    let _tokenNameTable: { [s: string]: TokenDef } = {};\n    let _tokenAliasTable: { [s: string]: TokenDef[] } = {};\n\n    let _ruleStack: Rule[] = [];\n    let _sematicVar: JNode = null;\n\n    let _ntTable: {[s: string]: NtDef} = {};\n    let _requiringNt: CoroutineMgr<NtDef> = null;\n    let _requiringToken: CoroutineMgr<TokenDef> = null;\n\n    let _genIndex = 0;\n    let _first = true;\n    let _pr = 1;\n    let _onCommit: (() => any)[] = [];\n    let _onDone: (() => any)[] = [];\n    let lexBuilder: LexBuilder<LexAction>;\n    let _pseudoTokens: { [tname: string]: PseudoToken } = {};\n\n    file.grammar = grammar;\n    lexBuilder = createLexBuilder(ctx);\n    _requiringNt = new CoroutineMgr<NtDef>(s => _ntTable[s]);\n    _requiringToken = new CoroutineMgr<TokenDef>(s => _tokenNameTable[s]);\n    defToken(newNode('EOF'), null);\n\n    return {\n        defToken,\n        getTokenID,\n        getTokenByAlias,\n        getTokenByName,\n        defineTokenPrec,\n        setLineTerminator,\n        setOpt,\n        setOutput,\n        setHeader,\n        setExtraArg,\n        setType,\n        setInit,\n        setEpilogue,\n        incPr,\n        prepareRule,\n        addRuleUseVar,\n        addRuleSematicVar,\n        addRuleItem,\n        addAction,\n        defineRulePr,\n        commitRule,\n        addPushStateAction,\n        addSwitchToStateAction,\n        addEmitTokenAction,\n        build,\n        lexBuilder: lexBuilder\n    };\n\n    function _top(){\n        return _ruleStack[_ruleStack.length - 1];\n    }\n    function _splitAction(){\n        let saved = _sematicVar;\n        _sematicVar = null;\n\n        let t = _top();\n        let s = '@' + _genIndex++;\n        prepareRule(newNode(s));\n        let gen = _top();\n        addAction(t.action);\n        commitRule();\n        t.action = null;\n        addRuleItem(newNode(s), TokenRefType.NAME);\n\n        _sematicVar = saved;\n\n        // copy imported variables from parent rule\n        for(let vname in t.vars){\n            let v = t.vars[vname];\n            gen.usedVars[vname] = { val: v.val, pos: v.pos };\n        }\n        for(let vname in t.usedVars){\n            let v = t.usedVars[vname];\n            gen.usedVars[vname] = { val: v.val, pos: v.pos };\n        }\n    }\n\n    function singlePosErr(msg: string, pos: Position){\n        ctx.requireLines((ctx, lines) => {\n            ctx.err(new JsccError(msg + ' ' + markPosition(pos, lines), 'Compilation error'));\n        });\n    }\n    function singlePosWarn(msg: string, pos: Position){\n        ctx.requireLines((ctx, lines) => {\n            ctx.warn(new JsccWarning(msg + ' ' + markPosition(pos, lines)));\n        });\n    }\n    function redefineWarn(what: string, prev: Position, current: Position){\n        ctx.requireLines((ctx, lines) => {\n            let msg = what + ' ' + markPosition(current, lines) + endl;\n            msg += 'previous defination was at ' + markPosition(prev, lines);\n            ctx.warn(new JsccWarning(msg));\n        });\n    }\n    function defToken(name: JNode, alias: string): TokenDef{\n        var tkdef = _tokenNameTable[name.val];\n        if(tkdef !== undefined){\n            tkdef.appears.push(name);\n            return tkdef;\n        }\n        else {\n            tkdef = { \n                index: grammar.tokens.length,\n                sym: name.val,\n                alias: alias,\n                pr: 0,\n                assoc: Assoc.UNDEFINED,\n                used: false,\n                appears: [name]\n            };\n            if(alias !== null){\n                _tokenAliasTable[alias] || (_tokenAliasTable[alias] = []);\n                _tokenAliasTable[alias].push(tkdef);\n            }\n            _tokenNameTable[name.val] = tkdef;\n            grammar.tokens.push(tkdef);\n            return tkdef;\n        }\n    }\n    function getTokenByAlias(a: JNode): TokenDef{\n        let aa = _tokenAliasTable[a.val];\n        if(aa === undefined){\n            singlePosErr(`cannot identify \"${a.val}\" as a token`, a);\n            return null;\n        }\n        else if(aa.length > 1){\n            let ret = '';\n            for(let i = 0;i < aa.length;i++){\n                i > 0 && (ret += ',');\n                ret += `<${aa[i].sym}>`;\n            }\n            singlePosErr(`cannot identify ${a.val} as a token, since it could be ${ret}`, a);\n            return null;\n        }\n        return aa[0];\n    }\n    function getTokenByName(t: JNode): TokenDef{\n        let ret = _tokenNameTable[t.val];\n        if(ret === undefined){\n            singlePosErr(`cannot identify <${t.val}> as a token`, t);\n            return null;\n        }\n        return ret;\n    }\n    function getTokenID(t: JNode){\n        let tk = getTokenByName(t);\n        return tk === null ? '0' : String(tk.index);\n    }\n    function defineTokenPrec(tid: JNode, assoc: Assoc, type: TokenRefType){\n        if(type === TokenRefType.TOKEN){\n            let tk = getTokenByName(tid);\n            if(tk !== null){\n                tk.assoc = assoc;\n                tk.pr = _pr;\n            }\n        }\n        else if(type === TokenRefType.STRING){\n            let tk = getTokenByAlias(tid);\n            if(tk !== null){\n                tk.assoc = assoc;\n                tk.pr = _pr;\n            }\n        }\n        else if(type === TokenRefType.NAME){\n            let t2 = _pseudoTokens[tid.val] = _pseudoTokens[tid.val] || {\n                assoc: assoc,\n                pr: _pr,\n                pos: tid\n            };\n        }\n    }\n    function setLineTerminator(eol: string){\n        file.eol = eol;\n    }\n    function setOpt(name: JNode, value: JNode){\n        file.opt[name.val] = { name: name, val: value };\n    }\n    function setOutput(n: JNode){\n        if(file.output !== null){\n            redefineWarn('redefine of output', file.output, n);\n        }\n        file.output = n;\n    }\n    function setHeader(h: JNode){\n        file.header.push(h);\n    }\n    function setExtraArg(a: JNode){\n        if(file.extraArgs !== null){\n            redefineWarn('redefine of extra arguments', file.extraArgs, a);\n        }\n        file.extraArgs = a;\n    }\n    function setType(t: JNode){\n        if(file.sematicType !== null){\n            redefineWarn('redefine of sematic type', file.sematicType, t);\n        }\n        file.sematicType = t;\n    }\n    function setInit(arg: JNode, body: JNode){\n        if(file.initArg !== null){\n            redefineWarn('redefine of initializing block', file.initArg, arg);\n        }\n        file.initArg = arg;\n        file.initBody = body;\n    }\n    function incPr(){\n        _pr++;\n    }\n    function setEpilogue(ep: JNode){\n        file.epilogue = ep;\n    }\n    function prepareRule(lhs: JNode){\n        if(_first){\n            _first = false;\n            prepareRule(newNode('(accept)'));\n            addRuleItem(newNode(lhs.val), TokenRefType.NAME);\n            addRuleItem(newNode('EOF'), TokenRefType.TOKEN);\n            commitRule();\n        }\n        \n        var nt = _ntTable[lhs.val];\n        if(nt === undefined){\n            nt = _ntTable[lhs.val] = {\n                index: grammar.nts.length,\n                sym: lhs.val,\n                firstSet: null,\n                used: false,\n                rules: [],\n                parents: []\n            }\n            grammar.nts.push(nt);\n            _requiringNt.signal(lhs.val, nt);\n        }\n        let nr = new Rule(grammar, nt, lhs);\n        _ruleStack.push(nr);\n    }\n    function addRuleUseVar(vname: JNode){\n        let t = _top();\n        if(t.usedVars[vname.val] !== undefined){\n            singlePosErr(`re-use of sematic variable \"${vname.val}\"`, vname);\n        }\n        else {\n            t.usedVars[vname.val] = { pos: vname, val: 0 };\n        }\n    }\n    function addRuleSematicVar(vname: JNode){\n        let t = _top();\n        if(t.usedVars[vname.val] !== undefined){\n            //err(`variable \"${vname}\" conflicts with imported variable defined at line ${t.usedVars[vname].line}`, line);\n            singlePosErr(`variable \"${vname.val}\" conflicts with another imported variable`, vname);\n        }\n        else if(t.vars[vname.val] !== undefined){\n            singlePosErr(`sematic variable \"${vname.val}\" is already defined`, vname);\n        }\n        else {\n            _sematicVar = vname;\n        }\n    }\n    function addRuleItem(id: JNode, type: TokenRefType){\n        let t = _top();\n        if(t.action !== null){\n            _splitAction();\n        }\n        if(_sematicVar !== null){\n            t.vars[_sematicVar.val] = { val: t.rhs.length, pos: _sematicVar };\n            _sematicVar = null;\n        }\n        if(type === TokenRefType.NAME){\n            let pos = t.rhs.length;\n            t.rhs.push(0);\n            _requiringNt.wait(id.val, (su, nt) => {\n                if(su){\n                    t.rhs[pos] = -nt.index - 1;\n                    nt.parents.push({\n                        rule: t,\n                        pos: pos\n                    });\n                    nt.used = true;\n                }\n                else {\n                    singlePosErr(`use of undefined non terminal ${id.val}`, id);                    \n                }\n            });\n        }\n        else if(type === TokenRefType.TOKEN){\n            let tl = _tokenNameTable[id.val];\n            if(tl === undefined){\n                singlePosErr(`cannot recognize <${id.val}> as a token`, id);\n                return;\n            }\n            t.rhs.push(tl.index);\n            tl.used = true;\n        }\n        else if(type === TokenRefType.STRING){\n            let td = getTokenByAlias(id);\n            if(td !== null){\n                t.rhs.push(td.index);\n                td.used = true;\n            }\n        }\n    }\n    function addAction(b: LexAction){\n        var t = _top();\n        if(t.action !== null){\n            _splitAction();\n        }\n        t.action = b;\n        if(_sematicVar !== null){\n            _splitAction();\n            t.vars[_sematicVar.val] = { val: t.rhs.length - 1, pos: _sematicVar };\n            _sematicVar = null;\n        }\n    }\n    function defineRulePr(token: JNode, type: TokenRefType){\n        if(type === TokenRefType.STRING || type === TokenRefType.TOKEN){\n            let tk: TokenDef = type === TokenRefType.STRING ? \n                getTokenByAlias(token) : \n                getTokenByName(token);\n            if(tk !== null){\n                if(tk.assoc === Assoc.UNDEFINED){\n                    singlePosErr(`precedence of token \"${token.val}\" has not been defined`, token);\n                    return;\n                }\n                _top().pr = tk.pr;\n            }\n        }\n        else {\n            var pt = _pseudoTokens[token.val];\n            if(!pt){\n                singlePosErr(`pseudo token \"${token}\" is not defined`, token);\n            }\n            _top().pr = pt.pr;\n        }\n    }\n    function commitRule(){\n        var t = _ruleStack.pop();\n        t.index = grammar.rules.length;\n        t.lhs.rules.push(t);\n        grammar.rules.push(t);\n        for(let cb of _onCommit){\n            cb();\n        }\n        _onCommit.length = 0;\n    }\n    function addPushStateAction(act: LexAction, vn: JNode){\n        let n = act.placeHolder();\n        lexBuilder.requiringState.wait(vn.val, (su, sn) => {\n            if(su){\n                act.set(n, pushStateAction(sn));\n            }\n            else {\n                singlePosErr(`state \"${vn.val}\" is undefined`, vn);\n            }\n        });\n    }\n    function addSwitchToStateAction(act: LexAction, vn: JNode){\n        let n = act.placeHolder();\n        lexBuilder.requiringState.wait(vn.val, (su, sn) => {\n            if(su){\n                act.set(n, switchToStateAction(sn));\n            }\n            else {\n                singlePosErr(`state \"${vn.val}\" is undefined`, vn);\n            }\n        });\n    }\n    function addEmitTokenAction(act: LexAction, tn: JNode){\n        let n = act.placeHolder();\n        _requiringToken.wait(tn.val, (success, tdef) => {\n            if(success){\n                act.set(n, c => {\n                    c.emitToken(tdef.index);\n                });\n            }\n            else {\n                singlePosErr(`use of undefined token <${tn.val}>`, tn);\n            }\n        });\n    }\n    function build(){\n        grammar.tokenCount = grammar.tokens.length;\n        grammar.tokens[0].used = true;// end of file\n        grammar.nts[0].used = true;// (accept)\n\n        ctx.beginTime('building grammar');\n        for(let nt of grammar.nts){\n            nt.firstSet = new TokenSet(grammar.tokenCount);\n            for(let rule of nt.rules){\n                rule.calcPr();\n                for(let vname in rule.usedVars){\n                    let v = rule.usedVars[vname];\n                    v.val = rule.getVarSp(vname, msg => {\n                        singlePosErr(`cannot find variable \"${vname}\": ${msg}`, v.pos);\n                    });\n                }\n            }\n        }\n\n        ctx.endTime();\n\n        ctx.beginTime('building lexical DFAs');\n        file.lexDFA = lexBuilder.build();\n        ctx.endTime();\n\n        for(let cb of _onDone){\n            cb();\n        }\n        _requiringToken.fail();\n        _requiringNt.fail();\n        return file;\n    }\n\n    \n}\n","/*\n    generated by jscc, an LALR(1) parser generator made by hadroncfy.\n    template for typescript, written by hadroncfy, aussi.\n*/\n\nimport { GBuilder, createFileBuilder, TokenRefType } from './gbuilder';\nimport { Assoc } from '../grammar/token-entry';\nimport { CompilationError as E, JsccError } from '../util/E';\nimport { InputStream, endl } from '../util/io';\nimport { Context } from '../util/context';\nimport { LexAction } from '../lexer/action';\nimport { Position, JNode, newNode, markPosition, nodeBetween } from './node';\nimport { File } from './file';\n\nfunction nodeFromToken(t: Token): JNode{\n    return {\n        val: t.val,\n        ext: null,\n        startLine: t.startLine,\n        startColumn: t.startColumn,\n        endLine: t.endLine,\n        endColumn: t.endColumn\n    };\n}\nfunction nodeFromTrivalToken(t: Token): JNode{\n    return {\n        val: null,\n        ext: null,\n        startLine: t.startLine,\n        startColumn: t.startColumn,\n        endLine: t.endLine,\n        endColumn: t.endColumn\n    };\n}\nlet escapes: {[s: string]: string} = {\n    'n': '\\n',\n    'f': '\\f',\n    'b': '\\b',\n    'r': '\\r',\n    't': '\\t',\n    '\\\\': '\\\\',\n    '\"': '\"',\n    \"'\": \"'\"\n};\nfunction unescape(s: string): string{\n    let ret = '';\n    let i = 0;\n    while(i < s.length){\n        let c = s.charAt(i);\n        if(c === '\\\\'){\n            c = s.charAt(++i);\n            if(escapes[c]){\n                ret += escapes[c];\n                i++;\n            }\n            else if(c === 'u' || c === 'x' || c === 'U' || c === 'X'){\n                c = s.charAt(++i);\n                let hex = '';\n                while(/[0-9a-fA-F]/.test(c)){\n                    hex += c;\n                    c = s.charAt(++i);\n                }\n                ret += String.fromCharCode(parseInt(hex, 16));\n            }\n        }\n        else {\n            ret += c;\n            i++;\n        }\n    }\n    return ret;\n}\n\n/*\n    constants\n*/\nvar jjlf = '\\n'.charCodeAt(0);\nvar jjcr = '\\r'.charCodeAt(0);\ninterface DFATable{\n    pnext: number[];\n    disnext: number[];\n    checknext: number[];\n    maxAsicii: number;\n    classTable: number[];\n    unicodeClassTable: number[];\n    isEnd: number[];\n    hasArc: number[];\n};\n/*\n    dfa table definations\n*/\nvar jjlexpnext0: number[] = [ \n        72,    72,    72,    72,    72,    72,    72,    72,    72,    72,\n        73,    72,    72,    72,    74,    72,    72,    72,    72,    72,\n        72,    72,    72,    72,    72,    72,    72,    72,    72,    72,\n        72,    72,    72,    72,    72,    72,    72,    72,    72,    72,\n        72,    72,    72,    72,    72,    72,    72,    72,    72,    72,\n        72,    72,    72,    72,    72,    72,    72,    72,    72,    72,\n        72,    72,    72,    72,    72,    72,    73,    72,    72,    72,\n        74,    72,    72,    72,    72,    72,    72,    72,    72,    72,\n        72,    72,    72,    72,    72,    72,    72,    72,    72,    72,\n        72,    72,    72,    72,    72,    72,    72,    72,    72,    72,\n        72,    72,    72,    72,    72,    72,    72,    72,    72,    72,\n        72,    72,    72,    72,    72,    72,    72,    72,    72,    72,\n        72,    72,    73,    72,    72,    72,    94,    72,    72,    72,\n        72,    72,    72,    72,    72,    72,    72,    72,    72,    72,\n        72,    72,    72,    72,    72,    72,    72,    72,    72,    72,\n        72,    72,    72,    72,    72,    72,    72,    72,    72,    72,\n        72,    72,    72,    72,    72,    72,    72,    72,    95,    95,\n        95,    95,    95,    95,    95,    95,    95,    95,    95,    95,\n        95,    95,    96,    95,    95,    95,    95,    95,    95,    95,\n        95,    95,    95,    95,    95,    95,    95,    95,    95,    95,\n        95,    95,    95,    95,    95,    95,    95,    95,    95,    95,\n        95,    95,    95,    95,    95,    95,    95,    95,    95,    95,\n        95,    95,    95,    95,    72,    72,    72,    72,    72,    72,\n        72,    72,    72,    72,    73,    72,    72,    72,    94,    72,\n        72,    72,    72,    72,    72,    72,    72,    72,    72,    72,\n        72,    72,    72,    72,    72,    72,    72,    72,    72,    72,\n        72,    72,    72,    72,    72,    72,    72,    72,    72,    72,\n        72,    72,    72,    72,    72,    72,    72,    72,    72,    72,\n        72,    72,    72,    72,    72,    72,    72,    72,    72,    72,\n        73,    72,    72,    72,    74,    72,    72,    72,    72,    72,\n        72,    72,    72,    72,    72,    72,    72,    72,    72,    72,\n        72,    72,    72,    72,    72,    72,    72,    72,    72,    72,\n        72,    72,    72,    72,    72,    72,    72,    72,    72,    72,\n        72,    72,    72,    72,    72,    72,    47,    47,   137,    47,\n        47,    47,    47,    48,    47,    47,    47,    47,    47,    47,\n        47,   114,    47,    47,    47,    47,    47,    47,   114,    47,\n        47,    49,    47,    47,    47,   114,   114,   114,   114,   114,\n       114,    47,    47,    47,    47,    47,    47,    47,    47,    47,\n        47,    47,    47,    47,    47,    47,    47,    47,    47,    47,\n        47,    47,    27,    27,   136,    28,    27,    27,    27,    27,\n        27,    27,    27,    27,    27,    27,    27,    98,    27,    27,\n        27,    27,    27,    27,    98,    27,    27,    29,    27,    27,\n        27,    98,    98,    98,    98,    98,    98,    27,    27,    27,\n        27,    27,    27,    27,    27,    27,    27,    27,    27,    27,\n        27,    27,    27,    27,    27,    27,    27,    27,    47,    47,\n       135,    47,    47,    47,    47,    48,    47,    47,    47,    47,\n        47,    47,    47,   114,    47,    47,    47,    47,    47,    47,\n       114,    47,    47,    49,    47,    47,    47,   114,   114,   114,\n       114,   114,   114,    47,    47,    47,    47,    47,    47,    47,\n        47,    47,    47,    47,    47,    47,    47,    47,    47,    47,\n        47,    47,    47,    47,    27,    27,   134,    28,    27,    27,\n        27,    27,    27,    27,    27,    27,    27,    27,    27,    98,\n        27,    27,    27,    27,    27,    27,    98,    27,    27,    29,\n        27,    27,    27,    98,    98,    98,    98,    98,    98,    27,\n        27,    27,    27,    27,    27,    27,    27,    27,    27,    27,\n        27,    27,    27,    27,    27,    27,    27,    27,    27,    27,\n        47,    47,   133,    47,    47,    47,    47,    48,    47,    47,\n        47,    47,    47,    47,    47,    47,    47,    47,    47,    47,\n        47,    47,    47,    47,    47,    49,    47,    47,    47,    47,\n        47,    47,    47,    47,    47,    47,    47,    47,    47,    47,\n        47,    47,    47,    47,    47,    47,    47,    47,    47,    47,\n        47,    47,    47,    47,    47,    47,    27,    27,   132,    28,\n        27,    27,    27,    27,    27,    27,    27,    27,    27,    27,\n        27,    27,    27,    27,    27,    27,    27,    27,    27,    27,\n        27,    29,    27,    27,    27,    27,    27,    27,    27,    27,\n        27,    27,    27,    27,    27,    27,    27,    27,    27,    27,\n        27,    27,    27,    27,    27,    27,    27,    27,    27,    27,\n        27,    27,    30,    30,   131,    30,    30,    30,    30,    30,\n        30,    30,    30,    30,    30,    30,    30,    30,    30,    30,\n        30,    30,    30,    30,    30,    30,    30,    30,    30,    30,\n        30,    30,    30,    30,    30,    30,    30,    30,    30,    30,\n        30,    30,    30,    30,    30,    30,    30,    30,    30,    30,\n        30,    30,    30,    30,    30,    30,    30,    30,    47,    47,\n       130,    47,    47,    47,    47,    48,    47,    47,    47,    47,\n        47,    47,    47,    47,    47,    47,    47,    47,    47,    47,\n        47,    47,    47,    49,    47,    47,    47,    47,    47,    47,\n        47,    47,    47,    47,    47,    47,    47,    47,    47,    47,\n        47,    47,    47,    47,    47,    47,    47,    47,    47,    47,\n        47,    47,    47,    47,    30,    30,   129,    30,    30,    30,\n        30,    30,    30,    30,    30,    30,    30,    30,    30,    30,\n        30,    30,    30,    30,    30,    30,    30,    30,    30,    30,\n        30,    30,    30,    30,    30,    30,    30,    30,    30,    30,\n        30,    30,    30,    30,    30,    30,    30,    30,    30,    30,\n        30,    30,    30,    30,    30,    30,    30,    30,    30,    30,\n        27,    27,   128,    28,    27,    27,    27,    27,    27,    27,\n        27,    27,    27,    27,    27,    27,    27,    27,    27,    27,\n        27,    27,    27,    27,    27,    29,    27,    27,    27,    27,\n        27,    27,    27,    27,    27,    27,    27,    27,    27,    27,\n        27,    27,    27,    27,    27,    27,    27,    27,    27,    27,\n        27,    27,    27,    27,    27,    27,    47,    47,   127,    47,\n        47,    47,    47,    48,    47,    47,    47,    47,    47,    47,\n        47,    47,    47,    47,    47,    47,    47,    47,    47,    47,\n        47,    49,    47,    47,    47,    47,    47,    47,    47,    47,\n        47,    47,    47,    47,    47,    47,    47,    47,    47,    47,\n        47,    47,    47,    47,    47,    47,    47,    47,    47,    47,\n        47,    47,    30,    30,   126,    30,    30,    30,    30,    30,\n        30,    30,    30,    30,    30,    30,    30,    30,    30,    30,\n        30,    30,    30,    30,    30,    30,    30,    30,    30,    30,\n        30,    30,    30,    30,    30,    30,    30,    30,    30,    30,\n        30,    30,    30,    30,    30,    30,    30,    30,    30,    30,\n        30,    30,    30,    30,    30,    30,    30,    30,    27,    27,\n       125,    28,    27,    27,    27,    27,    27,    27,    27,    27,\n        27,    27,    27,    27,    27,    27,    27,    27,    27,    27,\n        27,    27,    27,    29,    27,    27,    27,    27,    27,    27,\n        27,    27,    27,    27,    27,    27,    27,    27,    27,    27,\n        27,    27,    27,    27,    27,    27,    27,    27,    27,    27,\n        27,    27,    27,    27,     1,     1,     2,     3,     4,     5,\n         6,     7,     8,     9,    10,    11,    12,    13,   124,    14,\n        15,    16,    17,    18,    19,     4,     4,    20,   123,    21,\n        22,     4,     4,     4,     4,     4,     4,     4,     4,     4,\n         4,     4,     4,     4,     4,     4,     4,     4,     4,     4,\n         4,     4,     4,     4,    23,    24,    25,    26,    31,    82,\n       122,    67,    63,    56,    83,   121,    64,   120,    32,    68,\n        59,    60,    57,    50,   119,    31,    31,    51,   118,    84,\n       117,    31,    31,    31,    31,    31,    31,    31,    31,    31,\n        31,    31,    31,    31,    31,    31,    31,    31,    31,    31,\n        31,    31,    31,    31,    31,     1,     1,    33,    34,   116,\n       115,   113,   112,   111,    32,   110,   109,   108,   107,   106,\n       105,    31,    31,   104,   103,   102,   101,    31,    31,    31,\n        31,    31,    31,    31,    31,    31,    31,    31,    31,    31,\n        31,    31,    31,    31,    31,    31,    31,    31,    31,    31,\n        31,   100,    99,    33,    34,    97,    92,    91,    90,    89,\n        32,    88,    87,    86,    85,    81,    80,    31,    31,    79,\n        78,    77,    76,    31,    31,    31,    31,    31,    31,    31,\n        31,    31,    31,    31,    31,    31,    31,    31,    31,    31,\n        31,    31,    31,    31,    31,    31,    31,    69,    66,    33,\n        34,    65,    62,    61,    58,    55,    32,    52,    -1,    -1,\n        -1,    -1,    -1,    31,    31,    -1,    -1,    -1,    -1,    31,\n        31,    31,    31,    31,    31,    31,    31,    31,    31,    31,\n        31,    31,    31,    31,    31,    31,    31,    31,    31,    31,\n        31,    31,    31,    -1,    -1,    33,    34,    -1,    -1,    -1,\n        -1,    -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,    31,\n        31,    -1,    -1,    -1,    -1,    31,    31,    31,    31,    31,\n        31,    31,    31,    31,    31,    31,    31,    31,    31,    31,\n        31,    31,    31,    31,    31,    31,    31,    31,    31,    -1,\n        -1,    33,    34,    -1,    -1,    -1,    -1,    -1,    32,    -1,\n        -1,    -1,    -1,    -1,    -1,    31,    31,    -1,    -1,    -1,\n        -1,    31,    31,    31,    31,    31,    31,    31,    31,    31,\n        31,    31,    31,    31,    31,    31,    31,    31,    31,    31,\n        31,    31,    31,    31,    35,    -1,    -1,    33,    34,    -1,\n        -1,    -1,    -1,    -1,    -1,    -1,    70,    -1,    -1,    -1,\n        70,    -1,    -1,    -1,    -1,    -1,    -1,    36,    -1,    -1,\n        -1,    37,    -1,    -1,    38,    39,    71,    40,    70,    41,\n        42,    43,    44,    70,    45,    46,    53,    70,    -1,    -1,\n        53,    -1,    -1,    -1,    70,    -1,    -1,    70,    -1,    70,\n        71,    -1,    71,    -1,    93,    -1,    54,    -1,    53,    -1,\n        -1,    93,    -1,    53,    -1,    -1,    -1,    53,    93,    93,\n        93,    93,    93,    93,    53,    -1,    75,    53,    -1,    53,\n        54,    -1,    54,    75,    -1,    -1,    -1,    -1,    -1,    -1,\n        75,    75,    75,    75,    75,    75,\n]; \nvar jjlexdisnext0: number[] = [ \n      1063,  1164,  1008,   952,  1343,  1388,   896,   -56,   -56,   -56,\n       -56,   -56,   -56,  1123,   -56,   -56,   -56,  1247,   -56,   -56,\n       -56,   -56,   -56,   -56,   -56,   -56,  1297,   840,   -56,  1433,\n       784,  1251,  1205,  1159,  1113,   -56,  1226,  1083,  1231,  1090,\n      1230,  1220,  1079,  1217,  1221,  1079,  1212,   728,   -56,  1403,\n       280,   672,   -56,   616,  1461,  1184,  1188,  1184,  1200,  1183,\n      1188,  1090,  1183,  1177,  1176,  1188,  1184,  1180,  1174,  1183,\n       560,  1439,   224,   168,  1201,   504,  1183,  1165,  1142,  1153,\n      1142,  1137,  1135,  1133,   -56,  1149,  1140,  1133,  1144,  1137,\n      1139,  1138,   -56,   448,   112,    56,   -56,     0,   392,  1120,\n      1119,  1111,  1105,  1090,   -56,  1081,   -56,  1080,  1078,  1041,\n       -56,  1032,   969,   -56,   336,   909,   -56,   870,   798,   740,\n       -56,   685,   633,   572,   -56,   -56,   -56,   533,   -56,   -56,\n       464,   -56,   -56,   406,   363,   303,   -56,   -56,\n]; \nvar jjlexchecknext0: number[] = [ \n        97,    97,    97,    97,    97,    97,    97,    97,    97,    97,\n        97,    97,    97,    97,    97,    97,    97,    97,    97,    97,\n        97,    97,    97,    97,    97,    97,    97,    97,    97,    97,\n        97,    97,    97,    97,    97,    97,    97,    97,    97,    97,\n        97,    97,    97,    97,    97,    97,    97,    97,    97,    97,\n        97,    97,    97,    97,    97,    97,    95,    95,    95,    95,\n        95,    95,    95,    95,    95,    95,    95,    95,    95,    95,\n        95,    95,    95,    95,    95,    95,    95,    95,    95,    95,\n        95,    95,    95,    95,    95,    95,    95,    95,    95,    95,\n        95,    95,    95,    95,    95,    95,    95,    95,    95,    95,\n        95,    95,    95,    95,    95,    95,    95,    95,    95,    95,\n        95,    95,    94,    94,    94,    94,    94,    94,    94,    94,\n        94,    94,    94,    94,    94,    94,    94,    94,    94,    94,\n        94,    94,    94,    94,    94,    94,    94,    94,    94,    94,\n        94,    94,    94,    94,    94,    94,    94,    94,    94,    94,\n        94,    94,    94,    94,    94,    94,    94,    94,    94,    94,\n        94,    94,    94,    94,    94,    94,    94,    94,    73,    73,\n        73,    73,    73,    73,    73,    73,    73,    73,    73,    73,\n        73,    73,    73,    73,    73,    73,    73,    73,    73,    73,\n        73,    73,    73,    73,    73,    73,    73,    73,    73,    73,\n        73,    73,    73,    73,    73,    73,    73,    73,    73,    73,\n        73,    73,    73,    73,    73,    73,    73,    73,    73,    73,\n        73,    73,    73,    73,    72,    72,    72,    72,    72,    72,\n        72,    72,    72,    72,    72,    72,    72,    72,    72,    72,\n        72,    72,    72,    72,    72,    72,    72,    72,    72,    72,\n        72,    72,    72,    72,    72,    72,    72,    72,    72,    72,\n        72,    72,    72,    72,    72,    72,    72,    72,    72,    72,\n        72,    72,    72,    72,    72,    72,    72,    72,    72,    72,\n        50,    50,    50,    50,    50,    50,    50,    50,    50,    50,\n        50,    50,    50,    50,    50,    50,    50,    50,    50,    50,\n        50,    50,    50,    50,    50,    50,    50,    50,    50,    50,\n        50,    50,    50,    50,    50,    50,    50,    50,    50,    50,\n        50,    50,    50,    50,    50,    50,    50,    50,    50,    50,\n        50,    50,    50,    50,    50,    50,   114,   114,   135,   114,\n       114,   114,   114,   114,   114,   114,   114,   114,   114,   114,\n       114,   114,   114,   114,   114,   114,   114,   114,   114,   114,\n       114,   114,   114,   114,   114,   114,   114,   114,   114,   114,\n       114,   114,   114,   114,   114,   114,   114,   114,   114,   114,\n       114,   114,   114,   114,   114,   114,   114,   114,   114,   114,\n       114,   114,    98,    98,   134,    98,    98,    98,    98,    98,\n        98,    98,    98,    98,    98,    98,    98,    98,    98,    98,\n        98,    98,    98,    98,    98,    98,    98,    98,    98,    98,\n        98,    98,    98,    98,    98,    98,    98,    98,    98,    98,\n        98,    98,    98,    98,    98,    98,    98,    98,    98,    98,\n        98,    98,    98,    98,    98,    98,    98,    98,    93,    93,\n       133,    93,    93,    93,    93,    93,    93,    93,    93,    93,\n        93,    93,    93,    93,    93,    93,    93,    93,    93,    93,\n        93,    93,    93,    93,    93,    93,    93,    93,    93,    93,\n        93,    93,    93,    93,    93,    93,    93,    93,    93,    93,\n        93,    93,    93,    93,    93,    93,    93,    93,    93,    93,\n        93,    93,    93,    93,    75,    75,   130,    75,    75,    75,\n        75,    75,    75,    75,    75,    75,    75,    75,    75,    75,\n        75,    75,    75,    75,    75,    75,    75,    75,    75,    75,\n        75,    75,    75,    75,    75,    75,    75,    75,    75,    75,\n        75,    75,    75,    75,    75,    75,    75,    75,    75,    75,\n        75,    75,    75,    75,    75,    75,    75,    75,    75,    75,\n        70,    70,   127,    70,    70,    70,    70,    70,    70,    70,\n        70,    70,    70,    70,    70,    70,    70,    70,    70,    70,\n        70,    70,    70,    70,    70,    70,    70,    70,    70,    70,\n        70,    70,    70,    70,    70,    70,    70,    70,    70,    70,\n        70,    70,    70,    70,    70,    70,    70,    70,    70,    70,\n        70,    70,    70,    70,    70,    70,    53,    53,   123,    53,\n        53,    53,    53,    53,    53,    53,    53,    53,    53,    53,\n        53,    53,    53,    53,    53,    53,    53,    53,    53,    53,\n        53,    53,    53,    53,    53,    53,    53,    53,    53,    53,\n        53,    53,    53,    53,    53,    53,    53,    53,    53,    53,\n        53,    53,    53,    53,    53,    53,    53,    53,    53,    53,\n        53,    53,    51,    51,   122,    51,    51,    51,    51,    51,\n        51,    51,    51,    51,    51,    51,    51,    51,    51,    51,\n        51,    51,    51,    51,    51,    51,    51,    51,    51,    51,\n        51,    51,    51,    51,    51,    51,    51,    51,    51,    51,\n        51,    51,    51,    51,    51,    51,    51,    51,    51,    51,\n        51,    51,    51,    51,    51,    51,    51,    51,    47,    47,\n       121,    47,    47,    47,    47,    47,    47,    47,    47,    47,\n        47,    47,    47,    47,    47,    47,    47,    47,    47,    47,\n        47,    47,    47,    47,    47,    47,    47,    47,    47,    47,\n        47,    47,    47,    47,    47,    47,    47,    47,    47,    47,\n        47,    47,    47,    47,    47,    47,    47,    47,    47,    47,\n        47,    47,    47,    47,    30,    30,   119,    30,    30,    30,\n        30,    30,    30,    30,    30,    30,    30,    30,    30,    30,\n        30,    30,    30,    30,    30,    30,    30,    30,    30,    30,\n        30,    30,    30,    30,    30,    30,    30,    30,    30,    30,\n        30,    30,    30,    30,    30,    30,    30,    30,    30,    30,\n        30,    30,    30,    30,    30,    30,    30,    30,    30,    30,\n        27,    27,   118,    27,    27,    27,    27,    27,    27,    27,\n        27,    27,    27,    27,    27,    27,    27,    27,    27,    27,\n        27,    27,    27,    27,    27,    27,    27,    27,    27,    27,\n        27,    27,    27,    27,    27,    27,    27,    27,    27,    27,\n        27,    27,    27,    27,    27,    27,    27,    27,    27,    27,\n        27,    27,    27,    27,    27,    27,     6,     6,   117,     6,\n         6,     6,     6,     6,     6,     6,     6,     6,     6,     6,\n         6,     6,     6,     6,     6,     6,     6,     6,     6,     6,\n         6,     6,     6,     6,     6,     6,     6,     6,     6,     6,\n         6,     6,     6,     6,     6,     6,     6,     6,     6,     6,\n         6,     6,     6,     6,     6,     6,     6,     6,     6,     6,\n         6,     6,     3,     3,   115,     3,     3,     3,     3,     3,\n         3,     3,     3,     3,     3,     3,     3,     3,     3,     3,\n         3,     3,     3,     3,     3,     3,     3,     3,     3,     3,\n         3,     3,     3,     3,     3,     3,     3,     3,     3,     3,\n         3,     3,     3,     3,     3,     3,     3,     3,     3,     3,\n         3,     3,     3,     3,     3,     3,     3,     3,     2,     2,\n       112,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n         2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n         2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n         2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n         2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n         2,     2,     2,     2,     0,     0,     0,     0,     0,     0,\n         0,     0,     0,     0,     0,     0,     0,     0,   111,     0,\n         0,     0,     0,     0,     0,     0,     0,     0,   109,     0,\n         0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n         0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n         0,     0,     0,     0,     0,     0,     0,     0,    34,    61,\n       108,    45,    42,    37,    61,   107,    42,   105,    34,    45,\n        39,    39,    37,    13,   103,    34,    34,    13,   102,    61,\n       101,    34,    34,    34,    34,    34,    34,    34,    34,    34,\n        34,    34,    34,    34,    34,    34,    34,    34,    34,    34,\n        34,    34,    34,    34,    33,     1,     1,    34,    34,   100,\n        99,    91,    90,    89,    33,    88,    87,    86,    85,    83,\n        82,    33,    33,    81,    80,    79,    78,    33,    33,    33,\n        33,    33,    33,    33,    33,    33,    33,    33,    33,    33,\n        33,    33,    33,    33,    33,    33,    33,    33,    33,    33,\n        32,    77,    76,    33,    33,    74,    69,    68,    67,    66,\n        32,    65,    64,    63,    62,    60,    59,    32,    32,    58,\n        57,    56,    55,    32,    32,    32,    32,    32,    32,    32,\n        32,    32,    32,    32,    32,    32,    32,    32,    32,    32,\n        32,    32,    32,    32,    32,    32,    31,    46,    44,    32,\n        32,    43,    41,    40,    38,    36,    31,    17,    -1,    -1,\n        -1,    -1,    -1,    31,    31,    -1,    -1,    -1,    -1,    31,\n        31,    31,    31,    31,    31,    31,    31,    31,    31,    31,\n        31,    31,    31,    31,    31,    31,    31,    31,    31,    31,\n        31,    31,    26,    -1,    -1,    31,    31,    -1,    -1,    -1,\n        -1,    -1,    26,    -1,    -1,    -1,    -1,    -1,    -1,    26,\n        26,    -1,    -1,    -1,    -1,    26,    26,    26,    26,    26,\n        26,    26,    26,    26,    26,    26,    26,    26,    26,    26,\n        26,    26,    26,    26,    26,    26,    26,    26,     4,    -1,\n        -1,    26,    26,    -1,    -1,    -1,    -1,    -1,     4,    -1,\n        -1,    -1,    -1,    -1,    -1,     4,     4,    -1,    -1,    -1,\n        -1,     4,     4,     4,     4,     4,     4,     4,     4,     4,\n         4,     4,     4,     4,     4,     4,     4,     4,     4,     4,\n         4,     4,     4,     4,     5,    -1,    -1,     4,     4,    -1,\n        -1,    -1,    -1,    -1,    -1,    -1,    49,    -1,    -1,    -1,\n        49,    -1,    -1,    -1,    -1,    -1,    -1,     5,    -1,    -1,\n        -1,     5,    -1,    -1,     5,     5,    49,     5,    49,     5,\n         5,     5,     5,    49,     5,     5,    29,    49,    -1,    -1,\n        29,    -1,    -1,    -1,    49,    -1,    -1,    49,    -1,    49,\n        49,    -1,    49,    -1,    71,    -1,    29,    -1,    29,    -1,\n        -1,    71,    -1,    29,    -1,    -1,    -1,    29,    71,    71,\n        71,    71,    71,    71,    29,    -1,    54,    29,    -1,    29,\n        29,    -1,    29,    54,    -1,    -1,    -1,    -1,    -1,    -1,\n        54,    54,    54,    54,    54,    54,\n]; \nvar jjlexclassTable0: number[] = [ \n         0,     0,     0,     0,     0,     0,     0,     0,     0,     1,\n         2,     0,     0,     1,     0,     0,     0,     0,     0,     0,\n         0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n         0,     0,     1,     0,     3,     4,     5,     6,     0,     7,\n         8,     9,    10,    11,    12,    13,     0,    14,    15,    15,\n        15,    15,    15,    15,    15,    15,    15,    15,    16,    17,\n        18,    19,    20,    21,     0,    22,    22,    22,    22,    22,\n        22,     5,     5,     5,     5,     5,     5,     5,     5,     5,\n         5,     5,     5,     5,     5,    23,     5,     5,    23,     5,\n         5,    24,    25,    26,    27,    28,     0,    29,    30,    31,\n        32,    33,    34,    35,    36,    37,     5,    38,    39,    40,\n        41,    42,    43,     5,    44,    45,    46,    47,     5,    48,\n        49,    50,     5,    51,    52,    53,     0,     0,     0,     0,\n         0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n         0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n         0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n         0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n        54,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n         0,    54,     0,     0,     0,     0,    54,     0,     0,     0,\n         0,     0,    54,    54,    54,    54,    54,    54,    54,    54,\n        54,    54,    54,    54,    54,    54,    54,    54,    54,    54,\n        54,    54,    54,    54,    54,     0,    54,    54,    54,    54,\n        54,    54,    54,    54,    54,    54,    54,    54,    54,    54,\n        54,    54,    54,    54,    54,    54,    54,    54,    54,    54,\n        54,    54,    54,    54,    54,    54,    54,     0,    54,    54,\n        54,    54,    54,    54,    54,    54,\n]; \nvar jjlexunicodeClassTable0: number[] = [ \n        54,   256,   705,     0,   706,   709,    54,   710,   721,     0,\n       722,   735,    54,   736,   740,     0,   741,   747,    54,   748,\n       748,     0,   749,   749,    54,   750,   750,     0,   751,   767,\n        55,   768,   879,    54,   880,   884,     0,   885,   885,    54,\n       886,   887,     0,   888,   889,    54,   890,   893,     0,   894,\n       901,    54,   902,   902,     0,   903,   903,    54,   904,   906,\n         0,   907,   907,    54,   908,   908,     0,   909,   909,    54,\n       910,   929,     0,   930,   930,    54,   931,  1013,     0,  1014,\n      1014,    54,  1015,  1153,     0,  1154,  1154,    55,  1155,  1159,\n         0,  1160,  1161,    54,  1162,  1319,     0,  1320,  1328,    54,\n      1329,  1366,     0,  1367,  1368,    54,  1369,  1369,     0,  1370,\n      1376,    54,  1377,  1415,     0,  1416,  1424,    55,  1425,  1469,\n         0,  1470,  1470,    55,  1471,  1471,     0,  1472,  1472,    55,\n      1473,  1474,     0,  1475,  1475,    55,  1476,  1477,     0,  1478,\n      1478,    55,  1479,  1479,     0,  1480,  1487,    54,  1488,  1514,\n         0,  1515,  1519,    54,  1520,  1522,     0,  1523,  1551,    55,\n      1552,  1562,     0,  1563,  1567,    54,  1568,  1610,    55,  1611,\n      1641,     0,  1642,  1645,    54,  1646,  1647,    55,  1648,  1648,\n        54,  1649,  1747,     0,  1748,  1748,    54,  1749,  1749,    55,\n      1750,  1756,     0,  1757,  1758,    55,  1759,  1764,    54,  1765,\n      1766,    55,  1767,  1768,     0,  1769,  1769,    55,  1770,  1773,\n        54,  1774,  1775,    55,  1776,  1785,    54,  1786,  1788,     0,\n      1789,  1790,    54,  1791,  1791,     0,  1792,  1807,    54,  1808,\n      1808,    55,  1809,  1809,    54,  1810,  1839,    55,  1840,  1866,\n         0,  1867,  1868,    54,  1869,  1957,    55,  1958,  1968,    54,\n      1969,  1969,     0,  1970,  1983,    55,  1984,  1993,    54,  1994,\n      2026,    55,  2027,  2035,    54,  2036,  2037,     0,  2038,  2041,\n        54,  2042,  2042,     0,  2043,  2047,    54,  2048,  2069,    55,\n      2070,  2073,    54,  2074,  2074,    55,  2075,  2083,    54,  2084,\n      2084,    55,  2085,  2087,    54,  2088,  2088,    55,  2089,  2093,\n         0,  2094,  2111,    54,  2112,  2136,    55,  2137,  2139,     0,\n      2140,  2207,    54,  2208,  2208,     0,  2209,  2209,    54,  2210,\n      2220,     0,  2221,  2275,    55,  2276,  2302,     0,  2303,  2303,\n        55,  2304,  2307,    54,  2308,  2361,    55,  2362,  2364,    54,\n      2365,  2365,    55,  2366,  2383,    54,  2384,  2384,    55,  2385,\n      2391,    54,  2392,  2401,    55,  2402,  2403,     0,  2404,  2405,\n        55,  2406,  2415,     0,  2416,  2416,    54,  2417,  2423,     0,\n      2424,  2424,    54,  2425,  2431,     0,  2432,  2432,    55,  2433,\n      2435,     0,  2436,  2436,    54,  2437,  2444,     0,  2445,  2446,\n        54,  2447,  2448,     0,  2449,  2450,    54,  2451,  2472,     0,\n      2473,  2473,    54,  2474,  2480,     0,  2481,  2481,    54,  2482,\n      2482,     0,  2483,  2485,    54,  2486,  2489,     0,  2490,  2491,\n        55,  2492,  2492,    54,  2493,  2493,    55,  2494,  2500,     0,\n      2501,  2502,    55,  2503,  2504,     0,  2505,  2506,    55,  2507,\n      2509,    54,  2510,  2510,     0,  2511,  2518,    55,  2519,  2519,\n         0,  2520,  2523,    54,  2524,  2525,     0,  2526,  2526,    54,\n      2527,  2529,    55,  2530,  2531,     0,  2532,  2533,    55,  2534,\n      2543,    54,  2544,  2545,     0,  2546,  2560,    55,  2561,  2563,\n         0,  2564,  2564,    54,  2565,  2570,     0,  2571,  2574,    54,\n      2575,  2576,     0,  2577,  2578,    54,  2579,  2600,     0,  2601,\n      2601,    54,  2602,  2608,     0,  2609,  2609,    54,  2610,  2611,\n         0,  2612,  2612,    54,  2613,  2614,     0,  2615,  2615,    54,\n      2616,  2617,     0,  2618,  2619,    55,  2620,  2620,     0,  2621,\n      2621,    55,  2622,  2626,     0,  2627,  2630,    55,  2631,  2632,\n         0,  2633,  2634,    55,  2635,  2637,     0,  2638,  2640,    55,\n      2641,  2641,     0,  2642,  2648,    54,  2649,  2652,     0,  2653,\n      2653,    54,  2654,  2654,     0,  2655,  2661,    55,  2662,  2673,\n        54,  2674,  2676,    55,  2677,  2677,     0,  2678,  2688,    55,\n      2689,  2691,     0,  2692,  2692,    54,  2693,  2701,     0,  2702,\n      2702,    54,  2703,  2705,     0,  2706,  2706,    54,  2707,  2728,\n         0,  2729,  2729,    54,  2730,  2736,     0,  2737,  2737,    54,\n      2738,  2739,     0,  2740,  2740,    54,  2741,  2745,     0,  2746,\n      2747,    55,  2748,  2748,    54,  2749,  2749,    55,  2750,  2757,\n         0,  2758,  2758,    55,  2759,  2761,     0,  2762,  2762,    55,\n      2763,  2765,     0,  2766,  2767,    54,  2768,  2768,     0,  2769,\n      2783,    54,  2784,  2785,    55,  2786,  2787,     0,  2788,  2789,\n        55,  2790,  2799,     0,  2800,  2816,    55,  2817,  2819,     0,\n      2820,  2820,    54,  2821,  2828,     0,  2829,  2830,    54,  2831,\n      2832,     0,  2833,  2834,    54,  2835,  2856,     0,  2857,  2857,\n        54,  2858,  2864,     0,  2865,  2865,    54,  2866,  2867,     0,\n      2868,  2868,    54,  2869,  2873,     0,  2874,  2875,    55,  2876,\n      2876,    54,  2877,  2877,    55,  2878,  2884,     0,  2885,  2886,\n        55,  2887,  2888,     0,  2889,  2890,    55,  2891,  2893,     0,\n      2894,  2901,    55,  2902,  2903,     0,  2904,  2907,    54,  2908,\n      2909,     0,  2910,  2910,    54,  2911,  2913,    55,  2914,  2915,\n         0,  2916,  2917,    55,  2918,  2927,     0,  2928,  2928,    54,\n      2929,  2929,     0,  2930,  2945,    55,  2946,  2946,    54,  2947,\n      2947,     0,  2948,  2948,    54,  2949,  2954,     0,  2955,  2957,\n        54,  2958,  2960,     0,  2961,  2961,    54,  2962,  2965,     0,\n      2966,  2968,    54,  2969,  2970,     0,  2971,  2971,    54,  2972,\n      2972,     0,  2973,  2973,    54,  2974,  2975,     0,  2976,  2978,\n        54,  2979,  2980,     0,  2981,  2983,    54,  2984,  2986,     0,\n      2987,  2989,    54,  2990,  3001,     0,  3002,  3005,    55,  3006,\n      3010,     0,  3011,  3013,    55,  3014,  3016,     0,  3017,  3017,\n        55,  3018,  3021,     0,  3022,  3023,    54,  3024,  3024,     0,\n      3025,  3030,    55,  3031,  3031,     0,  3032,  3045,    55,  3046,\n      3055,     0,  3056,  3072,    55,  3073,  3075,     0,  3076,  3076,\n        54,  3077,  3084,     0,  3085,  3085,    54,  3086,  3088,     0,\n      3089,  3089,    54,  3090,  3112,     0,  3113,  3113,    54,  3114,\n      3123,     0,  3124,  3124,    54,  3125,  3129,     0,  3130,  3132,\n        54,  3133,  3133,    55,  3134,  3140,     0,  3141,  3141,    55,\n      3142,  3144,     0,  3145,  3145,    55,  3146,  3149,     0,  3150,\n      3156,    55,  3157,  3158,     0,  3159,  3159,    54,  3160,  3161,\n         0,  3162,  3167,    54,  3168,  3169,    55,  3170,  3171,     0,\n      3172,  3173,    55,  3174,  3183,     0,  3184,  3201,    55,  3202,\n      3203,     0,  3204,  3204,    54,  3205,  3212,     0,  3213,  3213,\n        54,  3214,  3216,     0,  3217,  3217,    54,  3218,  3240,     0,\n      3241,  3241,    54,  3242,  3251,     0,  3252,  3252,    54,  3253,\n      3257,     0,  3258,  3259,    55,  3260,  3260,    54,  3261,  3261,\n        55,  3262,  3268,     0,  3269,  3269,    55,  3270,  3272,     0,\n      3273,  3273,    55,  3274,  3277,     0,  3278,  3284,    55,  3285,\n      3286,     0,  3287,  3293,    54,  3294,  3294,     0,  3295,  3295,\n        54,  3296,  3297,    55,  3298,  3299,     0,  3300,  3301,    55,\n      3302,  3311,     0,  3312,  3312,    54,  3313,  3314,     0,  3315,\n      3329,    55,  3330,  3331,     0,  3332,  3332,    54,  3333,  3340,\n         0,  3341,  3341,    54,  3342,  3344,     0,  3345,  3345,    54,\n      3346,  3386,     0,  3387,  3388,    54,  3389,  3389,    55,  3390,\n      3396,     0,  3397,  3397,    55,  3398,  3400,     0,  3401,  3401,\n        55,  3402,  3405,    54,  3406,  3406,     0,  3407,  3414,    55,\n      3415,  3415,     0,  3416,  3423,    54,  3424,  3425,    55,  3426,\n      3427,     0,  3428,  3429,    55,  3430,  3439,     0,  3440,  3449,\n        54,  3450,  3455,     0,  3456,  3457,    55,  3458,  3459,     0,\n      3460,  3460,    54,  3461,  3478,     0,  3479,  3481,    54,  3482,\n      3505,     0,  3506,  3506,    54,  3507,  3515,     0,  3516,  3516,\n        54,  3517,  3517,     0,  3518,  3519,    54,  3520,  3526,     0,\n      3527,  3529,    55,  3530,  3530,     0,  3531,  3534,    55,  3535,\n      3540,     0,  3541,  3541,    55,  3542,  3542,     0,  3543,  3543,\n        55,  3544,  3551,     0,  3552,  3569,    55,  3570,  3571,     0,\n      3572,  3584,    54,  3585,  3632,    55,  3633,  3633,    54,  3634,\n      3635,    55,  3636,  3642,     0,  3643,  3647,    54,  3648,  3654,\n        55,  3655,  3662,     0,  3663,  3663,    55,  3664,  3673,     0,\n      3674,  3712,    54,  3713,  3714,     0,  3715,  3715,    54,  3716,\n      3716,     0,  3717,  3718,    54,  3719,  3720,     0,  3721,  3721,\n        54,  3722,  3722,     0,  3723,  3724,    54,  3725,  3725,     0,\n      3726,  3731,    54,  3732,  3735,     0,  3736,  3736,    54,  3737,\n      3743,     0,  3744,  3744,    54,  3745,  3747,     0,  3748,  3748,\n        54,  3749,  3749,     0,  3750,  3750,    54,  3751,  3751,     0,\n      3752,  3753,    54,  3754,  3755,     0,  3756,  3756,    54,  3757,\n      3760,    55,  3761,  3761,    54,  3762,  3763,    55,  3764,  3769,\n         0,  3770,  3770,    55,  3771,  3772,    54,  3773,  3773,     0,\n      3774,  3775,    54,  3776,  3780,     0,  3781,  3781,    54,  3782,\n      3782,     0,  3783,  3783,    55,  3784,  3789,     0,  3790,  3791,\n        55,  3792,  3801,     0,  3802,  3803,    54,  3804,  3807,     0,\n      3808,  3839,    54,  3840,  3840,     0,  3841,  3863,    55,  3864,\n      3865,     0,  3866,  3871,    55,  3872,  3881,     0,  3882,  3892,\n        55,  3893,  3893,     0,  3894,  3894,    55,  3895,  3895,     0,\n      3896,  3896,    55,  3897,  3897,     0,  3898,  3901,    55,  3902,\n      3903,    54,  3904,  3911,     0,  3912,  3912,    54,  3913,  3948,\n         0,  3949,  3952,    55,  3953,  3972,     0,  3973,  3973,    55,\n      3974,  3975,    54,  3976,  3980,    55,  3981,  3991,     0,  3992,\n      3992,    55,  3993,  4028,     0,  4029,  4037,    55,  4038,  4038,\n         0,  4039,  4095,    54,  4096,  4138,    55,  4139,  4158,    54,\n      4159,  4159,    55,  4160,  4169,     0,  4170,  4175,    54,  4176,\n      4181,    55,  4182,  4185,    54,  4186,  4189,    55,  4190,  4192,\n        54,  4193,  4193,    55,  4194,  4196,    54,  4197,  4198,    55,\n      4199,  4205,    54,  4206,  4208,    55,  4209,  4212,    54,  4213,\n      4225,    55,  4226,  4237,    54,  4238,  4238,    55,  4239,  4253,\n         0,  4254,  4255,    54,  4256,  4293,     0,  4294,  4294,    54,\n      4295,  4295,     0,  4296,  4300,    54,  4301,  4301,     0,  4302,\n      4303,    54,  4304,  4346,     0,  4347,  4347,    54,  4348,  4680,\n         0,  4681,  4681,    54,  4682,  4685,     0,  4686,  4687,    54,\n      4688,  4694,     0,  4695,  4695,    54,  4696,  4696,     0,  4697,\n      4697,    54,  4698,  4701,     0,  4702,  4703,    54,  4704,  4744,\n         0,  4745,  4745,    54,  4746,  4749,     0,  4750,  4751,    54,\n      4752,  4784,     0,  4785,  4785,    54,  4786,  4789,     0,  4790,\n      4791,    54,  4792,  4798,     0,  4799,  4799,    54,  4800,  4800,\n         0,  4801,  4801,    54,  4802,  4805,     0,  4806,  4807,    54,\n      4808,  4822,     0,  4823,  4823,    54,  4824,  4880,     0,  4881,\n      4881,    54,  4882,  4885,     0,  4886,  4887,    54,  4888,  4954,\n         0,  4955,  4956,    55,  4957,  4959,     0,  4960,  4991,    54,\n      4992,  5007,     0,  5008,  5023,    54,  5024,  5108,     0,  5109,\n      5120,    54,  5121,  5740,     0,  5741,  5742,    54,  5743,  5759,\n         0,  5760,  5760,    54,  5761,  5786,     0,  5787,  5791,    54,\n      5792,  5866,     0,  5867,  5869,    54,  5870,  5872,     0,  5873,\n      5887,    54,  5888,  5900,     0,  5901,  5901,    54,  5902,  5905,\n        55,  5906,  5908,     0,  5909,  5919,    54,  5920,  5937,    55,\n      5938,  5940,     0,  5941,  5951,    54,  5952,  5969,    55,  5970,\n      5971,     0,  5972,  5983,    54,  5984,  5996,     0,  5997,  5997,\n        54,  5998,  6000,     0,  6001,  6001,    55,  6002,  6003,     0,\n      6004,  6015,    54,  6016,  6067,    55,  6068,  6099,     0,  6100,\n      6102,    54,  6103,  6103,     0,  6104,  6107,    54,  6108,  6108,\n        55,  6109,  6109,     0,  6110,  6111,    55,  6112,  6121,     0,\n      6122,  6154,    55,  6155,  6157,     0,  6158,  6159,    55,  6160,\n      6169,     0,  6170,  6175,    54,  6176,  6263,     0,  6264,  6271,\n        54,  6272,  6312,    55,  6313,  6313,    54,  6314,  6314,     0,\n      6315,  6319,    54,  6320,  6389,     0,  6390,  6399,    54,  6400,\n      6428,     0,  6429,  6431,    55,  6432,  6443,     0,  6444,  6447,\n        55,  6448,  6459,     0,  6460,  6469,    55,  6470,  6479,    54,\n      6480,  6509,     0,  6510,  6511,    54,  6512,  6516,     0,  6517,\n      6527,    54,  6528,  6571,     0,  6572,  6575,    55,  6576,  6592,\n        54,  6593,  6599,    55,  6600,  6601,     0,  6602,  6607,    55,\n      6608,  6617,     0,  6618,  6655,    54,  6656,  6678,    55,  6679,\n      6683,     0,  6684,  6687,    54,  6688,  6740,    55,  6741,  6750,\n         0,  6751,  6751,    55,  6752,  6780,     0,  6781,  6782,    55,\n      6783,  6793,     0,  6794,  6799,    55,  6800,  6809,     0,  6810,\n      6822,    54,  6823,  6823,     0,  6824,  6911,    55,  6912,  6916,\n        54,  6917,  6963,    55,  6964,  6980,    54,  6981,  6987,     0,\n      6988,  6991,    55,  6992,  7001,     0,  7002,  7018,    55,  7019,\n      7027,     0,  7028,  7039,    55,  7040,  7042,    54,  7043,  7072,\n        55,  7073,  7085,    54,  7086,  7087,    55,  7088,  7097,    54,\n      7098,  7141,    55,  7142,  7155,     0,  7156,  7167,    54,  7168,\n      7203,    55,  7204,  7223,     0,  7224,  7231,    55,  7232,  7241,\n         0,  7242,  7244,    54,  7245,  7247,    55,  7248,  7257,    54,\n      7258,  7293,     0,  7294,  7375,    55,  7376,  7378,     0,  7379,\n      7379,    55,  7380,  7400,    54,  7401,  7404,    55,  7405,  7405,\n        54,  7406,  7409,    55,  7410,  7412,    54,  7413,  7414,     0,\n      7415,  7423,    54,  7424,  7615,    55,  7616,  7654,     0,  7655,\n      7675,    55,  7676,  7679,    54,  7680,  7957,     0,  7958,  7959,\n        54,  7960,  7965,     0,  7966,  7967,    54,  7968,  8005,     0,\n      8006,  8007,    54,  8008,  8013,     0,  8014,  8015,    54,  8016,\n      8023,     0,  8024,  8024,    54,  8025,  8025,     0,  8026,  8026,\n        54,  8027,  8027,     0,  8028,  8028,    54,  8029,  8029,     0,\n      8030,  8030,    54,  8031,  8061,     0,  8062,  8063,    54,  8064,\n      8116,     0,  8117,  8117,    54,  8118,  8124,     0,  8125,  8125,\n        54,  8126,  8126,     0,  8127,  8129,    54,  8130,  8132,     0,\n      8133,  8133,    54,  8134,  8140,     0,  8141,  8143,    54,  8144,\n      8147,     0,  8148,  8149,    54,  8150,  8155,     0,  8156,  8159,\n        54,  8160,  8172,     0,  8173,  8177,    54,  8178,  8180,     0,\n      8181,  8181,    54,  8182,  8188,     0,  8189,  8203,    55,  8204,\n      8205,     0,  8206,  8254,    55,  8255,  8256,     0,  8257,  8275,\n        55,  8276,  8276,     0,  8277,  8304,    54,  8305,  8305,     0,\n      8306,  8318,    54,  8319,  8319,     0,  8320,  8335,    54,  8336,\n      8348,     0,  8349,  8399,    55,  8400,  8412,     0,  8413,  8416,\n        55,  8417,  8417,     0,  8418,  8420,    55,  8421,  8432,     0,\n      8433,  8449,    54,  8450,  8450,     0,  8451,  8454,    54,  8455,\n      8455,     0,  8456,  8457,    54,  8458,  8467,     0,  8468,  8468,\n        54,  8469,  8469,     0,  8470,  8472,    54,  8473,  8477,     0,\n      8478,  8483,    54,  8484,  8484,     0,  8485,  8485,    54,  8486,\n      8486,     0,  8487,  8487,    54,  8488,  8488,     0,  8489,  8489,\n        54,  8490,  8493,     0,  8494,  8494,    54,  8495,  8505,     0,\n      8506,  8507,    54,  8508,  8511,     0,  8512,  8516,    54,  8517,\n      8521,     0,  8522,  8525,    54,  8526,  8526,     0,  8527,  8543,\n        54,  8544,  8584,     0,  8585, 11263,    54, 11264, 11310,     0,\n     11311, 11311,    54, 11312, 11358,     0, 11359, 11359,    54, 11360,\n     11492,     0, 11493, 11498,    54, 11499, 11502,    55, 11503, 11505,\n        54, 11506, 11507,     0, 11508, 11519,    54, 11520, 11557,     0,\n     11558, 11558,    54, 11559, 11559,     0, 11560, 11564,    54, 11565,\n     11565,     0, 11566, 11567,    54, 11568, 11623,     0, 11624, 11630,\n        54, 11631, 11631,     0, 11632, 11646,    55, 11647, 11647,    54,\n     11648, 11670,     0, 11671, 11679,    54, 11680, 11686,     0, 11687,\n     11687,    54, 11688, 11694,     0, 11695, 11695,    54, 11696, 11702,\n         0, 11703, 11703,    54, 11704, 11710,     0, 11711, 11711,    54,\n     11712, 11718,     0, 11719, 11719,    54, 11720, 11726,     0, 11727,\n     11727,    54, 11728, 11734,     0, 11735, 11735,    54, 11736, 11742,\n         0, 11743, 11743,    55, 11744, 11775,     0, 11776, 11822,    54,\n     11823, 11823,     0, 11824, 12292,    54, 12293, 12295,     0, 12296,\n     12320,    54, 12321, 12329,    55, 12330, 12335,     0, 12336, 12336,\n        54, 12337, 12341,     0, 12342, 12343,    54, 12344, 12348,     0,\n     12349, 12352,    54, 12353, 12438,     0, 12439, 12440,    55, 12441,\n     12442,     0, 12443, 12444,    54, 12445, 12447,     0, 12448, 12448,\n        54, 12449, 12538,     0, 12539, 12539,    54, 12540, 12543,     0,\n     12544, 12548,    54, 12549, 12589,     0, 12590, 12592,    54, 12593,\n     12686,     0, 12687, 12703,    54, 12704, 12730,     0, 12731, 12783,\n        54, 12784, 12799,     0, 12800, 13311,    54, 13312, 19893,     0,\n     19894, 19967,    54, 19968, 40908,     0, 40909, 40959,    54, 40960,\n     42124,     0, 42125, 42191,    54, 42192, 42237,     0, 42238, 42239,\n        54, 42240, 42508,     0, 42509, 42511,    54, 42512, 42527,    55,\n     42528, 42537,    54, 42538, 42539,     0, 42540, 42559,    54, 42560,\n     42606,    55, 42607, 42607,     0, 42608, 42611,    55, 42612, 42621,\n         0, 42622, 42622,    54, 42623, 42647,     0, 42648, 42654,    55,\n     42655, 42655,    54, 42656, 42735,    55, 42736, 42737,     0, 42738,\n     42774,    54, 42775, 42783,     0, 42784, 42785,    54, 42786, 42888,\n         0, 42889, 42890,    54, 42891, 42894,     0, 42895, 42895,    54,\n     42896, 42899,     0, 42900, 42911,    54, 42912, 42922,     0, 42923,\n     42999,    54, 43000, 43009,    55, 43010, 43010,    54, 43011, 43013,\n        55, 43014, 43014,    54, 43015, 43018,    55, 43019, 43019,    54,\n     43020, 43042,    55, 43043, 43047,     0, 43048, 43071,    54, 43072,\n     43123,     0, 43124, 43135,    55, 43136, 43137,    54, 43138, 43187,\n        55, 43188, 43204,     0, 43205, 43215,    55, 43216, 43225,     0,\n     43226, 43231,    55, 43232, 43249,    54, 43250, 43255,     0, 43256,\n     43258,    54, 43259, 43259,     0, 43260, 43263,    55, 43264, 43273,\n        54, 43274, 43301,    55, 43302, 43309,     0, 43310, 43311,    54,\n     43312, 43334,    55, 43335, 43347,     0, 43348, 43359,    54, 43360,\n     43388,     0, 43389, 43391,    55, 43392, 43395,    54, 43396, 43442,\n        55, 43443, 43456,     0, 43457, 43470,    54, 43471, 43471,    55,\n     43472, 43481,     0, 43482, 43519,    54, 43520, 43560,    55, 43561,\n     43574,     0, 43575, 43583,    54, 43584, 43586,    55, 43587, 43587,\n        54, 43588, 43595,    55, 43596, 43597,     0, 43598, 43599,    55,\n     43600, 43609,     0, 43610, 43615,    54, 43616, 43638,     0, 43639,\n     43641,    54, 43642, 43642,    55, 43643, 43643,     0, 43644, 43647,\n        54, 43648, 43695,    55, 43696, 43696,    54, 43697, 43697,    55,\n     43698, 43700,    54, 43701, 43702,    55, 43703, 43704,    54, 43705,\n     43709,    55, 43710, 43711,    54, 43712, 43712,    55, 43713, 43713,\n        54, 43714, 43714,     0, 43715, 43738,    54, 43739, 43741,     0,\n     43742, 43743,    54, 43744, 43754,    55, 43755, 43759,     0, 43760,\n     43761,    54, 43762, 43764,    55, 43765, 43766,     0, 43767, 43776,\n        54, 43777, 43782,     0, 43783, 43784,    54, 43785, 43790,     0,\n     43791, 43792,    54, 43793, 43798,     0, 43799, 43807,    54, 43808,\n     43814,     0, 43815, 43815,    54, 43816, 43822,     0, 43823, 43967,\n        54, 43968, 44002,    55, 44003, 44010,     0, 44011, 44011,    55,\n     44012, 44013,     0, 44014, 44015,    55, 44016, 44025,     0, 44026,\n     44031,    54, 44032, 55203,     0, 55204, 55215,    54, 55216, 55238,\n         0, 55239, 55242,    54, 55243, 55291,     0, 55292, 63743,    54,\n     63744, 64109,     0, 64110, 64111,    54, 64112, 64217,     0, 64218,\n     64255,    54, 64256, 64262,     0, 64263, 64274,    54, 64275, 64279,\n         0, 64280, 64284,    54, 64285, 64285,    55, 64286, 64286,    54,\n     64287, 64296,     0, 64297, 64297,    54, 64298, 64310,     0, 64311,\n     64311,    54, 64312, 64316,     0, 64317, 64317,    54, 64318, 64318,\n         0, 64319, 64319,    54, 64320, 64321,     0, 64322, 64322,    54,\n     64323, 64324,     0, 64325, 64325,    54, 64326, 64433,     0, 64434,\n     64466,    54, 64467, 64829,     0, 64830, 64847,    54, 64848, 64911,\n         0, 64912, 64913,    54, 64914, 64967,     0, 64968, 65007,    54,\n     65008, 65019,     0, 65020, 65023,    55, 65024, 65039,     0, 65040,\n     65055,    55, 65056, 65062,     0, 65063, 65074,    55, 65075, 65076,\n         0, 65077, 65100,    55, 65101, 65103,     0, 65104, 65135,    54,\n     65136, 65140,     0, 65141, 65141,    54, 65142, 65276,     0, 65277,\n     65295,    55, 65296, 65305,     0, 65306, 65312,    54, 65313, 65338,\n         0, 65339, 65342,    55, 65343, 65343,     0, 65344, 65344,    54,\n     65345, 65370,     0, 65371, 65381,    54, 65382, 65470,     0, 65471,\n     65473,    54, 65474, 65479,     0, 65480, 65481,    54, 65482, 65487,\n         0, 65488, 65489,    54, 65490, 65495,     0, 65496, 65497,    54,\n     65498, 65500,     0, 65501,Infinity,\n]; \nvar jjlexisEnd0: number[] = [ \n    0,1,0,1,1,0,0,1,1,1,1,1,1,0,1,\n    1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,\n    1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,\n    0,0,0,1,0,0,1,1,0,0,0,0,0,0,0,\n    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n    0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,\n    0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,\n    0,1,0,0,0,1,0,0,1,0,0,1,0,0,0,\n    1,0,0,0,1,1,1,0,1,1,0,1,1,0,0,\n    0,1,1,\n]; \nvar jjlexhasArc0: number[] = [ \n    1,1,1,1,1,1,1,0,0,0,0,0,0,1,0,\n    0,0,1,0,0,0,0,0,0,0,0,1,1,0,1,\n    1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,\n    1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,\n    1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n    1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,\n    1,1,0,1,1,1,0,1,1,1,1,1,1,1,0,\n    1,0,1,1,1,0,1,1,0,1,1,0,1,1,1,\n    0,1,1,1,0,0,0,1,0,0,1,0,0,1,1,\n    1,0,0,\n]; \nvar jjlextable0: DFATable = {\n    pnext: jjlexpnext0,\n    disnext: jjlexdisnext0,\n    checknext: jjlexchecknext0,\n    maxAsicii: 255,\n    classTable: jjlexclassTable0,\n    unicodeClassTable: jjlexunicodeClassTable0,\n    isEnd: jjlexisEnd0,\n    hasArc: jjlexhasArc0\n};\nvar jjlexpnext1: number[] = [ \n         6,     6,     7,     7,     1,     2,     3,     4,     1,     5,\n         6,     6,     1,     5,\n]; \nvar jjlexdisnext1: number[] = [ \n         4,    12,     0,    -4,    -4,    10,     8,    -4,\n]; \nvar jjlexchecknext1: number[] = [ \n         2,     2,     2,     2,     0,     0,     0,     0,     6,     6,\n         5,     5,     1,     1,\n]; \nvar jjlexclassTable1: number[] = [ \n         0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n         0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n         0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n         0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n         0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n         0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n         0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n         0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n         0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n         0,     0,     1,     0,     0,     0,     0,     0,     0,     0,\n         0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n         0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n         0,     0,     0,     2,     0,     3,     0,     0,     0,     0,\n         0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n         0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n         0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n         0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n         0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n         0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n         0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n         0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n         0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n         0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n         0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n         0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n         0,     0,     0,     0,     0,     0,\n]; \nvar jjlexunicodeClassTable1: number[] = [ \n         0,   256,Infinity,\n]; \nvar jjlexisEnd1: number[] = [ \n    0,1,0,1,1,0,1,1,\n]; \nvar jjlexhasArc1: number[] = [ \n    1,1,1,0,0,1,1,0,\n]; \nvar jjlextable1: DFATable = {\n    pnext: jjlexpnext1,\n    disnext: jjlexdisnext1,\n    checknext: jjlexchecknext1,\n    maxAsicii: 255,\n    classTable: jjlexclassTable1,\n    unicodeClassTable: jjlexunicodeClassTable1,\n    isEnd: jjlexisEnd1,\n    hasArc: jjlexhasArc1\n};\nvar jjlexpnext2: number[] = [ \n        13,    14,    13,    13,    13,    13,    13,    13,    13,    13,\n        13,    13,    13,    13,    13,    13,    13,    13,    14,    14,\n        13,    13,     1,     2,     1,     1,     1,     1,     3,     1,\n         1,     1,     1,     1,     1,     1,     1,     1,     1,     1,\n         4,     5,     1,     1,     7,    32,    37,     7,    38,    39,\n         9,    39,    39,    39,    39,    39,    39,    39,    39,    39,\n        39,    39,    -1,    -1,    40,    41,     7,    32,    37,     7,\n        38,    39,     9,    39,    39,    39,    39,    39,    39,    39,\n        39,    39,    39,    39,    -1,    -1,    40,    41,     7,    32,\n        37,     7,    38,    39,     9,    39,    39,    39,    39,    39,\n        39,    39,    39,    39,    39,    39,    -1,    -1,    40,    41,\n         7,    32,    37,     7,    38,    39,     9,    39,    39,    39,\n        39,    39,    39,    39,    39,    39,    39,    39,    -1,    -1,\n        40,    41,     7,    32,    37,     7,    38,    39,     9,    39,\n        39,    39,    39,    39,    39,    39,    39,    39,    39,    39,\n        -1,    -1,    40,    41,     7,    32,    37,     7,    38,    39,\n         9,    39,    39,    39,    39,    39,    39,    39,    39,    39,\n        39,    39,    -1,    -1,    40,    41,     7,    28,     7,     7,\n         7,    29,     9,    29,    29,    29,    29,    29,    29,    29,\n        29,    29,    29,    29,    -1,    -1,    30,     7,     7,     8,\n         7,     7,     7,     7,     9,     7,     7,     7,    10,     7,\n         7,     7,    11,     7,     7,    12,    -1,    -1,     7,     7,\n         7,    -1,     7,     7,     7,     7,     9,     7,     7,    42,\n         7,     7,     7,     7,     7,     7,     7,     7,    -1,    -1,\n         7,     7,     7,    -1,     7,     7,     7,     7,     9,     7,\n         7,     7,    31,     7,     7,     7,     7,     7,     7,     7,\n        -1,    -1,     7,     7,     7,    -1,     7,     7,     7,     7,\n         9,     7,     7,     7,     7,     7,     7,     7,     7,    27,\n         7,     7,    -1,    -1,     7,     7,     7,    -1,     7,     7,\n         7,     7,     9,     7,     7,     7,     7,    26,     7,     7,\n         7,     7,     7,     7,    -1,    -1,     7,     7,     7,    -1,\n         7,    25,     7,     7,     9,     7,     7,     7,     7,     7,\n         7,     7,     7,     7,     7,     7,    -1,    -1,     7,     7,\n         7,    -1,     7,     7,     7,     7,     9,     7,     7,     7,\n        24,     7,     7,     7,     7,     7,     7,     7,    -1,    -1,\n         7,     7,     7,    -1,     7,     7,     7,     7,     9,     7,\n        23,     7,     7,     7,     7,     7,     7,     7,     7,     7,\n        -1,    -1,     7,     7,     7,    -1,     7,     7,     7,     7,\n         9,     7,     7,     7,     7,     7,     7,     7,     7,     7,\n         7,    22,    -1,    -1,     7,     7,     7,    -1,     7,     7,\n         7,     7,     9,     7,     7,     7,     7,     7,     7,    21,\n         7,     7,     7,     7,    -1,    -1,     7,     7,     7,    -1,\n         7,     7,     7,     7,     9,     7,     7,     7,     7,     7,\n         7,     7,     7,     7,     7,    20,    -1,    -1,     7,     7,\n         7,    -1,     7,     7,     7,     7,     9,     7,     7,     7,\n         7,     7,    19,     7,     7,     7,     7,     7,    -1,    -1,\n         7,     7,     7,    -1,     7,     7,     7,     7,     9,     7,\n         7,     7,     7,     7,     7,     7,     7,     7,     7,     7,\n        -1,    -1,     7,     7,     1,    -1,     1,     1,     1,     1,\n         6,     1,     1,     1,     1,     1,     1,     1,     1,     1,\n         1,     1,    -1,    -1,     1,     1,     7,    -1,     7,     7,\n         7,     7,     9,     7,     7,     7,     7,     7,     7,     7,\n         7,     7,    18,     7,    -1,    -1,     7,     7,     7,    -1,\n         7,     7,     7,     7,     9,    17,     7,     7,     7,     7,\n         7,     7,     7,     7,     7,     7,    -1,    -1,     7,     7,\n         7,    -1,     7,     7,     7,     7,     9,     7,     7,     7,\n         7,     7,     7,     7,    16,     7,     7,     7,    -1,    -1,\n         7,     7,    15,    -1,    15,    15,    15,    15,    15,    15,\n        15,    15,    15,    15,    15,    15,    15,    15,    15,    15,\n        -1,    -1,    15,    15,     7,    -1,     7,     7,     7,     7,\n         9,     7,     7,     7,     7,     7,     7,     7,     7,     7,\n         7,     7,    -1,    -1,     7,     7,    13,    -1,    13,    13,\n        13,    13,    13,    13,    13,    13,    13,    13,    13,    13,\n        13,    13,    13,    13,    -1,    -1,    13,    13,     1,    -1,\n         1,     1,     1,     1,     6,     1,     1,     1,     1,     1,\n         1,     1,     1,     1,     1,     1,    -1,    -1,     1,     1,\n        32,    33,    -1,    34,    32,    -1,    32,    32,    32,    32,\n        32,    32,    32,    32,    32,    32,    32,    -1,    -1,    35,\n        36,    32,    33,    -1,    34,    32,    -1,    32,    32,    32,\n        32,    32,    32,    32,    32,    32,    32,    32,    -1,    -1,\n        35,    36,    32,    33,    -1,    34,    32,    -1,    32,    32,\n        32,    32,    32,    32,    32,    32,    32,    32,    32,    -1,\n        -1,    35,    36,    32,    33,    -1,    34,    32,    -1,    32,\n        32,    32,    32,    32,    32,    32,    32,    32,    32,    32,\n        -1,    -1,    35,    36,    32,    33,    -1,    34,    32,    -1,\n        32,    32,    32,    32,    32,    32,    32,    32,    32,    32,\n        32,    -1,    -1,    35,    36,\n]; \nvar jjlexdisnext2: number[] = [ \n        22,   638,   198,     0,   -22,   -22,   616,   594,   -22,   572,\n       550,   528,   506,   484,   -22,   462,   440,   418,   396,   374,\n       352,   330,   308,   286,   264,   176,   242,   -22,   743,   154,\n       132,   220,   722,   701,   -22,   680,   659,   110,   -22,    88,\n        66,    44,   -22,\n]; \nvar jjlexchecknext2: number[] = [ \n         3,     3,     3,     3,     3,     3,     3,     3,     3,     3,\n         3,     3,     3,     3,     3,     3,     3,     3,     3,     3,\n         3,     3,     0,     0,     0,     0,     0,     0,     0,     0,\n         0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n         0,     0,     0,     0,    41,    41,    41,    41,    41,    41,\n        41,    41,    41,    41,    41,    41,    41,    41,    41,    41,\n        41,    41,    -1,    -1,    41,    41,    40,    40,    40,    40,\n        40,    40,    40,    40,    40,    40,    40,    40,    40,    40,\n        40,    40,    40,    40,    -1,    -1,    40,    40,    39,    39,\n        39,    39,    39,    39,    39,    39,    39,    39,    39,    39,\n        39,    39,    39,    39,    39,    39,    -1,    -1,    39,    39,\n        37,    37,    37,    37,    37,    37,    37,    37,    37,    37,\n        37,    37,    37,    37,    37,    37,    37,    37,    -1,    -1,\n        37,    37,    30,    30,    30,    30,    30,    30,    30,    30,\n        30,    30,    30,    30,    30,    30,    30,    30,    30,    30,\n        -1,    -1,    30,    30,    29,    29,    29,    29,    29,    29,\n        29,    29,    29,    29,    29,    29,    29,    29,    29,    29,\n        29,    29,    -1,    -1,    29,    29,    25,    25,    25,    25,\n        25,    25,    25,    25,    25,    25,    25,    25,    25,    25,\n        25,    25,    25,    25,    -1,    -1,    25,    25,     2,     2,\n         2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n         2,     2,     2,     2,     2,     2,    -1,    -1,     2,     2,\n        31,    -1,    31,    31,    31,    31,    31,    31,    31,    31,\n        31,    31,    31,    31,    31,    31,    31,    31,    -1,    -1,\n        31,    31,    26,    -1,    26,    26,    26,    26,    26,    26,\n        26,    26,    26,    26,    26,    26,    26,    26,    26,    26,\n        -1,    -1,    26,    26,    24,    -1,    24,    24,    24,    24,\n        24,    24,    24,    24,    24,    24,    24,    24,    24,    24,\n        24,    24,    -1,    -1,    24,    24,    23,    -1,    23,    23,\n        23,    23,    23,    23,    23,    23,    23,    23,    23,    23,\n        23,    23,    23,    23,    -1,    -1,    23,    23,    22,    -1,\n        22,    22,    22,    22,    22,    22,    22,    22,    22,    22,\n        22,    22,    22,    22,    22,    22,    -1,    -1,    22,    22,\n        21,    -1,    21,    21,    21,    21,    21,    21,    21,    21,\n        21,    21,    21,    21,    21,    21,    21,    21,    -1,    -1,\n        21,    21,    20,    -1,    20,    20,    20,    20,    20,    20,\n        20,    20,    20,    20,    20,    20,    20,    20,    20,    20,\n        -1,    -1,    20,    20,    19,    -1,    19,    19,    19,    19,\n        19,    19,    19,    19,    19,    19,    19,    19,    19,    19,\n        19,    19,    -1,    -1,    19,    19,    18,    -1,    18,    18,\n        18,    18,    18,    18,    18,    18,    18,    18,    18,    18,\n        18,    18,    18,    18,    -1,    -1,    18,    18,    17,    -1,\n        17,    17,    17,    17,    17,    17,    17,    17,    17,    17,\n        17,    17,    17,    17,    17,    17,    -1,    -1,    17,    17,\n        16,    -1,    16,    16,    16,    16,    16,    16,    16,    16,\n        16,    16,    16,    16,    16,    16,    16,    16,    -1,    -1,\n        16,    16,    15,    -1,    15,    15,    15,    15,    15,    15,\n        15,    15,    15,    15,    15,    15,    15,    15,    15,    15,\n        -1,    -1,    15,    15,    13,    -1,    13,    13,    13,    13,\n        13,    13,    13,    13,    13,    13,    13,    13,    13,    13,\n        13,    13,    -1,    -1,    13,    13,    12,    -1,    12,    12,\n        12,    12,    12,    12,    12,    12,    12,    12,    12,    12,\n        12,    12,    12,    12,    -1,    -1,    12,    12,    11,    -1,\n        11,    11,    11,    11,    11,    11,    11,    11,    11,    11,\n        11,    11,    11,    11,    11,    11,    -1,    -1,    11,    11,\n        10,    -1,    10,    10,    10,    10,    10,    10,    10,    10,\n        10,    10,    10,    10,    10,    10,    10,    10,    -1,    -1,\n        10,    10,     9,    -1,     9,     9,     9,     9,     9,     9,\n         9,     9,     9,     9,     9,     9,     9,     9,     9,     9,\n        -1,    -1,     9,     9,     7,    -1,     7,     7,     7,     7,\n         7,     7,     7,     7,     7,     7,     7,     7,     7,     7,\n         7,     7,    -1,    -1,     7,     7,     6,    -1,     6,     6,\n         6,     6,     6,     6,     6,     6,     6,     6,     6,     6,\n         6,     6,     6,     6,    -1,    -1,     6,     6,     1,    -1,\n         1,     1,     1,     1,     1,     1,     1,     1,     1,     1,\n         1,     1,     1,     1,     1,     1,    -1,    -1,     1,     1,\n        36,    36,    -1,    36,    36,    -1,    36,    36,    36,    36,\n        36,    36,    36,    36,    36,    36,    36,    -1,    -1,    36,\n        36,    35,    35,    -1,    35,    35,    -1,    35,    35,    35,\n        35,    35,    35,    35,    35,    35,    35,    35,    -1,    -1,\n        35,    35,    33,    33,    -1,    33,    33,    -1,    33,    33,\n        33,    33,    33,    33,    33,    33,    33,    33,    33,    -1,\n        -1,    33,    33,    32,    32,    -1,    32,    32,    -1,    32,\n        32,    32,    32,    32,    32,    32,    32,    32,    32,    32,\n        -1,    -1,    32,    32,    28,    28,    -1,    28,    28,    -1,\n        28,    28,    28,    28,    28,    28,    28,    28,    28,    28,\n        28,    -1,    -1,    28,    28,\n]; \nvar jjlexclassTable2: number[] = [ \n         0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n         0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n         0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n         0,     0,     0,     0,     0,     0,     1,     0,     0,     0,\n         0,     0,     0,     0,     0,     0,     0,     0,     2,     2,\n         2,     2,     2,     2,     2,     2,     2,     2,     0,     0,\n         3,     0,     4,     0,     0,     5,     5,     5,     5,     5,\n         5,     5,     5,     5,     5,     5,     5,     5,     5,     5,\n         5,     5,     5,     5,     5,     5,     5,     5,     5,     5,\n         5,     0,     6,     0,     0,     5,     0,     7,     5,     8,\n         9,    10,     5,     5,    11,    12,     5,    13,     5,    14,\n        15,    16,     5,     5,     5,     5,    17,     5,     5,     5,\n         5,     5,     5,    18,     0,    19,     0,     0,     0,     0,\n         0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n         0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n         0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n         0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n        20,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n         0,    20,     0,     0,     0,     0,    20,     0,     0,     0,\n         0,     0,    20,    20,    20,    20,    20,    20,    20,    20,\n        20,    20,    20,    20,    20,    20,    20,    20,    20,    20,\n        20,    20,    20,    20,    20,     0,    20,    20,    20,    20,\n        20,    20,    20,    20,    20,    20,    20,    20,    20,    20,\n        20,    20,    20,    20,    20,    20,    20,    20,    20,    20,\n        20,    20,    20,    20,    20,    20,    20,     0,    20,    20,\n        20,    20,    20,    20,    20,    20,\n]; \nvar jjlexunicodeClassTable2: number[] = [ \n        20,   256,   705,     0,   706,   709,    20,   710,   721,     0,\n       722,   735,    20,   736,   740,     0,   741,   747,    20,   748,\n       748,     0,   749,   749,    20,   750,   750,     0,   751,   767,\n        21,   768,   879,    20,   880,   884,     0,   885,   885,    20,\n       886,   887,     0,   888,   889,    20,   890,   893,     0,   894,\n       901,    20,   902,   902,     0,   903,   903,    20,   904,   906,\n         0,   907,   907,    20,   908,   908,     0,   909,   909,    20,\n       910,   929,     0,   930,   930,    20,   931,  1013,     0,  1014,\n      1014,    20,  1015,  1153,     0,  1154,  1154,    21,  1155,  1159,\n         0,  1160,  1161,    20,  1162,  1319,     0,  1320,  1328,    20,\n      1329,  1366,     0,  1367,  1368,    20,  1369,  1369,     0,  1370,\n      1376,    20,  1377,  1415,     0,  1416,  1424,    21,  1425,  1469,\n         0,  1470,  1470,    21,  1471,  1471,     0,  1472,  1472,    21,\n      1473,  1474,     0,  1475,  1475,    21,  1476,  1477,     0,  1478,\n      1478,    21,  1479,  1479,     0,  1480,  1487,    20,  1488,  1514,\n         0,  1515,  1519,    20,  1520,  1522,     0,  1523,  1551,    21,\n      1552,  1562,     0,  1563,  1567,    20,  1568,  1610,    21,  1611,\n      1641,     0,  1642,  1645,    20,  1646,  1647,    21,  1648,  1648,\n        20,  1649,  1747,     0,  1748,  1748,    20,  1749,  1749,    21,\n      1750,  1756,     0,  1757,  1758,    21,  1759,  1764,    20,  1765,\n      1766,    21,  1767,  1768,     0,  1769,  1769,    21,  1770,  1773,\n        20,  1774,  1775,    21,  1776,  1785,    20,  1786,  1788,     0,\n      1789,  1790,    20,  1791,  1791,     0,  1792,  1807,    20,  1808,\n      1808,    21,  1809,  1809,    20,  1810,  1839,    21,  1840,  1866,\n         0,  1867,  1868,    20,  1869,  1957,    21,  1958,  1968,    20,\n      1969,  1969,     0,  1970,  1983,    21,  1984,  1993,    20,  1994,\n      2026,    21,  2027,  2035,    20,  2036,  2037,     0,  2038,  2041,\n        20,  2042,  2042,     0,  2043,  2047,    20,  2048,  2069,    21,\n      2070,  2073,    20,  2074,  2074,    21,  2075,  2083,    20,  2084,\n      2084,    21,  2085,  2087,    20,  2088,  2088,    21,  2089,  2093,\n         0,  2094,  2111,    20,  2112,  2136,    21,  2137,  2139,     0,\n      2140,  2207,    20,  2208,  2208,     0,  2209,  2209,    20,  2210,\n      2220,     0,  2221,  2275,    21,  2276,  2302,     0,  2303,  2303,\n        21,  2304,  2307,    20,  2308,  2361,    21,  2362,  2364,    20,\n      2365,  2365,    21,  2366,  2383,    20,  2384,  2384,    21,  2385,\n      2391,    20,  2392,  2401,    21,  2402,  2403,     0,  2404,  2405,\n        21,  2406,  2415,     0,  2416,  2416,    20,  2417,  2423,     0,\n      2424,  2424,    20,  2425,  2431,     0,  2432,  2432,    21,  2433,\n      2435,     0,  2436,  2436,    20,  2437,  2444,     0,  2445,  2446,\n        20,  2447,  2448,     0,  2449,  2450,    20,  2451,  2472,     0,\n      2473,  2473,    20,  2474,  2480,     0,  2481,  2481,    20,  2482,\n      2482,     0,  2483,  2485,    20,  2486,  2489,     0,  2490,  2491,\n        21,  2492,  2492,    20,  2493,  2493,    21,  2494,  2500,     0,\n      2501,  2502,    21,  2503,  2504,     0,  2505,  2506,    21,  2507,\n      2509,    20,  2510,  2510,     0,  2511,  2518,    21,  2519,  2519,\n         0,  2520,  2523,    20,  2524,  2525,     0,  2526,  2526,    20,\n      2527,  2529,    21,  2530,  2531,     0,  2532,  2533,    21,  2534,\n      2543,    20,  2544,  2545,     0,  2546,  2560,    21,  2561,  2563,\n         0,  2564,  2564,    20,  2565,  2570,     0,  2571,  2574,    20,\n      2575,  2576,     0,  2577,  2578,    20,  2579,  2600,     0,  2601,\n      2601,    20,  2602,  2608,     0,  2609,  2609,    20,  2610,  2611,\n         0,  2612,  2612,    20,  2613,  2614,     0,  2615,  2615,    20,\n      2616,  2617,     0,  2618,  2619,    21,  2620,  2620,     0,  2621,\n      2621,    21,  2622,  2626,     0,  2627,  2630,    21,  2631,  2632,\n         0,  2633,  2634,    21,  2635,  2637,     0,  2638,  2640,    21,\n      2641,  2641,     0,  2642,  2648,    20,  2649,  2652,     0,  2653,\n      2653,    20,  2654,  2654,     0,  2655,  2661,    21,  2662,  2673,\n        20,  2674,  2676,    21,  2677,  2677,     0,  2678,  2688,    21,\n      2689,  2691,     0,  2692,  2692,    20,  2693,  2701,     0,  2702,\n      2702,    20,  2703,  2705,     0,  2706,  2706,    20,  2707,  2728,\n         0,  2729,  2729,    20,  2730,  2736,     0,  2737,  2737,    20,\n      2738,  2739,     0,  2740,  2740,    20,  2741,  2745,     0,  2746,\n      2747,    21,  2748,  2748,    20,  2749,  2749,    21,  2750,  2757,\n         0,  2758,  2758,    21,  2759,  2761,     0,  2762,  2762,    21,\n      2763,  2765,     0,  2766,  2767,    20,  2768,  2768,     0,  2769,\n      2783,    20,  2784,  2785,    21,  2786,  2787,     0,  2788,  2789,\n        21,  2790,  2799,     0,  2800,  2816,    21,  2817,  2819,     0,\n      2820,  2820,    20,  2821,  2828,     0,  2829,  2830,    20,  2831,\n      2832,     0,  2833,  2834,    20,  2835,  2856,     0,  2857,  2857,\n        20,  2858,  2864,     0,  2865,  2865,    20,  2866,  2867,     0,\n      2868,  2868,    20,  2869,  2873,     0,  2874,  2875,    21,  2876,\n      2876,    20,  2877,  2877,    21,  2878,  2884,     0,  2885,  2886,\n        21,  2887,  2888,     0,  2889,  2890,    21,  2891,  2893,     0,\n      2894,  2901,    21,  2902,  2903,     0,  2904,  2907,    20,  2908,\n      2909,     0,  2910,  2910,    20,  2911,  2913,    21,  2914,  2915,\n         0,  2916,  2917,    21,  2918,  2927,     0,  2928,  2928,    20,\n      2929,  2929,     0,  2930,  2945,    21,  2946,  2946,    20,  2947,\n      2947,     0,  2948,  2948,    20,  2949,  2954,     0,  2955,  2957,\n        20,  2958,  2960,     0,  2961,  2961,    20,  2962,  2965,     0,\n      2966,  2968,    20,  2969,  2970,     0,  2971,  2971,    20,  2972,\n      2972,     0,  2973,  2973,    20,  2974,  2975,     0,  2976,  2978,\n        20,  2979,  2980,     0,  2981,  2983,    20,  2984,  2986,     0,\n      2987,  2989,    20,  2990,  3001,     0,  3002,  3005,    21,  3006,\n      3010,     0,  3011,  3013,    21,  3014,  3016,     0,  3017,  3017,\n        21,  3018,  3021,     0,  3022,  3023,    20,  3024,  3024,     0,\n      3025,  3030,    21,  3031,  3031,     0,  3032,  3045,    21,  3046,\n      3055,     0,  3056,  3072,    21,  3073,  3075,     0,  3076,  3076,\n        20,  3077,  3084,     0,  3085,  3085,    20,  3086,  3088,     0,\n      3089,  3089,    20,  3090,  3112,     0,  3113,  3113,    20,  3114,\n      3123,     0,  3124,  3124,    20,  3125,  3129,     0,  3130,  3132,\n        20,  3133,  3133,    21,  3134,  3140,     0,  3141,  3141,    21,\n      3142,  3144,     0,  3145,  3145,    21,  3146,  3149,     0,  3150,\n      3156,    21,  3157,  3158,     0,  3159,  3159,    20,  3160,  3161,\n         0,  3162,  3167,    20,  3168,  3169,    21,  3170,  3171,     0,\n      3172,  3173,    21,  3174,  3183,     0,  3184,  3201,    21,  3202,\n      3203,     0,  3204,  3204,    20,  3205,  3212,     0,  3213,  3213,\n        20,  3214,  3216,     0,  3217,  3217,    20,  3218,  3240,     0,\n      3241,  3241,    20,  3242,  3251,     0,  3252,  3252,    20,  3253,\n      3257,     0,  3258,  3259,    21,  3260,  3260,    20,  3261,  3261,\n        21,  3262,  3268,     0,  3269,  3269,    21,  3270,  3272,     0,\n      3273,  3273,    21,  3274,  3277,     0,  3278,  3284,    21,  3285,\n      3286,     0,  3287,  3293,    20,  3294,  3294,     0,  3295,  3295,\n        20,  3296,  3297,    21,  3298,  3299,     0,  3300,  3301,    21,\n      3302,  3311,     0,  3312,  3312,    20,  3313,  3314,     0,  3315,\n      3329,    21,  3330,  3331,     0,  3332,  3332,    20,  3333,  3340,\n         0,  3341,  3341,    20,  3342,  3344,     0,  3345,  3345,    20,\n      3346,  3386,     0,  3387,  3388,    20,  3389,  3389,    21,  3390,\n      3396,     0,  3397,  3397,    21,  3398,  3400,     0,  3401,  3401,\n        21,  3402,  3405,    20,  3406,  3406,     0,  3407,  3414,    21,\n      3415,  3415,     0,  3416,  3423,    20,  3424,  3425,    21,  3426,\n      3427,     0,  3428,  3429,    21,  3430,  3439,     0,  3440,  3449,\n        20,  3450,  3455,     0,  3456,  3457,    21,  3458,  3459,     0,\n      3460,  3460,    20,  3461,  3478,     0,  3479,  3481,    20,  3482,\n      3505,     0,  3506,  3506,    20,  3507,  3515,     0,  3516,  3516,\n        20,  3517,  3517,     0,  3518,  3519,    20,  3520,  3526,     0,\n      3527,  3529,    21,  3530,  3530,     0,  3531,  3534,    21,  3535,\n      3540,     0,  3541,  3541,    21,  3542,  3542,     0,  3543,  3543,\n        21,  3544,  3551,     0,  3552,  3569,    21,  3570,  3571,     0,\n      3572,  3584,    20,  3585,  3632,    21,  3633,  3633,    20,  3634,\n      3635,    21,  3636,  3642,     0,  3643,  3647,    20,  3648,  3654,\n        21,  3655,  3662,     0,  3663,  3663,    21,  3664,  3673,     0,\n      3674,  3712,    20,  3713,  3714,     0,  3715,  3715,    20,  3716,\n      3716,     0,  3717,  3718,    20,  3719,  3720,     0,  3721,  3721,\n        20,  3722,  3722,     0,  3723,  3724,    20,  3725,  3725,     0,\n      3726,  3731,    20,  3732,  3735,     0,  3736,  3736,    20,  3737,\n      3743,     0,  3744,  3744,    20,  3745,  3747,     0,  3748,  3748,\n        20,  3749,  3749,     0,  3750,  3750,    20,  3751,  3751,     0,\n      3752,  3753,    20,  3754,  3755,     0,  3756,  3756,    20,  3757,\n      3760,    21,  3761,  3761,    20,  3762,  3763,    21,  3764,  3769,\n         0,  3770,  3770,    21,  3771,  3772,    20,  3773,  3773,     0,\n      3774,  3775,    20,  3776,  3780,     0,  3781,  3781,    20,  3782,\n      3782,     0,  3783,  3783,    21,  3784,  3789,     0,  3790,  3791,\n        21,  3792,  3801,     0,  3802,  3803,    20,  3804,  3807,     0,\n      3808,  3839,    20,  3840,  3840,     0,  3841,  3863,    21,  3864,\n      3865,     0,  3866,  3871,    21,  3872,  3881,     0,  3882,  3892,\n        21,  3893,  3893,     0,  3894,  3894,    21,  3895,  3895,     0,\n      3896,  3896,    21,  3897,  3897,     0,  3898,  3901,    21,  3902,\n      3903,    20,  3904,  3911,     0,  3912,  3912,    20,  3913,  3948,\n         0,  3949,  3952,    21,  3953,  3972,     0,  3973,  3973,    21,\n      3974,  3975,    20,  3976,  3980,    21,  3981,  3991,     0,  3992,\n      3992,    21,  3993,  4028,     0,  4029,  4037,    21,  4038,  4038,\n         0,  4039,  4095,    20,  4096,  4138,    21,  4139,  4158,    20,\n      4159,  4159,    21,  4160,  4169,     0,  4170,  4175,    20,  4176,\n      4181,    21,  4182,  4185,    20,  4186,  4189,    21,  4190,  4192,\n        20,  4193,  4193,    21,  4194,  4196,    20,  4197,  4198,    21,\n      4199,  4205,    20,  4206,  4208,    21,  4209,  4212,    20,  4213,\n      4225,    21,  4226,  4237,    20,  4238,  4238,    21,  4239,  4253,\n         0,  4254,  4255,    20,  4256,  4293,     0,  4294,  4294,    20,\n      4295,  4295,     0,  4296,  4300,    20,  4301,  4301,     0,  4302,\n      4303,    20,  4304,  4346,     0,  4347,  4347,    20,  4348,  4680,\n         0,  4681,  4681,    20,  4682,  4685,     0,  4686,  4687,    20,\n      4688,  4694,     0,  4695,  4695,    20,  4696,  4696,     0,  4697,\n      4697,    20,  4698,  4701,     0,  4702,  4703,    20,  4704,  4744,\n         0,  4745,  4745,    20,  4746,  4749,     0,  4750,  4751,    20,\n      4752,  4784,     0,  4785,  4785,    20,  4786,  4789,     0,  4790,\n      4791,    20,  4792,  4798,     0,  4799,  4799,    20,  4800,  4800,\n         0,  4801,  4801,    20,  4802,  4805,     0,  4806,  4807,    20,\n      4808,  4822,     0,  4823,  4823,    20,  4824,  4880,     0,  4881,\n      4881,    20,  4882,  4885,     0,  4886,  4887,    20,  4888,  4954,\n         0,  4955,  4956,    21,  4957,  4959,     0,  4960,  4991,    20,\n      4992,  5007,     0,  5008,  5023,    20,  5024,  5108,     0,  5109,\n      5120,    20,  5121,  5740,     0,  5741,  5742,    20,  5743,  5759,\n         0,  5760,  5760,    20,  5761,  5786,     0,  5787,  5791,    20,\n      5792,  5866,     0,  5867,  5869,    20,  5870,  5872,     0,  5873,\n      5887,    20,  5888,  5900,     0,  5901,  5901,    20,  5902,  5905,\n        21,  5906,  5908,     0,  5909,  5919,    20,  5920,  5937,    21,\n      5938,  5940,     0,  5941,  5951,    20,  5952,  5969,    21,  5970,\n      5971,     0,  5972,  5983,    20,  5984,  5996,     0,  5997,  5997,\n        20,  5998,  6000,     0,  6001,  6001,    21,  6002,  6003,     0,\n      6004,  6015,    20,  6016,  6067,    21,  6068,  6099,     0,  6100,\n      6102,    20,  6103,  6103,     0,  6104,  6107,    20,  6108,  6108,\n        21,  6109,  6109,     0,  6110,  6111,    21,  6112,  6121,     0,\n      6122,  6154,    21,  6155,  6157,     0,  6158,  6159,    21,  6160,\n      6169,     0,  6170,  6175,    20,  6176,  6263,     0,  6264,  6271,\n        20,  6272,  6312,    21,  6313,  6313,    20,  6314,  6314,     0,\n      6315,  6319,    20,  6320,  6389,     0,  6390,  6399,    20,  6400,\n      6428,     0,  6429,  6431,    21,  6432,  6443,     0,  6444,  6447,\n        21,  6448,  6459,     0,  6460,  6469,    21,  6470,  6479,    20,\n      6480,  6509,     0,  6510,  6511,    20,  6512,  6516,     0,  6517,\n      6527,    20,  6528,  6571,     0,  6572,  6575,    21,  6576,  6592,\n        20,  6593,  6599,    21,  6600,  6601,     0,  6602,  6607,    21,\n      6608,  6617,     0,  6618,  6655,    20,  6656,  6678,    21,  6679,\n      6683,     0,  6684,  6687,    20,  6688,  6740,    21,  6741,  6750,\n         0,  6751,  6751,    21,  6752,  6780,     0,  6781,  6782,    21,\n      6783,  6793,     0,  6794,  6799,    21,  6800,  6809,     0,  6810,\n      6822,    20,  6823,  6823,     0,  6824,  6911,    21,  6912,  6916,\n        20,  6917,  6963,    21,  6964,  6980,    20,  6981,  6987,     0,\n      6988,  6991,    21,  6992,  7001,     0,  7002,  7018,    21,  7019,\n      7027,     0,  7028,  7039,    21,  7040,  7042,    20,  7043,  7072,\n        21,  7073,  7085,    20,  7086,  7087,    21,  7088,  7097,    20,\n      7098,  7141,    21,  7142,  7155,     0,  7156,  7167,    20,  7168,\n      7203,    21,  7204,  7223,     0,  7224,  7231,    21,  7232,  7241,\n         0,  7242,  7244,    20,  7245,  7247,    21,  7248,  7257,    20,\n      7258,  7293,     0,  7294,  7375,    21,  7376,  7378,     0,  7379,\n      7379,    21,  7380,  7400,    20,  7401,  7404,    21,  7405,  7405,\n        20,  7406,  7409,    21,  7410,  7412,    20,  7413,  7414,     0,\n      7415,  7423,    20,  7424,  7615,    21,  7616,  7654,     0,  7655,\n      7675,    21,  7676,  7679,    20,  7680,  7957,     0,  7958,  7959,\n        20,  7960,  7965,     0,  7966,  7967,    20,  7968,  8005,     0,\n      8006,  8007,    20,  8008,  8013,     0,  8014,  8015,    20,  8016,\n      8023,     0,  8024,  8024,    20,  8025,  8025,     0,  8026,  8026,\n        20,  8027,  8027,     0,  8028,  8028,    20,  8029,  8029,     0,\n      8030,  8030,    20,  8031,  8061,     0,  8062,  8063,    20,  8064,\n      8116,     0,  8117,  8117,    20,  8118,  8124,     0,  8125,  8125,\n        20,  8126,  8126,     0,  8127,  8129,    20,  8130,  8132,     0,\n      8133,  8133,    20,  8134,  8140,     0,  8141,  8143,    20,  8144,\n      8147,     0,  8148,  8149,    20,  8150,  8155,     0,  8156,  8159,\n        20,  8160,  8172,     0,  8173,  8177,    20,  8178,  8180,     0,\n      8181,  8181,    20,  8182,  8188,     0,  8189,  8203,    21,  8204,\n      8205,     0,  8206,  8254,    21,  8255,  8256,     0,  8257,  8275,\n        21,  8276,  8276,     0,  8277,  8304,    20,  8305,  8305,     0,\n      8306,  8318,    20,  8319,  8319,     0,  8320,  8335,    20,  8336,\n      8348,     0,  8349,  8399,    21,  8400,  8412,     0,  8413,  8416,\n        21,  8417,  8417,     0,  8418,  8420,    21,  8421,  8432,     0,\n      8433,  8449,    20,  8450,  8450,     0,  8451,  8454,    20,  8455,\n      8455,     0,  8456,  8457,    20,  8458,  8467,     0,  8468,  8468,\n        20,  8469,  8469,     0,  8470,  8472,    20,  8473,  8477,     0,\n      8478,  8483,    20,  8484,  8484,     0,  8485,  8485,    20,  8486,\n      8486,     0,  8487,  8487,    20,  8488,  8488,     0,  8489,  8489,\n        20,  8490,  8493,     0,  8494,  8494,    20,  8495,  8505,     0,\n      8506,  8507,    20,  8508,  8511,     0,  8512,  8516,    20,  8517,\n      8521,     0,  8522,  8525,    20,  8526,  8526,     0,  8527,  8543,\n        20,  8544,  8584,     0,  8585, 11263,    20, 11264, 11310,     0,\n     11311, 11311,    20, 11312, 11358,     0, 11359, 11359,    20, 11360,\n     11492,     0, 11493, 11498,    20, 11499, 11502,    21, 11503, 11505,\n        20, 11506, 11507,     0, 11508, 11519,    20, 11520, 11557,     0,\n     11558, 11558,    20, 11559, 11559,     0, 11560, 11564,    20, 11565,\n     11565,     0, 11566, 11567,    20, 11568, 11623,     0, 11624, 11630,\n        20, 11631, 11631,     0, 11632, 11646,    21, 11647, 11647,    20,\n     11648, 11670,     0, 11671, 11679,    20, 11680, 11686,     0, 11687,\n     11687,    20, 11688, 11694,     0, 11695, 11695,    20, 11696, 11702,\n         0, 11703, 11703,    20, 11704, 11710,     0, 11711, 11711,    20,\n     11712, 11718,     0, 11719, 11719,    20, 11720, 11726,     0, 11727,\n     11727,    20, 11728, 11734,     0, 11735, 11735,    20, 11736, 11742,\n         0, 11743, 11743,    21, 11744, 11775,     0, 11776, 11822,    20,\n     11823, 11823,     0, 11824, 12292,    20, 12293, 12295,     0, 12296,\n     12320,    20, 12321, 12329,    21, 12330, 12335,     0, 12336, 12336,\n        20, 12337, 12341,     0, 12342, 12343,    20, 12344, 12348,     0,\n     12349, 12352,    20, 12353, 12438,     0, 12439, 12440,    21, 12441,\n     12442,     0, 12443, 12444,    20, 12445, 12447,     0, 12448, 12448,\n        20, 12449, 12538,     0, 12539, 12539,    20, 12540, 12543,     0,\n     12544, 12548,    20, 12549, 12589,     0, 12590, 12592,    20, 12593,\n     12686,     0, 12687, 12703,    20, 12704, 12730,     0, 12731, 12783,\n        20, 12784, 12799,     0, 12800, 13311,    20, 13312, 19893,     0,\n     19894, 19967,    20, 19968, 40908,     0, 40909, 40959,    20, 40960,\n     42124,     0, 42125, 42191,    20, 42192, 42237,     0, 42238, 42239,\n        20, 42240, 42508,     0, 42509, 42511,    20, 42512, 42527,    21,\n     42528, 42537,    20, 42538, 42539,     0, 42540, 42559,    20, 42560,\n     42606,    21, 42607, 42607,     0, 42608, 42611,    21, 42612, 42621,\n         0, 42622, 42622,    20, 42623, 42647,     0, 42648, 42654,    21,\n     42655, 42655,    20, 42656, 42735,    21, 42736, 42737,     0, 42738,\n     42774,    20, 42775, 42783,     0, 42784, 42785,    20, 42786, 42888,\n         0, 42889, 42890,    20, 42891, 42894,     0, 42895, 42895,    20,\n     42896, 42899,     0, 42900, 42911,    20, 42912, 42922,     0, 42923,\n     42999,    20, 43000, 43009,    21, 43010, 43010,    20, 43011, 43013,\n        21, 43014, 43014,    20, 43015, 43018,    21, 43019, 43019,    20,\n     43020, 43042,    21, 43043, 43047,     0, 43048, 43071,    20, 43072,\n     43123,     0, 43124, 43135,    21, 43136, 43137,    20, 43138, 43187,\n        21, 43188, 43204,     0, 43205, 43215,    21, 43216, 43225,     0,\n     43226, 43231,    21, 43232, 43249,    20, 43250, 43255,     0, 43256,\n     43258,    20, 43259, 43259,     0, 43260, 43263,    21, 43264, 43273,\n        20, 43274, 43301,    21, 43302, 43309,     0, 43310, 43311,    20,\n     43312, 43334,    21, 43335, 43347,     0, 43348, 43359,    20, 43360,\n     43388,     0, 43389, 43391,    21, 43392, 43395,    20, 43396, 43442,\n        21, 43443, 43456,     0, 43457, 43470,    20, 43471, 43471,    21,\n     43472, 43481,     0, 43482, 43519,    20, 43520, 43560,    21, 43561,\n     43574,     0, 43575, 43583,    20, 43584, 43586,    21, 43587, 43587,\n        20, 43588, 43595,    21, 43596, 43597,     0, 43598, 43599,    21,\n     43600, 43609,     0, 43610, 43615,    20, 43616, 43638,     0, 43639,\n     43641,    20, 43642, 43642,    21, 43643, 43643,     0, 43644, 43647,\n        20, 43648, 43695,    21, 43696, 43696,    20, 43697, 43697,    21,\n     43698, 43700,    20, 43701, 43702,    21, 43703, 43704,    20, 43705,\n     43709,    21, 43710, 43711,    20, 43712, 43712,    21, 43713, 43713,\n        20, 43714, 43714,     0, 43715, 43738,    20, 43739, 43741,     0,\n     43742, 43743,    20, 43744, 43754,    21, 43755, 43759,     0, 43760,\n     43761,    20, 43762, 43764,    21, 43765, 43766,     0, 43767, 43776,\n        20, 43777, 43782,     0, 43783, 43784,    20, 43785, 43790,     0,\n     43791, 43792,    20, 43793, 43798,     0, 43799, 43807,    20, 43808,\n     43814,     0, 43815, 43815,    20, 43816, 43822,     0, 43823, 43967,\n        20, 43968, 44002,    21, 44003, 44010,     0, 44011, 44011,    21,\n     44012, 44013,     0, 44014, 44015,    21, 44016, 44025,     0, 44026,\n     44031,    20, 44032, 55203,     0, 55204, 55215,    20, 55216, 55238,\n         0, 55239, 55242,    20, 55243, 55291,     0, 55292, 63743,    20,\n     63744, 64109,     0, 64110, 64111,    20, 64112, 64217,     0, 64218,\n     64255,    20, 64256, 64262,     0, 64263, 64274,    20, 64275, 64279,\n         0, 64280, 64284,    20, 64285, 64285,    21, 64286, 64286,    20,\n     64287, 64296,     0, 64297, 64297,    20, 64298, 64310,     0, 64311,\n     64311,    20, 64312, 64316,     0, 64317, 64317,    20, 64318, 64318,\n         0, 64319, 64319,    20, 64320, 64321,     0, 64322, 64322,    20,\n     64323, 64324,     0, 64325, 64325,    20, 64326, 64433,     0, 64434,\n     64466,    20, 64467, 64829,     0, 64830, 64847,    20, 64848, 64911,\n         0, 64912, 64913,    20, 64914, 64967,     0, 64968, 65007,    20,\n     65008, 65019,     0, 65020, 65023,    21, 65024, 65039,     0, 65040,\n     65055,    21, 65056, 65062,     0, 65063, 65074,    21, 65075, 65076,\n         0, 65077, 65100,    21, 65101, 65103,     0, 65104, 65135,    20,\n     65136, 65140,     0, 65141, 65141,    20, 65142, 65276,     0, 65277,\n     65295,    21, 65296, 65305,     0, 65306, 65312,    20, 65313, 65338,\n         0, 65339, 65342,    21, 65343, 65343,     0, 65344, 65344,    20,\n     65345, 65370,     0, 65371, 65381,    20, 65382, 65470,     0, 65471,\n     65473,    20, 65474, 65479,     0, 65480, 65481,    20, 65482, 65487,\n         0, 65488, 65489,    20, 65490, 65495,     0, 65496, 65497,    20,\n     65498, 65500,     0, 65501,Infinity,\n]; \nvar jjlexisEnd2: number[] = [ \n    0,1,1,0,1,1,0,1,1,0,1,1,1,1,1,\n    1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,\n    1,1,0,0,1,0,0,1,1,1,1,1,1,\n]; \nvar jjlexhasArc2: number[] = [ \n    1,1,1,1,0,0,1,1,0,1,1,1,1,1,0,\n    1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,\n    1,1,1,1,0,1,1,1,0,1,1,1,0,\n]; \nvar jjlextable2: DFATable = {\n    pnext: jjlexpnext2,\n    disnext: jjlexdisnext2,\n    checknext: jjlexchecknext2,\n    maxAsicii: 255,\n    classTable: jjlexclassTable2,\n    unicodeClassTable: jjlexunicodeClassTable2,\n    isEnd: jjlexisEnd2,\n    hasArc: jjlexhasArc2\n};\nvar jjlexpnext3: number[] = [ \n         1,     1,\n]; \nvar jjlexdisnext3: number[] = [ \n         1,     0,\n]; \nvar jjlexchecknext3: number[] = [ \n         1,     0,\n]; \nvar jjlexclassTable3: number[] = [ \n         0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n         0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n         0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n         0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n         0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n         0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n         0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n         0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n         0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n         0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n         0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n         0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n         0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n         0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n         0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n         0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n         0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n         0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n         0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n         0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n         0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n         0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n         0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n         0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n         0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n         0,     0,     0,     0,     0,     0,\n]; \nvar jjlexunicodeClassTable3: number[] = [ \n         0,   256,Infinity,\n]; \nvar jjlexisEnd3: number[] = [ \n    0,1,\n]; \nvar jjlexhasArc3: number[] = [ \n    1,1,\n]; \nvar jjlextable3: DFATable = {\n    pnext: jjlexpnext3,\n    disnext: jjlexdisnext3,\n    checknext: jjlexchecknext3,\n    maxAsicii: 255,\n    classTable: jjlexclassTable3,\n    unicodeClassTable: jjlexunicodeClassTable3,\n    isEnd: jjlexisEnd3,\n    hasArc: jjlexhasArc3\n};\n/*\n    dfa tables\n*/\nvar jjdfaTables: DFATable[] = [\n    jjlextable0,\n    jjlextable1,\n    jjlextable2,\n    jjlextable3,\n];\n/*\n    find unicode class\n*/\nfunction jjfindUnicodeClass(uc: number[], c: number){\n    for(var i = 0; i < uc.length; i += 3){\n        if(c >= uc[i + 1] && c <= uc[i + 2]){\n            return uc[i];\n        }\n        else if(c < uc[i + 1]){\n            return -1;\n        }\n    }\n    return -1;\n}\n/*\n    tokens that a lexical dfa state can return\n*/\nvar jjlexTokens0: number[] = [ \n        -1,    -1,    -1,    -1,     1,    -1,    -1,    24,    25,    30,\n        31,    39,    32,    -1,    33,    35,    23,    26,    22,    29,\n        27,    28,    38,     3,    37,     4,     1,    -1,     2,    -1,\n        -1,     1,     1,     1,     1,    36,    -1,    -1,    -1,    -1,\n        -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     2,    -1,\n        -1,    -1,    34,    -1,    -1,    -1,    -1,    -1,    -1,    -1,\n        -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,\n        -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,\n        -1,    -1,    -1,    -1,     6,    -1,    -1,    -1,    -1,    -1,\n        -1,    -1,    11,    -1,    -1,    -1,    -1,    -1,    -1,    -1,\n        -1,    -1,    -1,    -1,    17,    -1,     8,    -1,    -1,    -1,\n        16,    -1,    -1,    15,    -1,    -1,    14,    -1,    -1,    -1,\n        20,    -1,    -1,    -1,     9,     7,    21,    -1,    12,    19,\n        -1,     5,    18,    -1,    -1,    -1,    10,    13,\n]; \nvar jjlexTokens1: number[] = [ \n        -1,    40,    -1,     3,     4,    -1,    40,    40,\n]; \nvar jjlexTokens2: number[] = [ \n        -1,    40,    40,    -1,     3,     4,    -1,    40,    41,    -1,\n        40,    40,    40,    40,    40,    40,    40,    40,    40,    40,\n        40,    40,    40,    40,    40,    40,    40,    42,    -1,    40,\n        40,    40,    -1,    -1,    44,    -1,    -1,    40,    44,    40,\n        40,    40,    43,\n]; \nvar jjlexTokens3: number[] = [ \n        -1,    40,\n]; \n\nvar jjstateCount = 208;\nvar jjtokenCount = 45;\nvar jjactERR = 209;\n/*\n    compressed action table: action = jjpact[jjdisact[STATE-NUM] + TOKEN]\n    when action > 0, shift the token and goto state (action - 1);\n    when action < 0, reduce with rule (1-action);\n    when action = 0, do default action.\n*/\nvar jjpact: number[] = [ \n         9,     7,    15,    16,    17,    18,   202,    10,    11,   116,\n        12,   171,    13,    14,   193,   207,   123,   112,   201,   193,\n       204,   135,   -57,   117,   198,   -57,   132,   133,   170,   134,\n       123,     5,   169,   167,    98,   135,   168,   -57,   111,   197,\n       132,   133,   -42,   134,   179,   180,   178,   -58,   160,   -95,\n       -58,   188,   189,   190,   191,   192,   188,   189,   190,   191,\n       192,   -42,   -58,   109,   112,    72,   107,   174,   -95,  -109,\n       -95,  -109,    72,    69,    27,   112,    27,   112,   146,    80,\n       104,    74,    78,    75,    66,   111,    56,    50,    51,    55,\n        22,   195,   186,   160,   184,   183,   111,   145,   111,   106,\n       173,    67,    71,   172,   164,   163,   129,   123,   150,    71,\n       149,   148,   147,   143,   -42,   139,   138,   137,   106,   129,\n       106,   126,  -102,   124,   120,    37,   119,   118,   113,   102,\n       101,    96,    92,    90,    89,    83,    82,    77,    73,    68,\n        61,    59,    58,    54,    52,    47,    46,    30,    41,    36,\n        34,    30,    30,    30,    30,    28,    22,     4,\n]; \n/*\n    displacement of action table.\n*/\nvar jjdisact: number[] = [ \n       -45,   157,    -5,   -45,   155,   -45,   -45,    75,   152,   151,\n       150,   149,   148,   148,   126,   -45,   -45,   -45,    89,   -45,\n       -45,   -45,   125,    73,   -45,   -45,   -45,   -45,   -45,   -45,\n       -45,   -45,   144,   -45,   123,   144,   -45,   -45,    54,   141,\n       142,   -45,    85,   -45,   -45,   141,   119,   100,   -45,   -45,\n       -45,   -45,    62,   -45,   -45,   113,    69,   116,   -45,   -45,\n       -45,    46,   -45,   126,    78,   -45,   135,   133,   -45,   -45,\n       -45,   -45,   -45,   -45,   -45,   120,   109,   -45,   -45,   -45,\n       109,   -45,   -45,   -45,   -45,   -45,   115,    33,   -45,   129,\n       103,    79,    62,   -45,    34,    62,   -45,   102,    15,   -16,\n       -45,   104,   104,    91,   -45,   -45,   -45,   -45,   -45,   -45,\n       122,   -45,   121,   -45,   -45,   -45,   120,   100,    86,    98,\n       -45,   -45,   -45,    95,   115,   -45,    93,   -45,    87,    91,\n       -45,   111,   -45,   110,   108,   -45,   -45,   -45,   -45,   -45,\n        81,    86,    73,   -45,   -45,     9,   -45,   -45,   -45,    -5,\n       -45,   102,   -45,    67,    25,   -45,     9,    64,   -45,    68,\n       -45,    39,   -45,   -45,   -45,    15,   -45,    59,    94,    70,\n       -45,    91,    90,   -45,   -45,     0,   -45,   -45,   -45,   -45,\n        66,    46,    17,    22,   -45,   -45,   -45,   -45,   -45,   -45,\n       -45,   -45,   -45,   -45,   -45,   -10,   -45,   -19,   -45,    16,\n       -45,   -45,   -45,   -45,    11,   -45,   -45,   -45,\n]; \n/*\n    used to check if a position in jjpact is out of bouds.\n    if jjcheckact[jjdisact[STATE-NUM] + TOKEN] = STATE-NUM, this position is not out of bounds.\n*/\nvar jjcheckact: number[] = [ \n         2,     2,     2,     2,     2,     2,   197,     2,     2,    99,\n         2,   156,     2,     2,   204,   204,   149,    98,   195,   199,\n       199,   149,   175,    99,   183,   175,   149,   149,   156,   149,\n       145,     2,   156,   156,    87,   145,   156,   175,    98,   182,\n       145,   145,    98,   145,   165,   165,   165,   154,   181,    87,\n       154,   204,   204,   204,   204,   204,   199,   199,   199,   199,\n       199,    94,   154,    95,    95,    92,    92,   161,    87,    94,\n        87,    94,    56,    56,    23,    23,     7,     7,   161,    64,\n        91,    61,    64,    61,    52,    95,    42,    38,    38,    42,\n        18,   180,   172,   171,   169,   168,    23,   167,     7,    91,\n       159,    52,    92,   157,   153,   151,   142,   141,   140,    56,\n       134,   133,   131,   129,   128,   126,   124,   123,   119,   118,\n       117,   116,   112,   110,   103,    18,   102,   101,    97,    90,\n        89,    86,    80,    76,    75,    67,    66,    63,    57,    55,\n        47,    46,    45,    40,    39,    35,    34,    32,    22,    14,\n        13,    12,    11,    10,     9,     8,     4,     1,\n]; \n/*\n    default action table. action = jjdefred[STATE-NUM],\n    where action is the number of the rule to reduce with.\n*/\nvar jjdefred: number[] = [ \n         4,    -1,    -1,     0,    -1,     3,     5,    -1,    -1,    -1,\n        -1,    -1,    -1,    -1,    -1,    19,    20,    21,    -1,    80,\n        81,    82,    29,     7,    23,    24,    25,    27,     9,   112,\n        10,    11,    -1,    13,    14,    -1,     1,    79,    -1,    -1,\n        -1,    22,    -1,   116,    12,    -1,    -1,    17,    88,    84,\n        85,    33,    -1,    30,     8,    -1,    -1,    -1,    16,     2,\n        18,    -1,    87,    91,    38,    28,    -1,    -1,   113,   115,\n       117,   118,    15,    83,    88,    97,    -1,     6,    32,    34,\n        -1,    31,    26,   114,   116,    86,   107,    99,    95,    -1,\n        -1,    54,    -1,    89,    43,    -1,    96,   100,    43,    -1,\n        93,    -1,    -1,    -1,    52,    54,   119,   109,   110,   111,\n        -1,   106,    98,   103,   104,    90,    -1,    54,    40,    54,\n        53,   120,   125,    -1,    -1,    92,    -1,    36,    43,    -1,\n        46,    -1,    48,    -1,    -1,    51,   105,   102,    35,    39,\n        -1,   126,    40,    60,    71,   126,    47,    49,    50,   126,\n        44,    -1,    37,    55,    60,    59,    -1,    73,    76,    77,\n        45,    -1,   121,    60,    58,    65,    54,    72,    -1,    -1,\n        70,    -1,    -1,    42,   122,    60,    61,    62,    63,    64,\n        -1,    74,    -1,    -1,    75,    78,   127,   129,   130,   131,\n       132,   133,   134,   128,    66,    -1,    68,    -1,   135,    -1,\n        67,    69,   128,   123,    -1,   124,   136,   137,\n]; \n/*\n    compressed goto table: goto = jjpgoto[jjdisgoto[STATE-NUM] + NON_TERMINAL]\n*/\nvar jjpgoto: number[] = [ \n         5,   186,   186,   165,     7,   107,   140,   141,   161,   130,\n       160,   114,   140,   141,   102,   104,   143,    98,    96,    69,\n        39,    23,    24,   164,   156,   176,   164,   156,   109,    69,\n        93,    94,    75,    48,    41,    22,   205,   202,   195,   157,\n       158,   193,   184,   181,   113,   139,   140,   141,   135,   135,\n       127,    99,   151,   151,    86,    87,    78,    32,    80,    37,\n        20,    31,    30,    28,    25,   152,   150,   129,   104,   143,\n       151,   126,   104,   143,   124,    90,    25,    85,    63,    64,\n        59,    52,    44,    38,    34,    18,    19,    20,     1,   207,\n         2,   204,   199,   198,   180,   143,   175,   155,   156,   174,\n       153,   154,   155,   156,   121,   120,   143,    92,    84,    83,\n        61,    62,    63,    56,    47,    43,    42,\n]; \n/*\n    displacement of the goto table\n*/\nvar jjdisgoto: number[] = [ \n        87,   -72,    -4,   -72,    48,   -72,    30,    12,   -72,     8,\n         7,     6,     2,   -72,    78,   -72,   -72,   -72,    21,   -72,\n       -72,    43,     8,    24,   -72,   -72,   -72,   105,   -72,    59,\n       -72,   -72,    27,   -72,   -72,   -72,   112,   -72,    -8,   -72,\n        68,   -72,   -72,    55,   -72,   -72,   -72,    73,    68,   -72,\n       -72,    65,   -72,   -72,   -72,   -72,   -40,   -72,   -72,   -72,\n       -72,   -72,   -72,   -13,    41,   -72,   -72,   -72,    52,   -72,\n       -72,    48,   -72,   -72,    34,     7,   -72,   -72,   -72,    59,\n       -72,   -72,   -72,   -72,    49,   -72,   -23,   -32,   -72,     5,\n       -72,   -10,   -30,   -72,   -14,   -24,   -72,   -72,    -8,   -72,\n       -72,   -72,   -72,   -72,   -72,    80,    43,   -72,   -72,   -72,\n       -72,   -72,    23,   -72,   -72,   -72,   -72,    47,    32,    43,\n       -72,   -72,   -72,   -72,   -72,   -72,   -72,   -72,    26,   -72,\n       -72,   -72,   -72,   -72,   -72,   -72,   -72,   -72,   -72,   -72,\n       -72,     4,    47,    73,   -72,   -13,   -72,   -72,   -72,   -14,\n       -72,   -72,   -72,   -72,    -3,   -72,   -29,   -72,   -72,   -72,\n       -72,   -72,    36,    68,   -72,    -6,    69,    10,   -72,   -72,\n       -72,     6,   -72,   -72,   -23,    -6,   -72,   -72,   -72,   -72,\n       -72,     4,   -72,   -72,   -72,   -72,   -72,   -72,   -72,   -72,\n       -72,   -72,    24,    25,   -72,   -72,   -72,   -72,   -33,   -66,\n       -72,   -72,    24,   -29,   -67,   -72,    18,   -72,\n]; \n/*\n    length of each rule: rule length = jjruleLen[RULE-NUM]\n*/\nvar jjruleLen: number[] = [ \n         2,     0,     6,     2,     0,     0,     6,     2,     4,     2,\n         2,     2,     3,     2,     2,     4,     3,     0,     1,     1,\n         1,     1,     2,     1,     1,     1,     4,     0,     3,     0,\n         1,     3,     2,     0,     0,     6,     5,     7,     0,     2,\n         0,     0,     4,     0,     2,     3,     1,     2,     1,     2,\n         2,     1,     1,     2,     0,     2,     3,     1,     2,     1,\n         0,     3,     1,     1,     1,     0,     3,     4,     3,     4,\n         1,     1,     0,     1,     0,     3,     1,     1,     3,     2,\n         1,     1,     0,     5,     1,     1,     3,     1,     0,     4,\n         4,     0,     3,     1,     1,     1,     2,     0,     2,     0,\n         1,     0,     4,     2,     2,     3,     1,     0,     1,     2,\n         2,     2,     0,     0,     5,     2,     0,     1,     0,     0,\n         5,     0,     0,     0,     7,     1,     0,     2,     0,     1,\n         1,     1,     1,     1,     0,     0,     0,     6,\n]; \n/*\n    index of the LHS of each rule\n*/\nvar jjlhs: number[] = [ \n         0,     2,     1,     3,     3,     5,     4,     4,     4,     4,\n         4,     4,     4,     4,     4,     6,     6,     7,     7,     8,\n         8,     8,     9,     9,    10,    10,    11,    11,    12,    12,\n        13,    13,    14,    14,    16,    15,    15,    15,    17,    18,\n        18,    20,    19,    21,    19,    22,    22,    23,    23,    23,\n        23,    23,    24,    24,    26,    25,    27,    27,    28,    28,\n        30,    29,    31,    31,    31,    31,    32,    32,    32,    32,\n        32,    33,    33,    34,    34,    35,    35,    36,    36,    37,\n        37,    38,    40,    39,    41,    41,    42,    42,    44,    43,\n        45,    45,    46,    46,    47,    47,    48,    48,    49,    49,\n        50,    51,    50,    50,    50,    52,    52,    53,    53,    53,\n        54,    54,    56,    57,    55,    58,    58,    59,    60,    61,\n        59,    63,    64,    65,    62,    66,    66,    67,    67,    68,\n        68,    68,    68,    68,    69,    70,    71,    68,\n]; \n/*\n    token names\n*/\nvar jjtokenNames: string[] = [ \n                   \"EOF\",              \"NAME\",            \"STRING\",\n            \"OPEN_BLOCK\",       \"CLOSE_BLOCK\",           \"OPT_DIR\",\n               \"LEX_DIR\",         \"TOKEN_DIR\",          \"LEFT_DIR\",\n             \"RIGHT_DIR\",      \"NONASSOC_DIR\",           \"USE_DIR\",\n            \"HEADER_DIR\",     \"EXTRA_ARG_DIR\",             \"EMPTY\",\n              \"TYPE_DIR\",          \"PREC_DIR\",          \"INIT_DIR\",\n            \"OUTPUT_DIR\",        \"IMPORT_DIR\",         \"LEAST_DIR\",\n                \"ALWAYS\",                \"GT\",                \"LT\",\n                   \"BRA\",               \"KET\",               \"EQU\",\n                  \"CBRA\",              \"CKET\",          \"QUESTION\",\n                  \"STAR\",              \"PLUS\",              \"DASH\",\n                 \"COLON\",             \"ARROW\",               \"EOL\",\n             \"SEPERATOR\",                \"OR\",             \"WEDGE\",\n                 \"COMMA\",          \"ANY_CODE\",           \"LHS_REF\",\n             \"TOKEN_REF\",           \"MATCHED\",        \"EMIT_TOKEN\",\n    \n]; \n/*\n    token alias\n*/\nvar jjtokenAlias: string[] = [ \n                    null,                null,                null,\n                     \"{\",                 \"}\",           \"%option\",\n                  \"%lex\",            \"%token\",             \"%left\",\n                \"%right\",         \"%nonassoc\",              \"%use\",\n               \"%header\",        \"%extra_arg\",            \"%empty\",\n                 \"%type\",             \"%prec\",             \"%init\",\n               \"%output\",           \"%import\",            \"%least\",\n               \"%always\",                 \">\",                 \"<\",\n                     \"(\",                 \")\",                 \"=\",\n                     \"[\",                 \"]\",                 \"?\",\n                     \"*\",                 \"+\",                 \"-\",\n                     \":\",                \"=>\",                 \";\",\n                    \"%%\",                 \"|\",                 \"^\",\n                     \",\",                null,                \"$$\",\n                \"$token\",          \"$matched\",                null,\n    \n]; \n\n\nfunction tokenToString(tk: number){\n    return jjtokenAlias[tk] === null ? `<${jjtokenNames[tk]}>` : `\"${jjtokenAlias[tk]}\"`;\n}\nclass Token {\n    constructor(\n        public id: number,\n        public val: string,\n        public startLine: number,\n        public startColumn: number,\n        public endLine: number,\n        public endColumn: number\n    ){}\n    clone(){\n        return new Token(\n            this.id,\n            this.val,\n            this.startLine,\n            this.startColumn,\n            this.endLine,\n            this.endColumn\n        );\n    }\n    toString(){\n        return (jjtokenAlias[this.id] === null ? \n            `<${jjtokenNames[this.id]}>` :\n            `\"${jjtokenAlias[this.id]}\"`) + `(\"${this.val}\")`;\n    }\n}\ninterface Parser{\n    init(ctx1: Context, b: GBuilder);\n    accept(s: string);\n    setLineTerminator(lt: LineTerm);\n    getLineTerminator(): LineTerm;\n    end();\n    halt();\n    on(ent: string, cb: (a1?, a2?, a3?) => any);\n    enableBlocks();\n    disableBlocks();\n}\nenum LineTerm{\n    NONE = 1,\n    AUTO,\n    CR,\n    LF,\n    CRLF\n};\n\nfunction createParser(): Parser {\n    // members for lexer\n    var jjlexState: number[];\n    var jjstate: number;\n    var jjmatched: string;\n    var jjtoken: Token;\n    \n    var jjmarker: { state: number, line: number, column: number } = { state: -1, line: 0, column: 0 };\n    var jjbackupCount: number;\n\n    var jjline: number;\n    var jjcolumn: number;\n    var jjtline: number;\n    var jjtcolumn: number;\n\n    // members for parser\n    var jjlrState: number[];\n    var jjsematicS: JNode[];\n    var jjsematicVal: JNode;\n    var jjtokenQueue: Token[];\n\n    var jjstop: boolean;\n    var jjenableBlock: boolean;\n\n    var jjlineTerm: LineTerm;\n    var jjlastCR: boolean\n\n    var jjhandlers: {[s: string]: ((a1?, a2?, a3?) => any)[]} = {};\n\n    // extra members, defined by %extra_arg\n    \n    let gb: GBuilder;\n    let ctx: Context;\n    let assoc: Assoc;\n    let lexact: LexAction;\n    let ruleLhs: JNode;\n    let least: boolean;\n    let always: boolean;\n\n\n    return {\n        init,\n        on,\n        setLineTerminator,\n        getLineTerminator: () => jjlineTerm,\n        accept,\n        end,\n        halt,\n        enableBlocks,\n        disableBlocks\n    };\n    function init(ctx1: Context, b: GBuilder){\n        jjlexState = [ 0 ];// DEFAULT\n        jjstate = 0;\n        jjmatched = '';\n        jjtoken = new Token(-1, null, 0, 0, 0, 0);\n        jjmarker.state = -1;\n        jjbackupCount = 0;\n        jjline = jjtline = 0;\n        jjcolumn = jjtcolumn = 0;\n        \n        jjlrState = [ 0 ];\n        jjsematicS = [];\n        jjsematicVal = null;\n        jjtokenQueue = [];\n\n        jjstop = false;\n        jjenableBlock = true;\n        jjlineTerm = LineTerm.AUTO;\n        jjlastCR = false;\n\n        \n    gb = b;\n    ctx = ctx1;\n\n\n        jjtryReduce();\n    }\n    /**\n     *  set \n     */\n    function jjsetImg(s: string){\n        jjmatched = s;\n        jjtline = jjline;\n        jjtcolumn = jjcolumn;\n    }\n    function jjprepareToken(tid: number){\n        jjtoken.id = tid;\n        jjtoken.val = jjmatched;\n        jjtoken.startLine = jjtline;\n        jjtoken.startColumn = jjtcolumn;\n        jjtoken.endLine = jjline;\n        jjtoken.endColumn = jjcolumn - 1;\n\n        jjtokenQueue.push(jjtoken);\n\n        jjmatched = '';\n        jjtline = jjline;\n        jjtcolumn = jjcolumn;\n    }\n    function jjemit(name: string, a1?, a2?, a3?){\n        var cbs = jjhandlers[name];\n        if(cbs){\n            for(var i = 0; i < cbs.length; i++){\n                cbs[i](a1, a2, a3);\n            }\n        }\n    }\n    function on(name: string, cb: (a1?, a2?, a3?) => any){\n        jjhandlers[name] || (jjhandlers[name] = []);\n        jjhandlers[name].push(cb);\n    }\n    function jjdoLexAction0(jjstaten: number){\n        var jjtk = jjlexTokens0[jjstaten];\n        jjtk !== -1 && jjprepareToken(jjtk);\n        switch(jjstaten){\n            case 1:\n                jjsetImg(\"\"); \n                break;\n            case 3:\n                jjsetImg(\"\"); \n                break;\n            case 4:\n                if(jjenableBlock){ jjsematicVal = nodeFromToken(jjtoken); }\n                break;\n            case 23:\n                if(jjenableBlock){ jjsematicVal = nodeFromTrivalToken(jjtoken); }\n                break;\n            case 25:\n                if(jjenableBlock){ jjsematicVal = nodeFromTrivalToken(jjtoken); }\n                break;\n            case 26:\n                if(jjenableBlock){ jjsematicVal = nodeFromToken(jjtoken); }\n                break;\n            case 28:\n                if(jjenableBlock){ jjsematicVal = nodeFromToken(jjtoken); jjsematicVal.val = unescape(jjsematicVal.val.substr(1, jjsematicVal.val.length - 2)); }\n                break;\n            case 30:\n                jjsetImg(\"\"); \n                break;\n            case 31:\n                if(jjenableBlock){ jjsematicVal = nodeFromToken(jjtoken); }\n                break;\n            case 32:\n                if(jjenableBlock){ jjsematicVal = nodeFromToken(jjtoken); }\n                break;\n            case 33:\n                if(jjenableBlock){ jjsematicVal = nodeFromToken(jjtoken); }\n                break;\n            case 34:\n                if(jjenableBlock){ jjsematicVal = nodeFromToken(jjtoken); }\n                break;\n            case 48:\n                if(jjenableBlock){ jjsematicVal = nodeFromToken(jjtoken); jjsematicVal.val = unescape(jjsematicVal.val.substr(1, jjsematicVal.val.length - 2)); }\n                break;\n            case 51:\n                jjsetImg(\"\"); \n                break;\n            case 96:\n                jjsetImg(\"\"); \n                break;\n            default:;\n        }\n    }\n    function jjdoLexAction1(jjstaten: number){\n        var jjtk = jjlexTokens1[jjstaten];\n        jjtk !== -1 && jjprepareToken(jjtk);\n        switch(jjstaten){\n            case 1:\n                if(jjenableBlock){ jjsematicVal = newNode(jjtoken.val); }\n                break;\n            case 3:\n                if(jjenableBlock){ jjsematicVal = nodeFromTrivalToken(jjtoken); }\n                break;\n            case 4:\n                if(jjenableBlock){ jjsematicVal = nodeFromTrivalToken(jjtoken); }\n                break;\n            case 6:\n                if(jjenableBlock){ jjsematicVal = newNode(jjtoken.val); }\n                break;\n            case 7:\n                if(jjenableBlock){ jjsematicVal = newNode(jjtoken.val.charAt(1)); }\n                break;\n            default:;\n        }\n    }\n    function jjdoLexAction2(jjstaten: number){\n        var jjtk = jjlexTokens2[jjstaten];\n        jjtk !== -1 && jjprepareToken(jjtk);\n        switch(jjstaten){\n            case 1:\n                if(jjenableBlock){ jjsematicVal = nodeFromToken(jjtoken); }\n                break;\n            case 2:\n                if(jjenableBlock){ jjsematicVal = nodeFromToken(jjtoken); }\n                break;\n            case 4:\n                if(jjenableBlock){ jjsematicVal = nodeFromTrivalToken(jjtoken); }\n                break;\n            case 5:\n                if(jjenableBlock){ jjsematicVal = nodeFromTrivalToken(jjtoken); }\n                break;\n            case 7:\n                if(jjenableBlock){ jjsematicVal = nodeFromToken(jjtoken); }\n                break;\n            case 10:\n                if(jjenableBlock){ jjsematicVal = nodeFromToken(jjtoken); }\n                break;\n            case 11:\n                if(jjenableBlock){ jjsematicVal = nodeFromToken(jjtoken); }\n                break;\n            case 12:\n                if(jjenableBlock){ jjsematicVal = nodeFromToken(jjtoken); }\n                break;\n            case 13:\n                if(jjenableBlock){ jjsematicVal = nodeFromToken(jjtoken); }\n                break;\n            case 14:\n                if(jjenableBlock){ jjsematicVal = nodeFromToken(jjtoken); jjsematicVal.val = jjsematicVal.val.charAt(1); }\n                break;\n            case 15:\n                if(jjenableBlock){ jjsematicVal = nodeFromToken(jjtoken); }\n                break;\n            case 16:\n                if(jjenableBlock){ jjsematicVal = nodeFromToken(jjtoken); }\n                break;\n            case 17:\n                if(jjenableBlock){ jjsematicVal = nodeFromToken(jjtoken); }\n                break;\n            case 18:\n                if(jjenableBlock){ jjsematicVal = nodeFromToken(jjtoken); }\n                break;\n            case 19:\n                if(jjenableBlock){ jjsematicVal = nodeFromToken(jjtoken); }\n                break;\n            case 20:\n                if(jjenableBlock){ jjsematicVal = nodeFromToken(jjtoken); }\n                break;\n            case 21:\n                if(jjenableBlock){ jjsematicVal = nodeFromToken(jjtoken); }\n                break;\n            case 22:\n                if(jjenableBlock){ jjsematicVal = nodeFromToken(jjtoken); }\n                break;\n            case 23:\n                if(jjenableBlock){ jjsematicVal = nodeFromToken(jjtoken); }\n                break;\n            case 24:\n                if(jjenableBlock){ jjsematicVal = nodeFromToken(jjtoken); }\n                break;\n            case 25:\n                if(jjenableBlock){ jjsematicVal = nodeFromToken(jjtoken); }\n                break;\n            case 26:\n                if(jjenableBlock){ jjsematicVal = nodeFromToken(jjtoken); }\n                break;\n            case 29:\n                if(jjenableBlock){ jjsematicVal = nodeFromToken(jjtoken); }\n                break;\n            case 30:\n                if(jjenableBlock){ jjsematicVal = nodeFromToken(jjtoken); }\n                break;\n            case 31:\n                if(jjenableBlock){ jjsematicVal = nodeFromToken(jjtoken); }\n                break;\n            case 34:\n                if(jjenableBlock){ jjsematicVal = nodeFromToken(jjtoken); jjsematicVal.val = jjsematicVal.val.substr(6, jjsematicVal.val.length - 7); }\n                break;\n            case 37:\n                if(jjenableBlock){ jjsematicVal = nodeFromToken(jjtoken); }\n                break;\n            case 38:\n                if(jjenableBlock){ jjsematicVal = nodeFromToken(jjtoken); jjsematicVal.val = jjsematicVal.val.substr(6, jjsematicVal.val.length - 7); }\n                break;\n            case 39:\n                if(jjenableBlock){ jjsematicVal = nodeFromToken(jjtoken); }\n                break;\n            case 40:\n                if(jjenableBlock){ jjsematicVal = nodeFromToken(jjtoken); }\n                break;\n            case 41:\n                if(jjenableBlock){ jjsematicVal = nodeFromToken(jjtoken); }\n                break;\n            default:;\n        }\n    }\n    function jjdoLexAction3(jjstaten: number){\n        var jjtk = jjlexTokens3[jjstaten];\n        jjtk !== -1 && jjprepareToken(jjtk);\n        switch(jjstaten){\n            case 1:\n                if(jjenableBlock){ jjsematicVal = nodeFromToken(jjtoken); }\n                break;\n            default:;\n        }\n    }\n    /**\n     *  do a lexical action\n     *  @api private\n     *  @internal\n     */\n    function jjdoLexAction(lexstate: number, state: number){\n        switch(lexstate){\n            case 0:\n                jjdoLexAction0(state);\n                break;\n            case 1:\n                jjdoLexAction1(state);\n                break;\n            case 2:\n                jjdoLexAction2(state);\n                break;\n            case 3:\n                jjdoLexAction3(state);\n                break;\n            default:;\n        }\n        jjtokenQueue.length > 0 && jjacceptToken(null);\n    }\n    function jjrollback(): string{\n        var ret = jjmatched.substr(jjmatched.length - jjbackupCount, jjbackupCount);\n        jjmatched = jjmatched.substr(0, jjmatched.length - jjbackupCount);\n        jjbackupCount = 0;\n        jjline = jjmarker.line;\n        jjcolumn = jjmarker.column;\n        jjstate = jjmarker.state;\n        jjmarker.state = -1;\n        return ret;\n    }\n    function jjmark(){\n        jjmarker.state = jjstate;\n        jjmarker.line = jjline;\n        jjmarker.column = jjcolumn;\n        jjbackupCount = 0;\n    }\n    function jjconsume(c: number){\n        // c === jjeol ? (jjline++, jjcolumn = 0) : (jjcolumn += c > 0xff ? 2 : 1);\n        switch(jjlineTerm){\n            case LineTerm.NONE:\n                jjcolumn += c > 0xff ? 2 : 1;\n                break;\n            case LineTerm.CR:\n                c === jjcr ? (jjline++, jjcolumn = 0) : (jjcolumn += c > 0xff ? 2 : 1);\n                break;\n            case LineTerm.LF:\n                c === jjlf ? (jjline++, jjcolumn = 0) : (jjcolumn += c > 0xff ? 2 : 1);\n                break;\n            case LineTerm.CRLF:\n                if(jjlastCR){\n                    if(c === jjlf){\n                        jjline++, jjcolumn = 0;\n                        jjlastCR = false;\n                    }\n                    else {\n                        jjcolumn += c > 0xff ? 2 : 1;\n                        jjlastCR = c === jjcr;\n                    }\n                }\n                else {\n                    jjcolumn += c > 0xff ? 2 : 1;\n                    jjlastCR = c === jjcr;\n                }\n                break;\n            case LineTerm.AUTO:\n                if(jjlastCR){\n                    if(c === jjlf){\n                        jjline++, jjcolumn = 0;\n                        jjlastCR = false;\n                        jjlineTerm = LineTerm.CRLF;\n                    }\n                    else {\n                        jjline++, jjcolumn = 0;\n                        jjlineTerm = LineTerm.CR;\n                        c === jjcr ? (jjline++, jjcolumn = 0) : (jjcolumn += c > 0xff ? 2 : 1);\n                    }\n                }\n                else if(c === jjlf){\n                    jjline++, jjcolumn = 0;\n                    jjlineTerm = LineTerm.LF;\n                }\n                else {\n                    jjcolumn += c > 0xff ? 2 : 1;\n                    jjlastCR = c === jjcr;\n                }\n                break;\n        }\n        jjmatched += String.fromCharCode(c);\n        jjmarker.state !== -1 && (jjbackupCount++);\n        return true;\n    }\n    /**\n     *  accept a character\n     *  @return - true if the character is consumed, false if not consumed\n     *  @api private\n     *  @internal\n     */\n    function jjacceptChar(ccode: number){\n        var lexstate = jjlexState[jjlexState.length - 1];\n        var ltable = jjdfaTables[lexstate];\n        var isEnd = ltable.isEnd[jjstate] === 1;\n        var hasArc = ltable.hasArc[jjstate] === 1;\n        // get the class of the given character\n        var cl = ccode < ltable.maxAsicii ? ltable.classTable[ccode] : jjfindUnicodeClass(ltable.unicodeClassTable, ccode);\n        // find the next state to go\n        var nstate = -1;\n        if(cl !== -1){\n            var ind = ltable.disnext[jjstate] + cl;\n            if(ind >= 0 && ind < ltable.pnext.length && ltable.checknext[ind] === jjstate){\n                nstate = ltable.pnext[ind];\n            }\n        }\n        if(isEnd){\n            // if current state is a terminate state, be careful\n            if(hasArc){\n                if(nstate === -1){\n                    // nowhere to go, stay where we are\n                    jjdoLexAction(lexstate, jjstate);\n                    // recover\n                    jjmarker.state = -1;\n                    jjbackupCount = 0;\n                    jjstate = 0;                    \n                    // character not consumed\n                    return false;\n                }\n                else {\n                    // now we can either go to that new state, or stay where we are\n                    // it is prefered to move forward, but that could lead to errors,\n                    // so we need to memorize this state before move on, in case if \n                    // an error occurs later, we could just return to this state.\n                    jjmark();\n                    jjstate = nstate;\n                    return jjconsume(ccode);\n                }\n            }\n            else {\n                // current state doesn't lead to any state, just stay here.\n                jjdoLexAction(lexstate, jjstate);\n                // recover\n                jjmarker.state = -1;\n                jjbackupCount = 0;\n                jjstate = 0;\n                // character not consumed\n                return false;\n            }\n        }\n        else {\n            if(nstate === -1){\n                // nowhere to go at current state, error may have occured.\n                // check marker to verify that\n                if(jjmarker.state !== -1){\n                    // we have a previously marked state, which is a terminate state.\n                    var s = jjrollback();\n                    jjdoLexAction(lexstate, jjstate);\n                    jjstate = 0;\n                    accept(s);\n                    // character not consumed\n                    return false;\n                }\n                else {\n                    // error occurs\n                    jjemit('lexicalerror', String.fromCharCode(ccode), jjline, jjcolumn);\n                    // force consume\n                    return true;\n                }\n            }\n            else {\n                jjstate = nstate;\n                // character consumed\n                return jjconsume(ccode);\n            }\n        }\n    }\n    function jjacceptEOF(){\n        if(jjstate === 0){\n            // recover\n            jjprepareToken(0);\n            jjacceptToken(null);\n            return true;\n        }\n        else {\n            var lexstate = jjlexState[jjlexState.length - 1];\n            var ltable = jjdfaTables[lexstate];\n            var isEnd = ltable.isEnd[jjstate];\n            if(isEnd){\n                jjdoLexAction(lexstate, jjstate);\n                jjstate = 0;\n                jjmarker.state = -1;\n                return false;\n            }\n            else if(jjmarker.state !== -1){\n                var s = jjrollback();\n                jjdoLexAction(lexstate, jjstate);\n                jjstate = 0;\n                accept(s);\n                return false;\n            }\n            else {\n                jjemit('lexicalerror', '', jjline, jjcolumn);\n                return true;\n            }\n        }\n    }\n    function setLineTerminator(lt: LineTerm){\n        jjlineTerm = lt;\n    }\n    function enableBlocks(){\n        jjenableBlock = true;\n    }\n    function disableBlocks(){\n        jjenableBlock = false;\n    }\n    /**\n     *  input a string\n     *  @api public\n     */\n    function accept(s: string){\n        for(var i = 0; i < s.length && !jjstop;){\n            jjacceptChar(s.charCodeAt(i)) && i++;\n        }\n    }\n    /**\n     *  tell the compiler that end of file is reached\n     *  @api public\n     */\n    function end(){\n        while(!jjstop && !jjacceptEOF());\n        jjstop = true;\n    }\n    function halt(){\n        jjstop = true;\n    }\n    function jjdoReduction(jjrulenum: number){\n        var jjnt = jjlhs[jjrulenum];\n        var jjsp = jjsematicS.length;\n        var jjtop = jjsematicS[jjsp - jjruleLen[jjrulenum]] || null;\n        switch(jjrulenum){\n            case 1:\n                /* 1: @0 => */\n                jjlexState.push(3); \n                break;\n            case 5:\n                /* 5: @1 => */\n                if(jjenableBlock){ gb.lexBuilder.prepareLex(); } \n                break;\n            case 7:\n                /* 7: option => associativeDir assocTokens */\n                if(jjenableBlock){ gb.incPr(); } \n                break;\n            case 9:\n                /* 9: option => \"%header\" block */\n                var b = jjsematicS[jjsp - 1];\n                if(jjenableBlock){ gb.setHeader(b); } \n                break;\n            case 10:\n                /* 10: option => \"%extra_arg\" block */\n                var b = jjsematicS[jjsp - 1];\n                if(jjenableBlock){ gb.setExtraArg(b); } \n                break;\n            case 11:\n                /* 11: option => \"%type\" block */\n                var ty = jjsematicS[jjsp - 1];\n                if(jjenableBlock){ gb.setType(ty); } \n                break;\n            case 12:\n                /* 12: option => \"%init\" block block */\n                var args = jjsematicS[jjsp - 2];\n                var b = jjsematicS[jjsp - 1];\n                if(jjenableBlock){ gb.setInit(args, b); } \n                break;\n            case 13:\n                /* 13: option => \"%output\" <STRING> */\n                var op = jjsematicS[jjsp - 1];\n                if(jjenableBlock){ gb.setOutput(op); } \n                break;\n            case 15:\n                /* 15: tokenDefs => tokenDefs \"<\" <NAME> \">\" */\n                var t = jjsematicS[jjsp - 2];\n                if(jjenableBlock){ gb.defToken(t, null); } \n                break;\n            case 16:\n                /* 16: tokenDefs => \"<\" <NAME> \">\" */\n                var t = jjsematicS[jjsp - 2];\n                if(jjenableBlock){ gb.defToken(t, null); } \n                break;\n            case 18:\n                /* 18: epilogue => <ANY_CODE> */\n                var ep = jjsematicS[jjsp - 1];\n                if(jjenableBlock){ gb.setEpilogue(ep); } \n                break;\n            case 19:\n                /* 19: associativeDir => \"%left\" */\n                if(jjenableBlock){ assoc = Assoc.LEFT; } \n                break;\n            case 20:\n                /* 20: associativeDir => \"%right\" */\n                if(jjenableBlock){ assoc = Assoc.RIGHT; } \n                break;\n            case 21:\n                /* 21: associativeDir => \"%nonassoc\" */\n                if(jjenableBlock){ assoc = Assoc.NON; } \n                break;\n            case 24:\n                /* 24: assocToken => tokenRef */\n                var t = jjsematicS[jjsp - 1];\n                if(jjenableBlock){ gb.defineTokenPrec(t, assoc, t.ext); } \n                break;\n            case 25:\n                /* 25: assocToken => <NAME> */\n                var t = jjsematicS[jjsp - 1];\n                if(jjenableBlock){ gb.defineTokenPrec(t, assoc, TokenRefType.NAME); } \n                break;\n            case 26:\n                /* 26: optionBody => optionBody <NAME> \"=\" <STRING> */\n                var name = jjsematicS[jjsp - 3];\n                var val = jjsematicS[jjsp - 1];\n                if(jjenableBlock){ gb.setOpt(name, val); } \n                break;\n            case 29:\n                /* 29: states_ => */\n                if(jjenableBlock){ gb.lexBuilder.selectState('DEFAULT'); } \n                break;\n            case 30:\n                /* 30: states => <NAME> */\n                var s = jjsematicS[jjsp - 1];\n                if(jjenableBlock){ gb.lexBuilder.selectState(s.val); } \n                break;\n            case 31:\n                /* 31: states => states \",\" <NAME> */\n                var s = jjsematicS[jjsp - 1];\n                if(jjenableBlock){ gb.lexBuilder.selectState(s.val); } \n                break;\n            case 34:\n                /* 34: @2 => */\n                var v = jjsematicS[jjsp - 1];\n                if(jjenableBlock){ gb.lexBuilder.prepareVar(v); } \n                break;\n            case 35:\n                /* 35: lexBodyItem => <NAME> @2 \"=\" \"<\" regexp \">\" */\n                var v = jjsematicS[jjsp - 6];\n                if(jjenableBlock){ gb.lexBuilder.endVar(); } \n                break;\n            case 36:\n                /* 36: lexBodyItem => newState \"<\" regexp \">\" lexAction_ */\n                if(jjenableBlock){ gb.lexBuilder.end(lexact, least, '(untitled)'); } \n                break;\n            case 37:\n                /* 37: lexBodyItem => newState \"<\" <NAME> \":\" regexp \">\" lexAction_ */\n                var tn = jjsematicS[jjsp - 5];\n                if(jjenableBlock){ \n        let tdef = gb.defToken(tn, gb.lexBuilder.getPossibleAlias());\n        lexact.returnToken(tdef);\n        gb.lexBuilder.end(lexact, least, tn.val);\n    } \n                break;\n            case 38:\n                /* 38: newState => */\n                if(jjenableBlock){ gb.lexBuilder.newState(); } \n                break;\n            case 40:\n                /* 40: lexAction_ => */\n                if(jjenableBlock){ lexact = new LexAction(); } \n                break;\n            case 41:\n                /* 41: @3 => */\n                if(jjenableBlock){ lexact = new LexAction(); } \n                break;\n            case 43:\n                /* 43: @4 => */\n                if(jjenableBlock){ lexact = new LexAction(); } \n                break;\n            case 47:\n                /* 47: lexActionItem => \"+\" <NAME> */\n                var vn = jjsematicS[jjsp - 1];\n                if(jjenableBlock){ gb.addPushStateAction(lexact, vn); lexact.raw('; '); } \n                break;\n            case 48:\n                /* 48: lexActionItem => \"-\" */\n                if(jjenableBlock){ lexact.popState(); lexact.raw('; '); } \n                break;\n            case 49:\n                /* 49: lexActionItem => \"=>\" <NAME> */\n                var sn = jjsematicS[jjsp - 1];\n                if(jjenableBlock){ gb.addSwitchToStateAction(lexact, sn); lexact.raw('; '); } \n                break;\n            case 50:\n                /* 50: lexActionItem => \"=\" <STRING> */\n                var s = jjsematicS[jjsp - 1];\n                if(jjenableBlock){ lexact.setImg(s.val); lexact.raw('; '); } \n                break;\n            case 52:\n                /* 52: regexp => innerRegexp */\n                if(jjenableBlock){ least = false; } \n                break;\n            case 53:\n                /* 53: regexp => \"%least\" innerRegexp */\n                if(jjenableBlock){ least = true; } \n                break;\n            case 54:\n                /* 54: @5 => */\n                if(jjenableBlock){ gb.lexBuilder.enterUnion(); } \n                break;\n            case 55:\n                /* 55: innerRegexp => @5 union */\n                if(jjenableBlock){ gb.lexBuilder.leaveUnion(); } \n                break;\n            case 56:\n                /* 56: union => union \"|\" simpleRE */\n                if(jjenableBlock){ gb.lexBuilder.endUnionItem(); } \n                break;\n            case 57:\n                /* 57: union => simpleRE */\n                if(jjenableBlock){ gb.lexBuilder.endUnionItem(); } \n                break;\n            case 60:\n                /* 60: @6 => */\n                if(jjenableBlock){ gb.lexBuilder.enterSimple(); } \n                break;\n            case 61:\n                /* 61: basicRE => @6 primitiveRE rePostfix */\n                var suffix = jjsematicS[jjsp - 1];\n                if(jjenableBlock){ gb.lexBuilder.simplePostfix(suffix.val as (''|'?'|'+'|'*')); } \n                break;\n            case 62:\n                /* 62: rePostfix => \"+\" */\n                if(jjenableBlock){ jjtop = newNode('+'); } \n                break;\n            case 63:\n                /* 63: rePostfix => \"?\" */\n                if(jjenableBlock){ jjtop = newNode('?'); } \n                break;\n            case 64:\n                /* 64: rePostfix => \"*\" */\n                if(jjenableBlock){ jjtop = newNode('*'); } \n                break;\n            case 65:\n                /* 65: rePostfix => */\n                if(jjenableBlock){ jjtop = newNode(''); } \n                break;\n            case 68:\n                /* 68: primitiveRE => \"<\" <NAME> \">\" */\n                var n = jjsematicS[jjsp - 2];\n                if(jjenableBlock){ gb.lexBuilder.addVar(n); } \n                break;\n            case 69:\n                /* 69: primitiveRE => \"%import\" \"(\" <STRING> \")\" */\n                var i = jjsematicS[jjsp - 2];\n                if(jjenableBlock){ gb.lexBuilder.importVar(i); } \n                break;\n            case 70:\n                /* 70: primitiveRE => <STRING> */\n                var s = jjsematicS[jjsp - 1];\n                if(jjenableBlock){ gb.lexBuilder.addString(s.val); } \n                break;\n            case 71:\n                /* 71: inverse_ => \"^\" */\n                if(jjenableBlock){ gb.lexBuilder.beginSet(true); } \n                break;\n            case 72:\n                /* 72: inverse_ => */\n                if(jjenableBlock){ gb.lexBuilder.beginSet(false); } \n                break;\n            case 77:\n                /* 77: setREItem => <STRING> */\n                var s = jjsematicS[jjsp - 1];\n                if(jjenableBlock){ gb.lexBuilder.addSetItem(s, s); } \n                break;\n            case 78:\n                /* 78: setREItem => <STRING> \"-\" <STRING> */\n                var from = jjsematicS[jjsp - 3];\n                var to = jjsematicS[jjsp - 1];\n                if(jjenableBlock){ gb.lexBuilder.addSetItem(from, to); } \n                break;\n            case 82:\n                /* 82: @7 => */\n                var n = jjsematicS[jjsp - 1];\n                if(jjenableBlock){ ruleLhs = n; } \n                break;\n            case 88:\n                /* 88: @8 => */\n                if(jjenableBlock){ gb.prepareRule(ruleLhs); } \n                break;\n            case 89:\n                /* 89: rule => @8 ruleHead ruleBody ruleTrailer */\n                if(jjenableBlock){ gb.commitRule(); } \n                break;\n            case 92:\n                /* 92: varUseList => varUseList \",\" <NAME> */\n                var vn = jjsematicS[jjsp - 1];\n                if(jjenableBlock){ gb.addRuleUseVar(vn); } \n                break;\n            case 93:\n                /* 93: varUseList => <NAME> */\n                var vn = jjsematicS[jjsp - 1];\n                if(jjenableBlock){ gb.addRuleUseVar(vn); } \n                break;\n            case 98:\n                /* 98: itemName => <NAME> \"=\" */\n                var itn = jjsematicS[jjsp - 2];\n                if(jjenableBlock){ gb.addRuleSematicVar(itn); } \n                break;\n            case 100:\n                /* 100: ruleItem => <NAME> */\n                var t = jjsematicS[jjsp - 1];\n                if(jjenableBlock){ gb.addRuleItem(t, TokenRefType.NAME); } \n                break;\n            case 101:\n                /* 101: @9 => */\n                var vn = jjsematicS[jjsp - 2];\n                if(jjenableBlock){ gb.addRuleSematicVar(vn); } \n                break;\n            case 102:\n                /* 102: ruleItem => <NAME> \"=\" @9 <NAME> */\n                var vn = jjsematicS[jjsp - 4];\n                var t = jjsematicS[jjsp - 1];\n                if(jjenableBlock){ gb.addRuleItem(t, TokenRefType.NAME); } \n                break;\n            case 103:\n                /* 103: ruleItem => itemName tokenRef */\n                var t = jjsematicS[jjsp - 1];\n                if(jjenableBlock){ gb.addRuleItem(t, t.ext); } \n                break;\n            case 104:\n                /* 104: ruleItem => itemName lexAction */\n                if(jjenableBlock){ gb.addAction(lexact); } \n                break;\n            case 105:\n                /* 105: tokenRef => \"<\" <NAME> \">\" */\n                var t = jjsematicS[jjsp - 2];\n                if(jjenableBlock){ jjtop = t; jjtop.ext = TokenRefType.TOKEN; } \n                break;\n            case 106:\n                /* 106: tokenRef => <STRING> */\n                if(jjenableBlock){ jjtop.ext = TokenRefType.STRING; } \n                break;\n            case 109:\n                /* 109: ruleTrailer => rulePrec lexAction */\n                if(jjenableBlock){ gb.addAction(lexact); } \n                break;\n            case 110:\n                /* 110: rulePrec => \"%prec\" <NAME> */\n                var t = jjsematicS[jjsp - 1];\n                if(jjenableBlock){ gb.defineRulePr(t, TokenRefType.NAME); } \n                break;\n            case 111:\n                /* 111: rulePrec => \"%prec\" tokenRef */\n                var t = jjsematicS[jjsp - 1];\n                if(jjenableBlock){ gb.defineRulePr(t, t.ext); } \n                break;\n            case 112:\n                /* 112: @10 => */\n                var open = jjsematicS[jjsp - 1];\n                jjlexState.push(1); \n                break;\n            case 113:\n                /* 113: @11 => */\n                var open = jjsematicS[jjsp - 4];\n                var bl = jjsematicS[jjsp - 2];\n                var close = jjsematicS[jjsp - 1];\n                jjlexState.pop(); \n                break;\n            case 114:\n                /* 114: block => \"{\" @10 innerBlock \"}\" @11 */\n                var open = jjsematicS[jjsp - 5];\n                var bl = jjsematicS[jjsp - 3];\n                var close = jjsematicS[jjsp - 2];\n                if(jjenableBlock){ jjtop = nodeBetween(open, close, bl.val); } \n                break;\n            case 115:\n                /* 115: innerBlock => innerBlock innerBlockItem */\n                var b = jjsematicS[jjsp - 1];\n                if(jjenableBlock){ jjtop.val += b.val; } \n                break;\n            case 116:\n                /* 116: innerBlock => */\n                if(jjenableBlock){ jjtop = newNode(''); } \n                break;\n            case 118:\n                /* 118: @12 => */\n                jjlexState.push(1); \n                break;\n            case 119:\n                /* 119: @13 => */\n                var b = jjsematicS[jjsp - 2];\n                jjlexState.pop(); \n                break;\n            case 120:\n                /* 120: innerBlockItem => \"{\" @12 innerBlock \"}\" @13 */\n                var b = jjsematicS[jjsp - 3];\n                if(jjenableBlock){ jjtop = newNode(''); jjtop.val = '{' + b.val + '}'; } \n                break;\n            case 121:\n                /* 121: @14 => */\n                var open = jjsematicS[jjsp - 1];\n                jjlexState.push(2); \n                break;\n            case 122:\n                /* 122: @15 => */\n                var open = jjsematicS[jjsp - 2];\n                if(jjenableBlock){ lexact.beginBlock(open, always); } \n                break;\n            case 123:\n                /* 123: @16 => */\n                var open = jjsematicS[jjsp - 5];\n                var t = jjsematicS[jjsp - 3];\n                var close = jjsematicS[jjsp - 1];\n                jjlexState.pop(); \n                break;\n            case 124:\n                /* 124: actionBlock => always \"{\" @14 @15 innerActionBlock \"}\" @16 */\n                var open = jjsematicS[jjsp - 6];\n                var t = jjsematicS[jjsp - 4];\n                var close = jjsematicS[jjsp - 2];\n                if(jjenableBlock){ lexact.endBlock(close); } \n                break;\n            case 125:\n                /* 125: always => \"%always\" */\n                if(jjenableBlock){ always = true; } \n                break;\n            case 126:\n                /* 126: always => */\n                if(jjenableBlock){ always = false; } \n                break;\n            case 129:\n                /* 129: innerActionBlockItem => <ANY_CODE> */\n                var c = jjsematicS[jjsp - 1];\n                if(jjenableBlock){ lexact.raw(c.val); } \n                break;\n            case 130:\n                /* 130: innerActionBlockItem => \"$$\" */\n                if(jjenableBlock){ lexact.lhs(); } \n                break;\n            case 131:\n                /* 131: innerActionBlockItem => \"$token\" */\n                if(jjenableBlock){ lexact.tokenObj(); } \n                break;\n            case 132:\n                /* 132: innerActionBlockItem => \"$matched\" */\n                if(jjenableBlock){ lexact.matched(); } \n                break;\n            case 133:\n                /* 133: innerActionBlockItem => <EMIT_TOKEN> */\n                var t = jjsematicS[jjsp - 1];\n                if(jjenableBlock){ gb.addEmitTokenAction(lexact, t); } \n                break;\n            case 134:\n                /* 134: @17 => */\n                jjlexState.push(2); \n                break;\n            case 135:\n                /* 135: @18 => */\n                if(jjenableBlock){ lexact.raw('{'); } \n                break;\n            case 136:\n                /* 136: @19 => */\n                jjlexState.pop(); \n                break;\n            case 137:\n                /* 137: innerActionBlockItem => \"{\" @17 @18 innerActionBlock \"}\" @19 */\n                if(jjenableBlock){ lexact.raw('}'); } \n                break;\n        }\n        jjlrState.length -= jjruleLen[jjrulenum];\n        var jjcstate = jjlrState[jjlrState.length - 1];\n        jjlrState.push(jjpgoto[jjdisgoto[jjcstate] + jjnt]);\n\n        jjsematicS.length -= jjruleLen[jjrulenum];\n        jjsematicS.push(jjtop);\n    }\n    function jjacceptToken(tk: Token){\n        // look up action table\n        var shifted = false;\n        tk !== null && jjtokenQueue.push(tk);\n        while(!jjstop && jjtokenQueue.length > 0){\n            var t = jjtokenQueue[0];\n            var cstate = jjlrState[jjlrState.length - 1];\n            var ind = jjdisact[cstate] + t.id;\n            var act = 0;\n            if(ind < 0 || ind >= jjpact.length || jjcheckact[ind] !== cstate){\n                act = -jjdefred[cstate] - 1;\n            }\n            else {\n                act = jjpact[ind];\n            }\n            if(act === jjactERR){\n                // explicit error\n                jjsyntaxError(t);\n                jjtokenQueue.shift();\n            }\n            else if(act > 0){\n                // shift\n                if(t.id === 0){\n                    // end of file\n                    jjstop = true;\n                    jjemit('accept');\n                    jjtokenQueue.shift();\n                }\n                else {\n                    jjlrState.push(act - 1);\n                    jjsematicS.push(jjsematicVal);\n                    jjsematicVal = null;\n                    jjtryReduce();\n                    // token consumed\n                    jjtokenQueue.shift();\n                }\n            }\n            else if(act < 0){\n                jjdoReduction(-act - 1);\n                jjtryReduce();\n            }\n            else {\n                // error\n                jjsyntaxError(t);\n                // force consume\n                jjtokenQueue.shift();\n            }\n        }\n    }\n    function jjtryReduce(){\n        var cstate = jjlrState[jjlrState.length - 1];\n        var act;\n        while(jjdisact[cstate] === -jjtokenCount && (act = jjdefred[cstate]) !== -1){\n            jjdoReduction(act);\n            cstate = jjlrState[jjlrState.length - 1];\n        }\n    }\n    function jjsyntaxError(t: Token){\n        var msg = \"unexpected token \" + t.toString() + \", expecting one of the following token(s):\\n\"\n        msg += jjexpected(jjlrState[jjlrState.length - 1]);\n        jjemit(\"syntaxerror\", msg, t);\n    }\n    function jjexpected(state: number){\n        var dis = jjdisact[state];\n        var ret = '';\n        function expect(tk: number){\n            var ind = dis + tk;\n            if(ind < 0 || ind >= jjpact.length || state !== jjcheckact[ind]){\n                return jjdefred[state] !== -1;\n            }\n            else {\n                return true;\n            }\n        }\n        for(var tk = 0; tk < jjtokenCount; tk++){\n            expect(tk) && (ret += \"    \" + tokenToString(tk) + \" ...\" + '\\n');\n        }\n        return ret;\n    }\n}\n\nfunction charPosition(c: string, line: number, column: number): Position{\n    return {\n        startLine: line,\n        startColumn: column,\n        endLine: line,\n        endColumn: c.charCodeAt(0) > 0xff ? column + 1 : column\n    }\n}\nexport function parse(ctx: Context, source: string): File{\n    let parser = createParser();\n    let err = false;\n    parser.on('lexicalerror', (c, line, column) => {\n        ctx.requireLines((ctx, lines) => {\n            let msg2 = `unexpected character ${c}`;\n            msg2 += ' ' + markPosition(charPosition(c, line, column), lines);\n            ctx.err(new JsccError(msg2, 'Lexical error'));\n        });\n        // ctx.err(new CompilationError(msg, line));\n        parser.halt();\n        err = true;\n    });\n    parser.on('syntaxerror', (msg, token) => {\n        // ctx.err(new CompilationError(msg, token.startLine));\n        ctx.requireLines((ctx, lines) => {\n            let msg2 = markPosition(token, lines) + endl + msg;\n            ctx.err(new JsccError(msg2, 'Syntax error'));\n        });\n        parser.halt();\n        err = true;\n    });\n    let gb = createFileBuilder(ctx);\n    parser.init(ctx, gb);\n\n    ctx.beginTime('parse grammar file');\n    parser.accept(source);\n    parser.end();\n    ctx.endTime();\n\n    if(err){\n        return null;\n    }\n    else {\n        var eol = parser.getLineTerminator();\n        if(eol !== LineTerm.NONE && eol !== LineTerm.AUTO){\n            gb.setLineTerminator(\n                eol === LineTerm.CR ? '\\r' : \n                eol === LineTerm.LF ? '\\n' :\n                eol === LineTerm.CRLF ? '\\r\\n' : null\n            );\n        }\n        return gb.build();\n    }\n}","import { TemplateInput, TemplateOutput } from '../def';\nimport { Item, Action } from '../../grammar/item-set';\nimport { Rule } from '../../grammar/grammar';\nimport { TokenDef } from '../../grammar/token-entry';\nimport { CodeGenerator } from '../code-generator';\nimport { DFA } from '../../lexer/dfa';\nimport { LexAction } from '../../lexer/action';\nimport { State, Arc } from '../../lexer/state';\nimport { oo, _oo } from '../../util/interval-set';\nimport { JNode, Position } from '../../parser/node'\nimport { DFATable } from '../../lexer/dfa-table'\n\nexport default function(input: TemplateInput, output: TemplateOutput){\n    echoLine(\"/*\");\n    echoLine(\"    generated by jscc, an LALR(1) parser generator made by hadroncfy.\");\n    echoLine(\"    template for typescript, written by hadroncfy, aussi.\");\n    echo(\"*/\");\n    for(let h of input.file.header){ \n    echoLine(\"\");\n    echo(h.val );\n    }\nlet prefix = input.file.prefix;\nlet tab = getOpt('tab', '    ');\nlet ists = input.output === 'typescript';\nfunction ts(s: string, s2?: string){\n    return ists ? s : (s2 || '');\n}\nfunction n(t: JNode, def: string = ''){\n    return t === null ? def : t.val;\n}\nfunction getOpt(n: string, def: string){\n    let t = input.file.opt[n];\n    return t === undefined ? def : t.val.val;\n}\nfunction echo(s: string | number){\n    output.write(s);\n}\nfunction echoLine(s: string | number){\n    output.writeln(s);\n}\nfunction leftAlign(s: string, al: number): string{\n    function repeat(s: string, t: number){\n        let ret = '';\n        while(t --> 0) ret += s;\n        return ret;\n    }\n    return (s.length < al ? repeat(' ', al - s.length) : '') + s;\n}\nfunction printTable<T>(tname: string, type: string, t: T[], align: number, lc: number, mapper: (d: T) => string){\n    let count = 1; \n    echoLine(\"\");\n    echo(\"var \");\n    echo(prefix + tname + ts(': ' + type + '[]'));\n    echoLine(\" = [ \");\n    echo(tab); \n    for(let i of t){\n        echo(leftAlign(mapper(i), align));\n        echo(',');\n        count++ >= lc && (count = 1, echo(input.endl + tab));\n    } \n    echoLine(\"\");\n    echo(\"]; \");\n    } \n    echoLine(\"\");\n    echoLine(\"/*\");\n    echoLine(\"    constants\");\n    echoLine(\"*/\");\n    echo(\"var \");\n    echo(prefix );\n    echoLine(\"lf = '\\\\n'.charCodeAt(0);\");\n    echo(\"var \");\n    echo(prefix );\n    echo(\"cr = '\\\\r'.charCodeAt(0);\");\n    if(ists){ \n    echoLine(\"\");\n    echoLine(\"interface DFATable{\");\n    echoLine(\"    pnext: number[];\");\n    echoLine(\"    disnext: number[];\");\n    echoLine(\"    checknext: number[];\");\n    echoLine(\"    maxAsicii: number;\");\n    echoLine(\"    classTable: number[];\");\n    echoLine(\"    unicodeClassTable: number[];\");\n    echoLine(\"    isEnd: number[];\");\n    echoLine(\"    hasArc: number[];\");\n    echo(\"};\");\n    } \n    let dfaTables = input.file.dfaTables; \n    function printDFATable(t: DFATable<LexAction>, n: number){\n    function tn(s: string){\n        return prefix + s + String(n);\n    }\n    printTable<Arc<LexAction>>('lexpnext' + n, 'number', t.pnext, 6, 10, a => a === null ? '-1' :  String(a.to.index));\n    printTable<number>('lexdisnext' + n, 'number', t.disnext, 6, 10, a => String(a));\n    printTable<number>('lexchecknext' + n, 'number', t.checknext, 6, 10, a => String(a));\n    printTable<number>('lexclassTable' + n, 'number', t.classTable, 6, 10, a => String(a));\n    printTable<number>('lexunicodeClassTable' + n, 'number', t.unicodeClassTable, 6, 10, a => String(a));\n    printTable<State<LexAction>>('lexisEnd' + n, 'number', t.states, 1, 15, a => a.endAction === null ? '0' : '1');\n    printTable<State<LexAction>>('lexhasArc' + n, 'number', t.states, 1, 15, a => a.arcs.length === 0 ? '0' : '1');\n\n    echoLine(\"\");\n    echo(\"var \");\n    echo(prefix );\n    echo(\"lextable\");\n    echo(String(n) + ts(': DFATable') );\n    echoLine(\" = {\");\n    echo(\"    pnext: \");\n    echo(tn('lexpnext') );\n    echoLine(\",\");\n    echo(\"    disnext: \");\n    echo(tn('lexdisnext') );\n    echoLine(\",\");\n    echo(\"    checknext: \");\n    echo(tn('lexchecknext') );\n    echoLine(\",\");\n    echo(\"    maxAsicii: \");\n    echo(t.maxAsicii );\n    echoLine(\",\");\n    echo(\"    classTable: \");\n    echo(tn('lexclassTable') );\n    echoLine(\",\");\n    echo(\"    unicodeClassTable: \");\n    echo(tn('lexunicodeClassTable') );\n    echoLine(\",\");\n    echo(\"    isEnd: \");\n    echo(tn('lexisEnd') );\n    echoLine(\",\");\n    echo(\"    hasArc: \");\n    echo(tn('lexhasArc') );\n    echoLine(\"\");\n    echo(\"};\");\n    } \n    echoLine(\"\");\n    echoLine(\"/*\");\n    echoLine(\"    dfa table definations\");\n    echo(\"*/\");\n    for(let i = 0, _a = dfaTables; i < _a.length; i++){\n    printDFATable(_a[i], i);\n} \n    echoLine(\"\");\n    echoLine(\"/*\");\n    echoLine(\"    dfa tables\");\n    echoLine(\"*/\");\n    echo(\"var \");\n    echo(prefix );\n    echo(\"dfaTables\");\n    echo(ts(': DFATable[]') );\n    echo(\" = [\");\n    for(let i = 0;i < dfaTables.length; i++){ \n    echoLine(\"\");\n    echo(\"    \");\n    echo(prefix );\n    echo(\"lextable\");\n    echo(i );\n    echo(\",\");\n    } \n    echoLine(\"\");\n    echoLine(\"];\");\n    echoLine(\"/*\");\n    echoLine(\"    find unicode class\");\n    echoLine(\"*/\");\n    echo(\"function \");\n    echo(prefix );\n    echo(\"findUnicodeClass(uc\");\n    echo(ts(\": number[]\") );\n    echo(\", c\");\n    echo(ts(\": number\") );\n    echoLine(\"){\");\n    echoLine(\"    for(var i = 0; i < uc.length; i += 3){\");\n    echoLine(\"        if(c >= uc[i + 1] && c <= uc[i + 2]){\");\n    echoLine(\"            return uc[i];\");\n    echoLine(\"        }\");\n    echoLine(\"        else if(c < uc[i + 1]){\");\n    echoLine(\"            return -1;\");\n    echoLine(\"        }\");\n    echoLine(\"    }\");\n    echoLine(\"    return -1;\");\n    echoLine(\"}\");\n    echoLine(\"/*\");\n    echoLine(\"    tokens that a lexical dfa state can return\");\n    echo(\"*/\");\n    for(let i = 0, _a = dfaTables; i < _a.length; i++){\n    printTable<State<LexAction>>('lexTokens' + i, 'number', _a[i].states, 6, 10, s => { \n        return s.endAction === null || s.endAction.data.token === null ? '-1' : String(s.endAction.data.token.index);\n    });\n} \n    echoLine(\"\");\n    let pt = input.pt; \n    echoLine(\"\");\n    echo(\"var \");\n    echo(prefix );\n    echo(\"stateCount = \");\n    echo(pt.stateCount );\n    echoLine(\";\");\n    echo(\"var \");\n    echo(prefix );\n    echo(\"tokenCount = \");\n    echo(input.file.grammar.tokens.length );\n    echoLine(\";\");\n    echo(\"var \");\n    echo(prefix );\n    echo(\"actERR = \");\n    echo(pt.stateCount + 1 );\n    echoLine(\";\");\n    echoLine(\"/*\");\n    echo(\"    compressed action table: action = \");\n    echo(prefix );\n    echo(\"pact[\");\n    echo(prefix );\n    echoLine(\"disact[STATE-NUM] + TOKEN]\");\n    echoLine(\"    when action > 0, shift the token and goto state (action - 1);\");\n    echoLine(\"    when action < 0, reduce with rule (1-action);\");\n    echoLine(\"    when action = 0, do default action.\");\n    echo(\"*/\");\n    printTable<Item>('pact', 'number', pt.pact, 6, 10, t => {\n    if(t === null){\n        return '0';\n    }\n    else if(t === Item.NULL){\n        return String(pt.stateCount + 1);\n    }\n    else if(t.actionType === Action.SHIFT){\n        return (t.shift.stateIndex + 1).toString();\n    }\n    else if(t.actionType === Action.REDUCE){\n        return (-t.rule.index - 1).toString();\n    }\n}); \n    echoLine(\"\");\n    echoLine(\"/*\");\n    echoLine(\"    displacement of action table.\");\n    echo(\"*/\");\n    printTable<number>('disact', 'number', pt.disact, 6, 10, t => t.toString()); \n    echoLine(\"\");\n    echoLine(\"/*\");\n    echo(\"    used to check if a position in \");\n    echo(prefix  );\n    echoLine(\"pact is out of bouds.\");\n    echo(\"    if \");\n    echo(prefix  );\n    echo(\"checkact[\");\n    echo(prefix );\n    echoLine(\"disact[STATE-NUM] + TOKEN] = STATE-NUM, this position is not out of bounds.\");\n    echo(\"*/\");\n    printTable<number>('checkact', 'number', pt.checkact, 6, 10, t => t === undefined ? '0' : t.toString()); \n    echoLine(\"\");\n    echoLine(\"/*\");\n    echo(\"    default action table. action = \");\n    echo(prefix );\n    echoLine(\"defred[STATE-NUM],\");\n    echoLine(\"    where action is the number of the rule to reduce with.\");\n    echo(\"*/\");\n    printTable<number>('defred', 'number', pt.defred, 6, 10, t => t.toString()); \n    echoLine(\"\");\n    echoLine(\"/*\");\n    echo(\"    compressed goto table: goto = \");\n    echo(prefix  );\n    echo(\"pgoto[\");\n    echo(prefix );\n    echoLine(\"disgoto[STATE-NUM] + NON_TERMINAL]\");\n    echo(\"*/\");\n    printTable<Item>('pgoto', 'number', pt.pgoto, 6, 10, t => {\n    if(t === null){\n        return '-1';\n    }\n    else {\n        return t.shift.stateIndex.toString();\n    }\n}); \n    echoLine(\"\");\n    echoLine(\"/*\");\n    echoLine(\"    displacement of the goto table\");\n    echo(\"*/\");\n    printTable<number>('disgoto', 'number', pt.disgoto, 6, 10, t => t.toString()); \n    echoLine(\"\");\n    echoLine(\"/*\");\n    echo(\"    length of each rule: rule length = \");\n    echo(prefix );\n    echoLine(\"ruleLen[RULE-NUM]\");\n    echo(\"*/\");\n    printTable<Rule>('ruleLen', 'number', pt.g.rules, 6, 10, r => r.rhs.length.toString()); \n    echoLine(\"\");\n    echoLine(\"/*\");\n    echoLine(\"    index of the LHS of each rule\");\n    echo(\"*/\");\n    printTable<Rule>('lhs', 'number', pt.g.rules, 6, 10, r => r.lhs.index.toString()); \n    echoLine(\"\");\n    echoLine(\"/*\");\n    echoLine(\"    token names\");\n    echo(\"*/\");\n    printTable<TokenDef>('tokenNames', 'string', pt.g.tokens, 20, 3, t => `\"${t.sym.replace(/\"/g, '\\\\\"')}\"`); \n    echoLine(\"\");\n    echoLine(\"/*\");\n    echoLine(\"    token alias\");\n    echo(\"*/\");\n    printTable<TokenDef>('tokenAlias', 'string', pt.g.tokens, 20, 3, t => t.alias ? `\"${t.alias.replace(/\"/g, '\\\\\"')}\"` : \"null\"); \n    let className = getOpt('className', 'Parser'); \n    echoLine(\"\");\n    function printLexActionsFunc(dfa: DFATable<LexAction>, n: number){\n    let codegen = {\n        raw(s: string){\n            echo(s);\n        },\n        beginBlock(pos: Position, always: boolean){\n            !always && echo(`if(${prefix}enableBlock)`);\n            echo('{');\n        },\n        endBlock(pos: Position){\n            echo('}');\n        },\n        pushLexState(n: number){\n            echo(`${prefix}lexState.push(${n})`);\n        },\n        switchToLexState(n: number){\n            echo(`${prefix}lexState[${prefix}lexState.length - 1] = ${n}`);\n        },\n        popLexState(){\n            echo(`${prefix}lexState.pop()`);\n        },\n        setImg(n: string){\n            echo(`${prefix}setImg(\"${n}\")`);\n        },\n        tokenObj(){\n            echo(prefix + 'token');\n        }, // $token\n        matched(){\n            echo(prefix + 'matched');\n        },\n        lhs(){\n            echo(prefix + \"sematicVal\");\n        }, // $$\n        emitToken(tid: number){\n            echo(`${prefix}tokenQueue.push(new Token(${tid}, null, -1, 0, 0, 0))`);\n        }\n    };\n    let statevn = prefix + 'staten'; \n    echoLine(\"\");\n    echo(\"    function \");\n    echo(prefix );\n    echo(\"doLexAction\");\n    echo(n );\n    echo(\"(\");\n    echo(statevn + ts(\": number\"));\n    echoLine(\"){\");\n    echo(\"        var \");\n    echo(prefix );\n    echo(\"tk = \");\n    echo(prefix );\n    echo(\"lexTokens\");\n    echo(n );\n    echo(\"[\");\n    echo(statevn );\n    echoLine(\"];\");\n    echo(\"        \");\n    echo(prefix );\n    echo(\"tk !== -1 && \");\n    echo(prefix );\n    echo(\"prepareToken(\");\n    echo(prefix );\n    echoLine(\"tk);\");\n    echo(\"        switch(\");\n    echo(statevn );\n    echo(\"){\");\n    for(let i = 0, _a = dfa.states; i < _a.length; i++){ \n        if(_a[i].endAction !== null && _a[i].endAction.data.actions.length > 0){ \n    echoLine(\"\");\n    echo(\"            case \");\n    echo(i );\n    echo(\":\");\n    echoLine(''); echo('                '); \n    _a[i].endAction.data.toCode(codegen); \n    echoLine(\"\");\n    echo(\"                break;\");\n    }\n    } \n    echoLine(\"\");\n    echoLine(\"            default:;\");\n    echoLine(\"        }\");\n    echo(\"    }\");\n    } \n    echoLine(\"\");\n    if(ists){ \n    echoLine(\"\");\n    echoLine(\"function tokenToString(tk: number){\");\n    echo(\"    return \");\n    echo(prefix );\n    echo(\"tokenAlias[tk] === null ? `<${\");\n    echo(prefix );\n    echo(\"tokenNames[tk]}>` : `\\\"${\");\n    echo(prefix );\n    echoLine(\"tokenAlias[tk]}\\\"`;\");\n    echo(\"}\");\n    } else { \n    echoLine(\"\");\n    echoLine(\"function tokenToString(tk){\");\n    echo(\"    return \");\n    echo(prefix );\n    echo(\"tokenAlias[tk] === null ? \\\"<\\\" + \");\n    echo(prefix );\n    echo(\"tokenNames[tk] + \\\">\\\" : '\\\"' + \");\n    echo(prefix );\n    echoLine(\"tokenAlias[tk] + '\\\"';\");\n    echo(\"}\");\n    } \n    if(ists){ \n    echoLine(\"\");\n    echoLine(\"class Token {\");\n    echoLine(\"    constructor(\");\n    echoLine(\"        public id: number,\");\n    echoLine(\"        public val: string,\");\n    echoLine(\"        public startLine: number,\");\n    echoLine(\"        public startColumn: number,\");\n    echoLine(\"        public endLine: number,\");\n    echoLine(\"        public endColumn: number\");\n    echoLine(\"    ){}\");\n    echoLine(\"    clone(){\");\n    echoLine(\"        return new Token(\");\n    echoLine(\"            this.id,\");\n    echoLine(\"            this.val,\");\n    echoLine(\"            this.startLine,\");\n    echoLine(\"            this.startColumn,\");\n    echoLine(\"            this.endLine,\");\n    echoLine(\"            this.endColumn\");\n    echoLine(\"        );\");\n    echoLine(\"    }\");\n    echoLine(\"    toString(){\");\n    echo(\"        return (\");\n    echo(prefix );\n    echoLine(\"tokenAlias[this.id] === null ? \");\n    echo(\"            `<${\");\n    echo(prefix );\n    echoLine(\"tokenNames[this.id]}>` :\");\n    echo(\"            `\\\"${\");\n    echo(prefix );\n    echoLine(\"tokenAlias[this.id]}\\\"`) + `(\\\"${this.val}\\\")`;\");\n    echoLine(\"    }\");\n    echoLine(\"}\");\n    echo(\"interface \");\n    echo(className );\n    echoLine(\"{\");\n    echo(\"    init(\");\n    echo(n(input.file.initArg) );\n    echoLine(\");\");\n    echoLine(\"    accept(s: string);\");\n    echoLine(\"    setLineTerminator(lt: LineTerm);\");\n    echoLine(\"    getLineTerminator(): LineTerm;\");\n    echoLine(\"    end();\");\n    echoLine(\"    halt();\");\n    echoLine(\"    on(ent: string, cb: (a1?, a2?, a3?) => any);\");\n    echoLine(\"    enableBlocks();\");\n    echoLine(\"    disableBlocks();\");\n    echo(\"}\");\n    } else { \n    echoLine(\"\");\n    echoLine(\"function Token(id, val, startLine, startColumn, endLine, endColumn){\");\n    echoLine(\"    this.id = id;\");\n    echoLine(\"    this.val = val;\");\n    echoLine(\"    this.startLine = startLine;\");\n    echoLine(\"    this.startColumn = startColumn;\");\n    echoLine(\"    this.endLine = endLine;\");\n    echoLine(\"    this.endColumn = endColumn;\");\n    echoLine(\"}\");\n    echoLine(\"Token.prototype.clone = function(){\");\n    echoLine(\"    return new Token(\");\n    echoLine(\"        this.id,\");\n    echoLine(\"        this.val,\");\n    echoLine(\"        this.startLine,\");\n    echoLine(\"        this.startColumn,\");\n    echoLine(\"        this.endLine,\");\n    echoLine(\"        this.endColumn\");\n    echoLine(\"    );\");\n    echoLine(\"}\");\n    echoLine(\"Token.prototype.toString = function(){\");\n    echo(\"    return (\");\n    echo(prefix );\n    echoLine(\"tokenAlias[this.id] === null ? \");\n    echo(\"        '<' + \");\n    echo(prefix );\n    echoLine(\"tokenNames[this.id] + '>' :\");\n    echo(\"        '\\\"' + \");\n    echo(prefix );\n    echoLine(\"tokenAlias[this.id] + '\\\"') + \\\"(\\\" + this.val + \\\")\\\";\");\n    echo(\"}\");\n    } \n    if(ists){ \n    echoLine(\"\");\n    echoLine(\"enum LineTerm{\");\n    echoLine(\"    NONE = 1,\");\n    echoLine(\"    AUTO,\");\n    echoLine(\"    CR,\");\n    echoLine(\"    LF,\");\n    echoLine(\"    CRLF\");\n    echo(\"};\");\n    } else { \n    echoLine(\"\");\n    echoLine(\"var LineTerm = {\");\n    echoLine(\"    NONE: 1,\");\n    echoLine(\"    AUTO: 2,\");\n    echoLine(\"    CR: 3,\");\n    echoLine(\"    LF: 4,\");\n    echoLine(\"    CRLF: 5\");\n    echo(\"};\");\n    } \n    echoLine(\"\");\n    let stype = n(input.file.sematicType, 'any'); \n    echoLine(\"\");\n    echo(\"function create\");\n    echo(className );\n    echo(\"()\");\n    echo(ts(': ' + className) );\n    echoLine(\" {\");\n    echoLine(\"    // members for lexer\");\n    echo(\"    var \");\n    echo(prefix );\n    echo(\"lexState\");\n    echo(ts(\": number[]\") );\n    echoLine(\";\");\n    echo(\"    var \");\n    echo(prefix );\n    echo(\"state\");\n    echo(ts(\": number\") );\n    echoLine(\";\");\n    echo(\"    var \");\n    echo(prefix );\n    echo(\"matched\");\n    echo(ts(\": string\") );\n    echoLine(\";\");\n    echo(\"    var \");\n    echo(prefix );\n    echo(\"token\");\n    echo(ts(\": Token\") );\n    echoLine(\";\");\n    echoLine(\"    \");\n    echo(\"    var \");\n    echo(prefix );\n    echo(\"marker\");\n    echo(ts(\": { state: number, line: number, column: number }\") );\n    echoLine(\" = { state: -1, line: 0, column: 0 };\");\n    echo(\"    var \");\n    echo(prefix );\n    echo(\"backupCount\");\n    echo(ts(\": number\") );\n    echoLine(\";\");\n    echoLine(\"\");\n    echo(\"    var \");\n    echo(prefix );\n    echo(\"line\");\n    echo(ts(\": number\") );\n    echoLine(\";\");\n    echo(\"    var \");\n    echo(prefix );\n    echo(\"column\");\n    echo(ts(\": number\") );\n    echoLine(\";\");\n    echo(\"    var \");\n    echo(prefix );\n    echo(\"tline\");\n    echo(ts(\": number\") );\n    echoLine(\";\");\n    echo(\"    var \");\n    echo(prefix );\n    echo(\"tcolumn\");\n    echo(ts(\": number\") );\n    echoLine(\";\");\n    echoLine(\"\");\n    echoLine(\"    // members for parser\");\n    echo(\"    var \");\n    echo(prefix );\n    echo(\"lrState\");\n    echo(ts(\": number[]\") );\n    echoLine(\";\");\n    echo(\"    var \");\n    echo(prefix );\n    echo(\"sematicS\");\n    echo(ts(': ' + stype + '[]') );\n    echoLine(\";\");\n    echo(\"    var \");\n    echo(prefix );\n    echo(\"sematicVal\");\n    echo(ts(': ' + stype) );\n    echoLine(\";\");\n    echo(\"    var \");\n    echo(prefix );\n    echo(\"tokenQueue\");\n    echo(ts(\": Token[]\") );\n    echoLine(\";\");\n    echoLine(\"\");\n    echo(\"    var \");\n    echo(prefix );\n    echo(\"stop\");\n    echo(ts(': boolean') );\n    echoLine(\";\");\n    echo(\"    var \");\n    echo(prefix );\n    echo(\"enableBlock\");\n    echo(ts(': boolean') );\n    echoLine(\";\");\n    echoLine(\"\");\n    echo(\"    var \");\n    echo(prefix );\n    echo(\"lineTerm\");\n    echo(ts(': LineTerm') );\n    echoLine(\";\");\n    echo(\"    var \");\n    echo(prefix );\n    echo(\"lastCR\");\n    echo(ts(': boolean') );\n    echoLine(\"\");\n    echoLine(\"\");\n    echo(\"    var \");\n    echo(prefix );\n    echo(\"handlers\");\n    echo(ts(\": {[s: string]: ((a1?, a2?, a3?) => any)[]}\") );\n    echoLine(\" = {};\");\n    echoLine(\"\");\n    echoLine(\"    // extra members, defined by %extra_arg\");\n    echo(\"    \");\n    echo(n(input.file.extraArgs) );\n    echoLine(\"\");\n    if(ists) { \n    echoLine(\"\");\n    echoLine(\"    return {\");\n    echoLine(\"        init,\");\n    echoLine(\"        on,\");\n    echoLine(\"        setLineTerminator,\");\n    echo(\"        getLineTerminator: () => \");\n    echo(prefix );\n    echoLine(\"lineTerm,\");\n    echoLine(\"        accept,\");\n    echoLine(\"        end,\");\n    echoLine(\"        halt,\");\n    echoLine(\"        enableBlocks,\");\n    echoLine(\"        disableBlocks\");\n    echo(\"    };\");\n    } else { \n    echoLine(\"\");\n    echoLine(\"    return {\");\n    echoLine(\"        init: init,\");\n    echoLine(\"        on: on,\");\n    echoLine(\"        setLineTerminator: setLineTerminator,\");\n    echo(\"        getLineTerminator: function() { return \");\n    echo(prefix );\n    echoLine(\"lineTerm; },\");\n    echoLine(\"        accept: accept,\");\n    echoLine(\"        end: end,\");\n    echoLine(\"        halt: halt,\");\n    echoLine(\"        enableBlocks: enableBlocks,\");\n    echoLine(\"        disableBlocks: disableBlocks\");\n    echo(\"    };\");\n    } \n    echoLine(\"\");\n    echo(\"    function init(\");\n    echo(n(input.file.initArg) );\n    echoLine(\"){\");\n    echo(\"        \");\n    echo(prefix );\n    echoLine(\"lexState = [ 0 ];// DEFAULT\");\n    echo(\"        \");\n    echo(prefix );\n    echoLine(\"state = 0;\");\n    echo(\"        \");\n    echo(prefix );\n    echoLine(\"matched = '';\");\n    echo(\"        \");\n    echo(prefix );\n    echoLine(\"token = new Token(-1, null, 0, 0, 0, 0);\");\n    echo(\"        \");\n    echo(prefix );\n    echoLine(\"marker.state = -1;\");\n    echo(\"        \");\n    echo(prefix );\n    echoLine(\"backupCount = 0;\");\n    echo(\"        \");\n    echo(prefix );\n    echo(\"line = \");\n    echo(prefix );\n    echoLine(\"tline = 0;\");\n    echo(\"        \");\n    echo(prefix );\n    echo(\"column = \");\n    echo(prefix );\n    echoLine(\"tcolumn = 0;\");\n    echoLine(\"        \");\n    echo(\"        \");\n    echo(prefix );\n    echoLine(\"lrState = [ 0 ];\");\n    echo(\"        \");\n    echo(prefix );\n    echoLine(\"sematicS = [];\");\n    echo(\"        \");\n    echo(prefix );\n    echoLine(\"sematicVal = null;\");\n    echo(\"        \");\n    echo(prefix );\n    echoLine(\"tokenQueue = [];\");\n    echoLine(\"\");\n    echo(\"        \");\n    echo(prefix );\n    echoLine(\"stop = false;\");\n    echo(\"        \");\n    echo(prefix );\n    echoLine(\"enableBlock = true;\");\n    echo(\"        \");\n    echo(prefix );\n    echoLine(\"lineTerm = LineTerm.AUTO;\");\n    echo(\"        \");\n    echo(prefix );\n    echoLine(\"lastCR = false;\");\n    echoLine(\"\");\n    echo(\"        \");\n    echo(n(input.file.initBody) );\n    echoLine(\"\");\n    echoLine(\"\");\n    echo(\"        \");\n    echo(prefix );\n    echoLine(\"tryReduce();\");\n    echoLine(\"    }\");\n    echoLine(\"    /**\");\n    echoLine(\"     *  set \");\n    echoLine(\"     */\");\n    echo(\"    function \");\n    echo(prefix );\n    echo(\"setImg(s\");\n    echo(ts(\": string\") );\n    echoLine(\"){\");\n    echo(\"        \");\n    echo(prefix );\n    echoLine(\"matched = s;\");\n    echo(\"        \");\n    echo(prefix );\n    echo(\"tline = \");\n    echo(prefix );\n    echoLine(\"line;\");\n    echo(\"        \");\n    echo(prefix );\n    echo(\"tcolumn = \");\n    echo(prefix );\n    echoLine(\"column;\");\n    echoLine(\"    }\");\n    echo(\"    function \");\n    echo(prefix );\n    echo(\"prepareToken(tid\");\n    echo(ts(\": number\") );\n    echoLine(\"){\");\n    echo(\"        \");\n    echo(prefix );\n    echoLine(\"token.id = tid;\");\n    echo(\"        \");\n    echo(prefix );\n    echo(\"token.val = \");\n    echo(prefix );\n    echoLine(\"matched;\");\n    echo(\"        \");\n    echo(prefix );\n    echo(\"token.startLine = \");\n    echo(prefix );\n    echoLine(\"tline;\");\n    echo(\"        \");\n    echo(prefix );\n    echo(\"token.startColumn = \");\n    echo(prefix );\n    echoLine(\"tcolumn;\");\n    echo(\"        \");\n    echo(prefix );\n    echo(\"token.endLine = \");\n    echo(prefix );\n    echoLine(\"line;\");\n    echo(\"        \");\n    echo(prefix );\n    echo(\"token.endColumn = \");\n    echo(prefix );\n    echoLine(\"column - 1;\");\n    echoLine(\"\");\n    echo(\"        \");\n    echo(prefix );\n    echo(\"tokenQueue.push(\");\n    echo(prefix );\n    echoLine(\"token);\");\n    echoLine(\"\");\n    echo(\"        \");\n    echo(prefix );\n    echoLine(\"matched = '';\");\n    echo(\"        \");\n    echo(prefix );\n    echo(\"tline = \");\n    echo(prefix );\n    echoLine(\"line;\");\n    echo(\"        \");\n    echo(prefix );\n    echo(\"tcolumn = \");\n    echo(prefix );\n    echoLine(\"column;\");\n    echoLine(\"    }\");\n    echo(\"    function \");\n    echo(prefix );\n    echo(\"emit(name\");\n    echo(ts(\": string\") + ts(\", a1?, a2?, a3?\", \", a1, a2, a3\") );\n    echoLine(\"){\");\n    echo(\"        var cbs = \");\n    echo(prefix );\n    echoLine(\"handlers[name];\");\n    echoLine(\"        if(cbs){\");\n    echoLine(\"            for(var i = 0; i < cbs.length; i++){\");\n    echoLine(\"                cbs[i](a1, a2, a3);\");\n    echoLine(\"            }\");\n    echoLine(\"        }\");\n    echoLine(\"    }\");\n    echo(\"    function on(name\");\n    echo(ts(\": string\") );\n    echo(\", cb\");\n    echo(ts(\": (a1?, a2?, a3?) => any\") );\n    echoLine(\"){\");\n    echo(\"        \");\n    echo(prefix );\n    echo(\"handlers[name] || (\");\n    echo(prefix );\n    echoLine(\"handlers[name] = []);\");\n    echo(\"        \");\n    echo(prefix );\n    echoLine(\"handlers[name].push(cb);\");\n    echo(\"    }\");\n    for(let i = 0, _a = dfaTables; i < _a.length; i++){\n    printLexActionsFunc(_a[i], i);\n} \n    echoLine(\"\");\n    echoLine(\"    /**\");\n    echoLine(\"     *  do a lexical action\");\n    echoLine(\"     *  @api private\");\n    echoLine(\"     *  @internal\");\n    echoLine(\"     */\");\n    echo(\"    function \");\n    echo(prefix );\n    echo(\"doLexAction(lexstate\");\n    echo(ts(\": number\") );\n    echo(\", state\");\n    echo(ts(\": number\") );\n    echoLine(\"){\");\n    echo(\"        switch(lexstate){\");\n    for(let i = 0;i < dfaTables.length;i++){ \n    echoLine(\"\");\n    echo(\"            case \");\n    echo(i );\n    echoLine(\":\");\n    echo(\"                \");\n    echo(prefix );\n    echo(\"doLexAction\");\n    echo(i );\n    echoLine(\"(state);\");\n    echo(\"                break;\");\n    } \n    echoLine(\"\");\n    echoLine(\"            default:;\");\n    echoLine(\"        }\");\n    echo(\"        \");\n    echo(prefix );\n    echo(\"tokenQueue.length > 0 && \");\n    echo(prefix );\n    echoLine(\"acceptToken(null);\");\n    echoLine(\"    }\");\n    echo(\"    function \");\n    echo(prefix );\n    echo(\"rollback()\");\n    echo(ts(\": string\") );\n    echoLine(\"{\");\n    echo(\"        var ret = \");\n    echo(prefix );\n    echo(\"matched.substr(\");\n    echo(prefix );\n    echo(\"matched.length - \");\n    echo(prefix );\n    echo(\"backupCount, \");\n    echo(prefix );\n    echoLine(\"backupCount);\");\n    echo(\"        \");\n    echo(prefix );\n    echo(\"matched = \");\n    echo(prefix );\n    echo(\"matched.substr(0, \");\n    echo(prefix );\n    echo(\"matched.length - \");\n    echo(prefix );\n    echoLine(\"backupCount);\");\n    echo(\"        \");\n    echo(prefix );\n    echoLine(\"backupCount = 0;\");\n    echo(\"        \");\n    echo(prefix );\n    echo(\"line = \");\n    echo(prefix );\n    echoLine(\"marker.line;\");\n    echo(\"        \");\n    echo(prefix );\n    echo(\"column = \");\n    echo(prefix );\n    echoLine(\"marker.column;\");\n    echo(\"        \");\n    echo(prefix );\n    echo(\"state = \");\n    echo(prefix );\n    echoLine(\"marker.state;\");\n    echo(\"        \");\n    echo(prefix );\n    echoLine(\"marker.state = -1;\");\n    echoLine(\"        return ret;\");\n    echoLine(\"    }\");\n    echo(\"    function \");\n    echo(prefix );\n    echoLine(\"mark(){\");\n    echo(\"        \");\n    echo(prefix );\n    echo(\"marker.state = \");\n    echo(prefix );\n    echoLine(\"state;\");\n    echo(\"        \");\n    echo(prefix );\n    echo(\"marker.line = \");\n    echo(prefix );\n    echoLine(\"line;\");\n    echo(\"        \");\n    echo(prefix );\n    echo(\"marker.column = \");\n    echo(prefix );\n    echoLine(\"column;\");\n    echo(\"        \");\n    echo(prefix );\n    echoLine(\"backupCount = 0;\");\n    echoLine(\"    }\");\n    echo(\"    function \");\n    echo(prefix );\n    echo(\"consume(c\");\n    echo(ts(\": number\") );\n    echoLine(\"){\");\n    echo(\"        // c === \");\n    echo(prefix );\n    echo(\"eol ? (\");\n    echo(prefix );\n    echo(\"line++, \");\n    echo(prefix );\n    echo(\"column = 0) : (\");\n    echo(prefix );\n    echoLine(\"column += c > 0xff ? 2 : 1);\");\n    echo(\"        switch(\");\n    echo(prefix);\n    echoLine(\"lineTerm){\");\n    echoLine(\"            case LineTerm.NONE:\");\n    echo(\"                \");\n    echo(prefix );\n    echoLine(\"column += c > 0xff ? 2 : 1;\");\n    echoLine(\"                break;\");\n    echoLine(\"            case LineTerm.CR:\");\n    echo(\"                c === \");\n    echo(prefix );\n    echo(\"cr ? (\");\n    echo(prefix );\n    echo(\"line++, \");\n    echo(prefix );\n    echo(\"column = 0) : (\");\n    echo(prefix );\n    echoLine(\"column += c > 0xff ? 2 : 1);\");\n    echoLine(\"                break;\");\n    echoLine(\"            case LineTerm.LF:\");\n    echo(\"                c === \");\n    echo(prefix );\n    echo(\"lf ? (\");\n    echo(prefix );\n    echo(\"line++, \");\n    echo(prefix );\n    echo(\"column = 0) : (\");\n    echo(prefix );\n    echoLine(\"column += c > 0xff ? 2 : 1);\");\n    echoLine(\"                break;\");\n    echoLine(\"            case LineTerm.CRLF:\");\n    echo(\"                if(\");\n    echo(prefix );\n    echoLine(\"lastCR){\");\n    echo(\"                    if(c === \");\n    echo(prefix );\n    echoLine(\"lf){\");\n    echo(\"                        \");\n    echo(prefix );\n    echo(\"line++, \");\n    echo(prefix );\n    echoLine(\"column = 0;\");\n    echo(\"                        \");\n    echo(prefix );\n    echoLine(\"lastCR = false;\");\n    echoLine(\"                    }\");\n    echoLine(\"                    else {\");\n    echo(\"                        \");\n    echo(prefix );\n    echoLine(\"column += c > 0xff ? 2 : 1;\");\n    echo(\"                        \");\n    echo(prefix );\n    echo(\"lastCR = c === \");\n    echo(prefix );\n    echoLine(\"cr;\");\n    echoLine(\"                    }\");\n    echoLine(\"                }\");\n    echoLine(\"                else {\");\n    echo(\"                    \");\n    echo(prefix );\n    echoLine(\"column += c > 0xff ? 2 : 1;\");\n    echo(\"                    \");\n    echo(prefix );\n    echo(\"lastCR = c === \");\n    echo(prefix );\n    echoLine(\"cr;\");\n    echoLine(\"                }\");\n    echoLine(\"                break;\");\n    echoLine(\"            case LineTerm.AUTO:\");\n    echo(\"                if(\");\n    echo(prefix );\n    echoLine(\"lastCR){\");\n    echo(\"                    if(c === \");\n    echo(prefix );\n    echoLine(\"lf){\");\n    echo(\"                        \");\n    echo(prefix );\n    echo(\"line++, \");\n    echo(prefix );\n    echoLine(\"column = 0;\");\n    echo(\"                        \");\n    echo(prefix );\n    echoLine(\"lastCR = false;\");\n    echo(\"                        \");\n    echo(prefix);\n    echoLine(\"lineTerm = LineTerm.CRLF;\");\n    echoLine(\"                    }\");\n    echoLine(\"                    else {\");\n    echo(\"                        \");\n    echo(prefix );\n    echo(\"line++, \");\n    echo(prefix );\n    echoLine(\"column = 0;\");\n    echo(\"                        \");\n    echo(prefix);\n    echoLine(\"lineTerm = LineTerm.CR;\");\n    echo(\"                        c === \");\n    echo(prefix );\n    echo(\"cr ? (\");\n    echo(prefix );\n    echo(\"line++, \");\n    echo(prefix );\n    echo(\"column = 0) : (\");\n    echo(prefix );\n    echoLine(\"column += c > 0xff ? 2 : 1);\");\n    echoLine(\"                    }\");\n    echoLine(\"                }\");\n    echo(\"                else if(c === \");\n    echo(prefix );\n    echoLine(\"lf){\");\n    echo(\"                    \");\n    echo(prefix );\n    echo(\"line++, \");\n    echo(prefix );\n    echoLine(\"column = 0;\");\n    echo(\"                    \");\n    echo(prefix);\n    echoLine(\"lineTerm = LineTerm.LF;\");\n    echoLine(\"                }\");\n    echoLine(\"                else {\");\n    echo(\"                    \");\n    echo(prefix );\n    echoLine(\"column += c > 0xff ? 2 : 1;\");\n    echo(\"                    \");\n    echo(prefix );\n    echo(\"lastCR = c === \");\n    echo(prefix );\n    echoLine(\"cr;\");\n    echoLine(\"                }\");\n    echoLine(\"                break;\");\n    echoLine(\"        }\");\n    echo(\"        \");\n    echo(prefix );\n    echoLine(\"matched += String.fromCharCode(c);\");\n    echo(\"        \");\n    echo(prefix );\n    echo(\"marker.state !== -1 && (\");\n    echo(prefix );\n    echoLine(\"backupCount++);\");\n    echoLine(\"        return true;\");\n    echoLine(\"    }\");\n    echoLine(\"    /**\");\n    echoLine(\"     *  accept a character\");\n    echoLine(\"     *  @return - true if the character is consumed, false if not consumed\");\n    echoLine(\"     *  @api private\");\n    echoLine(\"     *  @internal\");\n    echoLine(\"     */\");\n    echo(\"    function \");\n    echo(prefix );\n    echo(\"acceptChar(ccode\");\n    echo(ts(\": number\") );\n    echoLine(\"){\");\n    echo(\"        var lexstate = \");\n    echo(prefix );\n    echo(\"lexState[\");\n    echo(prefix );\n    echoLine(\"lexState.length - 1];\");\n    echo(\"        var ltable = \");\n    echo(prefix );\n    echoLine(\"dfaTables[lexstate];\");\n    echo(\"        var isEnd = ltable.isEnd[\");\n    echo(prefix );\n    echoLine(\"state] === 1;\");\n    echo(\"        var hasArc = ltable.hasArc[\");\n    echo(prefix );\n    echoLine(\"state] === 1;\");\n    echoLine(\"        // get the class of the given character\");\n    echo(\"        var cl = ccode < ltable.maxAsicii ? ltable.classTable[ccode] : \");\n    echo(prefix );\n    echoLine(\"findUnicodeClass(ltable.unicodeClassTable, ccode);\");\n    echoLine(\"        // find the next state to go\");\n    echoLine(\"        var nstate = -1;\");\n    echoLine(\"        if(cl !== -1){\");\n    echo(\"            var ind = ltable.disnext[\");\n    echo(prefix );\n    echoLine(\"state] + cl;\");\n    echo(\"            if(ind >= 0 && ind < ltable.pnext.length && ltable.checknext[ind] === \");\n    echo(prefix );\n    echoLine(\"state){\");\n    echoLine(\"                nstate = ltable.pnext[ind];\");\n    echoLine(\"            }\");\n    echoLine(\"        }\");\n    echoLine(\"        if(isEnd){\");\n    echoLine(\"            // if current state is a terminate state, be careful\");\n    echoLine(\"            if(hasArc){\");\n    echoLine(\"                if(nstate === -1){\");\n    echoLine(\"                    // nowhere to go, stay where we are\");\n    echo(\"                    \");\n    echo(prefix );\n    echo(\"doLexAction(lexstate, \");\n    echo(prefix );\n    echoLine(\"state);\");\n    echoLine(\"                    // recover\");\n    echo(\"                    \");\n    echo(prefix );\n    echoLine(\"marker.state = -1;\");\n    echo(\"                    \");\n    echo(prefix );\n    echoLine(\"backupCount = 0;\");\n    echo(\"                    \");\n    echo(prefix );\n    echoLine(\"state = 0;                    \");\n    echoLine(\"                    // character not consumed\");\n    echoLine(\"                    return false;\");\n    echoLine(\"                }\");\n    echoLine(\"                else {\");\n    echoLine(\"                    // now we can either go to that new state, or stay where we are\");\n    echoLine(\"                    // it is prefered to move forward, but that could lead to errors,\");\n    echoLine(\"                    // so we need to memorize this state before move on, in case if \");\n    echoLine(\"                    // an error occurs later, we could just return to this state.\");\n    echo(\"                    \");\n    echo(prefix );\n    echoLine(\"mark();\");\n    echo(\"                    \");\n    echo(prefix );\n    echoLine(\"state = nstate;\");\n    echo(\"                    return \");\n    echo(prefix );\n    echoLine(\"consume(ccode);\");\n    echoLine(\"                }\");\n    echoLine(\"            }\");\n    echoLine(\"            else {\");\n    echoLine(\"                // current state doesn't lead to any state, just stay here.\");\n    echo(\"                \");\n    echo(prefix );\n    echo(\"doLexAction(lexstate, \");\n    echo(prefix );\n    echoLine(\"state);\");\n    echoLine(\"                // recover\");\n    echo(\"                \");\n    echo(prefix );\n    echoLine(\"marker.state = -1;\");\n    echo(\"                \");\n    echo(prefix );\n    echoLine(\"backupCount = 0;\");\n    echo(\"                \");\n    echo(prefix );\n    echoLine(\"state = 0;\");\n    echoLine(\"                // character not consumed\");\n    echoLine(\"                return false;\");\n    echoLine(\"            }\");\n    echoLine(\"        }\");\n    echoLine(\"        else {\");\n    echoLine(\"            if(nstate === -1){\");\n    echoLine(\"                // nowhere to go at current state, error may have occured.\");\n    echoLine(\"                // check marker to verify that\");\n    echo(\"                if(\");\n    echo(prefix );\n    echoLine(\"marker.state !== -1){\");\n    echoLine(\"                    // we have a previously marked state, which is a terminate state.\");\n    echo(\"                    var s = \");\n    echo(prefix );\n    echoLine(\"rollback();\");\n    echo(\"                    \");\n    echo(prefix );\n    echo(\"doLexAction(lexstate, \");\n    echo(prefix );\n    echoLine(\"state);\");\n    echo(\"                    \");\n    echo(prefix );\n    echoLine(\"state = 0;\");\n    echoLine(\"                    accept(s);\");\n    echoLine(\"                    // character not consumed\");\n    echoLine(\"                    return false;\");\n    echoLine(\"                }\");\n    echoLine(\"                else {\");\n    echoLine(\"                    // error occurs\");\n    echo(\"                    \");\n    echo(prefix );\n    echo(\"emit('lexicalerror', String.fromCharCode(ccode), \");\n    echo(prefix );\n    echo(\"line, \");\n    echo(prefix );\n    echoLine(\"column);\");\n    echoLine(\"                    // force consume\");\n    echoLine(\"                    return true;\");\n    echoLine(\"                }\");\n    echoLine(\"            }\");\n    echoLine(\"            else {\");\n    echo(\"                \");\n    echo(prefix );\n    echoLine(\"state = nstate;\");\n    echoLine(\"                // character consumed\");\n    echo(\"                return \");\n    echo(prefix );\n    echoLine(\"consume(ccode);\");\n    echoLine(\"            }\");\n    echoLine(\"        }\");\n    echoLine(\"    }\");\n    echo(\"    function \");\n    echo(prefix );\n    echoLine(\"acceptEOF(){\");\n    echo(\"        if(\");\n    echo(prefix );\n    echoLine(\"state === 0){\");\n    echoLine(\"            // recover\");\n    echo(\"            \");\n    echo(prefix );\n    echoLine(\"prepareToken(0);\");\n    echo(\"            \");\n    echo(prefix );\n    echoLine(\"acceptToken(null);\");\n    echoLine(\"            return true;\");\n    echoLine(\"        }\");\n    echoLine(\"        else {\");\n    echo(\"            var lexstate = \");\n    echo(prefix );\n    echo(\"lexState[\");\n    echo(prefix );\n    echoLine(\"lexState.length - 1];\");\n    echo(\"            var ltable = \");\n    echo(prefix );\n    echoLine(\"dfaTables[lexstate];\");\n    echo(\"            var isEnd = ltable.isEnd[\");\n    echo(prefix );\n    echoLine(\"state];\");\n    echoLine(\"            if(isEnd){\");\n    echo(\"                \");\n    echo(prefix );\n    echo(\"doLexAction(lexstate, \");\n    echo(prefix );\n    echoLine(\"state);\");\n    echo(\"                \");\n    echo(prefix );\n    echoLine(\"state = 0;\");\n    echo(\"                \");\n    echo(prefix );\n    echoLine(\"marker.state = -1;\");\n    echoLine(\"                return false;\");\n    echoLine(\"            }\");\n    echo(\"            else if(\");\n    echo(prefix );\n    echoLine(\"marker.state !== -1){\");\n    echo(\"                var s = \");\n    echo(prefix );\n    echoLine(\"rollback();\");\n    echo(\"                \");\n    echo(prefix );\n    echo(\"doLexAction(lexstate, \");\n    echo(prefix );\n    echoLine(\"state);\");\n    echo(\"                \");\n    echo(prefix );\n    echoLine(\"state = 0;\");\n    echoLine(\"                accept(s);\");\n    echoLine(\"                return false;\");\n    echoLine(\"            }\");\n    echoLine(\"            else {\");\n    echo(\"                \");\n    echo(prefix );\n    echo(\"emit('lexicalerror', '', \");\n    echo(prefix );\n    echo(\"line, \");\n    echo(prefix );\n    echoLine(\"column);\");\n    echoLine(\"                return true;\");\n    echoLine(\"            }\");\n    echoLine(\"        }\");\n    echoLine(\"    }\");\n    echoLine(\"    function setLineTerminator(lt: LineTerm){\");\n    echo(\"        \");\n    echo(prefix );\n    echoLine(\"lineTerm = lt;\");\n    echoLine(\"    }\");\n    echoLine(\"    function enableBlocks(){\");\n    echo(\"        \");\n    echo(prefix );\n    echoLine(\"enableBlock = true;\");\n    echoLine(\"    }\");\n    echoLine(\"    function disableBlocks(){\");\n    echo(\"        \");\n    echo(prefix );\n    echoLine(\"enableBlock = false;\");\n    echoLine(\"    }\");\n    echoLine(\"    /**\");\n    echoLine(\"     *  input a string\");\n    echoLine(\"     *  @api public\");\n    echoLine(\"     */\");\n    echo(\"    function accept(s\");\n    echo(ts(\": string\") );\n    echoLine(\"){\");\n    echo(\"        for(var i = 0; i < s.length && !\");\n    echo(prefix );\n    echoLine(\"stop;){\");\n    echo(\"            \");\n    echo(prefix );\n    echoLine(\"acceptChar(s.charCodeAt(i)) && i++;\");\n    echoLine(\"        }\");\n    echoLine(\"    }\");\n    echoLine(\"    /**\");\n    echoLine(\"     *  tell the compiler that end of file is reached\");\n    echoLine(\"     *  @api public\");\n    echoLine(\"     */\");\n    echoLine(\"    function end(){\");\n    echo(\"        while(!\");\n    echo(prefix );\n    echo(\"stop && !\");\n    echo(prefix );\n    echoLine(\"acceptEOF());\");\n    echo(\"        \");\n    echo(prefix );\n    echoLine(\"stop = true;\");\n    echoLine(\"    }\");\n    echoLine(\"    function halt(){\");\n    echo(\"        \");\n    echo(prefix );\n    echoLine(\"stop = true;\");\n    echo(\"    }\");\n    function printReduceActions(){\n    let codegen = {\n        raw(s: string){\n            echo(s);\n        },\n        beginBlock(pos: Position, always: boolean){\n            !always && echo(`if(${prefix}enableBlock)`);\n            echo('{');\n        },\n        endBlock(pos: Position){\n            echo('} ');\n        },\n        pushLexState(n: number){\n            echo(`${prefix}lexState.push(${n})`);\n        },\n        switchToLexState(n: number){\n            echo(`${prefix}lexState[${prefix}lexState.length - 1] = ${n}`);\n        },\n        popLexState(){\n            echo(`${prefix}lexState.pop()`);\n        },\n        setImg(n: string){\n            echo(`${prefix}setImg(\"${n}\")`);\n        },\n        tokenObj(){\n            echo(prefix + 'token');\n        }, // $token\n        matched(){\n            echo(prefix + 'matched');\n        },\n        lhs(){\n            echo(prefix + \"top\");\n        }, // $$\n        emitToken(tid: number){\n            echo(`${prefix}tokenQueue.push(new Token(${tid}, null, -1, 0, 0, 0))`);\n        }\n    };\n    for(let rule of input.file.grammar.rules){\n        if(rule.action !== null){ \n    echoLine(\"\");\n    echo(\"            case \");\n    echo(rule.index );\n    echoLine(\":\");\n    echo(\"                /* \");\n    echo(rule.toString() );\n    echo(\" */\");\n    for(let uvar in rule.vars){ \n    echoLine(\"\");\n    echo(\"                var \");\n    echo(uvar );\n    echo(\" = \");\n    echo(prefix );\n    echo(\"sematicS[\");\n    echo(prefix );\n    echo(\"sp - \");\n    echo(rule.rhs.length - rule.vars[uvar].val );\n    echo(\"];\");\n    }\n            for(let uvar2 in rule.usedVars){ \n    echoLine(\"\");\n    echo(\"                var \");\n    echo(uvar2 );\n    echo(\" = \");\n    echo(prefix );\n    echo(\"sematicS[\");\n    echo(prefix );\n    echo(\"sp - \");\n    echo(rule.usedVars[uvar2].val );\n    echo(\"];\");\n    }\n            echoLine('');\n            echo('                ');\n            rule.action.toCode(codegen); \n    echoLine(\"\");\n    echo(\"                break;\");\n    }\n    }\n} \n    echoLine(\"\");\n    echo(\"    function \");\n    echo(prefix );\n    echo(\"doReduction(\");\n    echo(prefix );\n    echo(\"rulenum\");\n    echo(ts(\": number\") );\n    echoLine(\"){\");\n    echo(\"        var \");\n    echo(prefix );\n    echo(\"nt = \");\n    echo(prefix );\n    echo(\"lhs[\");\n    echo(prefix );\n    echoLine(\"rulenum];\");\n    echo(\"        var \");\n    echo(prefix );\n    echo(\"sp = \");\n    echo(prefix );\n    echoLine(\"sematicS.length;\");\n    echo(\"        var \");\n    echo(prefix );\n    echo(\"top = \");\n    echo(prefix );\n    echo(\"sematicS[\");\n    echo(prefix );\n    echo(\"sp - \");\n    echo(prefix );\n    echo(\"ruleLen[\");\n    echo(prefix );\n    echoLine(\"rulenum]] || null;\");\n    echo(\"        switch(\");\n    echo(prefix );\n    echo(\"rulenum){\");\n    printReduceActions(); \n    echoLine(\"\");\n    echoLine(\"        }\");\n    echo(\"        \");\n    echo(prefix );\n    echo(\"lrState.length -= \");\n    echo(prefix );\n    echo(\"ruleLen[\");\n    echo(prefix );\n    echoLine(\"rulenum];\");\n    echo(\"        var \");\n    echo(prefix );\n    echo(\"cstate = \");\n    echo(prefix );\n    echo(\"lrState[\");\n    echo(prefix );\n    echoLine(\"lrState.length - 1];\");\n    echo(\"        \");\n    echo(prefix );\n    echo(\"lrState.push(\");\n    echo(prefix );\n    echo(\"pgoto[\");\n    echo(prefix );\n    echo(\"disgoto[\");\n    echo(prefix );\n    echo(\"cstate] + \");\n    echo(prefix );\n    echoLine(\"nt]);\");\n    echoLine(\"\");\n    echo(\"        \");\n    echo(prefix );\n    echo(\"sematicS.length -= \");\n    echo(prefix );\n    echo(\"ruleLen[\");\n    echo(prefix );\n    echoLine(\"rulenum];\");\n    echo(\"        \");\n    echo(prefix );\n    echo(\"sematicS.push(\");\n    echo(prefix );\n    echoLine(\"top);\");\n    echoLine(\"    }\");\n    echo(\"    function \");\n    echo(prefix );\n    echo(\"acceptToken(tk\");\n    echo(ts(\": Token\") );\n    echoLine(\"){\");\n    echoLine(\"        // look up action table\");\n    echoLine(\"        var shifted = false;\");\n    echo(\"        tk !== null && \");\n    echo(prefix );\n    echoLine(\"tokenQueue.push(tk);\");\n    echo(\"        while(!\");\n    echo(prefix );\n    echo(\"stop && \");\n    echo(prefix );\n    echoLine(\"tokenQueue.length > 0){\");\n    echo(\"            var t = \");\n    echo(prefix );\n    echoLine(\"tokenQueue[0];\");\n    echo(\"            var cstate = \");\n    echo(prefix );\n    echo(\"lrState[\");\n    echo(prefix );\n    echoLine(\"lrState.length - 1];\");\n    echo(\"            var ind = \");\n    echo(prefix );\n    echoLine(\"disact[cstate] + t.id;\");\n    echoLine(\"            var act = 0;\");\n    echo(\"            if(ind < 0 || ind >= \");\n    echo(prefix );\n    echo(\"pact.length || \");\n    echo(prefix );\n    echoLine(\"checkact[ind] !== cstate){\");\n    echo(\"                act = -\");\n    echo(prefix );\n    echoLine(\"defred[cstate] - 1;\");\n    echoLine(\"            }\");\n    echoLine(\"            else {\");\n    echo(\"                act = \");\n    echo(prefix );\n    echoLine(\"pact[ind];\");\n    echoLine(\"            }\");\n    echo(\"            if(act === \");\n    echo(prefix );\n    echoLine(\"actERR){\");\n    echoLine(\"                // explicit error\");\n    echo(\"                \");\n    echo(prefix );\n    echoLine(\"syntaxError(t);\");\n    echo(\"                \");\n    echo(prefix );\n    echoLine(\"tokenQueue.shift();\");\n    echoLine(\"            }\");\n    echoLine(\"            else if(act > 0){\");\n    echoLine(\"                // shift\");\n    echoLine(\"                if(t.id === 0){\");\n    echoLine(\"                    // end of file\");\n    echo(\"                    \");\n    echo(prefix );\n    echoLine(\"stop = true;\");\n    echo(\"                    \");\n    echo(prefix );\n    echoLine(\"emit('accept');\");\n    echo(\"                    \");\n    echo(prefix );\n    echoLine(\"tokenQueue.shift();\");\n    echoLine(\"                }\");\n    echoLine(\"                else {\");\n    echo(\"                    \");\n    echo(prefix );\n    echoLine(\"lrState.push(act - 1);\");\n    echo(\"                    \");\n    echo(prefix );\n    echo(\"sematicS.push(\");\n    echo(prefix );\n    echoLine(\"sematicVal);\");\n    echo(\"                    \");\n    echo(prefix );\n    echoLine(\"sematicVal = null;\");\n    echo(\"                    \");\n    echo(prefix );\n    echoLine(\"tryReduce();\");\n    echoLine(\"                    // token consumed\");\n    echo(\"                    \");\n    echo(prefix );\n    echoLine(\"tokenQueue.shift();\");\n    echoLine(\"                }\");\n    echoLine(\"            }\");\n    echoLine(\"            else if(act < 0){\");\n    echo(\"                \");\n    echo(prefix );\n    echoLine(\"doReduction(-act - 1);\");\n    echo(\"                \");\n    echo(prefix );\n    echoLine(\"tryReduce();\");\n    echoLine(\"            }\");\n    echoLine(\"            else {\");\n    echoLine(\"                // error\");\n    echo(\"                \");\n    echo(prefix );\n    echoLine(\"syntaxError(t);\");\n    echoLine(\"                // force consume\");\n    echo(\"                \");\n    echo(prefix );\n    echoLine(\"tokenQueue.shift();\");\n    echoLine(\"            }\");\n    echoLine(\"        }\");\n    echoLine(\"    }\");\n    echo(\"    function \");\n    echo(prefix );\n    echoLine(\"tryReduce(){\");\n    echo(\"        var cstate = \");\n    echo(prefix );\n    echo(\"lrState[\");\n    echo(prefix );\n    echoLine(\"lrState.length - 1];\");\n    echoLine(\"        var act;\");\n    echo(\"        while(\");\n    echo(prefix );\n    echo(\"disact[cstate] === -\");\n    echo(prefix );\n    echo(\"tokenCount && (act = \");\n    echo(prefix );\n    echoLine(\"defred[cstate]) !== -1){\");\n    echo(\"            \");\n    echo(prefix );\n    echoLine(\"doReduction(act);\");\n    echo(\"            cstate = \");\n    echo(prefix );\n    echo(\"lrState[\");\n    echo(prefix );\n    echoLine(\"lrState.length - 1];\");\n    echoLine(\"        }\");\n    echoLine(\"    }\");\n    echo(\"    function \");\n    echo(prefix );\n    echo(\"syntaxError(t\");\n    echo(ts(\": Token\") );\n    echoLine(\"){\");\n    echoLine(\"        var msg = \\\"unexpected token \\\" + t.toString() + \\\", expecting one of the following token(s):\\\\n\\\"\");\n    echo(\"        msg += \");\n    echo(prefix );\n    echo(\"expected(\");\n    echo(prefix );\n    echo(\"lrState[\");\n    echo(prefix );\n    echoLine(\"lrState.length - 1]);\");\n    echo(\"        \");\n    echo(prefix );\n    echoLine(\"emit(\\\"syntaxerror\\\", msg, t);\");\n    echoLine(\"    }\");\n    echo(\"    function \");\n    echo(prefix );\n    echo(\"expected(state\");\n    echo(ts(\": number\") );\n    echoLine(\"){\");\n    echo(\"        var dis = \");\n    echo(prefix );\n    echoLine(\"disact[state];\");\n    echoLine(\"        var ret = '';\");\n    echo(\"        function expect(tk\");\n    echo(ts(\": number\") );\n    echoLine(\"){\");\n    echoLine(\"            var ind = dis + tk;\");\n    echo(\"            if(ind < 0 || ind >= \");\n    echo(prefix );\n    echo(\"pact.length || state !== \");\n    echo(prefix );\n    echoLine(\"checkact[ind]){\");\n    echo(\"                return \");\n    echo(prefix );\n    echoLine(\"defred[state] !== -1;\");\n    echoLine(\"            }\");\n    echoLine(\"            else {\");\n    echoLine(\"                return true;\");\n    echoLine(\"            }\");\n    echoLine(\"        }\");\n    echo(\"        for(var tk = 0; tk < \");\n    echo(prefix );\n    echoLine(\"tokenCount; tk++){\");\n    echoLine(\"            expect(tk) && (ret += \\\"    \\\" + tokenToString(tk) + \\\" ...\\\" + '\\\\n');\");\n    echoLine(\"        }\");\n    echoLine(\"        return ret;\");\n    echoLine(\"    }\");\n    echoLine(\"}\");\n    echo(n(input.file.epilogue) );\n\n}","import { TemplateInput, TemplateOutput } from './def';\nimport { OutputStream } from '../util/io';\n\nimport tsRenderer from './templates/ts';\n\ninterface FileCreator extends TemplateOutput{\n    save(fname: string);\n    write(s: string);\n    writeln(s: string);\n};\n\nvar templates: {[s: string]: (input: TemplateInput, fc: FileCreator) => any} = {};\n\nexport function defineTemplate(name: string, render: (input: TemplateInput, fc: FileCreator) => any){\n    templates[name] = render;\n}\n\nexport function generateCode(lang: string, input: TemplateInput, fc: FileCreator){\n    let g = templates[lang];\n    if(g === undefined){\n        throw (`template for language \"${lang}\" is not implemented yet`);\n    }\n    else {\n        templates[lang](input, fc);\n    }\n}\n\nexport function templateExists(t: string){\n    return templates[t] !== undefined;\n}\nexport function listTemplates(): string[]{\n    return Object.keys(templates);\n}\n\ndefineTemplate('typescript', (input, fc) => {\n    tsRenderer(input, fc);\n    fc.save(`${input.file.name}.ts`);\n});\ndefineTemplate('javascript', (input, fc) => {\n    tsRenderer(input, fc);\n    fc.save(`${input.file.name}.js`);\n});","import { IntervalSet } from \"./interval-set\";\n\ninterface ClassDesc<T>{\n    id: number;\n    data: T[];\n};\n\ninterface ClassFinder<T>{\n    addClass(set: IntervalSet<any>, data: T);\n    done(): { classCount: number, classSet: IntervalSet<ClassDesc<T>> };\n};\n\nexport function createClassFinder<T>(): ClassFinder<T>{\n    let classCount = 0;\n    let lastClassCount = 0;\n    let classMap: number[] = [];\n    let classSet = new IntervalSet<ClassDesc<T>>({\n        createData: () => ({ id: -1, data: [] }),\n        stringify: n => `(${n.id})`,\n        union(dest, src){\n            if(dest.id === -1){\n                dest.id = src.id;\n            }\n            else if(dest.id < lastClassCount){\n                dest.id = classMap[dest.id] !== undefined ? classMap[dest.id] : (classMap[dest.id] = classCount++);\n            }\n            for(let d of src.data){\n                dest.data.push(d);\n            }\n        }\n    });\n    return {\n        addClass,\n        done\n    };\n    function addClass(set: IntervalSet<any>, data: T){\n        let cid = classCount;\n        lastClassCount = classCount++;\n        classMap.length = 0;\n        set.forEach((a, b, it) => {\n            classSet.add(a, b, { id: cid, data: [data] });\n        });\n    }\n    function done(){\n        classMap.length = 0;\n        classCount = 0;\n        classSet.forEach((a, b, it) => {\n            it.data.id = classMap[it.data.id] !== undefined ? classMap[it.data.id] : (classMap[it.data.id] = classCount++);\n        });\n        return { classCount, classSet };\n    }\n}","import { DFA } from './dfa';\nimport { initArray } from '../util/initarray';\nimport { createClassFinder } from '../util/class-detect';\nimport { Arc, State } from './state';\nimport { compress, Table } from '../util/compress';\nimport { OutputStream } from '../util/io';\n\nfunction arrayWrapper<T>(stateCount: number, classCount: number, rawTable: Arc<T>[]): Table{\n    let emCount: number[] = [];\n    for(let state = 0;state < stateCount;state++){\n        emCount.push(0);\n        for(let t = 0; t < classCount; t++){\n            rawTable[state * classCount + t] === null && (emCount[state]++);\n        }\n    }\n    return {\n        rows: stateCount,\n        columns: classCount,\n        isEmpty(state, c){\n            return rawTable[state * classCount + c] === null;\n        },\n        emptyCount(c){\n            return emCount[c];\n        }\n    };\n}\n\nexport class DFATable<T>{\n    states: State<T>[];\n    classCount: number;\n    pnext: Arc<T>[];\n    disnext: number[];\n    checknext: number[];\n\n    classTable: number[];\n    unicodeClassTable: number[];\n\n    private _trim(){\n        while(this.pnext[this.pnext.length - 1] === null){\n            this.pnext.pop();\n            this.checknext.pop();\n        }\n    }\n    constructor(dfa: DFA<T>, public maxAsicii: number = 255){\n        function emitClassInterval(a: number, b: number, cl: number){\n            for(; a <= b; a++){\n                classTable[a] = cl;\n            }\n        }\n        var cf = createClassFinder<Arc<T>>();\n        dfa.forEachArc((arc, from, to) => {\n            cf.addClass(arc.chars, arc);\n        });\n        var r = cf.done();\n        this.classCount = r.classCount;\n        this.states = dfa.states;\n        var classTable: number[] = this.classTable = initArray<number>(maxAsicii + 1, i => -1);   \n        var unicodeClassTable: number[] = this.unicodeClassTable = [];\n        var rawTable = initArray<Arc<T>>(r.classCount * dfa.states.length, i => null);\n        r.classSet.forEach((a, b, it) => {\n            if(a > maxAsicii){\n                unicodeClassTable.push(it.data.id, a, b);\n            }\n            else if(b <= maxAsicii){\n                emitClassInterval(a, b, it.data.id);\n            }\n            else {\n                emitClassInterval(a, maxAsicii, it.data.id);\n                maxAsicii < b && unicodeClassTable.push(it.data.id, maxAsicii + 1, b);\n            }\n            for(let arc of it.data.data){\n                rawTable[arc.from.index * r.classCount + it.data.id] = arc;\n            }\n        });\n        \n        var compressed = compress(arrayWrapper(this.states.length, r.classCount, rawTable));\n        this.disnext = compressed.dps;\n        this.pnext = initArray<Arc<T>>(compressed.len, i => null);\n        this.checknext = initArray<number>(compressed.len, i => -1);\n        for(let s = 0; s < this.states.length; s++){\n            for(let c = 0; c < this.classCount; c++){\n                let arc = rawTable[s * this.classCount + c];\n                if(arc !== null){\n                    this.pnext[this.disnext[s] + c] = arc;\n                    this.checknext[this.disnext[s] + c] = s;\n                }\n            }\n        }\n        this._trim();\n    }\n    lookup(s: number, c: number): Arc<T>{\n        let ind = this.disnext[s] + c;\n        if(ind >= 0 && ind < this.pnext.length && this.checknext[ind] === s){\n            return this.pnext[ind];\n        }\n        else {\n            return null;\n        }\n    }\n    print(os: OutputStream){\n        function char(c: number){\n            if(c >= 0x20 && c <= 0x7e){\n                return \"'\" + String.fromCharCode(c) + \"'\";\n            }\n            else {\n                return `\\\\x${c.toString(16)}`;\n            }\n        }\n        let tl = 0;\n        for(let c = 0; c < this.classTable.length; c++){\n            if(this.classTable[c] !== -1) {\n                os.write(`${char(c)} -> c${this.classTable[c]}, `);\n                tl++ > 9 && (os.writeln(), tl = 0);\n            }\n        }\n        os.writeln();\n        tl = 0;\n        for(let c = 0, _a = this.unicodeClassTable; c < _a.length; c += 3){\n            os.write(`\\\\x${_a[c + 1]}-\\\\x${_a[c + 2]} -> c${_a[c]}, `);\n            tl++ > 4 && (os.writeln(), tl = 0);\n        }\n        os.writeln();\n        for(let s = 0; s < this.states.length; s++){\n            os.writeln(`state ${s}:`);\n            let state = this.states[s];\n            state.endAction !== null && os.writeln(`    end = ${state.endAction.id}`);\n            for(let c = 0; c < this.classCount; c++){\n                let arc = this.lookup(s, c);\n                arc !== null && os.writeln(`    c${c}: state ${arc.to.index}`);\n            }\n        }\n    }\n}","import { genItemSets,genParseTable, Conflict } from '../grammar/ptable-gen';\nimport { lexer } from '../lexer/pattern';\nimport { testParse } from './parse-test';\nimport { YYTAB } from '../util/common';\nimport { File } from '../parser/file';\nimport { ItemSet } from '../grammar/item-set';\nimport { ParseTable, IParseTable, printParseTable } from '../grammar/ptable';\nimport { TokenDef } from '../grammar/token-entry';\nimport { NtDef } from '../grammar/grammar';\nimport { List } from '../util/list';\nimport { OutputStream, StringIS, endl } from '../util/io';\nimport { Context } from '../util/context';\nimport { JsccError, JsccWarning, Option } from '../util/E';\nimport { CompressedPTable } from '../grammar/ptable-compress';\nimport { TemplateInput } from '../codegen/def';\nimport { parse } from '../parser/parser';\nimport { templateExists, listTemplates } from '../codegen/template';\nimport { markPosition } from '../parser/node';\nimport { DFATable } from '../lexer/dfa-table';\nimport { LexAction } from '../lexer/action';\n\nexport interface Result extends Context{\n    warn(w: JsccWarning);\n    err(e: JsccError);\n    printItemSets(stream: OutputStream);\n    printTable (os: OutputStream);\n    printDFA(os: OutputStream);\n    testParse(tokens: string[], onErr: (msg: string) => any): string[];\n    printError(os: OutputStream, opt?: Option);\n    printWarning(os: OutputStream, opt?: Option);\n    printDetailedTime(os: OutputStream);\n    hasWarning(): boolean;\n    hasError(): boolean;\n    warningSummary(): string;\n    getTemplateInput(): TemplateInput;\n    isTerminated(): boolean;\n}\nexport function genResult(source: string, fname: string): Result{\n    let file: File;\n    let itemSets: List<ItemSet>;\n    let iterationCount: number;\n    let parseTable: CompressedPTable;\n\n    let errors: JsccError[] = [];\n    let warnings: JsccError[] = [];\n    let needLinecbs: ((ctx: Context, lines: string[]) => any)[] = [];\n    let terminated = false;\n\n    let timers: {name: string, start: Date, end: Date}[] = [];\n\n    let ret: Result = {\n        warn,\n        err,\n        printItemSets,\n        printTable,\n        printDFA,\n        testParse: (tokens, onErr) => testParse(g, parseTable, tokens, onErr),\n        printError,\n        printWarning,\n        printDetailedTime,\n        hasWarning,\n        hasError,\n        warningSummary: () => `${warnings.length} warning(s), ${errors.length} error(s)`,\n        getTemplateInput,\n        requireLines: cb => needLinecbs.push(cb),\n        isTerminated: () => terminated,\n        beginTime,\n        endTime\n    };\n\n    var f = parse(ret, source);\n    let lines = source.split(f.eol);\n    for(let cb of needLinecbs){\n        cb(ret, lines);\n    }\n    if(hasError()){\n        terminated = true;\n        return ret;\n    }\n    f.name = fname;\n    var g = f.grammar;\n    file = f;\n    // we still could have errors here\n    for(var s of g.tokens){\n        if(!s.used){\n            let msg = `token <${s.sym}> is never used, definations are(is):` + endl;\n            for(let pos of s.appears){\n                msg += markPosition(pos, lines) + endl;\n            }\n            warn(new JsccWarning(msg));\n        }\n    }\n    for(var s2 of g.nts){\n        if(!s2.used){\n            warn(new JsccWarning(`non terminal \"${s2.sym}\" is unreachable`));\n        }\n    }\n    if(f.output !== null && !templateExists(f.output.val)){\n        let msg = `template for '${f.output.val}' is not implemented yet ` + markPosition(f.output, lines) + endl;\n        msg += 'available templates are: ' + listTemplates().join(', ');\n        err(new JsccError(msg));\n    }\n\n    if(hasError()){\n        terminated = true;\n        return ret;\n    }\n    // don't proceed if any error has been detected\n    beginTime('generate first sets');\n    g.genFirstSets();\n    endTime();\n\n    beginTime('generate item sets');\n    var temp = genItemSets(g);\n    endTime();\n\n    itemSets = temp.result;\n    iterationCount = temp.iterations;\n\n    beginTime('generate parse table');\n    var temp2 = genParseTable(g, itemSets);\n    endTime();\n\n    temp2.result.findDefAct();\n\n    beginTime('compress parse table');\n    parseTable = new CompressedPTable(temp2.result);\n    endTime();\n\n    for(let cf of temp2.conflicts){\n        warn(new JsccWarning(cf.toString()));\n    }\n\n    beginTime('generate lexical DFA tables');\n    for(let dfa of file.lexDFA){\n        file.dfaTables.push(new DFATable<LexAction>(dfa));\n    }\n    endTime();\n\n    return ret;\n\n    function beginTime(name: string){\n        timers.push({ name, start: new Date(), end: null});\n    }\n    function endTime(){\n        timers[timers.length - 1].end = new Date();\n    }\n    function warn(w: JsccWarning){\n        warnings.push(w);\n    }\n    function err(e: JsccError){\n        errors.push(e);\n    }\n    function printItemSets(os: OutputStream){\n        os.writeln(itemSets.size + ' state(s) in total,finished in ' + iterationCount + ' iteration(s).');\n        itemSets.forEach(function(s){\n            os.writeln(s.toString({ showTrailer: true }));\n        });\n    }\n    function printTable (os: OutputStream){\n        printParseTable(os, parseTable, itemSets);\n    }\n    function printDetailedTime(os: OutputStream){\n        for(var t of timers){\n            os.writeln(`${t.name}: ${(t.end.valueOf() - t.start.valueOf()) / 1000}s`);\n        }\n    }\n    function printDFA(os: OutputStream){\n        for(let s of file.dfaTables){\n            s.print(os);\n            os.writeln();\n            os.writeln();\n        }\n    }\n    function printError(os: OutputStream, opt?: Option){\n        for(let e of errors){\n            os.writeln(e.toString(opt));\n        }\n        os.writeln();\n    }\n    function printWarning(os: OutputStream, opt?: Option){\n        for(let w of warnings){\n            os.writeln(w.toString(opt));\n        }\n        os.writeln();\n    }\n    function hasWarning(){\n        return warnings.length > 0;\n    }\n    function hasError(){\n        return errors.length > 0;\n    }\n    function getTemplateInput(): TemplateInput{\n        return {\n            endl: file.eol,\n            output: f.output === null ? 'typescript' : f.output.val,\n            pt: parseTable,\n            file: file\n        };\n    }\n}\n","import * as io from './util/io';\nimport { Console } from './util/common';\nimport { genResult, Result } from './top/result';\nimport { generateCode } from './codegen/template';\n\nexport { Assoc } from './grammar/token-entry';\nexport { setDebugger, setTab } from './util/common';\nexport { defineTemplate } from './codegen/template';\nexport { io, genResult, generateCode };\n\n// debug\nimport * as debug from './debug';\nexport { debug };\n\nfunction changeSuffix(s: string, suf: string): string{\n    var i = s.lastIndexOf('.');\n    return (i === -1 ? s : s.substr(0,i)) + suf;\n}\nfunction deleteSuffix(s: string): string{\n    var i = s.lastIndexOf('.');\n    return i === -1 ? s : s.substr(0,i);\n}\n\nexport interface TSCCOptions{\n    /**\n     * file name (path) of the grammar file\n     */\n    inputFile: string;\n    /**\n     * content of the input grammar file\n     */\n    input: string;\n    /**\n     * name (path) of the output file, if not present, the output file won't be generated\n     */\n    outputFile?: string;\n\n    // interface\n    stdout: io.OutputStream;\n    writeFile(path: string, content: string): any;\n\n    // options\n    testInput?: string;\n    printDetailedTime: boolean;\n};\n\nexport function main(opt: TSCCOptions){\n    var stdout = opt.stdout;\n    var echo = (s: string | number) => stdout.writeln(s);\n    var result: Result = null;\n    do {\n        var startTime = new Date();\n\n        result = genResult(opt.input, deleteSuffix(opt.inputFile));\n        if(result.hasWarning()){\n            result.printWarning(stdout);\n        }\n        if(result.hasError()){\n            result.printError(stdout);\n            result.isTerminated() && echo('compilation terminated');\n            break;\n        }\n        if(opt.outputFile){\n            var out = new io.StringOS();\n            \n            result.beginTime('generate output file');\n            result.printDFA(out);\n            result.printTable(out);\n            result.endTime();\n    \n            opt.writeFile(opt.outputFile, out.s);\n        }\n    \n        var templateIn = result.getTemplateInput();\n        var current = new io.StringOS();\n\n        result.beginTime('generate parser code');\n        generateCode(templateIn.output, templateIn, {\n            save: fname => opt.writeFile(fname, current.s),\n            write: s => current.write(s),\n            writeln: s => current.writeln(s)\n        });\n        result.endTime();\n\n        if(opt.testInput){\n            echo(\"preparing for test\");\n            for(var line of result.testParse(opt.testInput.split(/[ ]+/g), msg => echo(msg))){\n                echo(line);\n            }\n        }\n\n        echo(`compilation done in ${(new Date().valueOf() - startTime.valueOf()) / 1000}s`);\n\n        opt.printDetailedTime && result.printDetailedTime(stdout);\n    }while(false);\n    echo(result.warningSummary());\n    return result.hasError() ? -1 : 0;\n}"],"names":["tslib_1.__extends","console","Assoc","Action","io.StringOS"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACO,IAAI,IAAI,GAAG,IAAI,CAAC;AAEvB;IAAA;KAMC;IAJG,8BAAO,GAAP,UAAQ,CAAmB;QACvB,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACnB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;KACpB;IACL,mBAAC;CAAA,IAAA;AACD;IAA8BA,4BAAY;IAA1C;QAAA,qEAQC;QAPU,OAAC,GAAW,EAAE,CAAC;;KAOzB;IANG,wBAAK,GAAL,UAAM,CAAkB;QACpB,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;KACf;IACD,wBAAK,GAAL;QACI,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC;KACf;IACL,eAAC;CAAA,CAR6B,YAAY,GAQzC;kBASwB,CAAS;IAC9B,IAAI,CAAC,GAAG,CAAC,CAAC;IACV,OAAO;QACH,IAAI,EAAE;YACF,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC;SAC9B;QACD,IAAI,EAAE;YACF,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;YACtB,CAAC,EAAE,CAAC;YACJ,OAAO,GAAG,CAAC;SACd;KACJ,CAAC;CACL;AACD,cAAqB,GAAgB;IACjC,IAAI,MAAM,GAAa,EAAE,CAAC;IAC1B,OAAO;QACH,IAAI,EAAE;YACF,OAAO,MAAM,CAAC,MAAM,GAAG,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;SACrE;QACD,IAAI,EAAE;YACF,IAAG,MAAM,CAAC,MAAM,GAAG,CAAC,EAAC;gBACjB,OAAO,MAAM,CAAC,GAAG,EAAE,CAAC;aACvB;iBACI;gBACD,OAAO,GAAG,CAAC,IAAI,EAAE,CAAC;aACrB;SACJ;QACD,MAAM,EAAE,UAAS,CAAS;YACtB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SAClB;KACJ,CAAC;CACL;;;;;;;;;;;ACzDM,IAAI,KAAK,GAAW,MAAM,CAAC;AAClC,AAAO,IAAI,KAAK,GAAY,IAAI,CAAC;AAOjC,AAAO,IAAIC,SAAO,GAAY;IAC1B,MAAM,YAAC,IAAI;QACP,IAAG,CAAC,IAAI,EAAC;YACL,MAAM,IAAI,KAAK,CAAC,kBAAkB,CAAC,CAAC;SACvC;KACJ;IACD,GAAG,YAAC,CAAC,KAAG;CACX,CAAC;AAEF,qBAA4B,CAAU;IAClC,OAAOA,SAAO,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC;CAC9B;AACD,gBAAuB,CAAS;IAC5B,OAAO,KAAK,GAAG,CAAC,CAAC;CACpB;;ACtBD,IAAM,KAAK,GAAG,EAAE,CAAC;AACjB;IAEI,gBAAoB,KAAa;QAAb,UAAK,GAAL,KAAK,CAAQ;QAC7B,IAAI,CAAC,EAAE,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC;QAC9C,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;YACnC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;SAClB;KACJ;IACM,oBAAG,GAAV,UAAW,CAAS;QAChB,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;QAClC,IAAI,MAAM,GAAG,CAAC,GAAG,KAAK,GAAG,KAAK,CAAC;QAC/B,IAAI,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;QAC1B,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC,CAAC;QAChC,OAAO,IAAI,KAAK,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;KAClC;IACM,uBAAM,GAAb;QACI,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;YACjC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;SACnB;KACJ;IACM,uBAAM,GAAb,UAAc,CAAS;QACnB,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;QAClC,IAAI,MAAM,GAAG,CAAC,GAAG,KAAK,GAAG,KAAK,CAAC;QAC/B,IAAI,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;QAC1B,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,IAAI,MAAM,CAAC,CAAC;QACjC,OAAO,IAAI,KAAK,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;KAClC;IACM,0BAAS,GAAhB;QACI,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;YACjC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;SAClB;KACJ;IACM,yBAAQ,GAAf,UAAgB,CAAS;QACrB,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;QAClC,IAAI,MAAM,GAAG,CAAC,GAAG,KAAK,GAAG,KAAK,CAAC;QAC/B,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC;KACjD;IACM,sBAAK,GAAZ,UAAa,GAAW,EAAE,IAAa;QACnC,IAAI,OAAO,GAAG,KAAK,CAAC;QACpB,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;YACjC,IAAI,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACtB,IAAI,MAAM,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACvB,IAAI,KAAK,MAAM,IAAI,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YAC/B,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC;YACrB,OAAO,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,IAAI,KAAK,OAAO,CAAC;SAC9C;QACD,OAAO,OAAO,CAAC;KAClB;IACM,gCAAe,GAAtB,UAAuB,GAAW;QAC9B,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;YACjC,IAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,EAAC;gBAC9B,OAAO,IAAI,CAAC;aACf;SACJ;QACD,OAAO,KAAK,CAAC;KAChB;IACM,uBAAM,GAAb,UAAc,GAAW;QACrB,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;YACjC,IAAG,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAC;gBACxB,OAAO,KAAK,CAAC;aAChB;SACJ;QACD,OAAO,IAAI,CAAC;KACf;IACM,wBAAO,GAAd,UAAe,EAAsB;QACjC,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,IAAI,CAAC,KAAK,EAAC,CAAC,EAAE,EAAC;YAC7B,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;SAC7B;KACJ;IACM,qBAAI,GAAX;QACI,IAAI,GAAG,GAAG,EAAE,CAAC;QACb,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;YACjC,GAAG,IAAI,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;SACxC;QACD,OAAO,GAAG,CAAC;KACd;IACL,aAAC;CAAA;;AC3ED;IAA8BD,4BAAM;IAChC,kBAAY,MAAc;eACtB,kBAAM,MAAM,CAAC;KAChB;IACD,2BAAQ,GAAR,UAAS,CAAa;QAClB,IAAI,GAAG,GAAG,EAAE,CAAC;QACb,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,IAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAC;YAChB,GAAG,IAAI,IAAI,CAAC;YACZ,KAAK,GAAG,KAAK,CAAC;SACjB;QACD,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,CAAC,CAAC,UAAU,EAAC,CAAC,EAAE,EAAC;YAC/B,IAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,EAAC;gBACpB,IAAG,CAAC,KAAK,EAAC;oBACN,GAAG,IAAI,GAAG,CAAC;iBACd;gBACD,GAAG,IAAI,GAAG,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC;gBACnC,KAAK,GAAG,KAAK,CAAC;aACjB;SACJ;QACD,OAAO,GAAG,CAAC;KACd;IACL,eAAC;CAAA,CAtB6B,MAAM;;ACEpC,IAAY,MAIX;AAJD,WAAY,MAAM;IACd,mCAAQ,CAAA;IACR,qCAAK,CAAA;IACL,uCAAM,CAAA;CACT,EAJW,MAAM,KAAN,MAAM,QAIjB;AAED;IASI,cAAY,IAAU,EAAE,EAAW;QAR5B,WAAM,GAAW,CAAC,CAAC;QAInB,UAAK,GAAY,IAAI,CAAC;QACtB,eAAU,GAAG,MAAM,CAAC,IAAI,CAAC;QACzB,YAAO,GAAY,IAAI,CAAC;QAG3B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,GAAG,GAAG,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;KAC9C;IACD,uBAAQ,GAAR;QACI,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;KAC7C;IACD,uBAAQ,GAAR;QACI,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KACrC;IACD,uBAAQ,GAAR,UAAS,GAAsD;QAAtD,oBAAA,EAAA,QAAsD;QAC3D,IAAI,OAAO,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,OAAO,KAAK,KAAK,CAAC;QAC5C,IAAI,WAAW,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,WAAW,KAAK,KAAK,CAAC;QACpD,AACA,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,OAAO,GAAG,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC;QAEzH,IAAI,CAAC,QAAQ,KAAK,GAAG,IAAI,GAAG,CAAC,CAAC;QAC9B,IAAG,WAAW,EAAC;YACX,QAAO,IAAI,CAAC,UAAU;gBAClB,KAAK,MAAM,CAAC,IAAI;oBAAE,GAAG,IAAI,KAAK,CAAC;oBAAA,MAAM;gBACrC,KAAK,MAAM,CAAC,KAAK;oBAAE,GAAG,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,GAAG,CAAC;oBAAA,MAAM;gBACnE,KAAK,MAAM,CAAC,MAAM;oBAAE,GAAG,IAAI,KAAK,CAAC;oBAAA,MAAM;aAC1C;SACJ;QACD,OAAO,GAAG,CAAC;KACd;IACD,mBAAI,GAAJ;QACI,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC;KAC9C;IACD,gCAAiB,GAAjB,UAAkB,CAAO;QACrB,OAAO,IAAI,CAAC,UAAU,KAAK,MAAM,CAAC,MAAM,IAAI,CAAC,CAAC,UAAU,KAAK,MAAM,CAAC,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;KACrJ;IACD,2BAAY,GAAZ,UAAa,GAAa;QACtB,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACpB,IAAI,CAAC,CAAC;QACN,KAAI,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;YACjD,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAC7B,IAAG,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,EAAC;gBAChB,GAAG,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;gBACnB,MAAM;aACT;iBACI;gBAED,IAAI,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAA;gBACrC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;gBAChB,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBACd,IAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAC;oBACjB,MAAM;iBACT;aACJ;SACJ;QACD,IAAG,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,EAAC;YAC1B,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACvB;KACJ;IAxDM,SAAI,GAAS,EAAU,CAAC;IAyDnC,WAAC;CAAA,IAAA;AAED;IAgBI,iBAAY,CAAU;QAbtB,UAAK,GAAW,EAAE,CAAC;QAEnB,cAAS,GAAa,EAAE,CAAC;QACzB,aAAQ,GAAY,KAAK,CAAC;QAE1B,UAAK,GAAW,CAAC,CAAC,CAAC;QACnB,eAAU,GAAW,CAAC,CAAC;QAEvB,SAAI,GAAY,IAAI,CAAC;QACrB,SAAI,GAAY,IAAI,CAAC;QAErB,WAAM,GAAa,EAAE,CAAC;QAGlB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;KACpB;IAED,qBAAG,GAAH,UAAI,IAAU,EAAE,MAAc,EAAE,EAAW,EAAE,GAAa,EAAE,KAAc;QACtE,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;QAC1E,IAAI,EAAE,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC;QACvB,IAAG,EAAE,KAAK,SAAS,EAAC;YAChB,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,IAAI,EAAC,EAAE,CAAC,CAAC;YAC1B,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC;YAClB,IAAG,GAAG,EAAC;gBACH,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;aACpB;YACD,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YAClB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACnB,OAAO,IAAI,CAAC;SACf;aACI,IAAG,GAAG,EAAC;YACR,IAAI,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAC5B,IAAG,KAAK,IAAI,GAAG,IAAI,EAAE,CAAC,QAAQ,EAAE,EAAC;gBAC7B,EAAE,CAAC,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC;aAC/B;YACD,GAAG,KAAK,EAAE,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC;YAC3B,OAAO,GAAG,CAAC;SACd;KACJ;IACD,0BAAQ,GAAR;KAEC;IACD,yBAAO,GAAP;QACI,IAAI,OAAO,GAAG,IAAI,CAAC;QACnB,IAAI,IAAI,GAAG,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;QAC3C,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,OAAM,OAAO,EAAC;YACV,OAAO,GAAG,KAAK,CAAC;YAChB,KAAgB,UAAU,EAAV,KAAA,IAAI,CAAC,KAAK,EAAV,cAAU,EAAV,IAAU;gBAAtB,IAAI,IAAI,SAAA;gBACR,IAAG,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,QAAQ,EAAE,EAAC;oBAC/B,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;oBAC5B,IAAG,KAAK,GAAG,CAAC,EAAC;wBACT,IAAI,CAAC,SAAS,EAAE,CAAC;wBACjB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;wBACxB,IAAI,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,KAAK,GAAG,CAAC,EAAE,UAAA,IAAI;4BACnC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,CAAC,IAAI,OAAO,CAAC;4BAC3D,OAAO,KAAK,CAAC;yBAChB,CAAC,CAAC;qBACN;iBACJ;gBACD,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;aACxB;SACJ;KACJ;IACD,0BAAQ,GAAR,UAAS,GAAiD;QACtD,AACA,IAAI,WAAW,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,WAAW,KAAK,KAAK,CAAC;QACpD,IAAI,IAAI,GAAG,EAAE,WAAW,EAAE,WAAW,EAAE,CAAC;QACxC,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrC,IAAG,IAAI,CAAC,KAAK,KAAK,IAAI,EAAC;YACnB,GAAG,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC;SAC5B;aACI;YACD,GAAG,IAAI,KAAK,CAAC;SAChB;QACD,IAAG,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAC;YACtB,GAAG,IAAI,eAAe,CAAC;YACvB,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;gBACrC,IAAG,CAAC,GAAG,CAAC,EAAC;oBACL,GAAG,IAAI,GAAG,CAAC;iBACd;gBACD,GAAG,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;aAC/B;SACJ;QACD,GAAG,IAAI,GAAG,GAAG,IAAI,CAAC;QAClB,KAAgB,UAAU,EAAV,KAAA,IAAI,CAAC,KAAK,EAAV,cAAU,EAAV,IAAU;YAAtB,IAAI,IAAI,SAAA;YACR,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;SACrC;QACD,OAAO,GAAG,CAAC;KACd;IACD,4BAAU,GAAV;QACI,IAAI,GAAG,GAAG,CAAC,CAAC;QACZ,KAAgB,UAAU,EAAV,KAAA,IAAI,CAAC,KAAK,EAAV,cAAU,EAAV,IAAU;YAAtB,IAAI,IAAI,SAAA;YACR,IAAG,IAAI,CAAC,QAAQ,EAAC;gBACb,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;aAC/D;SACJ;QACD,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC;KACtB;IACD,yBAAO,GAAP,UAAQ,EAAsB;QAC1B,KAAgB,UAAU,EAAV,KAAA,IAAI,CAAC,KAAK,EAAV,cAAU,EAAV,IAAU;YAAtB,IAAI,IAAI,SAAA;YACR,EAAE,CAAC,IAAI,CAAC,CAAC;SACZ;KACJ;IACD,4BAAU,GAAV,UAAW,CAAU;QAmBjB,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;YACxC,IAAI,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YAChD,IAAG,EAAE,IAAI,EAAE,EAAC;gBACR,IAAI,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;gBAE9B,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;oBAChC,IACI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,KAAK,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;2BACnE,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,KAAK,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,CACtE,EAAC;wBACG,OAAO,KAAK,CAAC;qBAChB;iBACJ;gBAED,IACI,EAAE,IAAI,EAAE;uBACR,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;uBACd,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;uBAC5B,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CACvC,EAAC;oBACG,OAAO,KAAK,CAAC;iBAChB;aACJ;SACJ;QACD,OAAO,IAAI,CAAC;KACf;IACD,yBAAO,GAAP,UAAQ,CAAU;QACd,IAAI,GAAG,GAAG,KAAK,CAAC;QAChB,KAAc,UAAO,EAAP,KAAA,CAAC,CAAC,KAAK,EAAP,cAAO,EAAP,IAAO;YAAjB,IAAI,EAAE,SAAA;YACN,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,MAAM,EAAE,EAAE,CAAC,QAAQ,EAAE,EAAE,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,GAAG,CAAC;SACxE;QACD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;QAC1B,OAAO,GAAG,CAAC;KACd;IACL,cAAC;CAAA;;ACxOD;IAII;QADO,SAAI,GAAW,CAAC,CAAC;QAEpB,IAAI,CAAC,IAAI,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAC,CAAC;QAClD,IAAI,CAAC,IAAI,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAC,CAAC;QAClD,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAC3B,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;KAC9B;IACD,qBAAM,GAAN,UAAO,CAAc;QACjB,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;QACxB,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACnB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACxB,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,IAAI,EAAE,CAAC;KACf;IACD,mBAAI,GAAJ;QACI,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;QACvB,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC;QACxB,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACxB,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,IAAI,EAAE,CAAC;QACZ,OAAO,CAAC,CAAC,IAAI,CAAC;KACjB;IACD,sBAAO,GAAP;QACI,OAAO,IAAI,CAAC,IAAI,KAAK,CAAC,CAAC;KAC1B;IACD,sBAAO,GAAP,UAAQ,EAAkB;QACtB,KAAI,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,EAAC,CAAC,KAAK,IAAI,CAAC,IAAI,EAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAC;YAClD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;SACd;KACJ;IACD,qBAAM,GAAN,UAAO,CAAc;QACjB,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC;QACrB,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC;QACrB,IAAI,CAAC,IAAI,EAAE,CAAC;KACf;IACD,uBAAQ,GAAR;QACI,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC;QAClB,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,OAAO;YACH,OAAO,CAAC,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC;SACxD,CAAA;KACJ;IACL,WAAC;CAAA;;ACjDD,WAAY,KAAK;IACb,2CAAa,CAAA;IACb,iCAAI,CAAA;IACJ,mCAAK,CAAA;IACL,+BAAG,CAAA;CACN,EALWE,aAAK,KAALA,aAAK,QAKhB;AAAA,AAAC;AAeF,8BAAqC,CAAW;IAC5C,OAAO,CAAC,CAAC,KAAK,KAAK,IAAI,GAAG,MAAI,CAAC,CAAC,GAAG,MAAG,GAAG,OAAI,CAAC,CAAC,KAAK,OAAG,CAAC;CAC3D;;yBCV+B,EAAgB,EAAE,IAAiB,EAAE,QAAuB;IACxF,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;IACf,IAAI,UAAU,GAAG,CAAC,CAAC,UAAU,CAAC;IAC9B,IAAI,OAAO,GAAG,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC;IA8C3B,QAAQ,CAAC,OAAO,CAAC,UAAS,GAAG;QACzB,IAAI,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC;QACvB,IAAI,KAAK,GAAG,EAAE,CAAC;QACf,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,IAAI,KAAK,GAAG,EAAE,CAAC;QACf,AACA,EAAE,CAAC,OAAO,CAAC,WAAS,CAAG,CAAC,CAAC;QACzB,GAAG,CAAC,OAAO,CAAC,UAAS,IAAI;YACrB,EAAE,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,EAAE,WAAW,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;SAC7D,CAAC,CAAC;QACH,IAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAC;YACrB,EAAE,CAAC,OAAO,CAAI,KAAK,yCAAoC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAG,CAAC,CAAC;SAC5E;aACI;YACD,EAAE,CAAC,OAAO,CAAC,KAAK,GAAG,mBAAmB,CAAC,CAAC;SAC3C;QACD,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,UAAU,EAAC,CAAC,EAAE,EAAC;YAC7B,IAAI,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;YACjC,IAAG,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,CAAC,IAAI,EAAC;gBACnC,IAAG,IAAI,CAAC,UAAU,KAAK,MAAM,CAAC,KAAK,EAAC;oBAChC,KAAK,IAAI,KAAG,KAAK,GAAG,oBAAoB,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,kCAA6B,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,IAAM,CAAC;iBACpH;qBACI;oBACD,MAAM,IAAI,KAAG,KAAK,GAAG,oBAAoB,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,4BAAuB,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAM,CAAC;iBACzG;aACJ;SACJ;QACD,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,OAAO,EAAC,CAAC,EAAE,EAAC;YAC1B,IAAI,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;YAChC,IAAG,IAAI,KAAK,IAAI,EAAC;gBACb,KAAK,IAAI,KAAG,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,uBAAkB,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,IAAM,CAAC;aACpF;SACJ;QACD,EAAE,CAAC,OAAO,CAAC,KAAK,GAAG,MAAM,GAAG,KAAK,CAAC,CAAC;QACnC,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;KAClB,CAAC,CAAC;CACN;AAED;IAOI,oBAAY,CAAU,EAAE,UAAkB;QAD1C,WAAM,GAAa,IAAI,CAAC;QAEpB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,UAAU,GAAG,CAAC,CAAC,UAAU,CAAC;QAC9B,IAAI,OAAO,GAAG,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC;QAC3B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,UAAU,GAAG,UAAU,CAAC,CAAC;QAChD,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,OAAO,GAAG,UAAU,CAAC,CAAC;QAC7C,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;YACpC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;SACxB;QACD,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;YACpC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;SACxB;KACJ;IACD,iCAAY,GAAZ,UAAa,EAAmD;QAC5D,KAAI,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,IAAI,CAAC,UAAU,EAAE,KAAK,EAAE,EAAC;YAChD,KAAI,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,EAAE,EAAC;gBAC5C,IAAI,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;gBACvC,IAAI,IAAI,EAAE,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;aAC/B;SACJ;KACJ;IACD,gCAAW,GAAX,UAAY,EAAgD;QACxD,KAAI,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,IAAI,CAAC,UAAU,EAAE,KAAK,EAAE,EAAC;YAChD,KAAI,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,EAAE,EAAE,EAAE,EAAC;gBACzC,IAAI,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;gBACtC,IAAI,IAAI,EAAE,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;aAC/B;SACJ;KACJ;IACD,gCAAW,GAAX,UAAY,KAAa,EAAE,KAAa;QACpC,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,UAAU,GAAG,KAAK,GAAG,KAAK,CAAC,CAAC;KACxD;IACD,+BAAU,GAAV,UAAW,KAAa,EAAE,EAAU;QAChC,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,GAAG,KAAK,GAAG,EAAE,CAAC,CAAC;KACrD;IACO,+BAAU,GAAlB,UAAmB,KAAa,EAAE,KAAe;QAC7C,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;YACjC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;SAChB;QACD,KAAI,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,UAAU,EAAE,EAAE,EAAE,EAAC;YACzC,IAAI,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YACvC,IAAI,IAAI,IAAI,CAAC,UAAU,KAAK,MAAM,CAAC,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC;SACzE;QACD,IAAI,GAAG,GAAG,CAAC,CAAC;QACZ,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,KAAK,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;YAC/B,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC,CAAC;SACtC;QACD,OAAO,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;KACpC;IACD,+BAAU,GAAV;QACI,IAAI,CAAC,MAAM,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,KAAK,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QAC3C,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC,EAAE,EAAC;YACnC,IAAI,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;YACpC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;YACrB,IAAG,GAAG,KAAK,CAAC,CAAC,EAAC;gBACV,KAAI,IAAI,EAAE,GAAG,CAAC,EAAC,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,EAAC,EAAE,EAAE,EAAC;oBAC1C,IAAI,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;oBACnC,IAAI,IAAI,IAAI,CAAC,UAAU,KAAK,MAAM,CAAC,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,KAAK,GAAG;yBACnE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,UAAU,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC;iBACnD;aACJ;SACJ;KACJ;IACL,iBAAC;CAAA;;ACpKD,IAAK,YAEJ;AAFD,WAAK,YAAY;IACb,2CAAM,CAAA;IAAE,2CAAM,CAAA;CACjB,EAFI,YAAY,KAAZ,YAAY,QAEhB;AAAA,AAAC;AACF;IAAA;KAaC;IANG,2BAAQ,GAAR;QACI,OAAO,WAAS,IAAI,CAAC,GAAG,CAAC,UAAU,UAAK,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAa,IAAM;aAClF,KAAK,eAAU,oBAAoB,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,IAAM,CAAA;aACxD,KAAK,mBAAc,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,IAAM,CAAA;aAChD,KAAK,wBAAmB,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAI,CAAA,CAAC;KAC1D;IANM,eAAM,GAAa,CAAC,eAAe,EAAC,cAAc,CAAC,CAAC;IAO/D,eAAC;CAAA,IAAA;uBAE6B,CAAU;IACpC,IAAI,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAC9B,IAAI,IAAI,GAAG,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC;IAC1B,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IACf,IAAI,IAAI,GAAG,IAAI,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;IACtC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACZ,IAAI,CAAC,GAAG,CAAC,KAAK,EAAC,CAAC,EAAC,IAAI,EAAC,IAAI,EAAC,KAAK,CAAC,CAAC;IAClC,OAAO,IAAI,CAAC;CACf;AAKD,qBAA4B,CAAU;IAClC,IAAI,MAAM,GAA6B,EAAE,CAAC;IAC1C,IAAI,UAAU,GAAG,CAAC,CAAC;IACnB,oBAAoB,IAAa;QAC7B,IAAI,CAAC,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QAC1B,IAAG,MAAM,CAAC,CAAC,CAAC,KAAK,SAAS,EAAC;YACvB,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;SAClB;QACD,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACxB;IACD,yBAAyB,GAAY,EAAE,EAAuB;QAC1D,IAAI,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC,CAAC;QACjC,IAAG,CAAC,KAAK,SAAS,EAAC;YACf,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,CAAC,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;gBAC3B,IAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAAE,MAAM;aACtB;SACJ;KACJ;IACD,IAAI,KAAK,GAAG,CAAC,CAAC;IACd,IAAI,QAAQ,GAAG,IAAI,IAAI,EAAW,CAAC;IACnC,IAAI,OAAO,GAAG,IAAI,IAAI,EAAW,CAAC;IAClC,IAAI,QAAQ,GAAG,IAAI,IAAI,EAAW,CAAC;IACnC,QAAQ,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;IAElC,OAAM,CAAC,QAAQ,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,EAAC;QAC5C,IAAI,QAAQ,GAAG,IAAI,CAAC;QAEpB,IAAG,CAAC,OAAO,CAAC,OAAO,EAAE,EAAC;YAClB,IAAI,GAAG,GAAG,QAAQ,GAAG,OAAO,CAAC,IAAI,EAAE,CAAC;YACpC,GAAG,CAAC,OAAO,CAAC,UAAS,IAAI;gBACrB,IAAG,IAAI,CAAC,UAAU,KAAK,MAAM,CAAC,IAAI,EAAC;oBAC/BD,SAAO,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;oBAChC,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;oBAC5B,IAAI,MAAM,GAAG,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC;oBAC5B,MAAM,CAAC,KAAK,GAAG,KAAK,EAAE,CAAC;oBACvB,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;oBAExB,GAAG,CAAC,OAAO,CAAC,UAAA,KAAK;wBACb,IAAG,KAAK,CAAC,QAAQ,EAAE,EAAC;4BAChB,IAAI,KAAK,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;4BAC7B,IAAG,KAAK,KAAK,KAAK,EAAC;gCACf,KAAK,CAAC,UAAU,GAAG,MAAM,CAAC,KAAK,CAAC;gCAChC,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC;gCACrB,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAC,IAAI,EAAC,KAAK,CAAC,GAAG,EAAC,KAAK,CAAC,CAAC;6BAChE;yBACJ;qBACJ,CAAC,CAAC;iBACN;aACJ,CAAC,CAAC;YACH,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC;YACpB,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;SACxB;QAGD,OAAM,CAAC,QAAQ,CAAC,OAAO,EAAE,EAAC;YACtB,IAAI,GAAG,GAAG,QAAQ,CAAC,IAAI,EAAE,CAAC;YAC1B,GAAG,CAAC,OAAO,EAAE,CAAC;YACd,GAAG,CAAC,OAAO,CAAC,UAAA,IAAI;gBACZ,IAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAC;oBAChB,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC;iBACnC;aACJ,CAAC,CAAC;YACH,IAAI,MAAM,GAAG,IAAI,CAAC;YAElB,eAAe,CAAC,GAAG,EAAE,UAAA,IAAI;gBACrB,IAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,EAAC;oBACpB,IAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAC;wBACjB,IAAG,IAAI,CAAC,QAAQ,EAAC;4BACb,MAAM,GAAG,IAAI,CAAC;yBACjB;qBACJ;oBAED,IAAG,QAAQ,KAAK,IAAI,EAAC;wBACjB,QAAQ,CAAC,OAAO,CAAC,UAAS,KAAK;4BAC3B,IAAG,KAAK,CAAC,UAAU,KAAK,MAAM,CAAC,KAAK,IAAI,KAAK,CAAC,KAAK,KAAK,GAAG,EAAC;gCACxD,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC;6BACtB;yBACJ,CAAC,CAAC;qBACN;oBACD,GAAG,GAAG,IAAI,CAAC;oBACX,OAAO,IAAI,CAAC;iBACf;gBACD,OAAO,KAAK,CAAC;aAChB,CAAC,CAAC;YAEH,IAAG,MAAM,KAAK,IAAI,EAAC;gBACf,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;gBACxB,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;gBACvB,MAAM,CAAC,QAAQ,GAAG,KAAK,CAAC;aAC3B;iBAEI,IAAG,GAAG,KAAK,IAAI,EAAC;gBACjB,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;gBACpB,UAAU,CAAC,GAAG,CAAC,CAAC;aACnB;SACJ;QACD,UAAU,EAAE,CAAC;KAChB;IACD,IAAI,CAAC,GAAG,CAAC,CAAC;IACV,QAAQ,CAAC,OAAO,CAAC,UAAA,GAAG;QAChB,GAAG,CAAC,UAAU,GAAG,CAAC,EAAE,CAAC;KACxB,CAAC,CAAC;IAEH,OAAO;QACH,MAAM,EAAE,QAAQ;QAChB,UAAU,EAAE,UAAU;KACzB,CAAC;CACL;AAED,uBAA8B,CAAU,EAAE,QAAuB;IAC7D,IAAI,SAAS,GAAG,EAAE,CAAC;IACnB,2BAA2B,GAAY,EAAE,KAAW,EAAE,MAAY;QAC9D,IAAI,KAAK,GAAG,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;QACvC,IAAG,KAAK,CAAC,KAAK,KAAKC,aAAK,CAAC,SAAS,EAAC;YAC/B,IAAI,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC;YAC3B,IAAG,KAAK,KAAK,CAAC,CAAC,EAAC;gBACZ,IAAG,KAAK,GAAG,KAAK,CAAC,EAAE,EAAC;oBAChB,OAAO,MAAM,CAAC;iBACjB;qBACI,IAAG,KAAK,GAAG,KAAK,CAAC,EAAE,EAAC;oBACrB,OAAO,KAAK,CAAC;iBAChB;qBACI;oBACD,IAAG,KAAK,CAAC,KAAK,KAAKA,aAAK,CAAC,IAAI,EAAC;wBAC1B,OAAO,MAAM,CAAC;qBACjB;yBACI,IAAG,KAAK,CAAC,KAAK,KAAKA,aAAK,CAAC,KAAK,EAAC;wBAChC,OAAO,KAAK,CAAC;qBAChB;yBACI,IAAG,KAAK,CAAC,KAAK,KAAKA,aAAK,CAAC,GAAG,EAAC;wBAC9B,OAAO,IAAI,CAAC,IAAI,CAAC;qBACpB;yBACI;wBACDD,SAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;qBACzB;iBACJ;aACJ;SACJ;QACD,IAAI,EAAE,GAAG,IAAI,QAAQ,EAAE,CAAC;QACxB,EAAE,CAAC,IAAI,GAAG,YAAY,CAAC,EAAE,CAAC;QAC1B,EAAE,CAAC,GAAG,GAAG,GAAG,CAAC;QACb,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;QACjB,EAAE,CAAC,IAAI,GAAG,KAAK,CAAC;QAChB,EAAE,CAAC,SAAS,GAAG,MAAM,CAAC;QACtB,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACnB,OAAO,KAAK,CAAC;KAChB;IACD,2BAA2B,GAAY,EAAE,EAAQ,EAAE,EAAQ,EAAE,KAAa;QACtE,IAAI,IAAI,GAAG,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC3B,IAAG,EAAE,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,EAAE,EAAC;YACnE,OAAO,EAAE,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;SAC5C;aACI;YACD,IAAI,IAAI,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE,GAAG,EAAE,CAAC;YACnD,IAAI,SAAS,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE,GAAG,EAAE,CAAC;YACxD,IAAI,EAAE,GAAG,IAAI,QAAQ,EAAE,CAAC;YACxB,EAAE,CAAC,IAAI,GAAG,YAAY,CAAC,EAAE,CAAC;YAC1B,EAAE,CAAC,GAAG,GAAG,GAAG,CAAC;YACb,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC;YAChB,EAAE,CAAC,IAAI,GAAG,IAAI,CAAC;YACf,EAAE,CAAC,SAAS,GAAG,SAAS,CAAC;YACzB,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YACnB,OAAO,IAAI,CAAC;SACf;KACJ;IACD,IAAI,MAAM,GAAG,IAAI,UAAU,CAAC,CAAC,EAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAC7C,QAAQ,CAAC,OAAO,CAAC,UAAA,GAAG;QAChB,GAAG,CAAC,OAAO,CAAC,UAAA,IAAI;YACZ,IAAG,IAAI,CAAC,UAAU,KAAK,MAAM,CAAC,KAAK,EAAC;gBAChC,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;gBAC5B,IAAG,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,EAAC;oBAEhB,IAAI,MAAM,GAAG,GAAG,CAAC,UAAU,GAAG,CAAC,CAAC,UAAU,GAAG,KAAK,CAAC;oBACnD,IAAI,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;oBACjC,IAAG,KAAK,KAAK,IAAI,EAAC;wBAEd,IAAG,KAAK,CAAC,UAAU,KAAK,MAAM,CAAC,MAAM,EAAC;4BAClC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,iBAAiB,CAAC,GAAG,EAAC,IAAI,EAAC,KAAK,CAAC,CAAC;yBAC5D;6BACI;4BAEDA,SAAO,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,KAAK,IAAI,CAAC,KAAK,CAAC,CAAC;yBAC9C;qBACJ;yBACI;wBACD,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;qBAC/B;iBACJ;qBACI;oBAED,IAAI,MAAM,GAAG,GAAG,CAAC,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC,MAAM,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;oBAC1D,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;iBAC/B;aACJ;iBACI,IAAG,IAAI,CAAC,UAAU,KAAK,MAAM,CAAC,MAAM,EAAC;gBACtC,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,CAAC,CAAC,UAAU,EAAC,CAAC,EAAE,EAAC;oBAC/B,IAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,EAAC;wBACxB,IAAI,KAAK,GAAG,GAAG,CAAC,UAAU,GAAG,CAAC,CAAC,UAAU,GAAG,CAAC,CAAC;wBAC9C,IAAI,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;wBAChC,IAAG,KAAK,KAAK,IAAI,EAAC;4BACd,IAAG,KAAK,CAAC,UAAU,KAAK,MAAM,CAAC,MAAM,EAAC;gCAClC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,iBAAiB,CAAC,GAAG,EAAC,KAAK,EAAC,IAAI,EAAC,CAAC,CAAC,CAAC;6BAC7D;iCACI,IAAG,KAAK,CAAC,UAAU,KAAK,MAAM,CAAC,KAAK,EAAC;gCACtC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,iBAAiB,CAAC,GAAG,EAAC,KAAK,EAAC,IAAI,CAAC,CAAC;6BAC3D;yBACJ;6BACI;4BACD,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC;yBAC9B;qBACJ;iBACJ;aACJ;iBACI;gBACDA,SAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;aACzB;SACJ,CAAC,CAAC;KACN,CAAC,CAAC;IAEH,OAAO;QACH,MAAM,EAAE,MAAM;QACd,SAAS,EAAE,SAAS;KACvB,CAAC;CACL;;AClQD,mBAAmB,CAAU,EAAE,EAAe,EAAE,MAAgB,EAAE,KAA2B;IACzF,IAAI,EAAE,GAAe,EAAE,CAAC;IACxB,KAAiB,UAAM,EAAN,iBAAM,EAAN,oBAAM,EAAN,IAAM;QAAnB,IAAI,KAAK,eAAA;QACT,IAAI,IAAI,SAAU,CAAC;QACnB,IAAG,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,EAAC;YACrB,IAAI,GAAG,CAAC,CAAC,eAAe,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YAC5D,IAAG,IAAI,KAAK,IAAI,EAAC;gBACb,KAAK,CAAC,sBAAoB,KAAK,gBAAa,CAAC,CAAC;gBAC9C,OAAO,EAAE,CAAC;aACb;SACJ;aACI;YACD,IAAI,IAAI,GAAG,CAAC,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;YACtC,IAAG,IAAI,CAAC,MAAM,KAAK,CAAC,EAAC;gBACjB,KAAK,CAAC,wBAAqB,KAAK,kBAAc,CAAC,CAAC;gBAChD,OAAO,EAAE,CAAC;aACb;YACD,IAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAC;gBACf,IAAI,GAAG,GAAG,EAAE,CAAC;gBACb,KAAe,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI;oBAAf,IAAI,GAAG,aAAA;oBACP,GAAG,IAAI,MAAI,GAAG,CAAC,GAAG,OAAI,CAAC;iBAC1B;gBACD,KAAK,CAAC,wBAAqB,KAAK,uCAAiC,GAAK,CAAC,CAAC;gBACxE,OAAO,EAAE,CAAC;aACb;YACD,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;SAClB;QACD,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACjB;IACD,IAAI,KAAK,GAAG,CAAE,CAAC,CAAE,CAAC;IAClB,IAAI,KAAK,GAAa,EAAE,CAAC;IACzB,IAAI,GAAG,GAAa,EAAE,CAAC;IACvB;QACI,OAAO,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;KAClC;IACD,eAAe,EAAU;QACrB,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACf,IAAI,IAAI,GAAG,EAAE,CAAC,KAAK,EAAE,CAAC;QAEtB,KAAK,CAAC,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,CAAC;KAE1C;IACD,gBAAgB,IAAU;QACtB,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC;QAChC,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC;QAChC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACzB,IAAI,KAAK,GAAG,EAAE,CAAC,UAAU,CAAC,CAAC,EAAE,EAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,UAAU,CAAC;QAC/D,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACrB;IACD;QACI,IAAI,GAAG,GAAG,EAAE,CAAC;QACb,KAAa,UAAK,EAAL,eAAK,EAAL,mBAAK,EAAL,IAAK;YAAd,IAAI,GAAC,cAAA;YACL,GAAG,IAAI,GAAC,GAAG,GAAG,CAAC;SAClB;QACD,GAAG,IAAI,IAAI,CAAC;QACZ,KAAgB,UAAE,EAAF,SAAE,EAAF,gBAAE,EAAF,IAAE;YAAd,IAAI,IAAI,WAAA;YACR,GAAG,IAAI,oBAAoB,CAAC,IAAI,CAAC,CAAC;YAClC,GAAG,IAAI,GAAG,CAAC;SACd;QACD,OAAO,GAAG,CAAC;KACd;IACD,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;IACjB,GAAE;QACE,IAAI,IAAI,GAAG,EAAE,CAAC,WAAW,CAAC,CAAC,EAAE,EAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;QACvD,IAAG,IAAI,KAAK,IAAI,EAAC;YACb,IAAG,IAAI,KAAK,IAAI,CAAC,IAAI,EAAC;gBAClB,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;gBAC1B,MAAM;aACT;iBACI,IAAG,IAAI,CAAC,UAAU,KAAK,MAAM,CAAC,KAAK,EAAC;gBACrC,IAAG,EAAE,CAAC,MAAM,KAAK,CAAC,EAAC;oBACf,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;oBACtB,MAAM;iBACT;gBACD,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;aAChC;iBACI,IAAG,IAAI,CAAC,UAAU,KAAK,MAAM,CAAC,MAAM,EAAC;gBACtC,IAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAC;oBACjB,MAAM;iBACT;aACJ;iBACI;gBACD,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;aACzB;SACJ;aACI;YACD,IAAI,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;YACxB,IAAG,EAAE,KAAK,CAAC,CAAC,EAAC;gBACT,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;aACvB;iBACI;gBACD,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;gBAC1B,MAAM;aACT;SACJ;QACD,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;KACpB,QAAM,IAAI,EAAE;IACb,OAAO,GAAG,CAAC;CACd;;ACpGD;IACI,uBAAmB,GAAW;QAAX,QAAG,GAAH,GAAG,CAAQ;KAAG;IACjC,gCAAQ,GAAR;QACI,OAAO,IAAI,CAAC,GAAG,CAAC;KACnB;IACL,oBAAC;CAAA,IAAA;AACD;IACI,mBAAmB,GAAW,EAAS,IAAsB;QAAtB,qBAAA,EAAA,cAAsB;QAA1C,QAAG,GAAH,GAAG,CAAQ;QAAS,SAAI,GAAJ,IAAI,CAAkB;KAAG;IACzD,4BAAQ,GAAf,UAAgB,GAAgB;QAAhB,oBAAA,EAAA,QAAgB;QAC5B,IAAI,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC;QAC1B,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC;QACpB,IAAG,GAAG,CAAC,SAAS,EAAC;YACb,GAAG,GAAG,mBAAgB,GAAG,CAAC,SAAS,WAAK,GAAG,YAAS,CAAC;SACxD;QACD,GAAG,IAAI,IAAI,CAAC;QACZ,GAAG,IAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,EAAC,KAAK,CAAC,CAAC,OAAO,CAAC,IAAI,EAAC,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC;QAC5E,OAAO,GAAG,CAAC;KACd;IACL,gBAAC;CAAA,IAAA;AACD;IAAsCD,oCAAS;IAC3C,0BAAY,GAAW,EAAS,IAAY;QAA5C,YACI,kBAAM,GAAG,EAAE,kBAAkB,CAAC,SACjC;QAF+B,UAAI,GAAJ,IAAI,CAAQ;;KAE3C;IACM,mCAAQ,GAAf,UAAgB,GAAW;QACvB,OAAU,iBAAM,QAAQ,YAAC,GAAG,CAAC,kBAAa,IAAI,CAAC,IAAI,MAAG,CAAC;KAC1D;IACL,uBAAC;CAAA,CAPqC,SAAS,GAO9C;AACD;IAAiCA,+BAAS;IACtC,qBAAY,GAAW;eACnB,kBAAM,GAAG,EAAE,SAAS,CAAC;KACxB;IACL,kBAAC;CAAA,CAJgC,SAAS;;ACxB1C,gBAAgB,GAAyC;IACrD,IAAI,CAAC,GAAe,EAAE,CAAC;IACvB,gBAAgB,CAAC,EAAC,GAAG;QACjB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACb,KAAI,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,EAAC,CAAC,GAAG,CAAC,EAAC,CAAC,EAAE,EAAC;YAC/B,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;SACnB;QACD,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;KACd;IACD,OAAO;QACH,GAAG,EAAH,UAAI,CAAW;YACX,IAAI,CAAS,CAAC;YACd,KAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,CAAC,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;gBACvB,IAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAC;oBACrD,MAAM;iBACT;aACJ;YACD,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;SACf;QACD,IAAI,EAAJ;YACI,OAAO,CAAC,CAAC;SACZ;KACJ,CAAC;CACL;AACD;IAEI,kBAAmB,UAAkB,EAAS,GAAW;QAAtC,eAAU,GAAV,UAAU,CAAQ;QAAS,QAAG,GAAH,GAAG,CAAQ;QADlD,OAAE,GAAkB,CAAC,CAAC;KAC+B;IAChE,eAAC;CAAA,IAAA;AAKD,kBAAyB,MAAa;IAClC,eAAe,CAAS,EAAE,CAAS;QAC/B,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QACrB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,EAAC,CAAC,CAAC,CAAC;KAC1E;IACD,aAAa,CAAS,EAAE,EAAU;QAC9B,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,MAAM,CAAC,OAAO,EAAC,CAAC,EAAE,EAAC;YACjC,IAAG,CAAC,KAAK,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC;gBACX,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,CAAC,EAAC,CAAC,EAAE,EAAC;oBACpB,IAAG,CAAC,KAAK,CAAC,CAAC,EAAC,CAAC,GAAG,EAAE,CAAC,EAAC;wBAChB,OAAO,KAAK,CAAC;qBAChB;iBACJ;aACJ;SACJ;QACD,OAAO,IAAI,CAAC;KACf;IACD,kBAAkB,CAAS;QACvB,IAAI,EAAE,GAAG,CAAC,CAAC;QACX,OAAM,CAAC,EAAE,GAAG,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,EAAC,CAAC,EAAE,CAAC,EAAC;YAAE,EAAE,EAAE,CAAC;SAAE;QACzE,OAAM,CAAC,GAAG,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC;YAAE,EAAE,EAAE,CAAC;SAAE;QAC1B,OAAO,EAAE,CAAC;KACb;IACD,IAAI,SAAS,GAAG,MAAM,CAAC,UAAC,CAAC,EAAE,CAAC;QACxB,OAAO,CAAC,CAAC,UAAU,GAAG,CAAC,CAAC,UAAU,GAAG,CAAC,CAAC;YACnC,CAAC,CAAC,UAAU,GAAG,CAAC,CAAC,UAAU,GAAG,CAAC,GAAG,CAAC,CAAC;KAC3C,CAAC,CAAC;IACH,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,MAAM,CAAC,IAAI,EAAC,CAAC,EAAE,EAAC;QAC9B,SAAS,CAAC,GAAG,CAAC,IAAI,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC;KACvD;IAED,IAAI,MAAM,GAAG,SAAS,CAAC,IAAI,EAAE,CAAC;IAE9B,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,CAAC,CAAC;IACzB,IAAI,GAAG,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IACjC,IAAI,MAAM,GAAG,CAAC,CAAC;IACf,OAAM,CAAC,MAAM,GAAG,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,EAAC;QAAE,MAAM,EAAE,CAAC;KAAE;IACtF,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,MAAM,CAAC;IAE3C,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,MAAM,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;QAChC,IAAI,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;QACxB,IAAI,EAAE,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;QACrB,GAAG,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC;QAC7B,EAAE,GAAG,KAAK,KAAK,KAAK,GAAG,EAAE,CAAC,CAAC;QAC3B,EAAE,GAAG,KAAK,KAAK,KAAK,GAAG,EAAE,CAAC,CAAC;KAC9B;IAMD,OAAO;QACH,GAAG,EAAE,GAAG;QACR,GAAG,EAAE,KAAK,GAAG,MAAM,CAAC,OAAO;KAC9B,CAAC;CACL;;mBC9F4B,GAAW,EAAE,EAAoB;IAC1D,IAAI,GAAG,GAAQ,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;IAC9B,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAC;QACxB,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;KAClB;IACD,OAAO,GAAG,CAAC;CACd;;ACCD,gBAAgB,EAAc;IAC1B,IAAI,OAAO,GAAa,EAAE,CAAC;IAC3B,KAAI,IAAI,KAAK,GAAG,CAAC,EAAC,KAAK,GAAG,EAAE,CAAC,UAAU,EAAC,KAAK,EAAE,EAAC;QAC5C,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAChB,KAAI,IAAI,EAAE,GAAG,CAAC,EAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,EAAC,EAAE,EAAE,EAAC;YACxC,EAAE,CAAC,WAAW,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,IAAI,KAAK,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;SAC5D;KACJ;IACD,OAAO;QACH,IAAI,EAAE,EAAE,CAAC,UAAU;QACnB,OAAO,EAAE,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM;QAC3B,OAAO,YAAC,KAAK,EAAE,KAAK;YAChB,OAAO,EAAE,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK,IAAI,CAAC;SAChD;QACD,UAAU,YAAC,KAAK;YACZ,OAAO,OAAO,CAAC,KAAK,CAAC,CAAC;SACzB;KACJ,CAAC;CACL;AAED,eAAe,EAAc;IACzB,IAAI,OAAO,GAAa,EAAE,CAAC;IAC3B,KAAI,IAAI,KAAK,GAAG,CAAC,EAAC,KAAK,GAAG,EAAE,CAAC,UAAU,EAAC,KAAK,EAAE,EAAC;QAC5C,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAChB,KAAI,IAAI,EAAE,GAAG,CAAC,EAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,EAAC,EAAE,EAAE,EAAC;YACrC,EAAE,CAAC,WAAW,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,IAAI,KAAK,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;SAC5D;KACJ;IACD,OAAO;QACH,IAAI,EAAE,EAAE,CAAC,UAAU;QACnB,OAAO,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM;QACxB,OAAO,YAAC,KAAK,EAAE,EAAE;YACb,OAAO,EAAE,CAAC,UAAU,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,IAAI,CAAC;SAC5C;QACD,UAAU,YAAC,EAAE;YACT,OAAO,OAAO,CAAC,EAAE,CAAC,CAAC;SACtB;KACJ,CAAC;CACL;AAGD;IA0BI,0BAAY,MAAkB;QAC1B,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;QAClB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;QAC5B,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;QAEpC,IAAI,aAAa,GAAG,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;QAC7C,IAAI,WAAW,GAAG,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;QAC1C,IAAI,CAAC,MAAM,GAAG,aAAa,CAAC,GAAG,CAAC;QAChC,IAAI,CAAC,OAAO,GAAG,WAAW,CAAC,GAAG,CAAC;QAE/B,IAAI,CAAC,IAAI,GAAG,SAAS,CAAO,aAAa,CAAC,GAAG,EAAE,cAAM,OAAA,IAAI,GAAA,CAAC,CAAC;QAC3D,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAS,aAAa,CAAC,GAAG,EAAE,cAAM,OAAA,CAAC,GAAA,CAAC,CAAC;QAC9D,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,MAAM,CAAC,YAAY,CAAC,UAAC,EAAE,EAAE,KAAK,EAAE,KAAK;YACjCC,SAAO,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,KAAK,IAAI,CAAC,CAAC;YAC/D,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;YAC3C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,KAAK,CAAC;SACrD,CAAC,CAAC;QAEH,IAAI,CAAC,KAAK,GAAG,SAAS,CAAO,WAAW,CAAC,GAAG,EAAE,cAAM,OAAA,IAAI,GAAA,CAAC,CAAC;QAC1D,IAAI,CAAC,SAAS,GAAG,SAAS,CAAS,WAAW,CAAC,GAAG,EAAE,cAAM,OAAA,CAAC,GAAA,CAAC,CAAC;QAC7D,MAAM,CAAC,WAAW,CAAC,UAAC,EAAE,EAAE,KAAK,EAAE,EAAE;YAC7BA,SAAO,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,KAAK,IAAI,CAAC,CAAC;YAC9D,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC;YAC1C,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,KAAK,CAAC;SACpD,CAAC,CAAC;QACH,IAAI,CAAC,KAAK,EAAE,CAAC;KAChB;IArCO,gCAAK,GAAb;QACI,OAAM,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,IAAI,EAAC;YAC3C,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;YAChB,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC;SACvB;QACD,OAAM,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,IAAI,EAAC;YAC7C,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;YACjB,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC;SACxB;KACJ;IA6BD,sCAAW,GAAX,UAAY,KAAa,EAAE,KAAa;QACpC,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC;QACvC,IAAG,KAAK,IAAI,CAAC,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,KAAK,EAAC;YACxE,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC;SAChD;aACI;YACD,OAAO,IAAI,CAAC;SACf;KACJ;IACD,qCAAU,GAAV,UAAW,KAAa,EAAE,EAAU;QAChC,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;QACrC,IAAG,KAAK,IAAI,CAAC,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,KAAK,EAAC;YAC1E,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC;SAC/C;aACI;YACD,OAAO,IAAI,CAAC;SACf;KACJ;IACL,uBAAC;CAAA;;ACrGD;IAOI,cACW,CAAU,EACV,GAAU,EACV,GAAa;QAFb,MAAC,GAAD,CAAC,CAAS;QACV,QAAG,GAAH,GAAG,CAAO;QACV,QAAG,GAAH,GAAG,CAAU;QATjB,OAAE,GAAW,CAAC,CAAC,CAAC;QAChB,QAAG,GAAa,EAAE,CAAC;QACnB,WAAM,GAAc,IAAI,CAAC;QACzB,UAAK,GAAG,CAAC,CAAC;QACV,SAAI,GAAqC,EAAE,CAAC;QAC5C,aAAQ,GAAqC,EAAE,CAAC;KAKpD;IAEH,qBAAM,GAAN;QACI,IAAG,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC,EAAC;YACd,KAAI,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAC;gBACzC,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBACvB,IAAG,IAAI,IAAI,CAAC,EAAC;oBACT,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,KAAK,KAAKC,aAAK,CAAC,SAAS;yBAC5C,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;iBACtC;aACJ;SACJ;KACJ;IACD,uBAAQ,GAAR,UAAS,CAAS,EAAE,GAAyB;QACzC,IAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,EAAC;YAC7B,IAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAC;gBAC3B,GAAG,CAAC,qDAAqD,CAAC,CAAC;aAC9D;iBACI;gBACD,GAAG,CAAC,0BAA0B,CAAC,CAAC;aACnC;YACD,OAAO,IAAI,CAAC;SACf;QACD,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC;QAC1B,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;QAClC,IAAI,IAAI,GAAS,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAC1C,OAAM,IAAI,EAAC;YACP,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACxB,IAAG,IAAI,KAAK,SAAS,IAAI,IAAI,CAAC,GAAG,GAAG,GAAG,EAAC;gBACpC,GAAG,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;gBACtB,OAAO,GAAG,CAAC;aACd;YACD,IAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,EAAC;gBAC7B,IAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAC;oBAC3B,GAAG,CAAC,OAAI,IAAI,CAAC,GAAG,CAAC,GAAG,0DAAsD,CAAC,CAAC;iBAC/E;qBACI;oBACD,GAAG,CAAC,uBAAuB,CAAC,CAAC;iBAChC;gBACD,OAAO,IAAI,CAAC;aACf;YACD,GAAG,IAAI,GAAG,CAAC;YACX,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;YAC9B,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;SACnC;KACJ;IACM,uBAAQ,GAAf,UAAgB,MAAe;QAC3B,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,KAAK,CAAC;QACnD,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;YAClC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACpB,IAAG,MAAM,KAAK,CAAC,EAAC;gBACZ,GAAG,IAAI,IAAI,CAAC;aACf;YACD,IAAG,CAAC,IAAI,CAAC,EAAC;gBAEN,GAAG,IAAI,GAAG,GAAG,oBAAoB,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;aACvD;iBACI;gBACD,GAAG,IAAI,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;aACvC;SACJ;QACD,IAAG,MAAM,KAAK,IAAI,CAAC,GAAG,CAAC,MAAM,EAAC;YAC1B,GAAG,IAAI,IAAI,CAAC;SACf;QACD,OAAO,GAAG,CAAC;KACd;IACL,WAAC;CAAA,IAAA;AAED;IAAA;QACW,WAAM,GAAe,EAAE,CAAC;QACxB,eAAU,GAAW,CAAC,CAAC;QACvB,QAAG,GAAY,EAAE,CAAC;QAClB,UAAK,GAAW,EAAE,CAAC;KA2F7B;IAzFG,yBAAO,GAAP,UAAQ,CAAS;QACb,OAAO,CAAC,IAAI,CAAC,CAAC;KACjB;IAED,6BAAW,GAAX,UAAY,EAAuC;QAC/C,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;YAClC,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;YAC9B,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,KAAK,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;gBAC/B,EAAE,CAAC,CAAC,EAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;aAClB;SACJ;KACJ;IACD,iCAAe,GAAf,UAAgB,GAAW,EAAE,EAA2B;QACpD,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC;QAChC,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,KAAK,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;YAC/B,IAAG,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAC;gBACZ,MAAM;aACT;SACJ;KACJ;IACD,8BAAY,GAAZ;QACI,IAAI,OAAO,GAAG,IAAI,CAAC;QACnB,IAAI,IAAI,GAAG,IAAI,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAC5C,IAAI,CAAC,MAAM,EAAE,CAAC;QACd,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACf,OAAM,OAAO,EAAC;YACV,OAAO,GAAG,KAAK,CAAC;YAEhB,KAAI,IAAI,EAAE,GAAG,CAAC,EAAC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAC,EAAE,EAAE,EAAC;gBACrC,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC;gBAC/B,IAAI,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC;gBACrC,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,KAAK,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;oBAC/B,IAAI,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;oBACpB,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;wBAClC,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;wBACxB,IAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,EAAC;4BACnB,OAAO,GAAG,QAAQ,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,IAAI,OAAO,CAAC;4BAC7C,MAAM;yBACT;6BACI;4BACD,KAAK,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC;4BACnB,IAAG,EAAE,KAAK,KAAK,EAAC;gCACZ,OAAO,GAAG,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,OAAO,CAAC;6BACvE;4BACD,IAAG,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAC;gCACrC,MAAM;6BACT;yBACJ;qBACJ;oBACD,CAAC,KAAK,IAAI,CAAC,GAAG,CAAC,MAAM,KAAK,OAAO,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,OAAO,CAAC,CAAC;iBACnE;aACJ;SACJ;KACJ;IACD,0BAAQ,GAAR,UAAS,GAAkE;QAAlE,oBAAA,EAAA,QAAkE;QACvE,GAAG,GAAG,GAAG,IAAI,EAAE,CAAC;QAChB,IAAI,IAAI,GAAG,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC;QAC5B,IAAI,MAAM,GAAG,GAAG,CAAC,MAAM,IAAI,KAAK,CAAC;QACjC,IAAI,GAAG,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,WAAW,CAAC,UAAC,GAAG,EAAE,IAAI;YACvB,IAAI,CAAC,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;YACxB,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;SACnB,CAAC,CAAC;QACH,IAAG,GAAG,CAAC,SAAS,EAAC;YACb,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;gBAClC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBACpB,GAAG,IAAI,WAAS,CAAC,CAAC,GAAG,cAAS,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAK,IAAM,CAAC;aACtE;SACJ;QACD,IAAG,MAAM,EAAC;YACN,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,IAAI,EAAC,MAAM,CAAC,CAAC,OAAO,CAAC,IAAI,EAAC,MAAM,CAAC,CAAC;SACvD;QACD,OAAO,GAAG,CAAC,OAAO,CAAC,KAAK,EAAC,IAAI,CAAC,CAAC;KAClC;IACD,iCAAe,GAAf,UAAgB,CAAS;QACrB,KAAc,UAAW,EAAX,KAAA,IAAI,CAAC,MAAM,EAAX,cAAW,EAAX,IAAW;YAArB,IAAI,EAAE,SAAA;YACN,IAAG,EAAE,CAAC,GAAG,KAAK,CAAC,EAAC;gBACZ,OAAO,EAAE,CAAC;aACb;SACJ;QACD,OAAO,IAAI,CAAC;KACf;IACD,mCAAiB,GAAjB,UAAkB,CAAS;QACvB,IAAI,GAAG,GAAe,EAAE,CAAC;QACzB,KAAc,UAAW,EAAX,KAAA,IAAI,CAAC,MAAM,EAAX,cAAW,EAAX,IAAW;YAArB,IAAI,EAAE,SAAA;YACN,EAAE,CAAC,KAAK,KAAK,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SAClC;QACD,OAAO,GAAG,CAAC;KACd;IACL,cAAC;CAAA;;AC3LD;IAAA;QAEI,QAAG,GAAW,IAAI,CAAC;QACnB,YAAO,GAAY,IAAI,CAAC;QACxB,WAAM,GAAqB,EAAE,CAAC;QAC9B,cAAS,GAA0B,EAAE,CAAC;QACtC,QAAG,GAA+C,EAAE,CAAC;QAErD,WAAM,GAAW,IAAI,CAAC;QACtB,WAAM,GAAY,EAAE,CAAC;QACrB,WAAM,GAAU,IAAI,CAAC;QACrB,cAAS,GAAU,IAAI,CAAC;QACxB,YAAO,GAAU,IAAI,CAAC;QACtB,aAAQ,GAAU,IAAI,CAAC;QACvB,aAAQ,GAAU,IAAI,CAAC;QACvB,gBAAW,GAAU,IAAI,CAAC;KAC7B;IAAD,WAAC;CAAA;;AClBM,IAAI,EAAE,GAAG,MAAM,CAAC,iBAAiB,CAAC;AACzC,AAAO,IAAI,GAAG,GAAG,MAAM,CAAC,iBAAiB,CAAC;AAC1C;IAOI,kBAAY,CAAS,EAAE,CAAS;QADzB,SAAI,GAAM,IAAI,CAAC;QAElB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;KACd;IAEM,+BAAY,GAAnB,UAAoB,CAAS,EAAE,CAAS,EAAE,IAAQ;QAC9C,IAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,IAAI,IAAI,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,EAAC;YACrE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;YACX,OAAO,IAAI,CAAC;SACf;aACI;YACD,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;YAChD,EAAE,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;YACpB,EAAE,CAAC,IAAI,GAAG,IAAI,CAAC;YACf,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;YACpB,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;YACf,OAAO,EAAE,CAAC;SACb;KACJ;IACM,2BAAQ,GAAf,UAAgB,CAAS;QACrB,OAAO,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;KACrC;IACM,2BAAQ,GAAf,UAAgB,CAAS,EAAE,CAAS;QAEhC,OAAO,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;KACtC;IACM,8BAAW,GAAlB,UAAmB,CAAS,EAAE,CAAS,EAAE,IAAQ;QAC7C,IAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,IAAI,IAAI,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,EAAC;YACrE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;YACX,OAAO,IAAI,CAAC;SACf;aACI;YACD,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;YAChD,EAAE,CAAC,IAAI,GAAG,IAAI,CAAC;YACf,EAAE,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;YACpB,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;YACpB,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;YACf,OAAO,EAAE,CAAC;SACb;KACJ;IACM,4BAAS,GAAhB,UAAiB,CAAS;QAEtB,IAAG,CAAC,GAAG,IAAI,CAAC,CAAC,EAAC;YAEV,IAAI,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;YACtD,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;YACX,OAAO,GAAG,CAAC;SACd;QACD,OAAO,IAAI,CAAC;KACf;IACM,6BAAU,GAAjB,UAAkB,CAAS;QAEvB,IAAG,CAAC,GAAG,IAAI,CAAC,CAAC,EAAC;YACV,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;YACrD,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;YACX,OAAO,GAAG,CAAC;SACd;QACD,OAAO,IAAI,CAAC;KACf;IACM,yBAAM,GAAb;QACI,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAC3B,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAC3B,OAAO,IAAI,CAAC;KACf;IACM,6BAAU,GAAjB;QACI,IAAG,IAAI,CAAC,CAAC,KAAK,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,IAAI,IAAI,IAAI,CAAC,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAC;YACpE,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;SACtB;QACD,IAAG,IAAI,CAAC,CAAC,KAAK,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,IAAI,IAAI,IAAI,CAAC,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAC;YACnE,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;SACtB;QACD,OAAO,IAAI,CAAC;KACf;IACM,2BAAQ,GAAf,UAAgB,MAA6B;QACzC,IAAI,GAAG,GAAG,EAAE,CAAC;QACb,kBAAkB,CAAS;YACvB,OAAO,CAAC,KAAK,EAAE,GAAG,KAAK,GAAG,CAAC,KAAK,GAAG,GAAG,KAAK,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC;SAC9D;QACD,IAAI,CAAC,GAAG,CAAC,MAAM,IAAI,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;QACrC,IAAI,CAAC,GAAG,CAAC,MAAM,IAAI,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;QACrC,IAAG,IAAI,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,EAAC;YACjB,GAAG,IAAI,CAAC,CAAC;SACZ;aACG;YACA,GAAG,IAAI,IAAI,CAAC,CAAC,KAAK,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;YAC1C,GAAG,IAAI,GAAG,CAAC;YACX,GAAG,IAAI,IAAI,CAAC,CAAC,KAAK,EAAE,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;SAC5C;QACD,IAAI,CAAC,IAAI,KAAK,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAC9D,OAAO,GAAG,CAAC;KACd;IACL,eAAC;CAAA,IAAA;AACD,kBAAkB,CAAS,EAAE,CAAS;IAClC,IAAG,CAAC,GAAG,CAAC,EAAC;QACL,MAAM,IAAI,KAAK,CAAC,6BAAyB,CAAC,qCAA8B,CAAC,MAAG,CAAC,CAAC;KACjF;CACJ;AAMD;IAMI,qBAAY,MAAwB;QAChC,IAAI,CAAC,IAAI,GAAG,IAAI,QAAQ,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;QAC9B,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,IAAI,GAAG,IAAI,QAAQ,CAAC,IAAI,EAAC,IAAI,CAAC,CAAC;QACpC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAC3B,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAE3B,IAAI,CAAC,OAAO,GAAG,OAAO,MAAM,KAAK,WAAW,CAAC;QAC7C,IAAI,CAAC,MAAM,GAAG,MAAM,IAAI,IAAI,CAAC;KAChC;IACD,6BAAO,GAAP,UAAQ,EAAe;QACnB,OAAO,EAAE,KAAK,IAAI,CAAC,IAAI,IAAI,EAAE,KAAK,IAAI,CAAC,IAAI,CAAC;KAC/C;IACD,oCAAc,GAAd,UAAe,CAAS,EAAE,CAAS,EAAE,IAAc;QAAd,qBAAA,EAAA,WAAc;QAC/C,IAAI,GAAG,GAAG,IAAI,QAAQ,CAAI,CAAC,EAAC,CAAC,CAAC,CAAC;QAC/B,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,MAAM,KAAK,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,EAAE,IAAI,KAAK,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;QACzG,OAAO,GAAG,CAAC;KACd;IACD,8BAAQ,GAAR,UAAS,CAAS,EAAE,CAAS;QACzB,KAAI,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,EAAC,EAAE,KAAK,IAAI,CAAC,IAAI,EAAC,EAAE,GAAG,EAAE,CAAC,IAAI,EAAC;YACjD,IAAG,CAAC,EAAE,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAC;gBAC1E,OAAO,EAAE,CAAC;aACb;SACJ;QACD,OAAO,IAAI,CAAC;KACf;IACD,+BAAS,GAAT,UAAU,CAAS,EAAE,CAAS;QAC1B,IAAI,KAAK,GAAG,IAAI,EAAC,GAAG,GAAG,IAAI,CAAC;QAC5B,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;QACxB,OAAK,EAAE,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,EAAE,GAAG,EAAE,CAAC,IAAI;YAAC,CAAC;QACzD,IAAG,EAAE,KAAK,IAAI,CAAC,IAAI,EAAC;YAChB,OAAO,IAAI,CAAC;SACf;QACD,KAAK,GAAG,GAAG,GAAG,EAAE,CAAC;QACjB,OAAK,EAAE,KAAK,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,EAAE,GAAG,EAAE,CAAC,IAAI,EAAC;YACnD,GAAG,GAAG,EAAE,CAAC;SACZ;QACD,OAAO,CAAC,KAAK,EAAC,GAAG,CAAC,CAAC;KACtB;IAMD,yBAAG,GAAH,UAAI,CAAS,EAAE,CAAa,EAAE,IAAQ;QAAvB,kBAAA,EAAA,KAAa;QACxB,IAAI,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAE3B,KAAK,IAAI,QAAQ,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;QACvB,IAAI,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;QAClC,IAAG,OAAO,KAAK,IAAI,EAAC;YAChB,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,EAAC,CAAC,EAAC,IAAI,CAAC,CAAC;SAC5C;aACI;YACD,IAAG,CAAC,OAAO,EAAC;gBACR,IAAI,EAAE,GAAG,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC7C,IAAI,EAAE,GAAG,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC7C,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;gBAClB,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;gBAClB,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;gBAClC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;gBAClC,OAAO,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE,CAAC;aAC3B;iBACI;gBACD,IAAG,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAC;oBACtB,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;iBAC3B;qBACI;oBACD,OAAO,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;iBACtD;gBACD,IAAG,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;oBACvB,OAAO,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;iBAC5B;qBACI;oBACD,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;iBACrD;gBACD,KAAI,IAAI,EAAE,GAAG,OAAO,CAAC,CAAC,CAAC,EAAC,EAAE,KAAK,OAAO,CAAC,CAAC,CAAC,EAAC,EAAE,GAAG,EAAE,CAAC,IAAI,EAAC;oBAEnD,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;oBACjC,IAAG,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,EAAC;wBACpB,EAAE,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;wBAC9C,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC;qBAChB;iBACJ;gBAED,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aAC5C;SACJ;QACD,OAAO,IAAI,CAAC;KACf;IACD,4BAAM,GAAN,UAAO,CAAS,EAAE,CAAS;QACvB,QAAQ,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;QACd,IAAI,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;QAClC,IAAG,OAAO,KAAK,IAAI,EAAC;YAChB,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YAClD,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YACnD,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YACvC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;SAC1C;QACD,OAAO,IAAI,CAAC;KACf;IACD,+BAAS,GAAT;QACI,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAC3B,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAC3B,OAAO,IAAI,CAAC;KACf;IACD,6BAAO,GAAP,UAAQ,EAAkD;QACtD,KAAI,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,EAAC,EAAE,KAAK,IAAI,CAAC,IAAI,EAAC,EAAE,GAAG,EAAE,CAAC,IAAI,EAAC;YACtD,EAAE,CAAC,EAAE,CAAC,CAAC,EAAC,EAAE,CAAC,CAAC,EAAC,EAAE,CAAC,CAAC;SACpB;QACD,OAAO,IAAI,CAAC;KACf;IACD,2BAAK,GAAL,UAAM,CAAiB;QACnB,KAAI,IAAI,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,EAAC,EAAE,KAAK,CAAC,CAAC,IAAI,EAAC,EAAE,GAAG,EAAE,CAAC,IAAI,EAAC;YAChD,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAC,EAAE,CAAC,CAAC,CAAC,CAAC;SACvB;QACD,OAAO,IAAI,CAAC;KACf;IACD,8BAAQ,GAAR,UAAS,CAAS;QACd,KAAI,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,EAAC,EAAE,KAAK,IAAI,CAAC,IAAI,EAAC,EAAE,GAAG,EAAE,CAAC,IAAI,EAAC;YACtD,IAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAC;gBACd,OAAO,IAAI,CAAC;aACf;SACJ;QACD,OAAO,KAAK,CAAC;KAChB;IACD,8BAAQ,GAAR,UAAS,MAA6B;QAClC,IAAI,GAAG,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,GAAG,KAAK,CAAC;QACd,KAAI,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,EAAC,EAAE,KAAK,IAAI,CAAC,IAAI,EAAC,EAAE,GAAG,EAAE,CAAC,IAAI,EAAC;YACtD,IAAG,CAAC,EAAC;gBACD,GAAG,IAAI,GAAG,CAAC;aACd;YACD,CAAC,GAAG,IAAI,CAAC;YACT,GAAG,IAAI,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;SAC9B;QACD,OAAO,GAAG,KAAK,EAAE,GAAG,KAAK,GAAG,GAAG,CAAC;KACnC;IACL,kBAAC;CAAA;;ACpQD;IAAgCF,2BAAc;IAC1C,iBAAY,KAAuB;eAC/B,kBAAM,KAAK,CAAC;KACf;IACD,wBAAM,GAAN;QACI,iBAAM,GAAG,YAAC,CAAC,EAAE,EAAE,CAAC,CAAC;KACpB;IACD,8BAAY,GAAZ;QACI,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;QACvB,OAAO,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;KAC1D;IACD,0BAAQ,GAAR;QACI,OAAO,iBAAM,QAAQ,YAAC,UAAS,CAAC;YAC5B,IAAG,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,GAAG,EAAC;gBACrB,IAAG,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,EAAC;oBACtB,OAAO,IAAI,GAAG,MAAM,CAAC,YAAY,CAAC,CAAW,CAAC,GAAG,IAAI,CAAC;iBACzD;qBACI;oBACD,OAAO,KAAK,GAAI,CAAY,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;iBAC7C;aACJ;iBACI,IAAG,CAAC,KAAK,EAAE,EAAC;gBACb,OAAO,IAAI,CAAC;aACf;iBACI;gBACD,OAAO,KAAK,CAAC;aAChB;SACJ,CAAC,CAAC;KACN;IACL,cAAC;CAAA,CA7B+B,WAAW;;ACM3C,IAAYG,QAIX;AAJD,WAAY,MAAM;IACd,qCAAS,CAAA;IACT,iCAAG,CAAA;IACH,mCAAI,CAAA;CACP,EAJWA,QAAM,KAANA,QAAM,QAIjB;AACD,AACA;IAII,aAAY,IAAc,EAAE,EAAY;QAHxC,UAAK,GAAiB,IAAI,OAAO,EAAO,CAAC;QAIrC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;KAChB;IACL,UAAC;CAAA,IAAA;AACD;IAAA;QACI,aAAQ,GAAW,CAAC,CAAC;QACrB,UAAK,GAAY,KAAK,CAAC;QACvB,OAAE,GAAW,CAAC,CAAC;QACf,SAAI,GAAM,IAAI,CAAC;KAClB;IAAD,gBAAC;CAAA,IAAA;AACD;IASI,eAAY,SAAwB;QARpC,UAAK,GAAY,KAAK,CAAC;QACvB,SAAI,GAAa,EAAE,CAAC;QACpB,aAAQ,GAAe,EAAE,CAAC;QAC1B,UAAK,GAAW,CAAC,CAAC;QAClB,YAAO,GAAY,KAAK,CAAC;QACzB,UAAK,GAAY,KAAK,CAAC;QACvB,WAAM,GAAY,KAAK,CAAC;QACxB,cAAS,GAAiB,IAAI,CAAC;QAE3B,IAAI,CAAC,SAAS,GAAG,SAAS,IAAI,IAAI,CAAC;KACtC;IACD,uBAAO,GAAP,UAAQ,EAAY;QAChB,KAAe,UAAS,EAAT,KAAA,IAAI,CAAC,IAAI,EAAT,cAAS,EAAT,IAAS;YAApB,IAAI,GAAG,SAAA;YACP,IAAG,GAAG,CAAC,EAAE,KAAK,EAAE,EAAC;gBACb,OAAO,GAAG,CAAC;aACd;SACJ;QACD,OAAO,IAAI,CAAC;KACf;IAOD,kBAAE,GAAF,UAAG,CAAW;QACV,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAC1B,IAAG,GAAG,KAAK,IAAI,EAAC;YACZ,GAAG,GAAG,IAAI,GAAG,CAAI,IAAI,EAAE,CAAC,CAAC,CAAC;YAC1B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACvB;QACD,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC;QACf,OAAO,GAAG,CAAC;KACd;IACD,yBAAS,GAAT,UAAU,CAAW;QACjB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;KACzB;IACD,2BAAW,GAAX;QACI,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC;KACtE;IACD,wBAAQ,GAAR,UAAS,MAAuB;QAAvB,uBAAA,EAAA,cAAuB;QAC5B,IAAI,KAAK,GAAe,CAAC,IAAI,CAAC,CAAC;QAC/B,IAAI,MAAM,GAAe,CAAC,IAAI,CAAC,CAAC;QAEhC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,OAAO;YACH,IAAG,KAAK,CAAC,MAAM,GAAG,CAAC,EAAC;gBAChB,IAAI,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;gBACpB,IAAG,CAAC,MAAM,EAAC;oBACP,KAAe,UAAM,EAAN,KAAA,CAAC,CAAC,IAAI,EAAN,cAAM,EAAN,IAAM;wBAAjB,IAAI,GAAG,SAAA;wBACP,IAAI,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC;wBAChB,IAAG,CAAC,EAAE,CAAC,MAAM,EAAC;4BACV,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;4BACf,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;4BAChB,EAAE,CAAC,MAAM,GAAG,IAAI,CAAC;yBACpB;qBACJ;iBACJ;gBACD,KAAc,UAAU,EAAV,KAAA,CAAC,CAAC,QAAQ,EAAV,cAAU,EAAV,IAAU;oBAApB,IAAI,IAAE,SAAA;oBACN,IAAG,CAAC,IAAE,CAAC,MAAM,EAAC;wBACV,KAAK,CAAC,IAAI,CAAC,IAAE,CAAC,CAAC;wBACf,MAAM,CAAC,IAAI,CAAC,IAAE,CAAC,CAAC;wBAChB,IAAE,CAAC,MAAM,GAAG,IAAI,CAAC;qBACpB;iBACJ;gBACD,OAAO,CAAC,CAAC;aACZ;iBACI;gBACD,KAAiB,UAAM,EAAN,iBAAM,EAAN,oBAAM,EAAN,IAAM;oBAAnB,IAAI,KAAK,eAAA;oBACT,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC;iBACxB;gBACD,OAAO,IAAI,CAAC;aACf;SACJ,CAAC;KACL;IACD,uBAAO,GAAP,UAAQ,EAAyB,EAAE,MAAuB;QAAvB,uBAAA,EAAA,cAAuB;QACtD,IAAI,KAAK,GAAe,CAAC,IAAI,CAAC,CAAC;QAC/B,IAAI,MAAM,GAAe,CAAC,IAAI,CAAC,CAAC;QAEhC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,OAAM,KAAK,CAAC,MAAM,GAAG,CAAC,EAAC;YACnB,IAAI,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;YACpB,EAAE,CAAC,CAAC,CAAC,CAAC;YACN,IAAG,CAAC,MAAM,EAAC;gBACP,KAAe,UAAM,EAAN,KAAA,CAAC,CAAC,IAAI,EAAN,cAAM,EAAN,IAAM;oBAAjB,IAAI,GAAG,SAAA;oBACP,IAAI,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC;oBAChB,IAAG,CAAC,EAAE,CAAC,MAAM,EAAC;wBACV,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;wBACf,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;wBAChB,EAAE,CAAC,MAAM,GAAG,IAAI,CAAC;qBACpB;iBACJ;aACJ;YACD,KAAc,UAAU,EAAV,KAAA,CAAC,CAAC,QAAQ,EAAV,cAAU,EAAV,IAAU;gBAApB,IAAI,IAAE,SAAA;gBACN,IAAG,CAAC,IAAE,CAAC,MAAM,EAAC;oBACV,KAAK,CAAC,IAAI,CAAC,IAAE,CAAC,CAAC;oBACf,MAAM,CAAC,IAAI,CAAC,IAAE,CAAC,CAAC;oBAChB,IAAE,CAAC,MAAM,GAAG,IAAI,CAAC;iBACpB;aACJ;SACJ;QACD,KAAiB,UAAM,EAAN,iBAAM,EAAN,oBAAM,EAAN,IAAM;YAAnB,IAAI,KAAK,eAAA;YACT,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC;SACxB;KACJ;IACD,sBAAM,GAAN;QACI,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,IAAI,CAAC,OAAO,CAAC,UAAS,KAAK;YACvB,KAAK,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC;SACrB,CAAC,CAAC;KACN;IACD,qBAAK,GAAL,UAAM,EAAgB,EAAE,SAAyB;QAAzB,0BAAA,EAAA,gBAAyB;QAC7C,gBAAgB,IAAc;YAC1B,IAAI,GAAG,GAAG,EAAE,CAAC;YACb,GAAG,IAAI,WAAS,IAAI,CAAC,KAAO,CAAC;YAC7B,IAAG,IAAI,CAAC,OAAO,EAAC;gBACZ,GAAG,IAAI,SAAS,CAAC;aACpB;YACD,IAAG,IAAI,CAAC,SAAS,EAAC;gBACd,GAAG,IAAI,UAAQ,IAAI,CAAC,SAAS,CAAC,EAAE,MAAG,CAAC;aAEvC;YACD,GAAG,IAAI,IAAI,CAAC;YACZ,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;gBACnC,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACvB,GAAG,KAAK,KAAG,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,QAAQ,EAAE,kBAAa,GAAG,CAAC,EAAE,CAAC,KAAK,GAAG,IAAM,CAAC,CAAC;aAE9E;YACD,IAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAC;gBAExB,GAAG,IAAO,KAAK,cAAW,CAAC;gBAC3B,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;oBACvC,IAAG,CAAC,GAAG,CAAC,EAAC;wBAEL,GAAG,IAAI,GAAG,CAAC;qBACd;oBAED,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;iBAC5C;gBAED,GAAG,IAAI,IAAI,CAAC;aACf;YACD,OAAO,GAAG,CAAC;SACd;QACD,IAAG,CAAC,SAAS,EAAC;YACV,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;SAC1B;aACI;YACD,AACA,IAAI,CAAC,OAAO,CAAC,UAAA,KAAK;gBACd,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;aAC3B,CAAC,CAAC;SACN;KACJ;IACD,wBAAQ,GAAR,UAAS,SAAyB;QAAzB,0BAAA,EAAA,gBAAyB;QAC9B,IAAI,EAAE,GAAG,IAAI,QAAQ,EAAE,CAAC;QACxB,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC;QAC1B,OAAO,EAAE,CAAC,CAAC,CAAC;KACf;IAED,2BAAW,GAAX,UAAY,KAAe;QACvB,IAAG,KAAK,CAAC,SAAS,KAAK,IAAI,EAAC;YACxB,IAAG,IAAI,CAAC,SAAS,KAAK,IAAI,EAAC;gBACvB,IAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,KAAK,CAAC,SAAS,CAAC,QAAQ,EAAC;oBAClD,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;iBACpC;aACJ;iBACI;gBACD,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;aACpC;SACJ;KACJ;IACD,8BAAc,GAAd;QACI,AACA,IAAI,KAAK,GAAe,CAAC,IAAI,CAAC,CAAC;QAC/B,IAAI,CAAC,OAAO,CAAC,UAAS,CAAC;YACnB,IAAG,CAAC,CAAC,KAAK,EAAC;gBACP,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACjB;SACJ,CAAC,CAAC;QACH,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,KAAK,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;YAC/B,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YACjB,CAAC,CAAC,OAAO,CAAC,UAAS,KAAK;gBACpB,IAAG,KAAK,KAAK,CAAC,EAAC;oBACX,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;wBACpC,IAAI,GAAG,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;wBACxB,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;qBACvC;oBAED,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;iBACxB;aACJ,EAAC,IAAI,CAAC,CAAC;YACR,CAAC,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;SACzB;QACD,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,KAAK,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;YAC/B,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC;SACtB;KACJ;IACD,qBAAK,GAAL;QACI,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,IAAI,CAAC,OAAO,CAAC;YACT,CAAC,EAAE,CAAC;SACP,CAAC,CAAC;QACH,OAAO,CAAC,CAAC;KACZ;IAED,oBAAI,GAAJ;QACI,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,IAAI,CAAC,OAAO,CAAC;YACT,CAAC,EAAE,CAAC;SACP,CAAC,CAAC;QACH,OAAO,CAAC,CAAC;KACZ;IAKD,wBAAQ,GAAR,UAAS,GAAwB;QAC7B,AACA,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;YAEnC,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACvB,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,UAAS,CAAC,EAAE,CAAC;gBAC3B,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;aAC3B,CAAC,CAAC;SACN;KACJ;IAKD,wBAAQ,GAAR,UAAS,IAAY;QACjB,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;YACnC,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACvB,IAAG,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAC;gBACxB,OAAO,GAAG,CAAC,EAAE,CAAC;aACjB;SACJ;QACD,OAAO,IAAI,CAAC;KACf;IACD,sBAAM,GAAN;QACI,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;KAC/B;IACD,qBAAK,GAAL;KAEC;IACD,qBAAK,GAAL;QAEI,IAAI,SAAS,GAAsC,EAAE,CAAC;QACtD,IAAI,MAAM,GAAe,EAAE,CAAC;QAC5B,IAAI,QAAQ,GAAG,CAAC,CAAC;QACjB,IAAI,UAAU,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;QAE9B,IAAI,GAAG,GAAG,IAAI,OAAO,CAAa;YAC9B,UAAU,EAAE,cAAM,OAAA,EAAE,GAAA;YACpB,KAAK,YAAC,IAAgB,EAAE,GAAe;gBACnC,KAAa,UAAG,EAAH,WAAG,EAAH,iBAAG,EAAH,IAAG;oBAAZ,IAAI,GAAC,YAAA;oBACL,IAAI,GAAG,GAAG,KAAK,CAAC;oBAChB,KAAiB,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI;wBAAjB,IAAI,KAAK,aAAA;wBACT,IAAG,GAAC,KAAK,KAAK,EAAC;4BACX,GAAG,GAAG,IAAI,CAAC;4BACX,MAAM;yBACT;qBACJ;oBACD,CAAC,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAC,CAAC,CAAC;iBACxB;aACJ;YACD,SAAS,EAAE,UAAA,CAAC,IAAI,OAAA,EAAE,GAAA;SACrB,CAAC,CAAC;QAEH,AAGA,IAAI,SAAS,GAAG,IAAI,aAAa,CAAC,UAAU,EAAC,CAAC,IAAI,CAAC,CAAC,CAAC;QACrD,SAAS,CAAC,KAAK,GAAG,QAAQ,EAAE,CAAC;QAC7B,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACvB,AACA,SAAS,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,GAAG,SAAS,CAAC;QAExC,IAAI,KAAK,GAAuB,CAAC,SAAS,CAAC,CAAC;QAE5C,OAAM,KAAK,CAAC,MAAM,GAAG,CAAC,EAAC;YACnB,IAAI,CAAC,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC;YAEtB,GAAG,CAAC,SAAS,EAAE,CAAC;YAEhB,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;YAChB,GAAG,CAAC,OAAO,CAAC,UAAS,KAAK,EAAC,KAAK,EAAC,EAAE;gBAC/B,IAAI,OAAO,GAAG,IAAI,aAAa,CAAI,UAAU,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC;gBACxD,IAAI,MAAM,GAAG,OAAO,CAAC,IAAI,EAAE,CAAC;gBAC5B,IAAG,SAAS,CAAC,MAAM,CAAC,EAAC;oBAEjB,OAAO,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC;iBAC/B;qBACI;oBACD,SAAS,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC;oBAC5B,CAAC,OAAO,CAAC,SAAS,KAAK,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,KAAK,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBAChF,OAAO,CAAC,KAAK,GAAG,QAAQ,EAAE,CAAC;oBAC3B,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;iBACxB;gBACD,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,EAAC,KAAK,CAAC,CAAC;aACxC,CAAC,CAAC;SACN;QACD,SAAS,CAAC,OAAO,EAAE,CAAC;QACpB,OAAO;YACH,IAAI,EAAE,SAAS;YACf,MAAM,EAAE,MAAM;SACjB,CAAC;KACL;IACL,YAAC;CAAA,IAAA;AAED;IAA+BH,iCAAQ;IAGnC,uBAAY,UAAkB,EAAE,MAAkB;QAAlD,YACI,iBAAO,SAWV;QAVG,KAAI,CAAC,KAAK,GAAG,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QAClC,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,KAAI,CAAC,QAAQ,GAAG,IAAI,MAAM,CAAC,UAAU,CAAC,CAAC;QACvC,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,MAAM,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;YAChC,KAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;YAEnC,KAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;YAC5B,KAAI,CAAC,OAAO,GAAG,KAAI,CAAC,OAAO,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;SACpD;;KACJ;IACD,4BAAI,GAAJ;QACI,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;KAC/B;IAED,gCAAQ,GAAR,UAAS,GAAwB;QAC7B,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;YAErC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;SAChC;KACJ;IACD,+BAAO,GAAP,UAAQ,EAAiC;QACrC,iBAAM,OAAO,YAAC,EAAE,CAAC,CAAC;KACrB;IACD,+BAAO,GAAP;QACI,IAAI,CAAC,OAAO,CAAC,UAAS,KAAK;YACvB,KAAK,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;SAC3B,CAAC,CAAC;KACN;IACL,oBAAC;CAAA,CAlC8B,KAAK;;AClVpC;IAEI,aAAmB,MAAkB;QAAlB,WAAM,GAAN,MAAM,CAAY;QACjC,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;KAC1B;IACD,wBAAU,GAAV,UAAW,EAAsD;QAC7D,KAAgB,UAAW,EAAX,KAAA,IAAI,CAAC,MAAM,EAAX,cAAW,EAAX,IAAW;YAAvB,IAAI,IAAI,SAAA;YACR,KAAe,UAAS,EAAT,KAAA,IAAI,CAAC,IAAI,EAAT,cAAS,EAAT,IAAS;gBAApB,IAAI,GAAG,SAAA;gBACP,EAAE,CAAC,GAAG,EAAE,IAAI,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC;aACzB;SACJ;KACJ;IACD,mBAAK,GAAL,UAAM,EAAgB;QAClB,KAAa,UAAW,EAAX,KAAA,IAAI,CAAC,MAAM,EAAX,cAAW,EAAX,IAAW;YAApB,IAAI,CAAC,SAAA;YACL,CAAC,CAAC,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;YACnB,EAAE,CAAC,OAAO,EAAE,CAAC;SAChB;KACJ;IACD,sBAAQ,GAAR;QACI,IAAI,GAAG,GAAG,EAAE,CAAC;QACb,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;YACrC,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,GAAG,IAAI,CAAC;SAC3C;QACD,OAAO,GAAG,CAAC;KACd;IAED,qBAAO,GAAP,UAAQ,MAAmB;QACvB,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;QACtB,IAAI,OAAO,GAAG,EAAE,CAAC;QACjB,IAAI,OAAO,GAAG,EAAE,CAAC;QACjB,IAAI,MAAM,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,EAAE,CAAC;QAClB,IAAI,EAAE,CAAC;QACP;YACI,IAAG,MAAM,KAAK,IAAI,EAAC;gBACf,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACnB;YACD,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAChB,EAAE,CAAC,IAAI,EAAE,CAAC;YACV,CAAC,GAAG,EAAE,CAAC,IAAI,EAAE,CAAC;SACjB;QACD;YACI,EAAE,GAAG,MAAM,CAAC;YACZ,MAAM,GAAG,IAAI,CAAC;YACd,OAAM,OAAO,CAAC,MAAM,GAAG,CAAC,EAAC;gBACrB,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC;gBACzB,OAAO,CAAC,GAAG,EAAE,CAAC;aACjB;SACJ;QACD,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,OAAO;YACH,CAAC,GAAG,EAAE,CAAC,IAAI,EAAE,CAAC;YACd,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;YAChB,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;YACnB,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;YACnB,MAAM,GAAG,IAAI,CAAC;YACd,IAAI,EAAE,CAAC;YACP,OAAM,IAAI,EAAC;gBACP,IAAG,EAAE,CAAC,SAAS,KAAK,IAAI,EAAC;oBAErB,IAAG,EAAE,CAAC,MAAM,EAAE,EAAC;wBACX,EAAE,GAAG,CAAC,KAAK,IAAI,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;wBACtD,IAAG,EAAE,KAAK,IAAI,EAAC;4BACX,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,EAAC,MAAM,EAAE,EAAE,CAAC,SAAS,EAAE,CAAC;yBAC7D;6BACI;4BACD,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;4BACnB,MAAM,GAAG,EAAE,CAAC;4BACZ,EAAE,GAAG,EAAE,CAAC;4BACR,EAAE,EAAE,CAAC;yBACR;qBACJ;yBACI;wBACD,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,EAAC,MAAM,EAAE,EAAE,CAAC,SAAS,EAAE,CAAC;qBAC7D;iBACJ;qBACI;oBACD,EAAE,GAAG,CAAC,KAAK,IAAI,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;oBACtD,IAAG,EAAE,KAAK,IAAI,EAAC;wBACX,IAAG,MAAM,KAAK,IAAI,EAAC;4BACf,QAAQ,EAAE,CAAC;4BACX,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,EAAC,MAAM,EAAE,EAAE,CAAC,SAAS,EAAE,CAAC;yBAC7D;6BACI,IAAG,CAAC,KAAK,IAAI,EAAC;4BAEf,OAAO,IAAI,CAAC;yBACf;6BACI;4BACD,MAAM,IAAI,KAAK,CAAC,wBAAwB,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;yBACvD;qBACJ;yBACI;wBACD,EAAE,GAAG,EAAE,CAAC;wBACR,EAAE,EAAE,CAAC;qBACR;iBACJ;aACJ;SAEJ,CAAA;KACJ;IACL,UAAC;CAAA;;AChGD;IAGI,sBAAmB,MAAwB;QAAxB,WAAM,GAAN,MAAM,CAAkB;QAFnC,aAAQ,GAAkC,EAAE,CAAC;KAEP;IAE9C,2BAAI,GAAJ,UAAK,CAAS,EAAE,EAAgB;QAC5B,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACvB,IAAG,CAAC,KAAK,SAAS,EAAC;YACf,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;YAC5C,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SAC7B;aACI;YACD,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;SACf;KACJ;IACD,6BAAM,GAAN,UAAO,CAAS,EAAE,IAAO;QACrB,IAAI,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QAC3B,IAAG,GAAG,KAAK,SAAS,EAAC;YACjB,KAAc,UAAG,EAAH,WAAG,EAAH,iBAAG,EAAH,IAAG;gBAAb,IAAI,EAAE,YAAA;gBACN,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aAClB;YACD,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;SAC3B;KACJ;IACD,2BAAI,GAAJ;QACI,KAAI,IAAI,CAAC,IAAI,IAAI,CAAC,QAAQ,EAAC;YACvB,KAAc,UAAgB,EAAhB,KAAA,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAhB,cAAgB,EAAhB,IAAgB;gBAA1B,IAAI,EAAE,SAAA;gBACN,EAAE,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;aACnB;SACJ;KACJ;IACL,mBAAC;CAAA;;iBC1BuB,GAAW;IAC/B,OAAO;QACH,GAAG,EAAE,GAAG;QACR,SAAS,EAAE,CAAC,CAAC;QACb,WAAW,EAAE,CAAC;QACd,OAAO,EAAE,CAAC;QACV,SAAS,EAAE,CAAC;KACf,CAAC;CACL;AACD,qBAA4B,IAAc,EAAE,EAAY,EAAE,GAAW;IACjE,OAAO;QACH,GAAG,EAAE,GAAG;QACR,SAAS,EAAE,IAAI,CAAC,SAAS;QACzB,WAAW,EAAE,IAAI,CAAC,WAAW;QAC7B,OAAO,EAAE,EAAE,CAAC,OAAO;QACnB,SAAS,EAAE,EAAE,CAAC,SAAS;KAC1B,CAAC;CACL;AACD,AAOC;AACD,sBAA6B,GAAa,EAAE,KAAe,EAAE,MAAoB;IAApB,uBAAA,EAAA,YAAoB;IAC7E,gBAAgB,CAAS,EAAE,CAAS;QAChC,IAAI,GAAG,GAAG,EAAE,CAAC;QACb,OAAM,CAAC,EAAG,GAAE,CAAC,EAAC;YACV,GAAG,IAAI,CAAC,CAAC;SACZ;QACD,OAAO,GAAG,CAAC;KACd;IACD,eAAe,CAAS;QACpB,IAAI,GAAG,GAAG,CAAC,CAAC;QACZ,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;YAC5B,GAAG,IAAI,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC;SACzC;QACD,OAAO,GAAG,CAAC;KACd;IACD,IAAG,GAAG,CAAC,SAAS,KAAK,CAAC,CAAC,EAAC;QACpB,IAAI,GAAG,GAAG,YAAS,GAAG,CAAC,SAAS,GAAG,CAAC,mBAAY,GAAG,CAAC,WAAW,GAAG,CAAC,QAAI,GAAG,IAAI,CAAC;QAC/E,IAAI,IAAI,GAAG,GAAG,CAAC,SAAS,EAAE,GAAG,GAAG,GAAG,CAAC,WAAW,CAAC;QAChD,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;QAC1B,GAAG,IAAI,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACxB,IAAI,QAAM,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;QAChC,OAAM,IAAI,IAAI,GAAG,CAAC,OAAO,IAAI,GAAG,IAAI,GAAG,CAAC,SAAS,EAAC;YAC9C,GAAG,IAAI,MAAM,CAAC;YACd,IAAG,GAAG,EAAE,IAAI,QAAM,EAAC;gBACf,GAAG,GAAG,CAAC,CAAC;gBACR,IAAI,EAAE,CAAC;gBACP,GAAG,IAAI,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;gBACjC,QAAM,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;aAC/B;SACJ;QACD,OAAO,GAAG,CAAC;KACd;SACI;QACD,OAAO,qBAAqB,CAAC;KAChC;CACJ;;AC9DD,IAAM,yBAAyljJ,IAAM,wBAAwuK,IAAM,yBAAykG,IAAM,wBAAwvlI;IAEI,kBAAmB,KAAa;QAAb,UAAK,GAAL,KAAK,CAAQ;QADhC,YAAO,GAAmB,EAAE,CAAC;KACM;IACvC,eAAC;CAAA,IAAA;AAKA,AAAC;AAyBF,0BAAoC,GAAY;IAC5C,IAAI,KAAK,GAAa,IAAI,KAAK,EAAK,CAAC;IACrC,IAAI,aAAa,GAAa,IAAI,CAAC;IACnC,IAAI,WAAW,GAAyC,EAAE,CAAC;IAE3D,IAAK,YAAY,GAAe,EAAE,CAAC;IACnC,IAAI,WAAW,GAAW,IAAI,CAAC;IAC/B,IAAI,UAAU,GAAY,KAAK,CAAC;IAChC,IAAI,aAAa,GAAW,IAAI,CAAC;IACjC,IAAI,MAAM,GAAG,KAAK,CAAC;IAEnB,IAAI,OAAO,GAAG,CAAC,CAAC;IAChB,IAAI,WAAW,GAA0B,EAAE,CAAC;IAC5C,IAAI,OAAO,GAAe,CAAC,IAAI,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;IAE7C,IAAI,SAAS,GAA0B,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC;IACtD,IAAI,cAAoC,CAAC;IACzC,IAAI,eAAe,GAAe,EAAE,CAAC;IACrC,IAAI,YAAY,GAAa,IAAI,CAAC;IAGlC,IAAI,GAAG,GAAqC,EAAE,CAAC;IAE/C,IAAI,eAAe,GAA6B;QAC5C,mBAAmB,EAAE,cAAM,OAAA,OAAO,CAAC,yBAAyB,CAAC,GAAA;QAC7D,kBAAkB,EAAE,cAAM,OAAA,OAAO,CAAC,wBAAwB,CAAC,GAAA;QAC3D,mBAAmB,EAAE,cAAM,OAAA,OAAO,CAAC,yBAAyB,CAAC,GAAA;QAC7D,kBAAkB,EAAE,cAAM,OAAA,OAAO,CAAC,wBAAwB,CAAC,GAAA;KAC9D,CAAC;IAEF,cAAc,GAAG,IAAI,YAAY,CAAS,UAAA,CAAC,IAAI,OAAA,SAAS,CAAC,CAAC,CAAC,GAAA,CAAC,CAAC;IAE7D,OAAO;QACH,UAAU,YAAA;QACV,MAAM,QAAA;QACN,UAAU,YAAA;QACV,WAAW,aAAA;QACX,QAAQ,UAAA;QACR,GAAG,KAAA;QACH,UAAU,YAAA;QACV,YAAY,cAAA;QACZ,UAAU,YAAA;QACV,WAAW,aAAA;QACX,aAAa,eAAA;QACb,SAAS,WAAA;QACT,MAAM,QAAA;QACN,QAAQ,UAAA;QACR,UAAU,YAAA;QACV,aAAa,eAAA;QACb,MAAM,QAAA;QACN,KAAK,OAAA;QACL,SAAS,WAAA;QACT,gBAAgB,EAAE,cAAM,OAAA,aAAa,GAAA;QACrC,cAAc,gBAAA;KACjB,CAAC;IAEF,eAAe,IAAgB;QAC3B,IAAG,YAAY,KAAK,IAAI,EAAC;YACrB,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACnC;aACI;YACD,KAAc,UAAe,EAAf,mCAAe,EAAf,6BAAe,EAAf,IAAe;gBAAzB,IAAI,EAAE,wBAAA;gBACN,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACzB;SACJ;KACJ;IACD,eAAe,CAAW;QACtB,KAAK,GAAG,aAAa,GAAG,IAAI,KAAK,EAAK,CAAC;QACvC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC;QACrB,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC;QACvB,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC;QACxB,WAAW,GAAG,IAAI,CAAC;QACnB,UAAU,GAAG,KAAK,CAAC;QACnB,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC;QACf,GAAG,CAAC,IAAI,CAAC;YACL,EAAE,EAAE,CAAC;YACL,IAAI,EAAE,CAAC;SACV,CAAC,CAAC;QACH,OAAM,GAAG,CAAC,MAAM,GAAG,CAAC,EAAC;YACjB,IAAI,KAAG,GAAG,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YAC9B,KAAG,CAAC,IAAI,CAAC,OAAO,CAAC,KAAG,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC;YAC7B,KAAG,GAAG,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YAC1B,KAAG,CAAC,EAAE,IAAI,KAAG,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI,GAAG,CAAC,GAAG,EAAE,CAAC;SAClD;QACD,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,IAAI,KAAK,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC;QAC1B,IAAI,GAAG,GAAG,IAAI,GAAG,CAAI,KAAK,CAAC,MAAM,CAAC,CAAC;QACnC,OAAO,GAAG,CAAC;KAEd;IACD,sBAAsB,GAAW,EAAE,GAAa;QAC5C,GAAG,CAAC,YAAY,CAAC,UAAC,GAAG,EAAE,KAAK;YACxB,GAAG,CAAC,GAAG,CAAC,IAAI,SAAS,CAAC,GAAG,GAAG,GAAG,GAAG,YAAY,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,mBAAmB,CAAC,CAAC,CAAC;SACrF,CAAC,CAAC;KACN;IACD,qBAAqB,IAAY,EAAE,IAAc,EAAE,OAAiB;QAChE,GAAG,CAAC,YAAY,CAAC,UAAC,GAAG,EAAE,KAAK;YACxB,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,YAAY,CAAC,OAAO,EAAE,KAAK,CAAC,GAAG,IAAI,CAAC;YAC3D,GAAG,IAAI,6BAA6B,GAAG,YAAY,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;YACjE,GAAG,CAAC,GAAG,CAAC,IAAI,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;SAC/B,CAAC,CAAC;KACN;IAED,oBAAoB,KAAY;QAC5B,IAAI,IAAI,GAAG,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAClC,IAAG,IAAI,KAAK,SAAS,EAAC;YAClB,WAAW,CAAC,gBAAa,KAAK,CAAC,GAAG,2BAAuB,EAAE,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;SAC/E;QACD,IAAI,GAAG,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG;YAC5B,GAAG,EAAE,KAAK;YACV,IAAI,EAAE,IAAI,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC;SAChC,CAAC;QACF,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC;KAC5B;IACD;QACI,YAAY,GAAG,IAAI,CAAC;KACvB;IAED;QACI,eAAe,CAAC,MAAM,GAAG,CAAC,CAAC;KAC9B;IACD,qBAAqB,CAAS;QAC1B,IAAI,EAAE,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;QACtB,IAAG,EAAE,KAAK,SAAS,EAAC;YAChB,EAAE,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC;YACnC,OAAO,CAAC,IAAI,CAAC,IAAI,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;YAC/B,cAAc,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;SAChC;QACD,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;KAC/C;IAED;QACI,MAAM,GAAG,IAAI,CAAC;QACd,aAAa,GAAG,IAAI,CAAC;QACrB,KAAK,CAAC;YACF,aAAa,GAAG,IAAI,KAAK,EAAK,CAAC;YAC/B,KAAK,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;SAClC,CAAC,CAAC;KACN;IACD,aAAa,MAAS,EAAE,KAAc,EAAE,KAA4B;QAA5B,sBAAA,EAAA,oBAA4B;QAChE,KAAc,UAAe,EAAf,mCAAe,EAAf,6BAAe,EAAf,IAAe;YAAzB,IAAI,EAAE,wBAAA;YACN,EAAE,CAAC,KAAK,GAAG,MAAI,KAAK,MAAG,CAAC;SAC3B;QACD,KAAK,CAAC;YACF,IAAI,EAAE,GAAG,IAAI,SAAS,EAAK,CAAC;YAC5B,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,QAAQ,GAAG,OAAO,EAAE,CAAC;YAChC,EAAE,CAAC,IAAI,GAAG,MAAM,CAAC;YACjB,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;YACjB,aAAa,CAAC,SAAS,GAAG,EAAE,CAAC;SAChC,CAAC,CAAC;KACN;IAGD;QACI,KAAK,CAAC;YACF,IAAI,KAAK,GAAG,IAAI,KAAK,EAAK,CAAC;YAC3B,aAAa,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YAC/B,aAAa,GAAG,IAAI,KAAK,EAAK,CAAC;YAC/B,KAAK,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;YAC/B,WAAW,CAAC,IAAI,CAAC;gBACb,IAAI,EAAE,KAAK;gBACX,IAAI,EAAE,IAAI,KAAK,EAAK;aACvB,CAAC,CAAC;SACN,CAAC,CAAC;KACN;IACD;QACI,KAAK,CAAC;YACF,IAAI,GAAG,GAAG,WAAW,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YAC9C,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClC,aAAa,GAAG,IAAI,KAAK,EAAK,CAAC;YAC/B,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;SACrC,CAAC,CAAC;KACN;IACD;QACI,KAAK,CAAC;YACF,aAAa,GAAG,WAAW,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC;SAC1C,CAAC,CAAC;KACN;IAID;QACI,KAAK,CAAC;YACF,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;SACpC,CAAC,CAAC;KACN;IACD,uBAAuB,OAA6B;QAChD,OAAO,KAAK,EAAE,KAAK,aAAa,GAAG,IAAI,EAAE,MAAM,GAAG,KAAK,CAAC,CAAC;QACzD,KAAK,CAAC;YACF,IAAI,GAAG,GAAG,YAAY,CAAC,GAAG,EAAE,CAAC;YAC7B,IAAG,OAAO,KAAK,GAAG,EAAC;gBACf,GAAG,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;aAChC;iBACI,IAAG,OAAO,KAAK,GAAG,EAAC;gBACpB,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;aAChC;iBACI,IAAG,OAAO,KAAK,GAAG,EAAC;gBACpB,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;gBAC7B,aAAa,GAAG,GAAG,CAAC;aACvB;SACJ,CAAC,CAAC;KACN;IAGD,mBAAmB,CAAS;QACxB,IAAG,MAAM,EAAC;YACN,aAAa,GAAG,CAAC,CAAC;YAClB,MAAM,GAAG,KAAK,CAAC;SAClB;aACI;YACD,aAAa,GAAG,IAAI,CAAC;SACxB;QACD,KAAK,CAAC;YACF,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,CAAC,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;gBAC3B,IAAI,EAAE,GAAG,IAAI,KAAK,EAAK,CAAC;gBACxB,aAAa,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;gBAChD,aAAa,GAAG,EAAE,CAAC;aACtB;SACJ,CAAC,CAAC;KACN;IACD,gBAAgB,KAAY;QACxB,MAAM,GAAG,KAAK,CAAC;QACf,aAAa,GAAG,IAAI,CAAC;QACrB,KAAK,CAAC;YACF,IAAI,IAAI,GAAG,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAClC,IAAG,IAAI,KAAK,SAAS,EAAC;gBAClB,YAAY,CAAC,iCAA8B,KAAK,CAAC,GAAG,OAAG,EAAE,KAAK,CAAC,CAAC;gBAChE,OAAO;aACV;YACD,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;YAErB,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,GAAG,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;gBAC7B,IAAI,KAAK,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;gBACnB,IAAG,KAAK,CAAC,IAAI,KAAK,IAAI,EAAC;oBACnB,IAAI,GAAG,GAAG,uDAAqD,IAAI,CAAC,KAAO,CAAC;oBAC5E,KAAI,CAAC,EAAE,EAAC,CAAC,GAAG,GAAG,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;wBACvB,GAAG,IAAI,SAAO,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAO,CAAC;qBACrC;oBACD,GAAG,IAAI,SAAO,IAAI,CAAC,KAAO,CAAC;oBAC3B,YAAY,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;oBAEzB,OAAO;iBACV;aACJ;YACD,GAAG,CAAC,IAAI,CAAC;gBACL,EAAE,EAAE,CAAC;gBACL,IAAI,EAAE,IAAI;aACb,CAAC,CAAC;SACN,CAAC,CAAC;KACN;IACD,kBAAkB,OAAgB;QAC9B,MAAM,GAAG,KAAK,CAAC;QACf,aAAa,GAAG,IAAI,CAAC;QACrB,KAAK,CAAC;YACF,UAAU,GAAG,OAAO,CAAC;YACrB,IAAI,EAAE,GAAG,IAAI,KAAK,EAAK,CAAC;YACxB,WAAW,GAAG,aAAa,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YACnC,aAAa,GAAG,EAAE,CAAC;YACnB,OAAO,IAAI,WAAW,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;SACzC,CAAC,CAAC;KACN;IACD,oBAAoB,IAAW,EAAE,EAAS;QACtC,IAAG,IAAI,CAAC,GAAG,CAAC,MAAM,KAAK,CAAC,EAAC;YAErB,YAAY,CAAC,wCAAqC,IAAI,CAAC,GAAG,OAAG,EAAE,IAAI,CAAC,CAAC;YACrE,OAAO;SACV;QACD,IAAG,IAAI,KAAK,EAAE,IAAI,EAAE,CAAC,GAAG,CAAC,MAAM,KAAK,CAAC,EAAC;YAElC,YAAY,CAAC,wCAAqC,EAAE,CAAC,GAAG,OAAG,EAAE,EAAE,CAAC,CAAC;YACjE,OAAO;SACV;QACD,IAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,EAAC;YAC7C,YAAY,CACR,qFAAmF,IAAI,CAAC,GAAG,aAAQ,EAAE,CAAC,GAAG,OAAI,EAC/G,EAAE,CAAC,CAAC;YACN,OAAO;SACV;QACD,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;KAC/D;IACD,uBAAuB,IAAY,EAAE,EAAU;QAC3C,KAAK,CAAC;YACF,UAAU;gBACV,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,CAAC;gBAClC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAI,IAAI,EAAE,EAAE,CAAC,CAAC;SACtC,CAAC,CAAC;KACN;IACD;QACI,KAAK,CAAC;YACF,WAAW,GAAG,IAAI,CAAC;SACtB,CAAC,CAAC;KACN;IAED;QACI,IAAI,IAAI,GAAa,EAAE,CAAC;QACxB,KAAiB,UAAO,EAAP,mBAAO,EAAP,qBAAO,EAAP,IAAO;YAApB,IAAI,KAAK,gBAAA;YACT,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;SAC3B;QACD,cAAc,CAAC,IAAI,EAAE,CAAC;QACtB,OAAO,IAAI,CAAC;KACf;IACD,iBAAiB,IAAc;QAC3B,IAAG,IAAI,CAAC,MAAM,GAAG,CAAC,KAAK,CAAC,EAAC;YACrB,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC;SAClD;QACD,QAAQ,CAAC,KAAK,CAAC,CAAC;QAChB,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,EAAE,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAC;YAC5C,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;SACnC;QACD,MAAM,EAAE,CAAC;KACZ;IACD,mBAAmB,EAAS;QACxB,IAAI,EAAE,GAAG,eAAe,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QACjC,IAAG,EAAE,KAAK,SAAS,EAAC;YAChB,YAAY,CAAC,uBAAoB,EAAE,CAAC,GAAG,sBAAkB,EAAE,EAAE,CAAC,CAAC;YAC/D,OAAO;SACV;QACD,EAAE,EAAE,CAAC;KACR;CAEJ;;yBCzW+B,EAAU;IACtC,OAAO,UAAA,CAAC;QACJ,CAAC,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;KACtB,CAAA;CACJ;AACD,6BAAoC,EAAU;IAC1C,OAAO,UAAA,CAAC;QACJ,CAAC,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC;KAC1B,CAAA;CACJ;AACD;IAAA;QACI,UAAK,GAAa,IAAI,CAAC;QACvB,YAAO,GAAa,EAAE,CAAC;KA8C1B;IA5CG,0BAAM,GAAN,UAAO,CAAgB;QACnB,KAAe,UAAY,EAAZ,KAAA,IAAI,CAAC,OAAO,EAAZ,cAAY,EAAZ,IAAY;YAAvB,IAAI,GAAG,SAAA;YACP,GAAG,KAAK,IAAI,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;SAC1B;KACJ;IAED,+BAAW,GAAX,UAAY,EAAY;QACpB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;KACnB;IACD,uBAAG,GAAH,UAAI,CAAS;QACT,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAA,CAAC,CAAC;KACpC;IACD,6BAAS,GAAT,UAAU,CAAS;QACf,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC;KACzC;IACD,+BAAW,GAAX;QACI,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;QAC9B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACxB,OAAO,GAAG,CAAC;KACd;IACD,uBAAG,GAAH,UAAI,CAAS,EAAE,EAAU;QACrB,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;KACxB;IACD,4BAAQ,GAAR;QACI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,WAAW,EAAE,GAAA,CAAC,CAAC;KAC3C;IACD,8BAAU,GAAV,UAAW,GAAa,EAAE,MAAe;QACrC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,UAAU,CAAC,GAAG,EAAE,MAAM,CAAC,GAAA,CAAC,CAAC;KACrD;IACD,0BAAM,GAAN,UAAO,CAAS;QACZ,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,GAAA,CAAC,CAAC;KACvC;IACD,4BAAQ,GAAR,UAAS,GAAa;QAClB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAA,CAAC,CAAC;KAC3C;IACD,uBAAG,GAAH;QACI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,GAAG,EAAE,GAAA,CAAC,CAAC;KACnC;IACD,4BAAQ,GAAR;QACI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,QAAQ,EAAE,GAAA,CAAC,CAAC;KACxC;IACD,2BAAO,GAAP;QACI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,OAAO,EAAE,GAAA,CAAC,CAAC;KACvC;IACL,gBAAC;CAAA;;AC1CD,IAAY,YAIX;AAJD,WAAY,YAAY;IACpB,iDAAS,CAAA;IACT,mDAAU,CAAA;IACV,+CAAQ,CAAA;CACX,EAJW,YAAY,KAAZ,YAAY,QAIvB;AAAA,AAAC;AAqCF,2BAAkC,GAAY;IAC1C,IAAI,IAAI,GAAS,IAAI,IAAI,EAAE,CAAC;IAC5B,IAAI,OAAO,GAAY,IAAI,OAAO,EAAE,CAAC;IAErC,IAAI,eAAe,GAA8B,EAAE,CAAC;IACpD,IAAI,gBAAgB,GAAgC,EAAE,CAAC;IAEvD,IAAI,UAAU,GAAW,EAAE,CAAC;IAC5B,IAAI,WAAW,GAAU,IAAI,CAAC;IAE9B,IAAI,QAAQ,GAAyB,EAAE,CAAC;IACxC,IAAI,YAAY,GAAwB,IAAI,CAAC;IAC7C,IAAI,eAAe,GAA2B,IAAI,CAAC;IAEnD,IAAI,SAAS,GAAG,CAAC,CAAC;IAClB,IAAI,MAAM,GAAG,IAAI,CAAC;IAClB,IAAI,GAAG,GAAG,CAAC,CAAC;IACZ,IAAI,SAAS,GAAkB,EAAE,CAAC;IAClC,IAAI,OAAO,GAAkB,EAAE,CAAC;IAChC,IAAI,UAAiC,CAAC;IACtC,IAAI,aAAa,GAAqC,EAAE,CAAC;IAEzD,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACvB,UAAU,GAAG,gBAAgB,CAAC,GAAG,CAAC,CAAC;IACnC,YAAY,GAAG,IAAI,YAAY,CAAQ,UAAA,CAAC,IAAI,OAAA,QAAQ,CAAC,CAAC,CAAC,GAAA,CAAC,CAAC;IACzD,eAAe,GAAG,IAAI,YAAY,CAAW,UAAA,CAAC,IAAI,OAAA,eAAe,CAAC,CAAC,CAAC,GAAA,CAAC,CAAC;IACtE,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,CAAC;IAE/B,OAAO;QACH,QAAQ,UAAA;QACR,UAAU,YAAA;QACV,eAAe,iBAAA;QACf,cAAc,gBAAA;QACd,eAAe,iBAAA;QACf,iBAAiB,mBAAA;QACjB,MAAM,QAAA;QACN,SAAS,WAAA;QACT,SAAS,WAAA;QACT,WAAW,aAAA;QACX,OAAO,SAAA;QACP,OAAO,SAAA;QACP,WAAW,aAAA;QACX,KAAK,OAAA;QACL,WAAW,aAAA;QACX,aAAa,eAAA;QACb,iBAAiB,mBAAA;QACjB,WAAW,aAAA;QACX,SAAS,WAAA;QACT,YAAY,cAAA;QACZ,UAAU,YAAA;QACV,kBAAkB,oBAAA;QAClB,sBAAsB,wBAAA;QACtB,kBAAkB,oBAAA;QAClB,KAAK,OAAA;QACL,UAAU,EAAE,UAAU;KACzB,CAAC;IAEF;QACI,OAAO,UAAU,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;KAC5C;IACD;QACI,IAAI,KAAK,GAAG,WAAW,CAAC;QACxB,WAAW,GAAG,IAAI,CAAC;QAEnB,IAAI,CAAC,GAAG,IAAI,EAAE,CAAC;QACf,IAAI,CAAC,GAAG,GAAG,GAAG,SAAS,EAAE,CAAC;QAC1B,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;QACxB,IAAI,GAAG,GAAG,IAAI,EAAE,CAAC;QACjB,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;QACpB,UAAU,EAAE,CAAC;QACb,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC;QAChB,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,YAAY,CAAC,IAAI,CAAC,CAAC;QAE3C,WAAW,GAAG,KAAK,CAAC;QAGpB,KAAI,IAAI,KAAK,IAAI,CAAC,CAAC,IAAI,EAAC;YACpB,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACtB,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC;SACpD;QACD,KAAI,IAAI,KAAK,IAAI,CAAC,CAAC,QAAQ,EAAC;YACxB,IAAI,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YAC1B,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC;SACpD;KACJ;IAED,sBAAsB,GAAW,EAAE,GAAa;QAC5C,GAAG,CAAC,YAAY,CAAC,UAAC,GAAG,EAAE,KAAK;YACxB,GAAG,CAAC,GAAG,CAAC,IAAI,SAAS,CAAC,GAAG,GAAG,GAAG,GAAG,YAAY,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,mBAAmB,CAAC,CAAC,CAAC;SACrF,CAAC,CAAC;KACN;IACD,AAKA,sBAAsB,IAAY,EAAE,IAAc,EAAE,OAAiB;QACjE,GAAG,CAAC,YAAY,CAAC,UAAC,GAAG,EAAE,KAAK;YACxB,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,YAAY,CAAC,OAAO,EAAE,KAAK,CAAC,GAAG,IAAI,CAAC;YAC3D,GAAG,IAAI,6BAA6B,GAAG,YAAY,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;YACjE,GAAG,CAAC,IAAI,CAAC,IAAI,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;SAClC,CAAC,CAAC;KACN;IACD,kBAAkB,IAAW,EAAE,KAAa;QACxC,IAAI,KAAK,GAAG,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACtC,IAAG,KAAK,KAAK,SAAS,EAAC;YACnB,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACzB,OAAO,KAAK,CAAC;SAChB;aACI;YACD,KAAK,GAAG;gBACJ,KAAK,EAAE,OAAO,CAAC,MAAM,CAAC,MAAM;gBAC5B,GAAG,EAAE,IAAI,CAAC,GAAG;gBACb,KAAK,EAAE,KAAK;gBACZ,EAAE,EAAE,CAAC;gBACL,KAAK,EAAEE,aAAK,CAAC,SAAS;gBACtB,IAAI,EAAE,KAAK;gBACX,OAAO,EAAE,CAAC,IAAI,CAAC;aAClB,CAAC;YACF,IAAG,KAAK,KAAK,IAAI,EAAC;gBACd,gBAAgB,CAAC,KAAK,CAAC,KAAK,gBAAgB,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC;gBAC1D,gBAAgB,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACvC;YACD,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;YAClC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC3B,OAAO,KAAK,CAAC;SAChB;KACJ;IACD,yBAAyB,CAAQ;QAC7B,IAAI,EAAE,GAAG,gBAAgB,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QACjC,IAAG,EAAE,KAAK,SAAS,EAAC;YAChB,YAAY,CAAC,uBAAoB,CAAC,CAAC,GAAG,kBAAc,EAAE,CAAC,CAAC,CAAC;YACzD,OAAO,IAAI,CAAC;SACf;aACI,IAAG,EAAE,CAAC,MAAM,GAAG,CAAC,EAAC;YAClB,IAAI,GAAG,GAAG,EAAE,CAAC;YACb,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,EAAE,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;gBAC5B,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,GAAG,CAAC,CAAC;gBACtB,GAAG,IAAI,MAAI,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,MAAG,CAAC;aAC3B;YACD,YAAY,CAAC,qBAAmB,CAAC,CAAC,GAAG,uCAAkC,GAAK,EAAE,CAAC,CAAC,CAAC;YACjF,OAAO,IAAI,CAAC;SACf;QACD,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC;KAChB;IACD,wBAAwB,CAAQ;QAC5B,IAAI,GAAG,GAAG,eAAe,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QACjC,IAAG,GAAG,KAAK,SAAS,EAAC;YACjB,YAAY,CAAC,sBAAoB,CAAC,CAAC,GAAG,iBAAc,EAAE,CAAC,CAAC,CAAC;YACzD,OAAO,IAAI,CAAC;SACf;QACD,OAAO,GAAG,CAAC;KACd;IACD,oBAAoB,CAAQ;QACxB,IAAI,EAAE,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC;QAC3B,OAAO,EAAE,KAAK,IAAI,GAAG,GAAG,GAAG,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;KAC/C;IACD,yBAAyB,GAAU,EAAE,KAAY,EAAE,IAAkB;QACjE,IAAG,IAAI,KAAK,YAAY,CAAC,KAAK,EAAC;YAC3B,IAAI,EAAE,GAAG,cAAc,CAAC,GAAG,CAAC,CAAC;YAC7B,IAAG,EAAE,KAAK,IAAI,EAAC;gBACX,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;gBACjB,EAAE,CAAC,EAAE,GAAG,GAAG,CAAC;aACf;SACJ;aACI,IAAG,IAAI,KAAK,YAAY,CAAC,MAAM,EAAC;YACjC,IAAI,EAAE,GAAG,eAAe,CAAC,GAAG,CAAC,CAAC;YAC9B,IAAG,EAAE,KAAK,IAAI,EAAC;gBACX,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;gBACjB,EAAE,CAAC,EAAE,GAAG,GAAG,CAAC;aACf;SACJ;aACI,IAAG,IAAI,KAAK,YAAY,CAAC,IAAI,EAAC;YAC/B,IAAI,EAAE,GAAG,aAAa,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,aAAa,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI;gBACxD,KAAK,EAAE,KAAK;gBACZ,EAAE,EAAE,GAAG;gBACP,GAAG,EAAE,GAAG;aACX,CAAC;SACL;KACJ;IACD,2BAA2B,GAAW;QAClC,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;KAClB;IACD,gBAAgB,IAAW,EAAE,KAAY;QACrC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC;KACnD;IACD,mBAAmB,CAAQ;QACvB,IAAG,IAAI,CAAC,MAAM,KAAK,IAAI,EAAC;YACpB,YAAY,CAAC,oBAAoB,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;SACtD;QACD,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;KACnB;IACD,mBAAmB,CAAQ;QACvB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;KACvB;IACD,qBAAqB,CAAQ;QACzB,IAAG,IAAI,CAAC,SAAS,KAAK,IAAI,EAAC;YACvB,YAAY,CAAC,6BAA6B,EAAE,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;SAClE;QACD,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;KACtB;IACD,iBAAiB,CAAQ;QACrB,IAAG,IAAI,CAAC,WAAW,KAAK,IAAI,EAAC;YACzB,YAAY,CAAC,0BAA0B,EAAE,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;SACjE;QACD,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;KACxB;IACD,iBAAiB,GAAU,EAAE,IAAW;QACpC,IAAG,IAAI,CAAC,OAAO,KAAK,IAAI,EAAC;YACrB,YAAY,CAAC,gCAAgC,EAAE,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;SACrE;QACD,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;QACnB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;KACxB;IACD;QACI,GAAG,EAAE,CAAC;KACT;IACD,qBAAqB,EAAS;QAC1B,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;KACtB;IACD,qBAAqB,GAAU;QAC3B,IAAG,MAAM,EAAC;YACN,MAAM,GAAG,KAAK,CAAC;YACf,WAAW,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;YACjC,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,YAAY,CAAC,IAAI,CAAC,CAAC;YACjD,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,YAAY,CAAC,KAAK,CAAC,CAAC;YAChD,UAAU,EAAE,CAAC;SAChB;QAED,IAAI,EAAE,GAAG,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAC3B,IAAG,EAAE,KAAK,SAAS,EAAC;YAChB,EAAE,GAAG,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG;gBACrB,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,MAAM;gBACzB,GAAG,EAAE,GAAG,CAAC,GAAG;gBACZ,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE,KAAK;gBACX,KAAK,EAAE,EAAE;gBACT,OAAO,EAAE,EAAE;aACd,CAAA;YACD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YACrB,YAAY,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;SACpC;QACD,IAAI,EAAE,GAAG,IAAI,IAAI,CAAC,OAAO,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;QACpC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;KACvB;IACD,uBAAuB,KAAY;QAC/B,IAAI,CAAC,GAAG,IAAI,EAAE,CAAC;QACf,IAAG,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,SAAS,EAAC;YACnC,YAAY,CAAC,kCAA+B,KAAK,CAAC,GAAG,OAAG,EAAE,KAAK,CAAC,CAAC;SACpE;aACI;YACD,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC;SAClD;KACJ;IACD,2BAA2B,KAAY;QACnC,IAAI,CAAC,GAAG,IAAI,EAAE,CAAC;QACf,IAAG,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,SAAS,EAAC;YAEnC,YAAY,CAAC,gBAAa,KAAK,CAAC,GAAG,gDAA4C,EAAE,KAAK,CAAC,CAAC;SAC3F;aACI,IAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,SAAS,EAAC;YACpC,YAAY,CAAC,wBAAqB,KAAK,CAAC,GAAG,0BAAsB,EAAE,KAAK,CAAC,CAAC;SAC7E;aACI;YACD,WAAW,GAAG,KAAK,CAAC;SACvB;KACJ;IACD,qBAAqB,EAAS,EAAE,IAAkB;QAC9C,IAAI,CAAC,GAAG,IAAI,EAAE,CAAC;QACf,IAAG,CAAC,CAAC,MAAM,KAAK,IAAI,EAAC;YACjB,YAAY,EAAE,CAAC;SAClB;QACD,IAAG,WAAW,KAAK,IAAI,EAAC;YACpB,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,EAAE,WAAW,EAAE,CAAC;YAClE,WAAW,GAAG,IAAI,CAAC;SACtB;QACD,IAAG,IAAI,KAAK,YAAY,CAAC,IAAI,EAAC;YAC1B,IAAI,KAAG,GAAG,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC;YACvB,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACd,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,UAAC,EAAE,EAAE,EAAE;gBAC7B,IAAG,EAAE,EAAC;oBACF,CAAC,CAAC,GAAG,CAAC,KAAG,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,GAAG,CAAC,CAAC;oBAC3B,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC;wBACZ,IAAI,EAAE,CAAC;wBACP,GAAG,EAAE,KAAG;qBACX,CAAC,CAAC;oBACH,EAAE,CAAC,IAAI,GAAG,IAAI,CAAC;iBAClB;qBACI;oBACD,YAAY,CAAC,mCAAiC,EAAE,CAAC,GAAK,EAAE,EAAE,CAAC,CAAC;iBAC/D;aACJ,CAAC,CAAC;SACN;aACI,IAAG,IAAI,KAAK,YAAY,CAAC,KAAK,EAAC;YAChC,IAAI,EAAE,GAAG,eAAe,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;YACjC,IAAG,EAAE,KAAK,SAAS,EAAC;gBAChB,YAAY,CAAC,uBAAqB,EAAE,CAAC,GAAG,iBAAc,EAAE,EAAE,CAAC,CAAC;gBAC5D,OAAO;aACV;YACD,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;YACrB,EAAE,CAAC,IAAI,GAAG,IAAI,CAAC;SAClB;aACI,IAAG,IAAI,KAAK,YAAY,CAAC,MAAM,EAAC;YACjC,IAAI,EAAE,GAAG,eAAe,CAAC,EAAE,CAAC,CAAC;YAC7B,IAAG,EAAE,KAAK,IAAI,EAAC;gBACX,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;gBACrB,EAAE,CAAC,IAAI,GAAG,IAAI,CAAC;aAClB;SACJ;KACJ;IACD,mBAAmB,CAAY;QAC3B,IAAI,CAAC,GAAG,IAAI,EAAE,CAAC;QACf,IAAG,CAAC,CAAC,MAAM,KAAK,IAAI,EAAC;YACjB,YAAY,EAAE,CAAC;SAClB;QACD,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;QACb,IAAG,WAAW,KAAK,IAAI,EAAC;YACpB,YAAY,EAAE,CAAC;YACf,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE,GAAG,EAAE,WAAW,EAAE,CAAC;YACtE,WAAW,GAAG,IAAI,CAAC;SACtB;KACJ;IACD,sBAAsB,KAAY,EAAE,IAAkB;QAClD,IAAG,IAAI,KAAK,YAAY,CAAC,MAAM,IAAI,IAAI,KAAK,YAAY,CAAC,KAAK,EAAC;YAC3D,IAAI,EAAE,GAAa,IAAI,KAAK,YAAY,CAAC,MAAM;gBAC3C,eAAe,CAAC,KAAK,CAAC;gBACtB,cAAc,CAAC,KAAK,CAAC,CAAC;YAC1B,IAAG,EAAE,KAAK,IAAI,EAAC;gBACX,IAAG,EAAE,CAAC,KAAK,KAAKA,aAAK,CAAC,SAAS,EAAC;oBAC5B,YAAY,CAAC,2BAAwB,KAAK,CAAC,GAAG,4BAAwB,EAAE,KAAK,CAAC,CAAC;oBAC/E,OAAO;iBACV;gBACD,IAAI,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC;aACrB;SACJ;aACI;YACD,IAAI,EAAE,GAAG,aAAa,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAClC,IAAG,CAAC,EAAE,EAAC;gBACH,YAAY,CAAC,oBAAiB,KAAK,sBAAkB,EAAE,KAAK,CAAC,CAAC;aACjE;YACD,IAAI,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC;SACrB;KACJ;IACD;QACI,IAAI,CAAC,GAAG,UAAU,CAAC,GAAG,EAAE,CAAC;QACzB,CAAC,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC;QAC/B,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACpB,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACtB,KAAc,UAAS,EAAT,uBAAS,EAAT,uBAAS,EAAT,IAAS;YAAnB,IAAI,EAAE,kBAAA;YACN,EAAE,EAAE,CAAC;SACR;QACD,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;KACxB;IACD,4BAA4B,GAAc,EAAE,EAAS;QACjD,IAAI,CAAC,GAAG,GAAG,CAAC,WAAW,EAAE,CAAC;QAC1B,UAAU,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,UAAC,EAAE,EAAE,EAAE;YAC1C,IAAG,EAAE,EAAC;gBACF,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,eAAe,CAAC,EAAE,CAAC,CAAC,CAAC;aACnC;iBACI;gBACD,YAAY,CAAC,aAAU,EAAE,CAAC,GAAG,oBAAgB,EAAE,EAAE,CAAC,CAAC;aACtD;SACJ,CAAC,CAAC;KACN;IACD,gCAAgC,GAAc,EAAE,EAAS;QACrD,IAAI,CAAC,GAAG,GAAG,CAAC,WAAW,EAAE,CAAC;QAC1B,UAAU,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,UAAC,EAAE,EAAE,EAAE;YAC1C,IAAG,EAAE,EAAC;gBACF,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,mBAAmB,CAAC,EAAE,CAAC,CAAC,CAAC;aACvC;iBACI;gBACD,YAAY,CAAC,aAAU,EAAE,CAAC,GAAG,oBAAgB,EAAE,EAAE,CAAC,CAAC;aACtD;SACJ,CAAC,CAAC;KACN;IACD,4BAA4B,GAAc,EAAE,EAAS;QACjD,IAAI,CAAC,GAAG,GAAG,CAAC,WAAW,EAAE,CAAC;QAC1B,eAAe,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,UAAC,OAAO,EAAE,IAAI;YACvC,IAAG,OAAO,EAAC;gBACP,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,UAAA,CAAC;oBACR,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;iBAC3B,CAAC,CAAC;aACN;iBACI;gBACD,YAAY,CAAC,6BAA2B,EAAE,CAAC,GAAG,MAAG,EAAE,EAAE,CAAC,CAAC;aAC1D;SACJ,CAAC,CAAC;KACN;IACD;QACI,OAAO,CAAC,UAAU,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC;QAC3C,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC;QAC9B,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC;QAE3B,GAAG,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC;QAClC,KAAc,UAAW,EAAX,KAAA,OAAO,CAAC,GAAG,EAAX,cAAW,EAAX,IAAW;YAArB,IAAI,EAAE,SAAA;YACN,EAAE,CAAC,QAAQ,GAAG,IAAI,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;YAC/C,KAAgB,UAAQ,EAAR,KAAA,EAAE,CAAC,KAAK,EAAR,cAAQ,EAAR,IAAQ;gBAApB,IAAI,IAAI,SAAA;gBACR,IAAI,CAAC,MAAM,EAAE,CAAC;wCACN,KAAK;oBACT,IAAI,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;oBAC7B,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,UAAA,GAAG;wBAC5B,YAAY,CAAC,4BAAyB,KAAK,YAAM,GAAK,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC;qBAClE,CAAC,CAAC;iBACN;gBALD,KAAI,IAAI,KAAK,IAAI,IAAI,CAAC,QAAQ;4BAAtB,KAAK;iBAKZ;aACJ;SACJ;QAED,GAAG,CAAC,OAAO,EAAE,CAAC;QAEd,GAAG,CAAC,SAAS,CAAC,uBAAuB,CAAC,CAAC;QACvC,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC,KAAK,EAAE,CAAC;QACjC,GAAG,CAAC,OAAO,EAAE,CAAC;QAEd,KAAc,UAAO,EAAP,mBAAO,EAAP,qBAAO,EAAP,IAAO;YAAjB,IAAI,EAAE,gBAAA;YACN,EAAE,EAAE,CAAC;SACR;QACD,eAAe,CAAC,IAAI,EAAE,CAAC;QACvB,YAAY,CAAC,IAAI,EAAE,CAAC;QACpB,OAAO,IAAI,CAAC;KACf;CAGJ;;AC1dD,uBAAuB,CAAQ;IAC3B,OAAO;QACH,GAAG,EAAE,CAAC,CAAC,GAAG;QACV,GAAG,EAAE,IAAI;QACT,SAAS,EAAE,CAAC,CAAC,SAAS;QACtB,WAAW,EAAE,CAAC,CAAC,WAAW;QAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;QAClB,SAAS,EAAE,CAAC,CAAC,SAAS;KACzB,CAAC;CACL;AACD,6BAA6B,CAAQ;IACjC,OAAO;QACH,GAAG,EAAE,IAAI;QACT,GAAG,EAAE,IAAI;QACT,SAAS,EAAE,CAAC,CAAC,SAAS;QACtB,WAAW,EAAE,CAAC,CAAC,WAAW;QAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;QAClB,SAAS,EAAE,CAAC,CAAC,SAAS;KACzB,CAAC;CACL;AACD,IAAI,OAAO,GAA0B;IACjC,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IACT,GAAG,EAAE,IAAI;IACT,IAAI,EAAE,IAAI;IACV,GAAG,EAAE,GAAG;IACR,GAAG,EAAE,GAAG;CACX,CAAC;AACF,kBAAkB,CAAS;IACvB,IAAI,GAAG,GAAG,EAAE,CAAC;IACb,IAAI,CAAC,GAAG,CAAC,CAAC;IACV,OAAM,CAAC,GAAG,CAAC,CAAC,MAAM,EAAC;QACf,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACpB,IAAG,CAAC,KAAK,IAAI,EAAC;YACV,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;YAClB,IAAG,OAAO,CAAC,CAAC,CAAC,EAAC;gBACV,GAAG,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC;gBAClB,CAAC,EAAE,CAAC;aACP;iBACI,IAAG,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,EAAC;gBACrD,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;gBAClB,IAAI,GAAG,GAAG,EAAE,CAAC;gBACb,OAAM,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,EAAC;oBACxB,GAAG,IAAI,CAAC,CAAC;oBACT,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;iBACrB;gBACD,GAAG,IAAI,MAAM,CAAC,YAAY,CAAC,QAAQ,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC;aACjD;SACJ;aACI;YACD,GAAG,IAAI,CAAC,CAAC;YACT,CAAC,EAAE,CAAC;SACP;KACJ;IACD,OAAO,GAAG,CAAC;CACd;AAKD,IAAI,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;AAC9B,IAAI,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;AAU7B,AAAC;AAIF,IAAI,WAAW,GAAa;IACpB,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAI,GAAG,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAI,GAAG,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAI,GAAG,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG;IAClE,GAAG,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAI,GAAG,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IAClE,GAAG,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAI,GAAG,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IAClE,GAAG,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG;IAClE,GAAG,EAAI,GAAG,EAAI,GAAG,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAI,GAAG,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAI,GAAG,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAI,GAAG,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAI,GAAG,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IAClE,GAAG,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAI,GAAG,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAI,GAAG,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAI,GAAG,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAI,GAAG,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IAClE,GAAG,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAI,GAAG,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAM,CAAC,EAAM,CAAC,EAAK,EAAE,EAAI,GAAG,EAAK,EAAE;IACjE,EAAE,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IAClE,GAAG,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAI,GAAG,EAAK,EAAE,EAAI,GAAG,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAI,GAAG,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAI,GAAG,EAAK,EAAE;IAClE,GAAG,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAM,CAAC,EAAM,CAAC,EAAK,EAAE,EAAK,EAAE,EAAI,GAAG;IAClE,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAK,EAAE,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG;IAClE,GAAG,EAAK,EAAE,EAAK,EAAE,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAI,GAAG,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC;IACjE,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC;IACjE,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,EAAE;IACjE,EAAE,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC;IACjE,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,CAAC,CAAC;IACjE,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC;IACjE,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC;IACjE,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC;IACjE,EAAE,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,CAAC,CAAC,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EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG;IAClE,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG;IAClE,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG;IAClE,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG;IAClE,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG;IAClE,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG;IAClE,GAAG,EAAI,GAAG,EAAK,EAAE,EAAK,EAAE,EAAI,GAAG,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IAClE,GAAG,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAI,GAAG,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAI,GAAG,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAI,GAAG,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAI,GAAG,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IAClE,GAAG,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAI,GAAG,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAI,GAAG,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAM,CAAC,EAAM,CAAC,EAAI,GAAG,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAI,GAAG,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAClE,GAAG,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAI,GAAG,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAI,GAAG,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAK,EAAE,EAAK,EAAE;IAClE,GAAG,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAI,GAAG,EAAK,EAAE,EAAI,GAAG,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAI,GAAG,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAI,GAAG,EAAK,EAAE;IAClE,GAAG,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAM,CAAC,EAAM,CAAC,EAAK,EAAE,EAAK,EAAE,EAAI,GAAG;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC;IACjE,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC;IACjE,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,EAAE;IACjE,EAAE,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAM,CAAC,EAAK,CAAC,CAAC;IACjE,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAM,CAAC,EAAK,CAAC,CAAC;IACjE,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAM,CAAC,EAAM,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC;IACjE,CAAC,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAM,CAAC,EAAM,CAAC,EAAK,CAAC,CAAC;IACjE,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC;IACjE,EAAE,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAM,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC;IACjE,CAAC,CAAC,EAAM,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAM,CAAC,EAAM,CAAC,EAAK,EAAE,EAAM,CAAC,EAAK,EAAE,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAK,EAAE,EAAM,CAAC,EAAM,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC;IACjE,EAAE,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,EAAE;IACjE,EAAE,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,CAAC,CAAC;IACjE,CAAC,CAAC,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,EAAE;IACjE,EAAE,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;CAC5C,CAAC;AACF,IAAI,gBAAgB,GAAa;IACxB,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAM,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAM,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAK,EAAE,EAAM,CAAC,EAAM,CAAC,EAAK,EAAE,EAAM,CAAC;IAChE,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAM,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAM,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAM,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAM,CAAC,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAM,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IACjE,EAAE,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAK,EAAE,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAK,EAAE,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAM,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAM,CAAC,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;CAC5C,CAAC;AACF,IAAI,uBAAuB,GAAa;IAChC,EAAE,EAAI,GAAG,EAAI,GAAG,EAAM,CAAC,EAAI,GAAG,EAAI,GAAG,EAAK,EAAE,EAAI,GAAG,EAAI,GAAG,EAAM,CAAC;IAClE,GAAG,EAAI,GAAG,EAAK,EAAE,EAAI,GAAG,EAAI,GAAG,EAAM,CAAC,EAAI,GAAG,EAAI,GAAG,EAAK,EAAE,EAAI,GAAG;IAClE,GAAG,EAAM,CAAC,EAAI,GAAG,EAAI,GAAG,EAAK,EAAE,EAAI,GAAG,EAAI,GAAG,EAAM,CAAC,EAAI,GAAG,EAAI,GAAG;IACjE,EAAE,EAAI,GAAG,EAAI,GAAG,EAAK,EAAE,EAAI,GAAG,EAAI,GAAG,EAAM,CAAC,EAAI,GAAG,EAAI,GAAG,EAAK,EAAE;IAClE,GAAG,EAAI,GAAG,EAAM,CAAC,EAAI,GAAG,EAAI,GAAG,EAAK,EAAE,EAAI,GAAG,EAAI,GAAG,EAAM,CAAC,EAAI,GAAG;IAClE,GAAG,EAAK,EAAE,EAAI,GAAG,EAAI,GAAG,EAAM,CAAC,EAAI,GAAG,EAAI,GAAG,EAAK,EAAE,EAAI,GAAG,EAAI,GAAG;IAChE,CAAC,EAAI,GAAG,EAAI,GAAG,EAAK,EAAE,EAAI,GAAG,EAAI,GAAG,EAAM,CAAC,EAAI,GAAG,EAAI,GAAG,EAAK,EAAE;IAClE,GAAG,EAAI,GAAG,EAAM,CAAC,EAAI,GAAG,EAAI,GAAG,EAAK,EAAE,EAAI,GAAG,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI;IACnE,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI;IAChE,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE;IACnE,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI;IACnE,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI;IAChE,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE;IACnE,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI;IACnE,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI;IAChE,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE;IACnE,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE;IACnE,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI;IAChE,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE;IACnE,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI;IAChE,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI;IAChE,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI;IAChE,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE;IACnE,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI;IACnE,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI;IAChE,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE;IACnE,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI;IACnE,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI;IAChE,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE;IACnE,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI;IACnE,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE;IACnE,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI;IACnE,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI;IAChE,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE;IACnE,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI;IACnE,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI;IAChE,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE;IACnE,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI;IACnE,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI;IAChE,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE;IACnE,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE;IACnE,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI;IACnE,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI;IAChE,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE;IACnE,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI;IACnE,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI;IAChE,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE;IACnE,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE;IACnE,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI;IAChE,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI;IAChE,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI;IACnE,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI;IAChE,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI;IAChE,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE;IACnE,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI;IACnE,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI;IAChE,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE;IACnE,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI;IACnE,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI;IAChE,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE;IACnE,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI;IACnE,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI;IAChE,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE;IACnE,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI;IACnE,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI;IAChE,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE;IACnE,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI;IACnE,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI;IAChE,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE;IACnE,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI;IACnE,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE;IACnE,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI;IACnE,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE;IACnE,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI;IACnE,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE;IACnE,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI;IAChE,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE;IACnE,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI;IACnE,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI;IAChE,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE;IACnE,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI;IACnE,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI;IACnE,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC;IACpE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK;IACpE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK;IACjE,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC;IACpE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK;IACpE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK;IACjE,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE;IACpE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK;IACpE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK;IAChE,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE;IACpE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK;IACpE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK;IAChE,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE;IACpE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK;IACpE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK;IACjE,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC;IACpE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK;IACpE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK;IACjE,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC;IACpE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK;IACpE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK;IACjE,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC;IACpE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK;IACpE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK;IACjE,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE;IACpE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK;IACpE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK;IAChE,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE;IACpE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK;IACpE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK;IAChE,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE;IACpE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK;IACpE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK;IACjE,EAAE,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE;IACpE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK;IACpE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK;IACjE,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC;IACpE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK;IACpE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK;IACjE,EAAE,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE;IACpE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK;IACpE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK;IACjE,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE;IACpE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK;IACpE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK;IACjE,EAAE,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE;IACpE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK;IACpE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK;IACjE,EAAE,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE;IACpE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK;IACpE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK;IACjE,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC;IACpE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK;IACpE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK;IACjE,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC;IACpE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK;IACpE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK;IACjE,EAAE,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE;IACpE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK;IACpE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK;IAChE,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE;IACpE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK;IACpE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK;IAChE,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE;IACpE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK;IACpE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK;IAChE,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE;IACpE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK;IACpE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK;IAChE,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE;IACpE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,K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AAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;CAC5C,CAAC;AACF,IAAI,uBAAuB,GAAa;IAC/B,CAAC,EAAI,GAAG,EAAC,QAAQ;CACzB,CAAC;AACF,IAAI,WAAW,GAAa;IACxB,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC;CAClB,CAAC;AACF,IAAI,YAAY,GAAa;IACzB,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC;CAClB,CAAC;AACF,IAAI,WAAW,GAAa;IACxB,KAAK,EAAE,WAAW;IAClB,OAAO,EAAE,aAAa;IACtB,SAAS,EAAE,eAAe;IAC1B,SAAS,EAAE,GAAG;IACd,UAAU,EAAE,gBAAgB;IAC5B,iBAAiB,EAAE,uBAAuB;IAC1C,KAAK,EAAE,WAAW;IAClB,MAAM,EAAE,YAAY;CACvB,CAAC;AACF,IAAI,WAAW,GAAa;IACpB,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAK,EAAE,EAAK,EAAE,EAAM,CAAC,EAAK,EAAE,EAAK,EAAE;IAChE,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE,EAAM,CAAC,EAAK,EAAE,EAAK,EAAE,EAAM,CAAC;IACjE,EAAE,EAAK,EAAE,EAAM,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE,EAAM,CAAC,EAAK,EAAE;IACjE,EAAE,EAAM,CAAC,EAAK,EAAE,EAAK,EAAE,EAAM,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE;IAChE,CAAC,EAAK,EAAE,EAAK,EAAE,EAAM,CAAC,EAAK,EAAE,EAAK,EAAE,EAAM,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC;IACjE,EAAE,EAAK,EAAE,EAAM,CAAC,EAAK,EAAE,EAAK,EAAE,EAAM,CAAC,EAAK,EAAE,EAAK,EAAE,EAAM,CAAC,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE,EAAM,CAAC,EAAK,EAAE,EAAK,EAAE,EAAM,CAAC,EAAK,EAAE,EAAK,EAAE;IAChE,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE,EAAM,CAAC,EAAK,EAAE,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAK,EAAE,EAAM,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,EAAE,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAK,EAAE,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAK,EAAE,EAAM,CAAC,EAAM,CAAC,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAK,CAAC,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAK,EAAE;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAK,CAAC,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAK,EAAE,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IACjE,CAAC,CAAC,EAAK,CAAC,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAK,CAAC,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAK,EAAE;IAChE,CAAC,EAAM,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAK,CAAC,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAK,EAAE,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAK,CAAC,CAAC;IAChE,CAAC,EAAK,EAAE,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAK,CAAC,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IACjE,EAAE,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAK,CAAC,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IACjE,EAAE,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IACjE,CAAC,CAAC,EAAK,CAAC,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAK,CAAC,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAK,CAAC,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAK,EAAE;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAK,CAAC,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAK,CAAC,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAK,EAAE,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAK,CAAC,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IACjE,CAAC,CAAC,EAAK,CAAC,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAK,CAAC,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAK,CAAC,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAK,EAAE,EAAM,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAK,CAAC,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAK,EAAE,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAK,CAAC,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAK,EAAE,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC;IAChE,CAAC,EAAM,CAAC,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE,EAAM,CAAC,EAAK,CAAC,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAM,CAAC,EAAM,CAAC,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE,EAAM,CAAC,EAAK,CAAC,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAM,CAAC,EAAM,CAAC;IACjE,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,CA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AK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAM,CAAC,EAAM,CAAC;IACjE,EAAE,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC;IACjE,EAAE,EAAK,EAAE,EAAM,CAAC,EAAK,CAAC,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IACjE,CAAC,CAAC,EAAK,CAAC,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAK,CAAC,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAK,CAAC,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAK,CAAC,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAM,CAAC,EAAM,CAAC;IACjE,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC;IACjE,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE;CACrC,CAAC;AACF,IAAI,gBAAgB,GAAa;IACxB,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAK,EAAE,EAAM,CAAC,EAAM,CAAC,EAAK,EAAE,EAAK,EAAE,EAAM,CAAC,EAAK,EAAE,EAAM,CAAC,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAK,EAAE,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAK,EAAE,EAAM,CAAC,EAAK,EAAE,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IACjE,EAAE,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAK,EAAE,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAK,EAAE,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAM,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAM,CAAC,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;CAC5C,CAAC;AACF,IAAI,uBAAuB,GAAa;IAChC,EAAE,EAAI,GAAG,EAAI,GAAG,EAAM,CAAC,EAAI,GAAG,EAAI,GAAG,EAAK,EAAE,EAAI,GAAG,EAAI,GAAG,EAAM,CAAC;IAClE,GAAG,EAAI,GAAG,EAAK,EAAE,EAAI,GAAG,EAAI,GAAG,EAAM,CAAC,EAAI,GAAG,EAAI,GAAG,EAAK,EAAE,EAAI,GAAG;IAClE,GAAG,EAAM,CAAC,EAAI,GAAG,EAAI,GAAG,EAAK,EAAE,EAAI,GAAG,EAAI,GAAG,EAAM,CAAC,EAAI,GAAG,EAAI,GAAG;IACjE,EAAE,EAAI,GAAG,EAAI,GAAG,EAAK,EAAE,EAAI,GAAG,EAAI,GAAG,EAAM,CAAC,EAAI,GAAG,EAAI,GAAG,EAAK,EAAE;IAClE,GAAG,EAAI,GAAG,EAAM,CAAC,EAAI,GAAG,EAAI,GAAG,EAAK,EAAE,EAAI,GAAG,EAAI,GAAG,EAAM,CAAC,EAAI,GAAG;IAClE,GAAG,EAAK,EAAE,EAAI,GAAG,EAAI,GAAG,EAAM,CAAC,EAAI,GAAG,EAAI,GAAG,EAAK,EAAE,EAAI,GAAG,EAAI,GAAG;IAChE,CAAC,EAAI,GAAG,EAAI,GAAG,EAAK,EAAE,EAAI,GAAG,EAAI,GAAG,EAAM,CAAC,EAAI,GAAG,EAAI,GAAG,EAAK,EAAE;IAClE,GAAG,EAAI,GAAG,EAAM,CAAC,EAAI,GAAG,EAAI,GAAG,EAAK,EAAE,EAAI,GAAG,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI;IACnE,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI;IAChE,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE;IACnE,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI;IACnE,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI;IAChE,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE;IACnE,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI;IACnE,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI;IAChE,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE;IACnE,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE;IACnE,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI;IAChE,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE;IACnE,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI;IAChE,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI;IAChE,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI;IAChE,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE;IACnE,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI;IACnE,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI;IAChE,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE;IACnE,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI;IACnE,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI;IAChE,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE;IACnE,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI;IACnE,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE;IACnE,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI;IACnE,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI;IAChE,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE;IACnE,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI;IACnE,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI;IAChE,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE;IACnE,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI;IACnE,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI;IAChE,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE;IACnE,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE;IACnE,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI;IACnE,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI;IAChE,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE;IACnE,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI;IACnE,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI;IAChE,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE;IACnE,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE;IACnE,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI;IAChE,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI;IAChE,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI;IACnE,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI;IAChE,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI;IAChE,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE;IACnE,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI;IACnE,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI;IAChE,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE;IACnE,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI;IACnE,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI;IAChE,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE;IACnE,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI;IACnE,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI;IAChE,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE;IACnE,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI;IACnE,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI;IAChE,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE;IACnE,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI;IACnE,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI;IAChE,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE;IACnE,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI;IACnE,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE;IACnE,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI;IACnE,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE;IACnE,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI;IACnE,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE;IACnE,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI;IAChE,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE;IACnE,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI;IACnE,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI;IAChE,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE;IACnE,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI;IACnE,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI;IACnE,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC;IACnE,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI;IACnE,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI,EAAK,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAG,IAAI;IACjE,EAAE,EAAG,IAAI,EAAG,IAAI,EAAM,CAAC,EAAG,IAAI,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC;IACpE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK;IACpE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK;IACjE,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC;IACpE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK;IACpE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK;IACjE,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE;IACpE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK;IACpE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK;IAChE,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE;IACpE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK;IACpE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK;IAChE,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE;IACpE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK;IACpE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK;IACjE,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC;IACpE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK;IACpE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK;IACjE,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC;IACpE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK;IACpE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK;IACjE,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC;IACpE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK;IACpE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK;IACjE,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE;IACpE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK;IACpE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK;IAChE,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE;IACpE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK;IACpE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK;IAChE,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE;IACpE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK;IACpE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK;IACjE,EAAE,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE;IACpE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK;IACpE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK;IACjE,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC;IACpE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK;IACpE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK;IACjE,EAAE,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE;IACpE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK;IACpE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK;IACjE,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE;IACpE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK;IACpE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK;IACjE,EAAE,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE;IACpE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK;IACpE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK;IACjE,EAAE,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE;IACpE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK;IACpE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK;IACjE,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC;IACpE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK;IACpE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK;IACjE,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC;IACpE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK;IACpE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK;IACjE,EAAE,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE;IACpE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK;IACpE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK;IAChE,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE;IACpE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK;IACpE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK;IAChE,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE;IACpE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK;IACpE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK;IAChE,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE;IACpE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK;IACpE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK;IAChE,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE;IACpE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK;IACpE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAK,EAAE,EAAE,KAAK,EAAE,KAAK;IAChE,CAA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AAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;IAChE,CAAC,EAAM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CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAM,CAAC,EAAK,CAAC,CAAC;IACjE,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC;IACjE,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC;IACjE,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC;IACjE,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAM,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC;IACjE,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC;IACjE,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,CAAC,CAAC,EAAM,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC;IACjE,EAAE,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC;IACjE,EAAE,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAM,CAAC,EAAM,CAAC,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE;IACjE,CAAC,CAAC,EAAM,CAAC,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE;CAC1D,CAAC;AACF,IAAI,YAAY,GAAa;IACrB,CAAC,CAAC,EAAK,EAAE,EAAK,CAAC,CAAC,EAAM,CAAC,EAAM,CAAC,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE;CAC1D,CAAC;AACF,IAAI,YAAY,GAAa;IACrB,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC,EAAM,CAAC,EAAM,CAAC,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE;CACvB,CAAC;AACF,IAAI,YAAY,GAAa;IACrB,CAAC,CAAC,EAAK,EAAE;CAChB,CAAC;AAEF,AACA,IAAI,YAAY,GAAG,EAAE,CAAC;AACtB,IAAI,QAAQ,GAAG,GAAG,CAAC;AAOnB,IAAI,MAAM,GAAa;IACd,CAAC,EAAM,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAI,GAAG,EAAK,EAAE,EAAK,EAAE,EAAI,GAAG;IACjE,EAAE,EAAI,GAAG,EAAK,EAAE,EAAK,EAAE,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG;IAClE,GAAG,EAAI,GAAG,EAAI,CAAC,EAAE,EAAI,GAAG,EAAI,GAAG,EAAI,CAAC,EAAE,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG;IAClE,GAAG,EAAM,CAAC,EAAI,GAAG,EAAI,GAAG,EAAK,EAAE,EAAI,GAAG,EAAI,GAAG,EAAI,CAAC,EAAE,EAAI,GAAG,EAAI,GAAG;IAClE,GAAG,EAAI,GAAG,EAAI,CAAC,EAAE,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,CAAC,EAAE,EAAI,GAAG,EAAI,CAAC,EAAE;IAClE,CAAC,EAAE,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG;IAClE,GAAG,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,GAAG,EAAI,GAAG,EAAK,EAAE,EAAI,GAAG,EAAI,GAAG,EAAI,CAAC,EAAE,EAAG,CAAC,GAAG;IAClE,CAAC,EAAE,EAAG,CAAC,GAAG,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAI,GAAG,EAAK,EAAE,EAAI,GAAG,EAAI,GAAG,EAAK,EAAE;IAClE,GAAG,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAI,GAAG,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG;IAClE,GAAG,EAAK,EAAE,EAAK,EAAE,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAK,EAAE;IAClE,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,CAAC,EAAE,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG;IAClE,GAAG,EAAI,GAAG,EAAG,CAAC,GAAG,EAAI,GAAG,EAAI,GAAG,EAAK,EAAE,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG;IAClE,GAAG,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAM,CAAC;CAC1D,CAAC;AAIF,IAAI,QAAQ,GAAa;IAClB,CAAC,EAAE,EAAI,GAAG,EAAK,CAAC,CAAC,EAAI,CAAC,EAAE,EAAI,GAAG,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAK,EAAE,EAAI,GAAG,EAAI,GAAG;IAClE,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAK,EAAE,EAAI,CAAC,EAAE;IAClE,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,GAAG,EAAK,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE;IAClE,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,GAAG,EAAI,CAAC,EAAE,EAAI,GAAG,EAAI,GAAG,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAK,EAAE,EAAI,GAAG;IAClE,GAAG,EAAI,CAAC,EAAE,EAAK,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE;IAClE,CAAC,EAAE,EAAI,CAAC,EAAE,EAAK,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,GAAG,EAAK,EAAE,EAAI,GAAG,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE;IAClE,CAAC,EAAE,EAAK,EAAE,EAAI,CAAC,EAAE,EAAI,GAAG,EAAK,EAAE,EAAI,CAAC,EAAE,EAAI,GAAG,EAAI,GAAG,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE;IAClE,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,GAAG,EAAI,GAAG,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE;IAClE,GAAG,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,GAAG,EAAK,EAAE,EAAI,CAAC,EAAE,EAAI,GAAG;IAClE,GAAG,EAAK,EAAE,EAAK,EAAE,EAAI,CAAC,EAAE,EAAK,EAAE,EAAK,EAAE,EAAI,CAAC,EAAE,EAAI,GAAG,EAAK,EAAE,EAAI,CAAC,EAAE;IAClE,CAAC,EAAE,EAAI,GAAG,EAAI,GAAG,EAAK,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE;IAClE,GAAG,EAAI,CAAC,EAAE,EAAI,GAAG,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,GAAG,EAAI,GAAG,EAAK,EAAE,EAAK,EAAE;IAClE,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAK,EAAE,EAAI,GAAG,EAAI,CAAC,EAAE,EAAK,EAAE,EAAI,CAAC,EAAE,EAAK,EAAE,EAAK,EAAE;IAClE,CAAC,EAAE,EAAI,GAAG,EAAI,CAAC,EAAE,EAAI,GAAG,EAAI,GAAG,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAM,CAAC,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAK,CAAC,CAAC;IAClE,CAAC,EAAE,EAAI,GAAG,EAAI,CAAC,EAAE,EAAK,EAAE,EAAK,EAAE,EAAI,CAAC,EAAE,EAAM,CAAC,EAAK,EAAE,EAAI,CAAC,EAAE,EAAK,EAAE;IAClE,CAAC,EAAE,EAAK,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAK,EAAE,EAAI,CAAC,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IAClE,CAAC,EAAE,EAAK,EAAE,EAAK,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAM,CAAC,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE;IAClE,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAK,EAAE;IAClE,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAK,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE;CAC1D,CAAC;AAKF,IAAI,UAAU,GAAa;IAClB,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAI,GAAG,EAAM,CAAC,EAAM,CAAC,EAAK,EAAE;IAChE,CAAC,EAAI,GAAG,EAAM,CAAC,EAAM,CAAC,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAK,EAAE,EAAI,GAAG,EAAI,GAAG;IAClE,GAAG,EAAI,GAAG,EAAI,GAAG,EAAK,EAAE,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG;IAClE,GAAG,EAAM,CAAC,EAAI,GAAG,EAAI,GAAG,EAAK,EAAE,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAK,EAAE,EAAI,GAAG;IAClE,GAAG,EAAI,GAAG,EAAK,EAAE,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAK,EAAE;IAClE,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG;IAClE,GAAG,EAAK,EAAE,EAAI,GAAG,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAI,GAAG,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAM,CAAC,EAAM,CAAC,EAAI,GAAG,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAK,EAAE,EAAI,GAAG,EAAM,CAAC,EAAK,EAAE;IAClE,GAAG,EAAK,EAAE,EAAK,EAAE,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAK,EAAE;IAClE,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG;IAClE,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAK,EAAE,EAAI,GAAG,EAAI,GAAG,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC,EAAM,CAAC;CAC1D,CAAC;AAKF,IAAI,QAAQ,GAAa;IAChB,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAM,CAAC,EAAK,CAAC,CAAC,EAAM,CAAC,EAAM,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC;IACjE,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,EAAE,EAAM,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAM,CAAC,EAAI,GAAG;IACjE,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC,EAAM,CAAC,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC;IACjE,CAAC,CAAC,EAAK,EAAE,EAAK,CAAC,CAAC,EAAI,GAAG,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IACjE,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,EAAE,EAAM,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,EAAE,EAAM,CAAC;IACjE,EAAE,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAI,GAAG,EAAI,GAAG;IAClE,GAAG,EAAI,GAAG,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC,EAAM,CAAC,EAAK,EAAE,EAAK,EAAE;IACjE,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE,EAAI,GAAG,EAAI,GAAG,EAAK,EAAE,EAAI,GAAG,EAAK,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC;IACjE,CAAC,CAAC,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE,EAAK,CAAC,CAAC,EAAK,EAAE,EAAI,GAAG,EAAK,EAAE,EAAK,CAAC,CAAC;IACjE,EAAE,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG,EAAI,GAAG;IACjE,CAAC,CAAC,EAAI,GAAG,EAAK,EAAE,EAAI,GAAG,EAAI,GAAG,EAAK,EAAE,EAAK,CAAC,C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C;IAChE,CAAC,EAAM,CAAC,EAAM,CAAC,EAAI,CAAC,EAAE,EAAK,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAK,EAAE,EAAI,CAAC,EAAE;IAClE,CAAC,EAAE,EAAK,EAAE,EAAM,CAAC,EAAK,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,GAAG,EAAI,CAAC,EAAE,EAAK,EAAE;IAClE,CAAC,EAAE,EAAI,CAAC,EAAE,EAAK,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,GAAG,EAAI,CAAC,EAAE,EAAK,CAAC,CAAC,EAAI,CAAC,EAAE;IACjE,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAK,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAK,EAAE,EAAK,EAAE,EAAI,CAAC,EAAE;IAClE,CAAC,EAAE,EAAK,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE;IAClE,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAK,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAK,EAAE,EAAI,CAAC,EAAE;IAClE,CAAC,EAAE,EAAK,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAK,EAAE,EAAM,CAAC,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAK,EAAE;IAClE,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAK,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAM,CAAC;IAClE,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAK,CAAC,CAAC,EAAI,CAAC,EAAE;IAClE,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAK,EAAE,EAAK,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE;IAClE,CAAC,EAAE,EAAI,CAAC,EAAE,EAAK,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAK,EAAE,EAAK,EAAE,EAAK,EAAE;IAClE,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAK,EAAE,EAAI,CAAC,EAAE;IAClE,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE;IAClE,CAAC,EAAE,EAAM,CAAC,EAAK,EAAE,EAAK,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE;IAClE,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAK,CAAC,CAAC,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE;IAClE,CAAC,EAAE,EAAI,CAAC,EAAE,EAAK,EAAE,EAAK,EAAE,EAAI,CAAC,EAAE,EAAK,CAAC,CAAC,EAAK,EAAE,EAAK,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE;IAClE,CAAC,EAAE,EAAM,CAAC,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAK,CAAC,CAAC,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE,EAAI,CAAC,EAAE;IAClE,CAAC,EAAE,EAAM,CAAC,EAAI,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"}