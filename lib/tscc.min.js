!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e(t.tscc={})}(this,function(t){"use strict";var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])};function n(t,n){e(t,n);function r(){this.constructor=t}t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}var r="\n",i=function(){function t(){}return t.prototype.writeln=function(t){t&&this.write(t),this.write(r)},t}(),a=function(t){n(e,t);function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.s="",e}return e.prototype.write=function(t){this.s+=t},e.prototype.reset=function(){this.s=""},e}(i);function o(t){var e=[];return{peek:function(){return e.length>0?e[e.length-1]:t.peek()},next:function(){return e.length>0?e.pop():t.next()},backup:function(t){e.push(t)}}}var s=Object.freeze({endl:r,OutputStream:i,StringOS:a,StringIS:function(t){var e=0;return{peek:function(){return t.charAt(e)||null},next:function(){var t=this.peek();return e++,t}}},biss:o}),u="    ",l={assert:function(t){if(!t)throw new Error("Assertion failed")},log:function(t){}};var c,h=32,f=function(){function t(t){this._size=t,this._s=new Array(Math.ceil(t/h));for(var e=0;e<this._s.length;e++)this._s[e]=0}return t.prototype.add=function(t){var e=Math.floor(t/h),n=t-e*h,r=this._s[e];return this._s[e]|=1<<n,r!==this._s[e]},t.prototype.addAll=function(){for(var t=0;t<this._s.length;t++)this._s[t]=-1},t.prototype.remove=function(t){var e=Math.floor(t/h),n=t-e*h,r=this._s[e];return this._s[e]&=~(1<<n),r!==this._s[e]},t.prototype.removeAll=function(){for(var t=0;t<this._s.length;t++)this._s[t]=0},t.prototype.contains=function(t){var e=Math.floor(t/h),n=t-e*h;return 0!=(this._s[e]&1<<n)},t.prototype.union=function(t,e){for(var n=!1,r=0;r<this._s.length;r++){var i=this._s[r],a=t._s[r];e&&(a&=e._s[r]),this._s[r]|=a,n=this._s[r]!==i||n}return n},t.prototype.hasIntersection=function(t){for(var e=0;e<this._s.length;e++)if(0!=(this._s[e]&t._s[e]))return!0;return!1},t.prototype.equals=function(t){for(var e=0;e<this._s.length;e++)if(this._s[e]!==t._s[e])return!1;return!0},t.prototype.forEach=function(t){for(var e=0;e<this._size;e++)this.contains(e)&&t(e)},t.prototype.hash=function(){for(var t="",e=0;e<this._s.length;e++)t+=this._s[e].toString(16)+"-";return t},t}(),p=function(t){n(e,t);function e(e){return t.call(this,e)||this}return e.prototype.toString=function(t){var e="",n=!0;this.contains(0)&&(e+='""',n=!1);for(var r=0;r<t.tokenCount;r++)this.contains(r+1)&&(n||(e+=","),e+='"'+t.tokens[r].sym+'"',n=!1);return e},e}(f);(d=c||(c={}))[d.NONE=1]="NONE",d[d.SHIFT=2]="SHIFT",d[d.REDUCE=3]="REDUCE";var d,v,g=function(){function t(t,e){this.marker=0,this.shift=null,this.actionType=c.NONE,this.changed=!0,this.rule=t,this.isKernel=e,this.lah=new p(t.g.tokenCount)}return t.prototype.canShift=function(){return this.rule.rhs.length>this.marker},t.prototype.getShift=function(){return this.rule.rhs[this.marker]},t.prototype.toString=function(t){void 0===t&&(t={});var e=t&&t.showlah||!1,n=t&&t.showTrailer||!1,r="[ "+this.rule.toString(this.marker)+(e?",{ "+this.lah.toString(this.rule.g)+" }":"")+" ]";if(this.isKernel&&(r+="*"),n)switch(this.actionType){case c.NONE:r+="(-)";break;case c.SHIFT:r+="(s"+this.shift.stateIndex+")";break;case c.REDUCE:r+="(r)"}return r},t.prototype.hash=function(){return this.rule.index+"-"+this.marker},t.prototype.hasRRConflictWith=function(t){return this.actionType===c.REDUCE&&t.actionType===c.REDUCE&&this.rule.index!==t.rule.index&&this.lah.hasIntersection(t.lah)},t.prototype.getFollowSet=function(t){var e,n=this.rule.g;for(e=this.marker+1;e<this.rule.rhs.length;e++){var r=this.rule.rhs[e];if(n.isToken(r)){t.add(r+1);break}var i=n.nts[-r-1].firstSet;if(t.union(i),t.remove(0),!i.contains(0))break}e===this.rule.rhs.length&&t.union(this.lah)},t.NULL={},t}(),m=function(){function t(t){this.items=[],this.itemTable=[],this.complete=!1,this.index=-1,this.stateIndex=0,this.prev=null,this.next=null,this.merges=[],this.g=t,this.data=this}return t.prototype.add=function(t,e,n,r,i){var a=this.itemTable[t.index]=this.itemTable[t.index]||[],o=a[e];if(void 0===o){var s=new g(t,n);return s.marker=e,r&&s.lah.union(r),a[e]=s,this.items.push(s),!0}if(r){var u=o.lah.union(r);return i&&u&&o.canShift()&&(o.actionType=c.NONE),u&&(o.changed=!0),u}},t.prototype.contains=function(){},t.prototype.closure=function(){for(var t=!0,e=new p(this.g.tokenCount),n=this;t;){t=!1;for(var r=0,i=this.items;r<i.length;r++){var a=i[r];if(a.changed&&a.canShift()){var o=a.getShift();o<0&&(e.removeAll(),a.getFollowSet(e),this.g.forEachRuleOfNt(-o-1,function(r){return t=n.add(r,0,!1,e,!1)||t,!1}))}a.changed=!1}}},t.prototype.toString=function(t){var e={showTrailer:t&&t.showTrailer||!1},n="s"+this.stateIndex;if(null!==this.index?n+="(i"+this.index:n+="(i?",this.merges.length>0){n+=",merged from ";for(var i=0;i<this.merges.length;i++)i>0&&(n+=","),n+="i"+this.merges[i]}n+=")"+r;for(var a=0,o=this.items;a<o.length;a++){n+=o[a].toString(e)+r}return n},t.prototype.kernelHash=function(){for(var t=0,e=0,n=this.items;e<n.length;e++){var r=n[e];r.isKernel&&(t+=r.rule.index<<5+r.rule.index+r.marker)}return String(t)},t.prototype.forEach=function(t){for(var e=0,n=this.items;e<n.length;e++){t(n[e])}},t.prototype.canMergeTo=function(t){for(var e=0;e<this.g.rules.length;e++){var n=this.itemTable[e],r=t.itemTable[e];if(n||r){for(var i=this.g.rules[e].rhs,a=0;a<=i.length;a++)if(n&&n[a]&&n[a].isKernel&&(!r||!r[a]||!r[a].isKernel)||r&&r[a]&&r[a].isKernel&&(!n||!n[a]||!n[a].isKernel))return!1;if(n&&r&&n[a]&&r[a]&&!n[a].lah.equals(r[a].lah)&&n[a].lah.hasIntersection(r[a].lah))return!1}}return!0},t.prototype.mergeTo=function(t){for(var e=!1,n=0,r=t.items;n<r.length;n++){var i=r[n];e=this.add(i.rule,i.marker,i.isKernel,i.lah,!0)||e}return this.merges.push(t.index),e},t}(),k=function(){function t(){this.size=0,this.head={prev:null,next:null,data:null},this.tail={prev:null,next:null,data:null},this.head.next=this.tail,this.tail.prev=this.head}return t.prototype.append=function(t){t.prev=this.tail.prev,t.next=this.tail,this.tail.prev.next=t,this.tail.prev=t,this.size++},t.prototype.pull=function(){var t=this.head.next;return this.head.next=t.next,t.next.prev=this.head,t.prev=t.next=null,this.size--,t.data},t.prototype.isEmpty=function(){return 0===this.size},t.prototype.forEach=function(t){for(var e=this.head.next;e!==this.tail;e=e.next)t(e.data)},t.prototype.remove=function(t){t.next.prev=t.prev,t.prev.next=t.next,this.size--},t.prototype.iterator=function(){var t=this.head,e=this;return function(){return t!==e.tail?(t=t.next).data:null}},t}();(b=v||(v={}))[b.UNDEFINED=0]="UNDEFINED",b[b.LEFT=1]="LEFT",b[b.RIGHT=2]="RIGHT",b[b.NON=3]="NON";var b;function x(t){return null===t.alias?"<"+t.sym+">":'"'+t.alias+'"'}var y,S=function(){function t(t,e){this.defred=null,this.g=t;var n=t.tokenCount,r=t.nts.length;this.stateCount=e,this.shift=new Array(n*e),this.gotot=new Array(r*e);for(var i=0;i<this.shift.length;i++)this.shift[i]=null;for(i=0;i<this.gotot.length;i++)this.gotot[i]=null}return t.prototype.forEachShift=function(t){for(var e=0;e<this.stateCount;e++)for(var n=0;n<this.g.tokens.length;n++){var r=this.lookupShift(e,n);r&&t(r,e,n)}},t.prototype.forEachGoto=function(t){for(var e=0;e<this.stateCount;e++)for(var n=0;n<this.g.nts.length;n++){var r=this.lookupGoto(e,n);r&&t(r,e,n)}},t.prototype.lookupShift=function(t,e){return this.shift[this.g.tokenCount*t+e]},t.prototype.lookupGoto=function(t,e){return this.gotot[this.g.nts.length*t+e]},t.prototype._getDefRed=function(t,e){for(var n=0;n<e.length;n++)e[n]=0;for(var r=0;r<this.g.tokenCount;r++){var i=this.lookupShift(t,r);i&&i.actionType===c.REDUCE&&e[i.rule.index]++}var a=0;for(n=0;n<e.length;n++)e[n]>e[a]&&(a=n);return e[a]>0?a:-1},t.prototype.findDefAct=function(){this.defred=new Array(this.stateCount);for(var t=new Array(this.g.rules.length),e=0;e<this.stateCount;e++){var n=this._getDefRed(e,t);if(this.defred[e]=n,-1!==n)for(var r=0;r<this.g.tokens.length;r++){var i=this.lookupShift(e,r);i&&i.actionType===c.REDUCE&&i.rule.index===n&&(this.shift[this.g.tokenCount*e+r]=null)}}},t}();(T=y||(y={}))[T.RR=0]="RR",T[T.SR=1]="SR";var T,w=function(){function t(){}return t.prototype.toString=function(){return"state "+this.set.stateIndex+", "+t.cNames[this.type]+" conflict:"+r+u+"token: "+x(this.token)+r+u+"used rule: "+this.used.toString()+r+u+"discarded rule: "+this.discarded.toString()},t.cNames=["reduce/reduce","shift/reduce"],t}();function E(t){var e={},n=0;function r(t){var n=t.kernelHash();void 0===e[n]&&(e[n]=[]),e[n].push(t)}function i(t,n){var r=e[t.kernelHash()];if(void 0!==r)for(var i=0;i<r.length&&!n(r[i]);i++);}var a=1,o=new k,s=new k,u=new k;for(o.append(function(t){var e=t.nts[0].rules[0],n=new m(t);n.index=0;var r=new p(t.tokenCount);return r.add(1),n.add(e,0,!0,r,!1),n}(t));!o.isEmpty()||!s.isEmpty();){var h=null;if(!s.isEmpty()){(f=h=s.pull()).forEach(function(e){if(e.actionType===c.NONE){l.assert(e.canShift());var n=e.getShift(),r=new m(t);r.index=a++,o.append(r),f.forEach(function(t){if(t.canShift()){t.getShift()===n&&(t.actionType=c.SHIFT,t.shift=r,r.add(t.rule,t.marker+1,!0,t.lah,!1))}})}}),f.complete=!0,u.append(f)}for(;!o.isEmpty();){var f;(f=o.pull()).closure(),f.forEach(function(t){t.canShift()||(t.actionType=c.REDUCE)});var d=null;i(f,function(t){return!!t.canMergeTo(f)&&(t.mergeTo(f)&&t.complete&&(d=t),null!==h&&h.forEach(function(e){e.actionType===c.SHIFT&&e.shift===f&&(e.shift=t)}),f=null,!0)}),null!==d?(u.remove(d),s.append(d),d.complete=!1):null!==f&&(s.append(f),r(f))}n++}var v=0;return u.forEach(function(t){t.stateIndex=v++}),{result:u,iterations:n}}!function(){function t(t){this.msg=t}t.prototype.toString=function(){return this.msg}}();var A=function(){function t(t,e){void 0===e&&(e="Error"),this.msg=t,this.type=e}return t.prototype.toString=function(t){void 0===t&&(t={});var e=!!t.escape,n=this.type;return t.typeClass&&(n='<span class="'+t.typeClass+'">'+n+"</span>"),n+=": ",n+=e?this.msg.replace(/</g,"&lt").replace(/>/g,"&gt"):this.msg},t}(),C=(function(t){n(e,t);function e(e,n){var r=t.call(this,e,"CompilationError")||this;return r.line=n,r}e.prototype.toString=function(e){return t.prototype.toString.call(this,e)+" (at line "+this.line+")"}}(A),function(t){n(e,t);function e(e){return t.call(this,e,"Warning")||this}return e}(A));function I(t){var e=[];return{add:function(n){var r;for(r=0;r<e.length&&!((0===r||t(n,e[r-1])>=0)&&t(n,e[r])<=0);r++);!function(t,n){e.push(null);for(var r=e.length-1;r>t;r--)e[r]=e[r-1];e[t]=n}(r,n)},done:function(){return e}}}var R=function(){return function(t,e){this.emptyCount=t,this.row=e,this.dp=0}}();function N(t){function e(e,n){return(n-=o[e].dp)<0||n>=t.columns||t.isEmpty(o[e].row,n)}function n(n,r){for(var i=0;i<t.columns;i++)if(!e(n,i))for(var a=0;a<n;a++)if(!e(a,i+r))return!1;return!0}function r(e){for(var r=0;-r<t.columns&&t.isEmpty(o[e].row,-r);)r--;for(;!n(e,r);)r++;return r}for(var i=I(function(t,e){return t.emptyCount<e.emptyCount?-1:t.emptyCount>e.emptyCount?1:0}),a=0;a<t.rows;a++)i.add(new R(t.emptyCount(a),a));for(var o=i.done(),s=0,u=0,l=new Array(t.rows),c=0;-c<t.columns&&t.isEmpty(o[0].row,-c);)c--;l[o[0].row]=o[0].dp=c;for(a=1;a<o.length;a++){var h=o[a].row,f=r(a);l[h]=o[a].dp=f,f>s&&(s=f),f<u&&(u=f)}return{dps:l,len:s+t.columns}}function L(t,e){for(var n=new Array(t),r=0;r<t;r++)n[r]=e(r);return n}var D=function(){function t(t){this.g=t.g,this.defred=t.defred,this.stateCount=t.stateCount;var e=N(function(t){for(var e=[],n=0;n<t.stateCount;n++){e.push(0);for(var r=0;r<t.g.tokens.length;r++)null===t.lookupShift(n,r)&&e[n]++}return{rows:t.stateCount,columns:t.g.tokens.length,isEmpty:function(e,n){return null===t.lookupShift(e,n)},emptyCount:function(t){return e[t]}}}(t)),n=N(function(t){for(var e=[],n=0;n<t.stateCount;n++){e.push(0);for(var r=0;r<t.g.nts.length;r++)null===t.lookupShift(n,r)&&e[n]++}return{rows:t.stateCount,columns:t.g.nts.length,isEmpty:function(e,n){return null===t.lookupGoto(e,n)},emptyCount:function(t){return e[t]}}}(t));this.disact=e.dps,this.disgoto=n.dps,this.pact=L(e.len,function(){return null}),this.checkact=L(e.len,function(){return 0});var r=this;t.forEachShift(function(t,e,n){l.assert(null===r.pact[r.disact[e]+n]),r.pact[r.disact[e]+n]=t,r.checkact[r.disact[e]+n]=e}),this.pgoto=L(n.len,function(){return null}),this.checkgoto=L(n.len,function(){return 0}),t.forEachGoto(function(t,e,n){l.assert(null===r.pgoto[r.disgoto[e]+n]),r.pgoto[r.disgoto[e]+n]=t,r.checkgoto[r.disgoto[e]+n]=e}),this._trim()}return t.prototype._trim=function(){for(;null===this.pact[this.pact.length-1];)this.pact.pop(),this.checkact.pop();for(;null===this.pgoto[this.pgoto.length-1];)this.pgoto.pop(),this.checkgoto.pop()},t.prototype.lookupShift=function(t,e){var n=this.disact[t]+e;return n>=0&&n<this.pact.length&&this.checkact[n]===t?this.pact[this.disact[t]+e]:null},t.prototype.lookupGoto=function(t,e){var n=this.disgoto[t]+e;return n>=0&&n<this.pgoto.length&&this.checkgoto[n]===t?this.pgoto[this.disgoto[t]+e]:null},t}(),_=function(){function t(t,e,n){this.g=t,this.lhs=e,this.pos=n,this.pr=-1,this.rhs=[],this.action=null,this.index=0,this.vars={},this.usedVars={}}return t.prototype.calcPr=function(){if(-1===this.pr)for(var t=this.rhs.length-1;t>=0;t--){var e=this.rhs[t];e>=0&&this.g.tokens[e].assoc!==v.UNDEFINED&&(this.pr=this.g.tokens[e].pr)}},t.prototype.getVarSp=function(t,e){if(1!==this.lhs.parents.length)return this.lhs.parents.length>1?e("LHS of the rule is referenced by more than one rule"):e("this rule is unreachable"),null;for(var n=this.rhs.length,r=this.lhs.parents[0].pos,i=this.lhs.parents[0].rule;;){var a=i.vars[t];if(void 0!==a&&a.val<r)return n+=r-a.val;if(1!==i.lhs.parents.length)return i.lhs.parents.length>1?e('"'+i.lhs.sym+'" is referenced by more than one rule or unreachable'):e("variable is undefined"),null;n+=r,r=i.lhs.parents[0].pos,i=i.lhs.parents[0].rule}},t.prototype.toString=function(t){for(var e=this.index+": "+this.lhs.sym+" =>",n=0;n<this.rhs.length;n++){var r=this.rhs[n];t===n&&(e+=" ."),e+=r>=0?" "+x(this.g.tokens[r]):" "+this.g.nts[-r-1].sym}return t===this.rhs.length&&(e+=" ."),e},t}(),O=function(){function t(){this.tokens=[],this.tokenCount=0,this.nts=[],this.rules=[]}return t.prototype.isToken=function(t){return t>=0},t.prototype.forEachRule=function(t){for(var e=0;e<this.nts.length;e++)for(var n=this.nts[e].rules,r=0;r<n.length;r++)t(e,n[r])},t.prototype.forEachRuleOfNt=function(t,e){for(var n=this.nts[t].rules,r=0;r<n.length&&!e(n[r]);r++);},t.prototype.genFirstSets=function(){var t=!0,e=new p(this.tokens.length);for(e.addAll(),e.remove(0);t;){t=!1;for(var n=0;n<this.nts.length;n++)for(var r=this.nts[n].rules,i=this.nts[n].firstSet,a=0;a<r.length;a++){for(var o=r[a],s=0;s<o.rhs.length;s++){var u=o.rhs[s];if(this.isToken(u)){t=i.add(u+1)||t;break}if(n!==(u=-u-1)&&(t=i.union(this.nts[u].firstSet,e)||t),!this.nts[u].firstSet.contains(0))break}s===o.rhs.length&&(t=i.add(0)||t)}}},t.prototype.toString=function(t){void 0===t&&(t={});var e=(t=t||{}).endl||e,n=t.escape||!1,r="";if(this.forEachRule(function(t,n){var i=n.toString();r+=i+e}),t.firstSets)for(var i=0;i<this.nts.length;i++){var a=this.nts[i];r+="First("+a.sym+") = { "+a.firstSet.toString(this)+" }"+e}return n&&(r=r.replace(/</g,"&lt;").replace(/>/g,"&gt;")),r.replace(/\n/g,e)},t.prototype.findTokenByName=function(t){for(var e=0,n=this.tokens;e<n.length;e++){var r=n[e];if(r.sym===t)return r}return null},t.prototype.findTokensByAlias=function(t){for(var e=[],n=0,r=this.tokens;n<r.length;n++){var i=r[n];i.alias===t&&e.push(i)}return e},t}(),F=function(){return function(){this.grammar=null,this.lexDFA=[],this.dfaTables=[],this.opt={},this.prefix="jj",this.header=[],this.output=null,this.extraArgs=null,this.initArg=null,this.initBody=null,this.epilogue=null,this.sematicType=null}}(),U=Number.POSITIVE_INFINITY,B=Number.NEGATIVE_INFINITY,M=function(){function t(t,e){this.data=null,this.a=t,this.b=e}return t.prototype.insertBefore=function(t,e,n){if(this.parent.isValid(this)&&!this.parent.noMerge&&this.a===e+1)return this.a=t,this;var r=this.parent.createInterval(t,e,n);return r.prev=this.prev,r.next=this,this.prev.next=r,this.prev=r,r},t.prototype.contains=function(t){return this.a<=t&&this.b>=t},t.prototype.overlaps=function(t,e){return!(t>this.b||e<this.a)},t.prototype.insertAfter=function(t,e,n){if(this.parent.isValid(this)&&!this.parent.noMerge&&this.b===t-1)return this.b=e,this;var r=this.parent.createInterval(t,e,n);return r.prev=this,r.next=this.next,this.next.prev=r,this.next=r,r},t.prototype.splitLeft=function(t){if(t>this.a){var e=this.insertBefore(this.a,t-1,this.data);return this.a=t,e}return this},t.prototype.splitRight=function(t){if(t<this.b){var e=this.insertAfter(t+1,this.b,this.data);return this.b=t,e}return this},t.prototype.remove=function(){return this.prev.next=this.next,this.next.prev=this.prev,this},t.prototype.checkMerge=function(){return this.a!==B&&null!==this.prev.a&&this.a===this.prev.b+1&&(this.a=this.prev.a,this.prev.remove()),this.b!==U&&null!==this.next.a&&this.b===this.next.a-1&&(this.b=this.next.b,this.next.remove()),this},t.prototype.toString=function(t){var e="";function n(t){return t===U?"+oo":t===B?"-oo":t.toString()}var r=(t||n)(this.a),i=(t||n)(this.b);return this.a===this.b?e+=r:(e+=this.a===B?"("+r:"["+r,e+=",",e+=this.b===U?i+")":i+"]"),this.data&&(e+=this.parent.dataOp.stringify(this.data)),e},t}();function P(t,e){if(t>e)throw new Error('illegal argument: "a"('+t+') must be no more than "b"('+e+")")}var V,H=function(){function t(t){this.head=new M(0,0),this.head.parent=this,this.tail=new M(null,null),this.tail.parent=this,this.head.next=this.tail,this.tail.prev=this.head,this.noMerge=void 0!==t,this.dataOp=t||null}return t.prototype.isValid=function(t){return t!==this.head&&t!==this.tail},t.prototype.createInterval=function(t,e,n){void 0===n&&(n=null);var r=new M(t,e);return r.parent=this,this.dataOp&&(r.data=this.dataOp.createData(),null!==n&&this.dataOp.union(r.data,n)),r},t.prototype.fitPoint=function(t,e){for(var n=this.head;n!==this.tail;n=n.next)if((n===this.head||t>n.b)&&(n.next===this.tail||e<n.next.a))return n;return null},t.prototype.overlaped=function(t,e){for(var n=null,r=null,i=this.head.next;i!==this.tail&&!i.overlaps(t,e);i=i.next);if(i===this.tail)return null;for(n=r=i;i!==this.tail&&i.overlaps(t,e);i=i.next)r=i;return[n,r]},t.prototype.add=function(t,e,n){void 0===e&&(e=t);var r=this.noMerge;P(t,e);var i=this.overlaped(t,e);if(null===i)this.fitPoint(t,e).insertAfter(t,e,n);else if(r){i[0].contains(t)?i[0].splitLeft(t):i[0].insertBefore(t,i[0].a-1,n),i[1].contains(e)?i[1].splitRight(e):i[1].insertAfter(i[1].b+1,e,n);for(var a=i[0];a!==i[1];a=a.next)this.dataOp.union(a.data,n),a.b+1<a.next.a&&(a.insertAfter(a.b+1,a.next.a-1,n),a=a.next);this.dataOp.union(i[1].data,n)}else{var o=t<i[0].a?t:i[0].a,s=e>i[1].b?e:i[1].b;i[0].a=o,i[0].b=s,i[0].next=i[1].next,i[1].next.prev=i[0],i[0].checkMerge()}return this},t.prototype.remove=function(t,e){P(t,e);var n=this.overlaped(t,e);return null!==n&&(n[0].contains(t)&&n[0].splitLeft(t),n[1].contains(e)&&n[1].splitRight(e),n[0].prev.next=n[1].next,n[1].next.prev=n[0].prev),this},t.prototype.removeAll=function(){return this.head.next=this.tail,this.tail.prev=this.head,this},t.prototype.forEach=function(t){for(var e=this.head.next;e!==this.tail;e=e.next)t(e.a,e.b,e);return this},t.prototype.union=function(t){for(var e=t.head.next;e!==t.tail;e=e.next)this.add(e.a,e.b);return this},t.prototype.contains=function(t){for(var e=this.head.next;e!==this.tail;e=e.next)if(e.contains(t))return!0;return!1},t.prototype.toString=function(t){for(var e="",n=!1,r=this.head.next;r!==this.tail;r=r.next)n&&(e+=","),n=!0,e+=r.toString(t);return""===e?"phi":e},t}(),G=function(t){n(e,t);function e(e){return t.call(this,e)||this}return e.prototype.addAll=function(){t.prototype.add.call(this,0,U)},e.prototype.constainsAll=function(){var t=this.head.next;return t.next===this.tail&&0===t.a&&t.b===U},e.prototype.toString=function(){return t.prototype.toString.call(this,function(t){return t!==U&&t!==B?t>=32&&t<=126?"'"+String.fromCharCode(t)+"'":"\\x"+t.toString(16):t===U?"oo":"-oo"})},e}(H);(K=V||(V={}))[K.START=0]="START",K[K.END=1]="END",K[K.NONE=2]="NONE";var K,j=function(){return function(t,e){this.chars=new G,this.from=t,this.to=e}}(),z=function(){return function(){this.priority=0,this.least=!1,this.id=0,this.data=null}}(),Q=function(){function t(t){this.valid=!1,this.arcs=[],this.epsilons=[],this.index=0,this.isStart=!1,this.isEnd=!1,this.marker=!1,this.endAction=null,this.endAction=t||null}return t.prototype.findArc=function(t){for(var e=0,n=this.arcs;e<n.length;e++){var r=n[e];if(r.to===t)return r}return null},t.prototype.to=function(t){var e=this.findArc(t);return null===e&&(e=new j(this,t),this.arcs.push(e)),t.valid=!0,e},t.prototype.epsilonTo=function(t){this.epsilons.push(t)},t.prototype.hasDefinate=function(){return 1===this.arcs.length&&this.arcs[0].chars.constainsAll()},t.prototype.iterator=function(t){void 0===t&&(t=!1);var e=[this],n=[this];return this.marker=!0,function(){if(e.length>0){var r=e.pop();if(!t)for(var i=0,a=r.arcs;i<a.length;i++){var o=a[i].to;o.marker||(e.push(o),n.push(o),o.marker=!0)}for(var s=0,u=r.epsilons;s<u.length;s++){var l=u[s];l.marker||(e.push(l),n.push(l),l.marker=!0)}return r}for(var c=0,h=n;c<h.length;c++){h[c].marker=!1}return null}},t.prototype.forEach=function(t,e){void 0===e&&(e=!1);var n=[this],r=[this];for(this.marker=!0;n.length>0;){var i=n.pop();if(t(i),!e)for(var a=0,o=i.arcs;a<o.length;a++){var s=o[a].to;s.marker||(n.push(s),r.push(s),s.marker=!0)}for(var u=0,l=i.epsilons;u<l.length;u++){var c=l[u];c.marker||(n.push(c),r.push(c),c.marker=!0)}}for(var h=0,f=r;h<f.length;h++){f[h].marker=!1}},t.prototype.number=function(){var t=0;this.forEach(function(e){e.index=t++})},t.prototype.print=function(t,e){void 0===e&&(e=!0);function n(t){var e="";e+="state "+t.index,t.isStart&&(e+="(start)"),t.endAction&&(e+="(end "+t.endAction.id+")"),e+=r;for(var n=0;n<t.arcs.length;n++){var i=t.arcs[n];e+=""+u+i.chars.toString()+" -> state "+i.to.index+r}if(t.epsilons.length>0){e+=u+"epsilon: ";for(n=0;n<t.epsilons.length;n++)n>0&&(e+=","),e+=t.epsilons[n].index.toString();e+=r}return e}e?this.forEach(function(e){t.write(n(e))}):t.write(n(this))},t.prototype.toString=function(t){void 0===t&&(t=!0);var e=new a;return this.print(e,t),e.s},t.prototype.copyEndFrom=function(t){null!==t.endAction&&(null!==this.endAction?this.endAction.priority<t.endAction.priority&&(this.endAction=t.endAction):this.endAction=t.endAction)},t.prototype.removeEpsilons=function(){var t=[this];this.forEach(function(e){e.valid&&t.push(e)});for(var e=0;e<t.length;e++){var n=t[e];n.forEach(function(t){if(t!==n){for(var e=0;e<t.arcs.length;e++){var r=t.arcs[e];n.to(r.to).chars.union(r.chars)}n.copyEndFrom(t)}},!0),n.epsilons.length=0}for(e=0;e<t.length;e++)t[e].index=e},t.prototype.count=function(){var t=0;return this.forEach(function(){t++}),t},t.prototype.size=function(){var t=0;return this.forEach(function(){t++}),t},t.prototype.allChars=function(t){for(var e=0;e<this.arcs.length;e++){var n=this.arcs[e];n.chars.forEach(function(e,r){t.add(e,r,[n.to])})}},t.prototype.getState=function(t){for(var e=0;e<this.arcs.length;e++){var n=this.arcs[e];if(n.chars.contains(t))return n.to}return null},t.prototype.hasArc=function(){return this.arcs.length>0},t.prototype.clone=function(){},t.prototype.toDFA=function(){var t={},e=[],n=0,r=this.count(),i=new G({createData:function(){return[]},union:function(t,e){for(var n=0,r=e;n<r.length;n++){for(var i=r[n],a=!1,o=0,s=t;o<s.length;o++){if(i===s[o]){a=!0;break}}!a&&t.push(i)}},stringify:function(t){return""}}),a=new q(r,[this]);a.index=n++,e.push(a),t[a.hash()]=a;for(var o=[a];o.length>0;){var s=o.shift();i.removeAll(),s.allChars(i),i.forEach(function(i,a,u){var l=new q(r,u.data),c=l.hash();t[c]?l=t[c]:(t[c]=l,(null===l.endAction||!l.endAction.least)&&o.push(l),l.index=n++,e.push(l)),s.to(l).chars.add(i,a)})}return a.release(),{head:a,states:e}},t}(),q=function(t){n(e,t);function e(e,n){var r=t.call(this)||this;r.isEnd=r.isStart=!1,r.valid=!0,r.states=n,r.stateSet=new f(e);for(var i=0;i<n.length;i++)r.stateSet.add(n[i].index),r.copyEndFrom(n[i]),r.isStart=r.isStart||n[i].isStart;return r}return e.prototype.hash=function(){return this.stateSet.hash()},e.prototype.allChars=function(t){for(var e=0;e<this.states.length;e++)this.states[e].allChars(t)},e.prototype.forEach=function(e){t.prototype.forEach.call(this,e)},e.prototype.release=function(){this.forEach(function(t){t.states.length=0})},e}(Q),$=function(){function t(t){this.states=t,this.start=t[0]}return t.prototype.forEachArc=function(t){for(var e=0,n=this.states;e<n.length;e++)for(var r=n[e],i=0,a=r.arcs;i<a.length;i++){var o=a[i];t(o,r,o.to)}},t.prototype.print=function(t){for(var e=0,n=this.states;e<n.length;e++){n[e].print(t,!1),t.writeln()}},t.prototype.toString=function(){for(var t="",e=0;e<this.states.length;e++)t+=this.states[e].toString()+"\n";return t},t.prototype.matcher=function(t){var e,n=o(t),r=[],i=[],a=null,s=n.peek();function u(){null!==a&&r.push(s),i.push(s),n.next(),s=n.peek()}function l(){for(e=a,a=null;r.length>0;)n.backup(r.pop()),i.pop()}var c=this;return function(){s=n.peek(),e=c.start,i.length=0,r.length=0,a=null;for(var t;;)if(null!==e.endAction){if(!e.hasArc())return{matched:i.join(""),action:e.endAction};if(null===(t=null!==s?e.getState(s.charCodeAt(0)):null))return{matched:i.join(""),action:e.endAction};r.length=0,a=e,e=t,u()}else{if(null===(t=null!==s?e.getState(s.charCodeAt(0)):null)){if(null!==a)return l(),{matched:i.join(""),action:e.endAction};if(null===s)return null;throw new Error('unexpected character "'+s+'"')}e=t,u()}}},t}(),W=function(){function t(t){this.getRes=t,this._blocked={}}return t.prototype.wait=function(t,e){var n=this.getRes(t);void 0===n?(this._blocked[t]||(this._blocked[t]=[]),this._blocked[t].push(e)):e(!0,n)},t.prototype.signal=function(t,e){var n=this._blocked[t];if(void 0!==n){for(var r=0,i=n;r<i.length;r++){(0,i[r])(!0,e)}delete this._blocked[t]}},t.prototype.fail=function(){for(var t in this._blocked)for(var e=0,n=this._blocked[t];e<n.length;e++){(0,n[e])(!1,null)}},t}();function Y(t){return{val:t,startLine:-1,startColumn:0,endLine:0,endColumn:0}}function X(t,e,n){void 0===n&&(n="^");function i(t){for(var e=0,n=0;n<t.length;n++)e+=t.charCodeAt(n)>255?2:1;return e}if(-1!==t.startLine){var a="(line "+(t.startLine+1)+", column "+(t.startColumn+1)+"):"+r,o=t.startLine,s=t.startColumn;a+=e[o]+r,a+=function(t,e){for(var n="";e-- >0;)n+=t;return n}(" ",s);for(var u=i(e[o]);o<=t.endLine&&s<=t.endColumn;)a+=n,s++>=u&&(s=0,a+=r+e[++o]+r,u=i(e[o]));return a}return"<internal position>"}var J=[170,170,181,181,186,186,192,214,216,246,248,705,710,721,736,740,748,748,750,750,880,884,886,887,890,893,902,902,904,906,908,908,910,929,931,1013,1015,1153,1162,1319,1329,1366,1369,1369,1377,1415,1488,1514,1520,1522,1568,1610,1646,1647,1649,1747,1749,1749,1765,1766,1774,1775,1786,1788,1791,1791,1808,1808,1810,1839,1869,1957,1969,1969,1994,2026,2036,2037,2042,2042,2048,2069,2074,2074,2084,2084,2088,2088,2112,2136,2208,2208,2210,2220,2308,2361,2365,2365,2384,2384,2392,2401,2417,2423,2425,2431,2437,2444,2447,2448,2451,2472,2474,2480,2482,2482,2486,2489,2493,2493,2510,2510,2524,2525,2527,2529,2544,2545,2565,2570,2575,2576,2579,2600,2602,2608,2610,2611,2613,2614,2616,2617,2649,2652,2654,2654,2674,2676,2693,2701,2703,2705,2707,2728,2730,2736,2738,2739,2741,2745,2749,2749,2768,2768,2784,2785,2821,2828,2831,2832,2835,2856,2858,2864,2866,2867,2869,2873,2877,2877,2908,2909,2911,2913,2929,2929,2947,2947,2949,2954,2958,2960,2962,2965,2969,2970,2972,2972,2974,2975,2979,2980,2984,2986,2990,3001,3024,3024,3077,3084,3086,3088,3090,3112,3114,3123,3125,3129,3133,3133,3160,3161,3168,3169,3205,3212,3214,3216,3218,3240,3242,3251,3253,3257,3261,3261,3294,3294,3296,3297,3313,3314,3333,3340,3342,3344,3346,3386,3389,3389,3406,3406,3424,3425,3450,3455,3461,3478,3482,3505,3507,3515,3517,3517,3520,3526,3585,3632,3634,3635,3648,3654,3713,3714,3716,3716,3719,3720,3722,3722,3725,3725,3732,3735,3737,3743,3745,3747,3749,3749,3751,3751,3754,3755,3757,3760,3762,3763,3773,3773,3776,3780,3782,3782,3804,3807,3840,3840,3904,3911,3913,3948,3976,3980,4096,4138,4159,4159,4176,4181,4186,4189,4193,4193,4197,4198,4206,4208,4213,4225,4238,4238,4256,4293,4295,4295,4301,4301,4304,4346,4348,4680,4682,4685,4688,4694,4696,4696,4698,4701,4704,4744,4746,4749,4752,4784,4786,4789,4792,4798,4800,4800,4802,4805,4808,4822,4824,4880,4882,4885,4888,4954,4992,5007,5024,5108,5121,5740,5743,5759,5761,5786,5792,5866,5870,5872,5888,5900,5902,5905,5920,5937,5952,5969,5984,5996,5998,6e3,6016,6067,6103,6103,6108,6108,6176,6263,6272,6312,6314,6314,6320,6389,6400,6428,6480,6509,6512,6516,6528,6571,6593,6599,6656,6678,6688,6740,6823,6823,6917,6963,6981,6987,7043,7072,7086,7087,7098,7141,7168,7203,7245,7247,7258,7293,7401,7404,7406,7409,7413,7414,7424,7615,7680,7957,7960,7965,7968,8005,8008,8013,8016,8023,8025,8025,8027,8027,8029,8029,8031,8061,8064,8116,8118,8124,8126,8126,8130,8132,8134,8140,8144,8147,8150,8155,8160,8172,8178,8180,8182,8188,8305,8305,8319,8319,8336,8348,8450,8450,8455,8455,8458,8467,8469,8469,8473,8477,8484,8484,8486,8486,8488,8488,8490,8493,8495,8505,8508,8511,8517,8521,8526,8526,8544,8584,11264,11310,11312,11358,11360,11492,11499,11502,11506,11507,11520,11557,11559,11559,11565,11565,11568,11623,11631,11631,11648,11670,11680,11686,11688,11694,11696,11702,11704,11710,11712,11718,11720,11726,11728,11734,11736,11742,11823,11823,12293,12295,12321,12329,12337,12341,12344,12348,12353,12438,12445,12447,12449,12538,12540,12543,12549,12589,12593,12686,12704,12730,12784,12799,13312,19893,19968,40908,40960,42124,42192,42237,42240,42508,42512,42527,42538,42539,42560,42606,42623,42647,42656,42735,42775,42783,42786,42888,42891,42894,42896,42899,42912,42922,43e3,43009,43011,43013,43015,43018,43020,43042,43072,43123,43138,43187,43250,43255,43259,43259,43274,43301,43312,43334,43360,43388,43396,43442,43471,43471,43520,43560,43584,43586,43588,43595,43616,43638,43642,43642,43648,43695,43697,43697,43701,43702,43705,43709,43712,43712,43714,43714,43739,43741,43744,43754,43762,43764,43777,43782,43785,43790,43793,43798,43808,43814,43816,43822,43968,44002,44032,55203,55216,55238,55243,55291,63744,64109,64112,64217,64256,64262,64275,64279,64285,64285,64287,64296,64298,64310,64312,64316,64318,64318,64320,64321,64323,64324,64326,64433,64467,64829,64848,64911,64914,64967,65008,65019,65136,65140,65142,65276,65313,65338,65345,65370,65382,65470,65474,65479,65482,65487,65490,65495,65498,65500],Z=[170,170,181,181,186,186,192,214,216,246,248,705,710,721,736,740,748,748,750,750,768,884,886,887,890,893,902,902,904,906,908,908,910,929,931,1013,1015,1153,1155,1159,1162,1319,1329,1366,1369,1369,1377,1415,1425,1469,1471,1471,1473,1474,1476,1477,1479,1479,1488,1514,1520,1522,1552,1562,1568,1641,1646,1747,1749,1756,1759,1768,1770,1788,1791,1791,1808,1866,1869,1969,1984,2037,2042,2042,2048,2093,2112,2139,2208,2208,2210,2220,2276,2302,2304,2403,2406,2415,2417,2423,2425,2431,2433,2435,2437,2444,2447,2448,2451,2472,2474,2480,2482,2482,2486,2489,2492,2500,2503,2504,2507,2510,2519,2519,2524,2525,2527,2531,2534,2545,2561,2563,2565,2570,2575,2576,2579,2600,2602,2608,2610,2611,2613,2614,2616,2617,2620,2620,2622,2626,2631,2632,2635,2637,2641,2641,2649,2652,2654,2654,2662,2677,2689,2691,2693,2701,2703,2705,2707,2728,2730,2736,2738,2739,2741,2745,2748,2757,2759,2761,2763,2765,2768,2768,2784,2787,2790,2799,2817,2819,2821,2828,2831,2832,2835,2856,2858,2864,2866,2867,2869,2873,2876,2884,2887,2888,2891,2893,2902,2903,2908,2909,2911,2915,2918,2927,2929,2929,2946,2947,2949,2954,2958,2960,2962,2965,2969,2970,2972,2972,2974,2975,2979,2980,2984,2986,2990,3001,3006,3010,3014,3016,3018,3021,3024,3024,3031,3031,3046,3055,3073,3075,3077,3084,3086,3088,3090,3112,3114,3123,3125,3129,3133,3140,3142,3144,3146,3149,3157,3158,3160,3161,3168,3171,3174,3183,3202,3203,3205,3212,3214,3216,3218,3240,3242,3251,3253,3257,3260,3268,3270,3272,3274,3277,3285,3286,3294,3294,3296,3299,3302,3311,3313,3314,3330,3331,3333,3340,3342,3344,3346,3386,3389,3396,3398,3400,3402,3406,3415,3415,3424,3427,3430,3439,3450,3455,3458,3459,3461,3478,3482,3505,3507,3515,3517,3517,3520,3526,3530,3530,3535,3540,3542,3542,3544,3551,3570,3571,3585,3642,3648,3662,3664,3673,3713,3714,3716,3716,3719,3720,3722,3722,3725,3725,3732,3735,3737,3743,3745,3747,3749,3749,3751,3751,3754,3755,3757,3769,3771,3773,3776,3780,3782,3782,3784,3789,3792,3801,3804,3807,3840,3840,3864,3865,3872,3881,3893,3893,3895,3895,3897,3897,3902,3911,3913,3948,3953,3972,3974,3991,3993,4028,4038,4038,4096,4169,4176,4253,4256,4293,4295,4295,4301,4301,4304,4346,4348,4680,4682,4685,4688,4694,4696,4696,4698,4701,4704,4744,4746,4749,4752,4784,4786,4789,4792,4798,4800,4800,4802,4805,4808,4822,4824,4880,4882,4885,4888,4954,4957,4959,4992,5007,5024,5108,5121,5740,5743,5759,5761,5786,5792,5866,5870,5872,5888,5900,5902,5908,5920,5940,5952,5971,5984,5996,5998,6e3,6002,6003,6016,6099,6103,6103,6108,6109,6112,6121,6155,6157,6160,6169,6176,6263,6272,6314,6320,6389,6400,6428,6432,6443,6448,6459,6470,6509,6512,6516,6528,6571,6576,6601,6608,6617,6656,6683,6688,6750,6752,6780,6783,6793,6800,6809,6823,6823,6912,6987,6992,7001,7019,7027,7040,7155,7168,7223,7232,7241,7245,7293,7376,7378,7380,7414,7424,7654,7676,7957,7960,7965,7968,8005,8008,8013,8016,8023,8025,8025,8027,8027,8029,8029,8031,8061,8064,8116,8118,8124,8126,8126,8130,8132,8134,8140,8144,8147,8150,8155,8160,8172,8178,8180,8182,8188,8204,8205,8255,8256,8276,8276,8305,8305,8319,8319,8336,8348,8400,8412,8417,8417,8421,8432,8450,8450,8455,8455,8458,8467,8469,8469,8473,8477,8484,8484,8486,8486,8488,8488,8490,8493,8495,8505,8508,8511,8517,8521,8526,8526,8544,8584,11264,11310,11312,11358,11360,11492,11499,11507,11520,11557,11559,11559,11565,11565,11568,11623,11631,11631,11647,11670,11680,11686,11688,11694,11696,11702,11704,11710,11712,11718,11720,11726,11728,11734,11736,11742,11744,11775,11823,11823,12293,12295,12321,12335,12337,12341,12344,12348,12353,12438,12441,12442,12445,12447,12449,12538,12540,12543,12549,12589,12593,12686,12704,12730,12784,12799,13312,19893,19968,40908,40960,42124,42192,42237,42240,42508,42512,42539,42560,42607,42612,42621,42623,42647,42655,42737,42775,42783,42786,42888,42891,42894,42896,42899,42912,42922,43e3,43047,43072,43123,43136,43204,43216,43225,43232,43255,43259,43259,43264,43309,43312,43347,43360,43388,43392,43456,43471,43481,43520,43574,43584,43597,43600,43609,43616,43638,43642,43643,43648,43714,43739,43741,43744,43759,43762,43766,43777,43782,43785,43790,43793,43798,43808,43814,43816,43822,43968,44010,44012,44013,44016,44025,44032,55203,55216,55238,55243,55291,63744,64109,64112,64217,64256,64262,64275,64279,64285,64296,64298,64310,64312,64316,64318,64318,64320,64321,64323,64324,64326,64433,64467,64829,64848,64911,64914,64967,65008,65019,65024,65039,65056,65062,65075,65076,65101,65103,65136,65140,65142,65276,65296,65305,65313,65338,65343,65343,65345,65370,65382,65470,65474,65479,65482,65487,65490,65495,65498,65500],tt=[170,170,181,181,186,186,192,214,216,246,248,543,546,563,592,685,688,696,699,705,720,721,736,740,750,750,890,890,902,902,904,906,908,908,910,929,931,974,976,983,986,1011,1024,1153,1164,1220,1223,1224,1227,1228,1232,1269,1272,1273,1329,1366,1369,1369,1377,1415,1488,1514,1520,1522,1569,1594,1600,1610,1649,1747,1749,1749,1765,1766,1786,1788,1808,1808,1810,1836,1920,1957,2309,2361,2365,2365,2384,2384,2392,2401,2437,2444,2447,2448,2451,2472,2474,2480,2482,2482,2486,2489,2524,2525,2527,2529,2544,2545,2565,2570,2575,2576,2579,2600,2602,2608,2610,2611,2613,2614,2616,2617,2649,2652,2654,2654,2674,2676,2693,2699,2701,2701,2703,2705,2707,2728,2730,2736,2738,2739,2741,2745,2749,2749,2768,2768,2784,2784,2821,2828,2831,2832,2835,2856,2858,2864,2866,2867,2870,2873,2877,2877,2908,2909,2911,2913,2949,2954,2958,2960,2962,2965,2969,2970,2972,2972,2974,2975,2979,2980,2984,2986,2990,2997,2999,3001,3077,3084,3086,3088,3090,3112,3114,3123,3125,3129,3168,3169,3205,3212,3214,3216,3218,3240,3242,3251,3253,3257,3294,3294,3296,3297,3333,3340,3342,3344,3346,3368,3370,3385,3424,3425,3461,3478,3482,3505,3507,3515,3517,3517,3520,3526,3585,3632,3634,3635,3648,3654,3713,3714,3716,3716,3719,3720,3722,3722,3725,3725,3732,3735,3737,3743,3745,3747,3749,3749,3751,3751,3754,3755,3757,3760,3762,3763,3773,3773,3776,3780,3782,3782,3804,3805,3840,3840,3904,3911,3913,3946,3976,3979,4096,4129,4131,4135,4137,4138,4176,4181,4256,4293,4304,4342,4352,4441,4447,4514,4520,4601,4608,4614,4616,4678,4680,4680,4682,4685,4688,4694,4696,4696,4698,4701,4704,4742,4744,4744,4746,4749,4752,4782,4784,4784,4786,4789,4792,4798,4800,4800,4802,4805,4808,4814,4816,4822,4824,4846,4848,4878,4880,4880,4882,4885,4888,4894,4896,4934,4936,4954,5024,5108,5121,5740,5743,5750,5761,5786,5792,5866,6016,6067,6176,6263,6272,6312,7680,7835,7840,7929,7936,7957,7960,7965,7968,8005,8008,8013,8016,8023,8025,8025,8027,8027,8029,8029,8031,8061,8064,8116,8118,8124,8126,8126,8130,8132,8134,8140,8144,8147,8150,8155,8160,8172,8178,8180,8182,8188,8319,8319,8450,8450,8455,8455,8458,8467,8469,8469,8473,8477,8484,8484,8486,8486,8488,8488,8490,8493,8495,8497,8499,8505,8544,8579,12293,12295,12321,12329,12337,12341,12344,12346,12353,12436,12445,12446,12449,12538,12540,12542,12549,12588,12593,12686,12704,12727,13312,19893,19968,40869,40960,42124,44032,55203,63744,64045,64256,64262,64275,64279,64285,64285,64287,64296,64298,64310,64312,64316,64318,64318,64320,64321,64323,64324,64326,64433,64467,64829,64848,64911,64914,64967,65008,65019,65136,65138,65140,65140,65142,65276,65313,65338,65345,65370,65382,65470,65474,65479,65482,65487,65490,65495,65498,65500],et=[170,170,181,181,186,186,192,214,216,246,248,543,546,563,592,685,688,696,699,705,720,721,736,740,750,750,768,846,864,866,890,890,902,902,904,906,908,908,910,929,931,974,976,983,986,1011,1024,1153,1155,1158,1164,1220,1223,1224,1227,1228,1232,1269,1272,1273,1329,1366,1369,1369,1377,1415,1425,1441,1443,1465,1467,1469,1471,1471,1473,1474,1476,1476,1488,1514,1520,1522,1569,1594,1600,1621,1632,1641,1648,1747,1749,1756,1759,1768,1770,1773,1776,1788,1808,1836,1840,1866,1920,1968,2305,2307,2309,2361,2364,2381,2384,2388,2392,2403,2406,2415,2433,2435,2437,2444,2447,2448,2451,2472,2474,2480,2482,2482,2486,2489,2492,2492,2494,2500,2503,2504,2507,2509,2519,2519,2524,2525,2527,2531,2534,2545,2562,2562,2565,2570,2575,2576,2579,2600,2602,2608,2610,2611,2613,2614,2616,2617,2620,2620,2622,2626,2631,2632,2635,2637,2649,2652,2654,2654,2662,2676,2689,2691,2693,2699,2701,2701,2703,2705,2707,2728,2730,2736,2738,2739,2741,2745,2748,2757,2759,2761,2763,2765,2768,2768,2784,2784,2790,2799,2817,2819,2821,2828,2831,2832,2835,2856,2858,2864,2866,2867,2870,2873,2876,2883,2887,2888,2891,2893,2902,2903,2908,2909,2911,2913,2918,2927,2946,2947,2949,2954,2958,2960,2962,2965,2969,2970,2972,2972,2974,2975,2979,2980,2984,2986,2990,2997,2999,3001,3006,3010,3014,3016,3018,3021,3031,3031,3047,3055,3073,3075,3077,3084,3086,3088,3090,3112,3114,3123,3125,3129,3134,3140,3142,3144,3146,3149,3157,3158,3168,3169,3174,3183,3202,3203,3205,3212,3214,3216,3218,3240,3242,3251,3253,3257,3262,3268,3270,3272,3274,3277,3285,3286,3294,3294,3296,3297,3302,3311,3330,3331,3333,3340,3342,3344,3346,3368,3370,3385,3390,3395,3398,3400,3402,3405,3415,3415,3424,3425,3430,3439,3458,3459,3461,3478,3482,3505,3507,3515,3517,3517,3520,3526,3530,3530,3535,3540,3542,3542,3544,3551,3570,3571,3585,3642,3648,3662,3664,3673,3713,3714,3716,3716,3719,3720,3722,3722,3725,3725,3732,3735,3737,3743,3745,3747,3749,3749,3751,3751,3754,3755,3757,3769,3771,3773,3776,3780,3782,3782,3784,3789,3792,3801,3804,3805,3840,3840,3864,3865,3872,3881,3893,3893,3895,3895,3897,3897,3902,3911,3913,3946,3953,3972,3974,3979,3984,3991,3993,4028,4038,4038,4096,4129,4131,4135,4137,4138,4140,4146,4150,4153,4160,4169,4176,4185,4256,4293,4304,4342,4352,4441,4447,4514,4520,4601,4608,4614,4616,4678,4680,4680,4682,4685,4688,4694,4696,4696,4698,4701,4704,4742,4744,4744,4746,4749,4752,4782,4784,4784,4786,4789,4792,4798,4800,4800,4802,4805,4808,4814,4816,4822,4824,4846,4848,4878,4880,4880,4882,4885,4888,4894,4896,4934,4936,4954,4969,4977,5024,5108,5121,5740,5743,5750,5761,5786,5792,5866,6016,6099,6112,6121,6160,6169,6176,6263,6272,6313,7680,7835,7840,7929,7936,7957,7960,7965,7968,8005,8008,8013,8016,8023,8025,8025,8027,8027,8029,8029,8031,8061,8064,8116,8118,8124,8126,8126,8130,8132,8134,8140,8144,8147,8150,8155,8160,8172,8178,8180,8182,8188,8255,8256,8319,8319,8400,8412,8417,8417,8450,8450,8455,8455,8458,8467,8469,8469,8473,8477,8484,8484,8486,8486,8488,8488,8490,8493,8495,8497,8499,8505,8544,8579,12293,12295,12321,12335,12337,12341,12344,12346,12353,12436,12441,12442,12445,12446,12449,12542,12549,12588,12593,12686,12704,12727,13312,19893,19968,40869,40960,42124,44032,55203,63744,64045,64256,64262,64275,64279,64285,64296,64298,64310,64312,64316,64318,64318,64320,64321,64323,64324,64326,64433,64467,64829,64848,64911,64914,64967,65008,65019,65056,65059,65075,65076,65101,65103,65136,65138,65140,65140,65142,65276,65296,65305,65313,65338,65343,65343,65345,65370,65381,65470,65474,65479,65482,65487,65490,65495,65498,65500],nt=function(){return function(t){this.label=t,this.opcodes=[]}}();function rt(t){var e,n=new Q,i=null,a=[],o=[],s=null,u=!1,l=null,c=!1,h=0,f={},p=[new nt("")],d={DEFAULT:0},v=[],g=null,m=[],k={es3UnicodeIDStart:function(){return E(tt)},es3UnicodeIDPart:function(){return E(et)},es5UnicodeIDStart:function(){return E(J)},es5UnicodeIDPart:function(){return E(Z)}};return{prepareVar:function(e){var n=f[e.val];void 0!==n&&(i='variable "'+e.val+'" was already defined',a=n.pos,o=e,t.requireLines(function(t,e){var n=i+" "+X(o,e)+r;n+="previous defination was at "+X(a,e),t.err(new A(n))}));var i,a,o;n=f[e.val]={pos:e,cmds:new nt(e.val)},g=n.cmds},endVar:function(){g=null},prepareLex:function(){v.length=0},selectState:function(t){var n=d[t];void 0===n&&(n=d[t]=p.length,p.push(new nt("")),e.signal(t,n));v.push(p[d[t]])},newState:function(){c=!0,l=null,b(function(){i=new Q,n.epsilonTo(i)})},end:function(t,e,n){void 0===n&&(n="(untitled)");for(var r=0,a=v;r<a.length;r++){var o=a[r];o.label="<"+n+">"}b(function(){var n=new z;n.id=n.priority=h++,n.data=t,n.least=e,i.endAction=n})},enterUnion:function(){b(function(){var t=new Q;i.epsilonTo(t),i=new Q,t.epsilonTo(i),a.push({head:t,tail:new Q})})},endUnionItem:function(){b(function(){var t=a[a.length-1];i.epsilonTo(t.tail),i=new Q,t.head.epsilonTo(i)})},leaveUnion:function(){b(function(){i=a.pop().tail})},enterSimple:function(){b(function(){o.push(i)})},simplePostfix:function(t){""===t||(l=null,c=!1),b(function(){var e=o.pop();"?"===t?e.epsilonTo(i):"+"===t?i.epsilonTo(e):"*"===t&&(i.epsilonTo(e),i=e)})},addString:function(t){c?(l=t,c=!1):l=null;b(function(){for(var e=0;e<t.length;e++){var n=new Q;i.to(n).chars.add(t.charCodeAt(e)),i=n}})},addVar:function(t){c=!1,l=null,b(function(){var e=f[t.val];if(void 0!==e){for(var n=e.cmds,r=0;r<m.length;r++){var i=m[r];if(i.cmds===n){var a="circular dependence in lexical variable detected: "+n.label;for(r++;r<m.length;r++)a+=" -> "+m[r].cmds.label;return void y(a+=" -> "+n.label,t)}}m.push({pc:0,cmds:n})}else y('use of undefined variable "'+t.val+'"',t)})},beginSet:S,addSetItem:function(t,e){if(1!==t.val.length)return void y('character expected in union, got "'+t.val+'"',t);if(t!==e&&1!==e.val.length)return void y('character expected in union, got "'+e.val+'"',e);if(t.val.charCodeAt(0)>e.val.charCodeAt(0))return void y("left hand side must be larger than right hand side in wild card character (got '"+t.val+"' > '"+e.val+"')",e);T(t.val.charCodeAt(0),e.val.charCodeAt(0))},addSetItemRaw:T,endSet:w,build:function(){for(var t=[],n=0,r=p;n<r.length;n++){var i=r[n];t.push(x(i))}return e.fail(),t},importVar:function(t){var e=k[t.val];if(void 0===e)return void y('import variable "'+t.val+'" does not exist',t);e()},getPossibleAlias:function(){return l},requiringState:e=new W(function(t){return d[t]})};function b(t){if(null!==g)g.opcodes.push(t);else for(var e=0,n=v;e<n.length;e++){n[e].opcodes.push(t)}}function x(t){for((n=i=new Q).isStart=!0,a.length=0,o.length=0,s=null,u=!1,m.length=0,m.push({pc:0,cmds:t});m.length>0;){var e=m[m.length-1];e.cmds.opcodes[e.pc++](),(e=m[m.length-1]).pc>=e.cmds.opcodes.length&&m.pop()}n.removeEpsilons();var r=n.toDFA();return new $(r.states)}function y(e,n){t.requireLines(function(t,r){t.err(new A(e+" "+X(n,r),"Compilation error"))})}function S(t){c=!1,l=null,b(function(){u=t;var e=new Q;s=i.to(e),i=e,t&&s.chars.addAll()})}function T(t,e){b(function(){u?s.chars.remove(t,e):s.chars.add(t,e)})}function w(){b(function(){s=null})}function E(t){if(t.length%2!=0)throw new Error("invalid character set array");S(!1);for(var e=0,n=t;e<n.length;e+=2)T(n[e],n[e+1]);w()}}function it(t){return function(e){e.pushLexState(t)}}var at,ot=function(){function t(){this.token=null,this.actions=[]}return t.prototype.toCode=function(t){for(var e=0,n=this.actions;e<n.length;e++){var r=n[e];null!==r&&r(t)}},t.prototype.returnToken=function(t){this.token=t},t.prototype.raw=function(t){this.actions.push(function(e){return e.raw(t)})},t.prototype.pushState=function(t){this.actions.push(it(t))},t.prototype.placeHolder=function(){var t=this.actions.length;return this.actions.push(null),t},t.prototype.set=function(t,e){this.actions[t]=e},t.prototype.popState=function(){this.actions.push(function(t){return t.popLexState()})},t.prototype.beginBlock=function(t){this.actions.push(function(e){return e.beginBlock(t)})},t.prototype.setImg=function(t){this.actions.push(function(e){return e.setImg(t)})},t.prototype.endBlock=function(t){this.actions.push(function(e){return e.endBlock(t)})},t.prototype.lhs=function(){this.actions.push(function(t){return t.lhs()})},t.prototype.tokenObj=function(){this.actions.push(function(t){return t.tokenObj()})},t.prototype.matched=function(){this.actions.push(function(t){return t.matched()})},t}();(st=at||(at={}))[st.TOKEN=0]="TOKEN",st[st.STRING=1]="STRING",st[st.NAME=2]="NAME";var st;function ut(t){return{val:t.val,ext:null,startLine:t.startLine,startColumn:t.startColumn,endLine:t.endLine,endColumn:t.endColumn}}function lt(t){return{val:null,ext:null,startLine:t.startLine,startColumn:t.startColumn,endLine:t.endLine,endColumn:t.endColumn}}var ct={n:"\n",f:"\f",b:"\b",r:"\r",t:"\t","\\":"\\",'"':'"',"'":"'"};function ht(t){for(var e="",n=0;n<t.length;){var r=t.charAt(n);if("\\"===r){if(r=t.charAt(++n),ct[r])e+=ct[r],n++;else if("u"===r||"x"===r||"U"===r||"X"===r){r=t.charAt(++n);for(var i="";/[0-9a-fA-F]/.test(r);)i+=r,r=t.charAt(++n);e+=String.fromCharCode(parseInt(i,16))}}else e+=r,n++}return e}var ft="\n".charCodeAt(0),pt=[{pnext:[70,70,70,70,70,70,70,70,70,70,71,70,70,70,72,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,71,70,70,70,72,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,71,70,70,70,91,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,92,92,92,92,92,92,92,92,92,92,92,92,92,92,93,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,70,70,70,70,70,70,70,70,70,70,71,70,70,70,91,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,71,70,70,70,72,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,46,46,131,46,46,46,46,47,46,46,46,46,46,46,46,110,46,46,46,46,46,46,110,46,46,48,46,46,46,110,110,110,110,110,110,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,27,27,130,28,27,27,27,27,27,27,27,27,27,27,27,95,27,27,27,27,27,27,95,27,27,29,27,27,27,95,95,95,95,95,95,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,46,46,129,46,46,46,46,47,46,46,46,46,46,46,46,110,46,46,46,46,46,46,110,46,46,48,46,46,46,110,110,110,110,110,110,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,27,27,128,28,27,27,27,27,27,27,27,27,27,27,27,95,27,27,27,27,27,27,95,27,27,29,27,27,27,95,95,95,95,95,95,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,46,46,127,46,46,46,46,47,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,48,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,27,27,126,28,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,29,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,30,30,125,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,46,46,124,46,46,46,46,47,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,48,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,30,30,123,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,27,27,122,28,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,29,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,46,46,121,46,46,46,46,47,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,48,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,30,30,120,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,27,27,119,28,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,29,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,1,1,2,3,4,5,6,7,8,9,10,11,12,13,118,14,15,16,17,18,19,4,4,20,117,21,22,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,23,24,25,26,31,79,65,61,57,58,80,62,54,66,32,49,1,1,116,50,55,31,31,115,81,114,113,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,112,111,33,34,109,108,107,106,105,32,104,103,102,101,100,99,31,31,98,97,96,94,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,89,88,33,34,87,86,85,84,83,32,82,78,77,76,75,74,31,31,67,64,63,60,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,59,56,33,34,51,-1,-1,-1,-1,32,-1,-1,-1,-1,-1,-1,31,31,-1,-1,-1,-1,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-1,-1,33,34,-1,-1,-1,-1,-1,32,-1,-1,-1,-1,-1,-1,31,31,-1,-1,-1,-1,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-1,-1,33,34,-1,-1,-1,-1,-1,32,-1,-1,-1,-1,-1,-1,31,31,-1,-1,-1,-1,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,90,68,-1,33,34,68,-1,90,-1,52,-1,-1,-1,52,90,90,90,90,90,90,-1,69,-1,68,-1,-1,-1,-1,68,53,35,52,68,-1,-1,-1,52,-1,-1,68,52,-1,68,-1,68,69,69,52,-1,-1,52,-1,52,53,53,-1,-1,36,-1,-1,37,38,73,39,-1,40,41,42,43,73,44,45,-1,-1,-1,-1,73,73,73,73,73,73],disnext:[1044,1109,990,935,1318,1392,880,-55,-55,-55,-55,-55,-55,1099,-55,-55,-55,1218,-55,-55,-55,-55,-55,-55,-55,-55,1273,825,-55,1374,770,1228,1183,1138,1093,-55,1066,1202,1062,1201,1168,1058,1165,1171,1058,1162,715,-55,1366,275,660,-55,605,1415,1161,1157,1173,1158,1163,1070,1158,1151,1150,1162,1159,1155,1147,1156,550,1353,220,165,1151,495,1118,1119,1130,1117,1112,1112,1110,-55,1126,1117,1109,1120,1114,1116,1115,-55,440,110,55,-55,0,385,1096,1115,1087,1075,-55,1071,-55,1067,1027,1012,-55,946,896,-55,330,-55,854,783,726,-55,672,621,561,-55,-55,523,-55,-55,455,-55,-55,398,356,297,-55,-55],checknext:[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,110,110,129,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,95,95,128,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,90,90,127,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,73,73,124,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,68,68,121,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,52,52,118,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,50,50,117,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,46,46,116,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,30,30,114,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,27,27,113,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,6,6,112,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,3,3,108,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,107,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,105,0,0,0,0,0,0,0,0,0,104,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,59,44,41,38,38,59,41,36,44,34,13,1,1,103,13,36,34,34,101,59,99,98,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,33,97,96,34,34,88,87,86,85,84,33,83,82,80,79,78,77,33,33,76,75,74,72,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,32,67,66,33,33,65,64,63,62,61,32,60,58,57,56,55,54,32,32,45,43,42,40,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,31,39,37,32,32,17,-1,-1,-1,-1,31,-1,-1,-1,-1,-1,-1,31,31,-1,-1,-1,-1,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,26,-1,-1,31,31,-1,-1,-1,-1,-1,26,-1,-1,-1,-1,-1,-1,26,26,-1,-1,-1,-1,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,4,-1,-1,26,26,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,4,4,-1,-1,-1,-1,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,69,48,-1,4,4,48,-1,69,-1,29,-1,-1,-1,29,69,69,69,69,69,69,-1,48,-1,48,-1,-1,-1,-1,48,29,5,29,48,-1,-1,-1,29,-1,-1,48,29,-1,48,-1,48,48,48,29,-1,-1,29,-1,29,29,29,-1,-1,5,-1,-1,5,5,53,5,-1,5,5,5,5,53,5,5,-1,-1,-1,-1,53,53,53,53,53,53],maxAsicii:255,classTable:[0,0,0,0,0,0,0,0,0,1,2,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,3,4,5,6,0,7,8,9,10,11,12,13,0,14,15,15,15,15,15,15,15,15,15,15,16,17,18,19,20,21,0,22,22,22,22,22,22,5,5,5,5,5,5,5,5,5,5,5,5,5,5,23,5,5,23,5,5,24,25,26,27,28,0,29,30,31,32,33,34,35,36,37,5,38,39,40,41,42,43,5,44,45,46,47,5,5,48,49,5,50,51,52,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,53,0,0,0,0,0,0,0,0,0,0,53,0,0,0,0,53,0,0,0,0,0,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,0,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,0,53,53,53,53,53,53,53,53],unicodeClassTable:[53,256,705,0,706,709,53,710,721,0,722,735,53,736,740,0,741,747,53,748,748,0,749,749,53,750,750,0,751,767,54,768,879,53,880,884,0,885,885,53,886,887,0,888,889,53,890,893,0,894,901,53,902,902,0,903,903,53,904,906,0,907,907,53,908,908,0,909,909,53,910,929,0,930,930,53,931,1013,0,1014,1014,53,1015,1153,0,1154,1154,54,1155,1159,0,1160,1161,53,1162,1319,0,1320,1328,53,1329,1366,0,1367,1368,53,1369,1369,0,1370,1376,53,1377,1415,0,1416,1424,54,1425,1469,0,1470,1470,54,1471,1471,0,1472,1472,54,1473,1474,0,1475,1475,54,1476,1477,0,1478,1478,54,1479,1479,0,1480,1487,53,1488,1514,0,1515,1519,53,1520,1522,0,1523,1551,54,1552,1562,0,1563,1567,53,1568,1610,54,1611,1641,0,1642,1645,53,1646,1647,54,1648,1648,53,1649,1747,0,1748,1748,53,1749,1749,54,1750,1756,0,1757,1758,54,1759,1764,53,1765,1766,54,1767,1768,0,1769,1769,54,1770,1773,53,1774,1775,54,1776,1785,53,1786,1788,0,1789,1790,53,1791,1791,0,1792,1807,53,1808,1808,54,1809,1809,53,1810,1839,54,1840,1866,0,1867,1868,53,1869,1957,54,1958,1968,53,1969,1969,0,1970,1983,54,1984,1993,53,1994,2026,54,2027,2035,53,2036,2037,0,2038,2041,53,2042,2042,0,2043,2047,53,2048,2069,54,2070,2073,53,2074,2074,54,2075,2083,53,2084,2084,54,2085,2087,53,2088,2088,54,2089,2093,0,2094,2111,53,2112,2136,54,2137,2139,0,2140,2207,53,2208,2208,0,2209,2209,53,2210,2220,0,2221,2275,54,2276,2302,0,2303,2303,54,2304,2307,53,2308,2361,54,2362,2364,53,2365,2365,54,2366,2383,53,2384,2384,54,2385,2391,53,2392,2401,54,2402,2403,0,2404,2405,54,2406,2415,0,2416,2416,53,2417,2423,0,2424,2424,53,2425,2431,0,2432,2432,54,2433,2435,0,2436,2436,53,2437,2444,0,2445,2446,53,2447,2448,0,2449,2450,53,2451,2472,0,2473,2473,53,2474,2480,0,2481,2481,53,2482,2482,0,2483,2485,53,2486,2489,0,2490,2491,54,2492,2492,53,2493,2493,54,2494,2500,0,2501,2502,54,2503,2504,0,2505,2506,54,2507,2509,53,2510,2510,0,2511,2518,54,2519,2519,0,2520,2523,53,2524,2525,0,2526,2526,53,2527,2529,54,2530,2531,0,2532,2533,54,2534,2543,53,2544,2545,0,2546,2560,54,2561,2563,0,2564,2564,53,2565,2570,0,2571,2574,53,2575,2576,0,2577,2578,53,2579,2600,0,2601,2601,53,2602,2608,0,2609,2609,53,2610,2611,0,2612,2612,53,2613,2614,0,2615,2615,53,2616,2617,0,2618,2619,54,2620,2620,0,2621,2621,54,2622,2626,0,2627,2630,54,2631,2632,0,2633,2634,54,2635,2637,0,2638,2640,54,2641,2641,0,2642,2648,53,2649,2652,0,2653,2653,53,2654,2654,0,2655,2661,54,2662,2673,53,2674,2676,54,2677,2677,0,2678,2688,54,2689,2691,0,2692,2692,53,2693,2701,0,2702,2702,53,2703,2705,0,2706,2706,53,2707,2728,0,2729,2729,53,2730,2736,0,2737,2737,53,2738,2739,0,2740,2740,53,2741,2745,0,2746,2747,54,2748,2748,53,2749,2749,54,2750,2757,0,2758,2758,54,2759,2761,0,2762,2762,54,2763,2765,0,2766,2767,53,2768,2768,0,2769,2783,53,2784,2785,54,2786,2787,0,2788,2789,54,2790,2799,0,2800,2816,54,2817,2819,0,2820,2820,53,2821,2828,0,2829,2830,53,2831,2832,0,2833,2834,53,2835,2856,0,2857,2857,53,2858,2864,0,2865,2865,53,2866,2867,0,2868,2868,53,2869,2873,0,2874,2875,54,2876,2876,53,2877,2877,54,2878,2884,0,2885,2886,54,2887,2888,0,2889,2890,54,2891,2893,0,2894,2901,54,2902,2903,0,2904,2907,53,2908,2909,0,2910,2910,53,2911,2913,54,2914,2915,0,2916,2917,54,2918,2927,0,2928,2928,53,2929,2929,0,2930,2945,54,2946,2946,53,2947,2947,0,2948,2948,53,2949,2954,0,2955,2957,53,2958,2960,0,2961,2961,53,2962,2965,0,2966,2968,53,2969,2970,0,2971,2971,53,2972,2972,0,2973,2973,53,2974,2975,0,2976,2978,53,2979,2980,0,2981,2983,53,2984,2986,0,2987,2989,53,2990,3001,0,3002,3005,54,3006,3010,0,3011,3013,54,3014,3016,0,3017,3017,54,3018,3021,0,3022,3023,53,3024,3024,0,3025,3030,54,3031,3031,0,3032,3045,54,3046,3055,0,3056,3072,54,3073,3075,0,3076,3076,53,3077,3084,0,3085,3085,53,3086,3088,0,3089,3089,53,3090,3112,0,3113,3113,53,3114,3123,0,3124,3124,53,3125,3129,0,3130,3132,53,3133,3133,54,3134,3140,0,3141,3141,54,3142,3144,0,3145,3145,54,3146,3149,0,3150,3156,54,3157,3158,0,3159,3159,53,3160,3161,0,3162,3167,53,3168,3169,54,3170,3171,0,3172,3173,54,3174,3183,0,3184,3201,54,3202,3203,0,3204,3204,53,3205,3212,0,3213,3213,53,3214,3216,0,3217,3217,53,3218,3240,0,3241,3241,53,3242,3251,0,3252,3252,53,3253,3257,0,3258,3259,54,3260,3260,53,3261,3261,54,3262,3268,0,3269,3269,54,3270,3272,0,3273,3273,54,3274,3277,0,3278,3284,54,3285,3286,0,3287,3293,53,3294,3294,0,3295,3295,53,3296,3297,54,3298,3299,0,3300,3301,54,3302,3311,0,3312,3312,53,3313,3314,0,3315,3329,54,3330,3331,0,3332,3332,53,3333,3340,0,3341,3341,53,3342,3344,0,3345,3345,53,3346,3386,0,3387,3388,53,3389,3389,54,3390,3396,0,3397,3397,54,3398,3400,0,3401,3401,54,3402,3405,53,3406,3406,0,3407,3414,54,3415,3415,0,3416,3423,53,3424,3425,54,3426,3427,0,3428,3429,54,3430,3439,0,3440,3449,53,3450,3455,0,3456,3457,54,3458,3459,0,3460,3460,53,3461,3478,0,3479,3481,53,3482,3505,0,3506,3506,53,3507,3515,0,3516,3516,53,3517,3517,0,3518,3519,53,3520,3526,0,3527,3529,54,3530,3530,0,3531,3534,54,3535,3540,0,3541,3541,54,3542,3542,0,3543,3543,54,3544,3551,0,3552,3569,54,3570,3571,0,3572,3584,53,3585,3632,54,3633,3633,53,3634,3635,54,3636,3642,0,3643,3647,53,3648,3654,54,3655,3662,0,3663,3663,54,3664,3673,0,3674,3712,53,3713,3714,0,3715,3715,53,3716,3716,0,3717,3718,53,3719,3720,0,3721,3721,53,3722,3722,0,3723,3724,53,3725,3725,0,3726,3731,53,3732,3735,0,3736,3736,53,3737,3743,0,3744,3744,53,3745,3747,0,3748,3748,53,3749,3749,0,3750,3750,53,3751,3751,0,3752,3753,53,3754,3755,0,3756,3756,53,3757,3760,54,3761,3761,53,3762,3763,54,3764,3769,0,3770,3770,54,3771,3772,53,3773,3773,0,3774,3775,53,3776,3780,0,3781,3781,53,3782,3782,0,3783,3783,54,3784,3789,0,3790,3791,54,3792,3801,0,3802,3803,53,3804,3807,0,3808,3839,53,3840,3840,0,3841,3863,54,3864,3865,0,3866,3871,54,3872,3881,0,3882,3892,54,3893,3893,0,3894,3894,54,3895,3895,0,3896,3896,54,3897,3897,0,3898,3901,54,3902,3903,53,3904,3911,0,3912,3912,53,3913,3948,0,3949,3952,54,3953,3972,0,3973,3973,54,3974,3975,53,3976,3980,54,3981,3991,0,3992,3992,54,3993,4028,0,4029,4037,54,4038,4038,0,4039,4095,53,4096,4138,54,4139,4158,53,4159,4159,54,4160,4169,0,4170,4175,53,4176,4181,54,4182,4185,53,4186,4189,54,4190,4192,53,4193,4193,54,4194,4196,53,4197,4198,54,4199,4205,53,4206,4208,54,4209,4212,53,4213,4225,54,4226,4237,53,4238,4238,54,4239,4253,0,4254,4255,53,4256,4293,0,4294,4294,53,4295,4295,0,4296,4300,53,4301,4301,0,4302,4303,53,4304,4346,0,4347,4347,53,4348,4680,0,4681,4681,53,4682,4685,0,4686,4687,53,4688,4694,0,4695,4695,53,4696,4696,0,4697,4697,53,4698,4701,0,4702,4703,53,4704,4744,0,4745,4745,53,4746,4749,0,4750,4751,53,4752,4784,0,4785,4785,53,4786,4789,0,4790,4791,53,4792,4798,0,4799,4799,53,4800,4800,0,4801,4801,53,4802,4805,0,4806,4807,53,4808,4822,0,4823,4823,53,4824,4880,0,4881,4881,53,4882,4885,0,4886,4887,53,4888,4954,0,4955,4956,54,4957,4959,0,4960,4991,53,4992,5007,0,5008,5023,53,5024,5108,0,5109,5120,53,5121,5740,0,5741,5742,53,5743,5759,0,5760,5760,53,5761,5786,0,5787,5791,53,5792,5866,0,5867,5869,53,5870,5872,0,5873,5887,53,5888,5900,0,5901,5901,53,5902,5905,54,5906,5908,0,5909,5919,53,5920,5937,54,5938,5940,0,5941,5951,53,5952,5969,54,5970,5971,0,5972,5983,53,5984,5996,0,5997,5997,53,5998,6e3,0,6001,6001,54,6002,6003,0,6004,6015,53,6016,6067,54,6068,6099,0,6100,6102,53,6103,6103,0,6104,6107,53,6108,6108,54,6109,6109,0,6110,6111,54,6112,6121,0,6122,6154,54,6155,6157,0,6158,6159,54,6160,6169,0,6170,6175,53,6176,6263,0,6264,6271,53,6272,6312,54,6313,6313,53,6314,6314,0,6315,6319,53,6320,6389,0,6390,6399,53,6400,6428,0,6429,6431,54,6432,6443,0,6444,6447,54,6448,6459,0,6460,6469,54,6470,6479,53,6480,6509,0,6510,6511,53,6512,6516,0,6517,6527,53,6528,6571,0,6572,6575,54,6576,6592,53,6593,6599,54,6600,6601,0,6602,6607,54,6608,6617,0,6618,6655,53,6656,6678,54,6679,6683,0,6684,6687,53,6688,6740,54,6741,6750,0,6751,6751,54,6752,6780,0,6781,6782,54,6783,6793,0,6794,6799,54,6800,6809,0,6810,6822,53,6823,6823,0,6824,6911,54,6912,6916,53,6917,6963,54,6964,6980,53,6981,6987,0,6988,6991,54,6992,7001,0,7002,7018,54,7019,7027,0,7028,7039,54,7040,7042,53,7043,7072,54,7073,7085,53,7086,7087,54,7088,7097,53,7098,7141,54,7142,7155,0,7156,7167,53,7168,7203,54,7204,7223,0,7224,7231,54,7232,7241,0,7242,7244,53,7245,7247,54,7248,7257,53,7258,7293,0,7294,7375,54,7376,7378,0,7379,7379,54,7380,7400,53,7401,7404,54,7405,7405,53,7406,7409,54,7410,7412,53,7413,7414,0,7415,7423,53,7424,7615,54,7616,7654,0,7655,7675,54,7676,7679,53,7680,7957,0,7958,7959,53,7960,7965,0,7966,7967,53,7968,8005,0,8006,8007,53,8008,8013,0,8014,8015,53,8016,8023,0,8024,8024,53,8025,8025,0,8026,8026,53,8027,8027,0,8028,8028,53,8029,8029,0,8030,8030,53,8031,8061,0,8062,8063,53,8064,8116,0,8117,8117,53,8118,8124,0,8125,8125,53,8126,8126,0,8127,8129,53,8130,8132,0,8133,8133,53,8134,8140,0,8141,8143,53,8144,8147,0,8148,8149,53,8150,8155,0,8156,8159,53,8160,8172,0,8173,8177,53,8178,8180,0,8181,8181,53,8182,8188,0,8189,8203,54,8204,8205,0,8206,8254,54,8255,8256,0,8257,8275,54,8276,8276,0,8277,8304,53,8305,8305,0,8306,8318,53,8319,8319,0,8320,8335,53,8336,8348,0,8349,8399,54,8400,8412,0,8413,8416,54,8417,8417,0,8418,8420,54,8421,8432,0,8433,8449,53,8450,8450,0,8451,8454,53,8455,8455,0,8456,8457,53,8458,8467,0,8468,8468,53,8469,8469,0,8470,8472,53,8473,8477,0,8478,8483,53,8484,8484,0,8485,8485,53,8486,8486,0,8487,8487,53,8488,8488,0,8489,8489,53,8490,8493,0,8494,8494,53,8495,8505,0,8506,8507,53,8508,8511,0,8512,8516,53,8517,8521,0,8522,8525,53,8526,8526,0,8527,8543,53,8544,8584,0,8585,11263,53,11264,11310,0,11311,11311,53,11312,11358,0,11359,11359,53,11360,11492,0,11493,11498,53,11499,11502,54,11503,11505,53,11506,11507,0,11508,11519,53,11520,11557,0,11558,11558,53,11559,11559,0,11560,11564,53,11565,11565,0,11566,11567,53,11568,11623,0,11624,11630,53,11631,11631,0,11632,11646,54,11647,11647,53,11648,11670,0,11671,11679,53,11680,11686,0,11687,11687,53,11688,11694,0,11695,11695,53,11696,11702,0,11703,11703,53,11704,11710,0,11711,11711,53,11712,11718,0,11719,11719,53,11720,11726,0,11727,11727,53,11728,11734,0,11735,11735,53,11736,11742,0,11743,11743,54,11744,11775,0,11776,11822,53,11823,11823,0,11824,12292,53,12293,12295,0,12296,12320,53,12321,12329,54,12330,12335,0,12336,12336,53,12337,12341,0,12342,12343,53,12344,12348,0,12349,12352,53,12353,12438,0,12439,12440,54,12441,12442,0,12443,12444,53,12445,12447,0,12448,12448,53,12449,12538,0,12539,12539,53,12540,12543,0,12544,12548,53,12549,12589,0,12590,12592,53,12593,12686,0,12687,12703,53,12704,12730,0,12731,12783,53,12784,12799,0,12800,13311,53,13312,19893,0,19894,19967,53,19968,40908,0,40909,40959,53,40960,42124,0,42125,42191,53,42192,42237,0,42238,42239,53,42240,42508,0,42509,42511,53,42512,42527,54,42528,42537,53,42538,42539,0,42540,42559,53,42560,42606,54,42607,42607,0,42608,42611,54,42612,42621,0,42622,42622,53,42623,42647,0,42648,42654,54,42655,42655,53,42656,42735,54,42736,42737,0,42738,42774,53,42775,42783,0,42784,42785,53,42786,42888,0,42889,42890,53,42891,42894,0,42895,42895,53,42896,42899,0,42900,42911,53,42912,42922,0,42923,42999,53,43e3,43009,54,43010,43010,53,43011,43013,54,43014,43014,53,43015,43018,54,43019,43019,53,43020,43042,54,43043,43047,0,43048,43071,53,43072,43123,0,43124,43135,54,43136,43137,53,43138,43187,54,43188,43204,0,43205,43215,54,43216,43225,0,43226,43231,54,43232,43249,53,43250,43255,0,43256,43258,53,43259,43259,0,43260,43263,54,43264,43273,53,43274,43301,54,43302,43309,0,43310,43311,53,43312,43334,54,43335,43347,0,43348,43359,53,43360,43388,0,43389,43391,54,43392,43395,53,43396,43442,54,43443,43456,0,43457,43470,53,43471,43471,54,43472,43481,0,43482,43519,53,43520,43560,54,43561,43574,0,43575,43583,53,43584,43586,54,43587,43587,53,43588,43595,54,43596,43597,0,43598,43599,54,43600,43609,0,43610,43615,53,43616,43638,0,43639,43641,53,43642,43642,54,43643,43643,0,43644,43647,53,43648,43695,54,43696,43696,53,43697,43697,54,43698,43700,53,43701,43702,54,43703,43704,53,43705,43709,54,43710,43711,53,43712,43712,54,43713,43713,53,43714,43714,0,43715,43738,53,43739,43741,0,43742,43743,53,43744,43754,54,43755,43759,0,43760,43761,53,43762,43764,54,43765,43766,0,43767,43776,53,43777,43782,0,43783,43784,53,43785,43790,0,43791,43792,53,43793,43798,0,43799,43807,53,43808,43814,0,43815,43815,53,43816,43822,0,43823,43967,53,43968,44002,54,44003,44010,0,44011,44011,54,44012,44013,0,44014,44015,54,44016,44025,0,44026,44031,53,44032,55203,0,55204,55215,53,55216,55238,0,55239,55242,53,55243,55291,0,55292,63743,53,63744,64109,0,64110,64111,53,64112,64217,0,64218,64255,53,64256,64262,0,64263,64274,53,64275,64279,0,64280,64284,53,64285,64285,54,64286,64286,53,64287,64296,0,64297,64297,53,64298,64310,0,64311,64311,53,64312,64316,0,64317,64317,53,64318,64318,0,64319,64319,53,64320,64321,0,64322,64322,53,64323,64324,0,64325,64325,53,64326,64433,0,64434,64466,53,64467,64829,0,64830,64847,53,64848,64911,0,64912,64913,53,64914,64967,0,64968,65007,53,65008,65019,0,65020,65023,54,65024,65039,0,65040,65055,54,65056,65062,0,65063,65074,54,65075,65076,0,65077,65100,54,65101,65103,0,65104,65135,53,65136,65140,0,65141,65141,53,65142,65276,0,65277,65295,54,65296,65305,0,65306,65312,53,65313,65338,0,65339,65342,54,65343,65343,0,65344,65344,53,65345,65370,0,65371,65381,53,65382,65470,0,65471,65473,53,65474,65479,0,65480,65481,53,65482,65487,0,65488,65489,53,65490,65495,0,65496,65497,53,65498,65500,0,65501,1/0],isEnd:[0,1,0,1,1,0,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,1,0,1,0,0,0,1,0,0,1,0,1,0,0,0,1,0,0,0,1,1,0,1,1,0,1,1,0,0,0,1,1],hasArc:[1,1,1,1,1,1,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,0,1,0,1,1,1,0,1,1,0,1,0,1,1,1,0,1,1,1,0,0,1,0,0,1,0,0,1,1,1,0,0]},{pnext:[6,6,7,7,1,2,3,4,1,5,6,6,1,5],disnext:[4,12,0,-4,-4,10,8,-4],checknext:[2,2,2,2,0,0,0,0,6,6,5,5,1,1],maxAsicii:255,classTable:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],unicodeClassTable:[0,256,1/0],isEnd:[0,1,0,1,1,0,1,1],hasArc:[1,1,1,0,0,1,1,0]},{pnext:[13,14,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,14,14,13,13,1,2,1,1,1,1,3,1,1,1,1,1,1,1,1,1,1,1,4,5,1,1,7,32,37,7,38,39,9,39,39,39,39,39,39,39,39,39,39,39,-1,-1,40,41,7,32,37,7,38,39,9,39,39,39,39,39,39,39,39,39,39,39,-1,-1,40,41,7,32,37,7,38,39,9,39,39,39,39,39,39,39,39,39,39,39,-1,-1,40,41,7,32,37,7,38,39,9,39,39,39,39,39,39,39,39,39,39,39,-1,-1,40,41,7,32,37,7,38,39,9,39,39,39,39,39,39,39,39,39,39,39,-1,-1,40,41,7,32,37,7,38,39,9,39,39,39,39,39,39,39,39,39,39,39,-1,-1,40,41,7,28,7,7,7,29,9,29,29,29,29,29,29,29,29,29,29,29,-1,-1,30,7,7,8,7,7,7,7,9,7,7,7,10,7,7,7,11,7,7,12,-1,-1,7,7,7,-1,7,7,7,7,9,7,7,42,7,7,7,7,7,7,7,7,-1,-1,7,7,7,-1,7,7,7,7,9,7,7,7,31,7,7,7,7,7,7,7,-1,-1,7,7,7,-1,7,7,7,7,9,7,7,7,7,7,7,7,7,27,7,7,-1,-1,7,7,7,-1,7,7,7,7,9,7,7,7,7,26,7,7,7,7,7,7,-1,-1,7,7,7,-1,7,25,7,7,9,7,7,7,7,7,7,7,7,7,7,7,-1,-1,7,7,7,-1,7,7,7,7,9,7,7,7,24,7,7,7,7,7,7,7,-1,-1,7,7,7,-1,7,7,7,7,9,7,23,7,7,7,7,7,7,7,7,7,-1,-1,7,7,7,-1,7,7,7,7,9,7,7,7,7,7,7,7,7,7,7,22,-1,-1,7,7,7,-1,7,7,7,7,9,7,7,7,7,7,7,21,7,7,7,7,-1,-1,7,7,7,-1,7,7,7,7,9,7,7,7,7,7,7,7,7,7,7,20,-1,-1,7,7,7,-1,7,7,7,7,9,7,7,7,7,7,19,7,7,7,7,7,-1,-1,7,7,7,-1,7,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,-1,-1,7,7,1,-1,1,1,1,1,6,1,1,1,1,1,1,1,1,1,1,1,-1,-1,1,1,7,-1,7,7,7,7,9,7,7,7,7,7,7,7,7,7,18,7,-1,-1,7,7,7,-1,7,7,7,7,9,17,7,7,7,7,7,7,7,7,7,7,-1,-1,7,7,7,-1,7,7,7,7,9,7,7,7,7,7,7,7,16,7,7,7,-1,-1,7,7,15,-1,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-1,-1,15,15,7,-1,7,7,7,7,9,7,7,7,7,7,7,7,7,7,7,7,-1,-1,7,7,13,-1,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,-1,-1,13,13,1,-1,1,1,1,1,6,1,1,1,1,1,1,1,1,1,1,1,-1,-1,1,1,32,33,-1,34,32,-1,32,32,32,32,32,32,32,32,32,32,32,-1,-1,35,36,32,33,-1,34,32,-1,32,32,32,32,32,32,32,32,32,32,32,-1,-1,35,36,32,33,-1,34,32,-1,32,32,32,32,32,32,32,32,32,32,32,-1,-1,35,36,32,33,-1,34,32,-1,32,32,32,32,32,32,32,32,32,32,32,-1,-1,35,36,32,33,-1,34,32,-1,32,32,32,32,32,32,32,32,32,32,32,-1,-1,35,36],disnext:[22,638,198,0,-22,-22,616,594,-22,572,550,528,506,484,-22,462,440,418,396,374,352,330,308,286,264,176,242,-22,743,154,132,220,722,701,-22,680,659,110,-22,88,66,44,-22],checknext:[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-1,-1,41,41,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-1,-1,40,40,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-1,-1,39,39,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-1,-1,37,37,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-1,-1,30,30,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-1,-1,29,29,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-1,-1,25,25,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,-1,-1,2,2,31,-1,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-1,-1,31,31,26,-1,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-1,-1,26,26,24,-1,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-1,-1,24,24,23,-1,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-1,-1,23,23,22,-1,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-1,-1,22,22,21,-1,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-1,-1,21,21,20,-1,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-1,-1,20,20,19,-1,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-1,-1,19,19,18,-1,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-1,-1,18,18,17,-1,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-1,-1,17,17,16,-1,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,-1,-1,16,16,15,-1,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-1,-1,15,15,13,-1,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,-1,-1,13,13,12,-1,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,-1,-1,12,12,11,-1,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,-1,-1,11,11,10,-1,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,-1,-1,10,10,9,-1,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,-1,-1,9,9,7,-1,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,-1,-1,7,7,6,-1,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,-1,-1,6,6,1,-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1,-1,1,1,36,36,-1,36,36,-1,36,36,36,36,36,36,36,36,36,36,36,-1,-1,36,36,35,35,-1,35,35,-1,35,35,35,35,35,35,35,35,35,35,35,-1,-1,35,35,33,33,-1,33,33,-1,33,33,33,33,33,33,33,33,33,33,33,-1,-1,33,33,32,32,-1,32,32,-1,32,32,32,32,32,32,32,32,32,32,32,-1,-1,32,32,28,28,-1,28,28,-1,28,28,28,28,28,28,28,28,28,28,28,-1,-1,28,28],maxAsicii:255,classTable:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,0,0,3,0,4,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,6,0,0,5,0,7,5,8,9,10,5,5,11,12,5,13,5,14,15,16,5,5,5,5,17,5,5,5,5,5,5,18,0,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,0,0,0,0,0,0,0,0,0,0,20,0,0,0,0,20,0,0,0,0,0,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,0,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,0,20,20,20,20,20,20,20,20],unicodeClassTable:[20,256,705,0,706,709,20,710,721,0,722,735,20,736,740,0,741,747,20,748,748,0,749,749,20,750,750,0,751,767,21,768,879,20,880,884,0,885,885,20,886,887,0,888,889,20,890,893,0,894,901,20,902,902,0,903,903,20,904,906,0,907,907,20,908,908,0,909,909,20,910,929,0,930,930,20,931,1013,0,1014,1014,20,1015,1153,0,1154,1154,21,1155,1159,0,1160,1161,20,1162,1319,0,1320,1328,20,1329,1366,0,1367,1368,20,1369,1369,0,1370,1376,20,1377,1415,0,1416,1424,21,1425,1469,0,1470,1470,21,1471,1471,0,1472,1472,21,1473,1474,0,1475,1475,21,1476,1477,0,1478,1478,21,1479,1479,0,1480,1487,20,1488,1514,0,1515,1519,20,1520,1522,0,1523,1551,21,1552,1562,0,1563,1567,20,1568,1610,21,1611,1641,0,1642,1645,20,1646,1647,21,1648,1648,20,1649,1747,0,1748,1748,20,1749,1749,21,1750,1756,0,1757,1758,21,1759,1764,20,1765,1766,21,1767,1768,0,1769,1769,21,1770,1773,20,1774,1775,21,1776,1785,20,1786,1788,0,1789,1790,20,1791,1791,0,1792,1807,20,1808,1808,21,1809,1809,20,1810,1839,21,1840,1866,0,1867,1868,20,1869,1957,21,1958,1968,20,1969,1969,0,1970,1983,21,1984,1993,20,1994,2026,21,2027,2035,20,2036,2037,0,2038,2041,20,2042,2042,0,2043,2047,20,2048,2069,21,2070,2073,20,2074,2074,21,2075,2083,20,2084,2084,21,2085,2087,20,2088,2088,21,2089,2093,0,2094,2111,20,2112,2136,21,2137,2139,0,2140,2207,20,2208,2208,0,2209,2209,20,2210,2220,0,2221,2275,21,2276,2302,0,2303,2303,21,2304,2307,20,2308,2361,21,2362,2364,20,2365,2365,21,2366,2383,20,2384,2384,21,2385,2391,20,2392,2401,21,2402,2403,0,2404,2405,21,2406,2415,0,2416,2416,20,2417,2423,0,2424,2424,20,2425,2431,0,2432,2432,21,2433,2435,0,2436,2436,20,2437,2444,0,2445,2446,20,2447,2448,0,2449,2450,20,2451,2472,0,2473,2473,20,2474,2480,0,2481,2481,20,2482,2482,0,2483,2485,20,2486,2489,0,2490,2491,21,2492,2492,20,2493,2493,21,2494,2500,0,2501,2502,21,2503,2504,0,2505,2506,21,2507,2509,20,2510,2510,0,2511,2518,21,2519,2519,0,2520,2523,20,2524,2525,0,2526,2526,20,2527,2529,21,2530,2531,0,2532,2533,21,2534,2543,20,2544,2545,0,2546,2560,21,2561,2563,0,2564,2564,20,2565,2570,0,2571,2574,20,2575,2576,0,2577,2578,20,2579,2600,0,2601,2601,20,2602,2608,0,2609,2609,20,2610,2611,0,2612,2612,20,2613,2614,0,2615,2615,20,2616,2617,0,2618,2619,21,2620,2620,0,2621,2621,21,2622,2626,0,2627,2630,21,2631,2632,0,2633,2634,21,2635,2637,0,2638,2640,21,2641,2641,0,2642,2648,20,2649,2652,0,2653,2653,20,2654,2654,0,2655,2661,21,2662,2673,20,2674,2676,21,2677,2677,0,2678,2688,21,2689,2691,0,2692,2692,20,2693,2701,0,2702,2702,20,2703,2705,0,2706,2706,20,2707,2728,0,2729,2729,20,2730,2736,0,2737,2737,20,2738,2739,0,2740,2740,20,2741,2745,0,2746,2747,21,2748,2748,20,2749,2749,21,2750,2757,0,2758,2758,21,2759,2761,0,2762,2762,21,2763,2765,0,2766,2767,20,2768,2768,0,2769,2783,20,2784,2785,21,2786,2787,0,2788,2789,21,2790,2799,0,2800,2816,21,2817,2819,0,2820,2820,20,2821,2828,0,2829,2830,20,2831,2832,0,2833,2834,20,2835,2856,0,2857,2857,20,2858,2864,0,2865,2865,20,2866,2867,0,2868,2868,20,2869,2873,0,2874,2875,21,2876,2876,20,2877,2877,21,2878,2884,0,2885,2886,21,2887,2888,0,2889,2890,21,2891,2893,0,2894,2901,21,2902,2903,0,2904,2907,20,2908,2909,0,2910,2910,20,2911,2913,21,2914,2915,0,2916,2917,21,2918,2927,0,2928,2928,20,2929,2929,0,2930,2945,21,2946,2946,20,2947,2947,0,2948,2948,20,2949,2954,0,2955,2957,20,2958,2960,0,2961,2961,20,2962,2965,0,2966,2968,20,2969,2970,0,2971,2971,20,2972,2972,0,2973,2973,20,2974,2975,0,2976,2978,20,2979,2980,0,2981,2983,20,2984,2986,0,2987,2989,20,2990,3001,0,3002,3005,21,3006,3010,0,3011,3013,21,3014,3016,0,3017,3017,21,3018,3021,0,3022,3023,20,3024,3024,0,3025,3030,21,3031,3031,0,3032,3045,21,3046,3055,0,3056,3072,21,3073,3075,0,3076,3076,20,3077,3084,0,3085,3085,20,3086,3088,0,3089,3089,20,3090,3112,0,3113,3113,20,3114,3123,0,3124,3124,20,3125,3129,0,3130,3132,20,3133,3133,21,3134,3140,0,3141,3141,21,3142,3144,0,3145,3145,21,3146,3149,0,3150,3156,21,3157,3158,0,3159,3159,20,3160,3161,0,3162,3167,20,3168,3169,21,3170,3171,0,3172,3173,21,3174,3183,0,3184,3201,21,3202,3203,0,3204,3204,20,3205,3212,0,3213,3213,20,3214,3216,0,3217,3217,20,3218,3240,0,3241,3241,20,3242,3251,0,3252,3252,20,3253,3257,0,3258,3259,21,3260,3260,20,3261,3261,21,3262,3268,0,3269,3269,21,3270,3272,0,3273,3273,21,3274,3277,0,3278,3284,21,3285,3286,0,3287,3293,20,3294,3294,0,3295,3295,20,3296,3297,21,3298,3299,0,3300,3301,21,3302,3311,0,3312,3312,20,3313,3314,0,3315,3329,21,3330,3331,0,3332,3332,20,3333,3340,0,3341,3341,20,3342,3344,0,3345,3345,20,3346,3386,0,3387,3388,20,3389,3389,21,3390,3396,0,3397,3397,21,3398,3400,0,3401,3401,21,3402,3405,20,3406,3406,0,3407,3414,21,3415,3415,0,3416,3423,20,3424,3425,21,3426,3427,0,3428,3429,21,3430,3439,0,3440,3449,20,3450,3455,0,3456,3457,21,3458,3459,0,3460,3460,20,3461,3478,0,3479,3481,20,3482,3505,0,3506,3506,20,3507,3515,0,3516,3516,20,3517,3517,0,3518,3519,20,3520,3526,0,3527,3529,21,3530,3530,0,3531,3534,21,3535,3540,0,3541,3541,21,3542,3542,0,3543,3543,21,3544,3551,0,3552,3569,21,3570,3571,0,3572,3584,20,3585,3632,21,3633,3633,20,3634,3635,21,3636,3642,0,3643,3647,20,3648,3654,21,3655,3662,0,3663,3663,21,3664,3673,0,3674,3712,20,3713,3714,0,3715,3715,20,3716,3716,0,3717,3718,20,3719,3720,0,3721,3721,20,3722,3722,0,3723,3724,20,3725,3725,0,3726,3731,20,3732,3735,0,3736,3736,20,3737,3743,0,3744,3744,20,3745,3747,0,3748,3748,20,3749,3749,0,3750,3750,20,3751,3751,0,3752,3753,20,3754,3755,0,3756,3756,20,3757,3760,21,3761,3761,20,3762,3763,21,3764,3769,0,3770,3770,21,3771,3772,20,3773,3773,0,3774,3775,20,3776,3780,0,3781,3781,20,3782,3782,0,3783,3783,21,3784,3789,0,3790,3791,21,3792,3801,0,3802,3803,20,3804,3807,0,3808,3839,20,3840,3840,0,3841,3863,21,3864,3865,0,3866,3871,21,3872,3881,0,3882,3892,21,3893,3893,0,3894,3894,21,3895,3895,0,3896,3896,21,3897,3897,0,3898,3901,21,3902,3903,20,3904,3911,0,3912,3912,20,3913,3948,0,3949,3952,21,3953,3972,0,3973,3973,21,3974,3975,20,3976,3980,21,3981,3991,0,3992,3992,21,3993,4028,0,4029,4037,21,4038,4038,0,4039,4095,20,4096,4138,21,4139,4158,20,4159,4159,21,4160,4169,0,4170,4175,20,4176,4181,21,4182,4185,20,4186,4189,21,4190,4192,20,4193,4193,21,4194,4196,20,4197,4198,21,4199,4205,20,4206,4208,21,4209,4212,20,4213,4225,21,4226,4237,20,4238,4238,21,4239,4253,0,4254,4255,20,4256,4293,0,4294,4294,20,4295,4295,0,4296,4300,20,4301,4301,0,4302,4303,20,4304,4346,0,4347,4347,20,4348,4680,0,4681,4681,20,4682,4685,0,4686,4687,20,4688,4694,0,4695,4695,20,4696,4696,0,4697,4697,20,4698,4701,0,4702,4703,20,4704,4744,0,4745,4745,20,4746,4749,0,4750,4751,20,4752,4784,0,4785,4785,20,4786,4789,0,4790,4791,20,4792,4798,0,4799,4799,20,4800,4800,0,4801,4801,20,4802,4805,0,4806,4807,20,4808,4822,0,4823,4823,20,4824,4880,0,4881,4881,20,4882,4885,0,4886,4887,20,4888,4954,0,4955,4956,21,4957,4959,0,4960,4991,20,4992,5007,0,5008,5023,20,5024,5108,0,5109,5120,20,5121,5740,0,5741,5742,20,5743,5759,0,5760,5760,20,5761,5786,0,5787,5791,20,5792,5866,0,5867,5869,20,5870,5872,0,5873,5887,20,5888,5900,0,5901,5901,20,5902,5905,21,5906,5908,0,5909,5919,20,5920,5937,21,5938,5940,0,5941,5951,20,5952,5969,21,5970,5971,0,5972,5983,20,5984,5996,0,5997,5997,20,5998,6e3,0,6001,6001,21,6002,6003,0,6004,6015,20,6016,6067,21,6068,6099,0,6100,6102,20,6103,6103,0,6104,6107,20,6108,6108,21,6109,6109,0,6110,6111,21,6112,6121,0,6122,6154,21,6155,6157,0,6158,6159,21,6160,6169,0,6170,6175,20,6176,6263,0,6264,6271,20,6272,6312,21,6313,6313,20,6314,6314,0,6315,6319,20,6320,6389,0,6390,6399,20,6400,6428,0,6429,6431,21,6432,6443,0,6444,6447,21,6448,6459,0,6460,6469,21,6470,6479,20,6480,6509,0,6510,6511,20,6512,6516,0,6517,6527,20,6528,6571,0,6572,6575,21,6576,6592,20,6593,6599,21,6600,6601,0,6602,6607,21,6608,6617,0,6618,6655,20,6656,6678,21,6679,6683,0,6684,6687,20,6688,6740,21,6741,6750,0,6751,6751,21,6752,6780,0,6781,6782,21,6783,6793,0,6794,6799,21,6800,6809,0,6810,6822,20,6823,6823,0,6824,6911,21,6912,6916,20,6917,6963,21,6964,6980,20,6981,6987,0,6988,6991,21,6992,7001,0,7002,7018,21,7019,7027,0,7028,7039,21,7040,7042,20,7043,7072,21,7073,7085,20,7086,7087,21,7088,7097,20,7098,7141,21,7142,7155,0,7156,7167,20,7168,7203,21,7204,7223,0,7224,7231,21,7232,7241,0,7242,7244,20,7245,7247,21,7248,7257,20,7258,7293,0,7294,7375,21,7376,7378,0,7379,7379,21,7380,7400,20,7401,7404,21,7405,7405,20,7406,7409,21,7410,7412,20,7413,7414,0,7415,7423,20,7424,7615,21,7616,7654,0,7655,7675,21,7676,7679,20,7680,7957,0,7958,7959,20,7960,7965,0,7966,7967,20,7968,8005,0,8006,8007,20,8008,8013,0,8014,8015,20,8016,8023,0,8024,8024,20,8025,8025,0,8026,8026,20,8027,8027,0,8028,8028,20,8029,8029,0,8030,8030,20,8031,8061,0,8062,8063,20,8064,8116,0,8117,8117,20,8118,8124,0,8125,8125,20,8126,8126,0,8127,8129,20,8130,8132,0,8133,8133,20,8134,8140,0,8141,8143,20,8144,8147,0,8148,8149,20,8150,8155,0,8156,8159,20,8160,8172,0,8173,8177,20,8178,8180,0,8181,8181,20,8182,8188,0,8189,8203,21,8204,8205,0,8206,8254,21,8255,8256,0,8257,8275,21,8276,8276,0,8277,8304,20,8305,8305,0,8306,8318,20,8319,8319,0,8320,8335,20,8336,8348,0,8349,8399,21,8400,8412,0,8413,8416,21,8417,8417,0,8418,8420,21,8421,8432,0,8433,8449,20,8450,8450,0,8451,8454,20,8455,8455,0,8456,8457,20,8458,8467,0,8468,8468,20,8469,8469,0,8470,8472,20,8473,8477,0,8478,8483,20,8484,8484,0,8485,8485,20,8486,8486,0,8487,8487,20,8488,8488,0,8489,8489,20,8490,8493,0,8494,8494,20,8495,8505,0,8506,8507,20,8508,8511,0,8512,8516,20,8517,8521,0,8522,8525,20,8526,8526,0,8527,8543,20,8544,8584,0,8585,11263,20,11264,11310,0,11311,11311,20,11312,11358,0,11359,11359,20,11360,11492,0,11493,11498,20,11499,11502,21,11503,11505,20,11506,11507,0,11508,11519,20,11520,11557,0,11558,11558,20,11559,11559,0,11560,11564,20,11565,11565,0,11566,11567,20,11568,11623,0,11624,11630,20,11631,11631,0,11632,11646,21,11647,11647,20,11648,11670,0,11671,11679,20,11680,11686,0,11687,11687,20,11688,11694,0,11695,11695,20,11696,11702,0,11703,11703,20,11704,11710,0,11711,11711,20,11712,11718,0,11719,11719,20,11720,11726,0,11727,11727,20,11728,11734,0,11735,11735,20,11736,11742,0,11743,11743,21,11744,11775,0,11776,11822,20,11823,11823,0,11824,12292,20,12293,12295,0,12296,12320,20,12321,12329,21,12330,12335,0,12336,12336,20,12337,12341,0,12342,12343,20,12344,12348,0,12349,12352,20,12353,12438,0,12439,12440,21,12441,12442,0,12443,12444,20,12445,12447,0,12448,12448,20,12449,12538,0,12539,12539,20,12540,12543,0,12544,12548,20,12549,12589,0,12590,12592,20,12593,12686,0,12687,12703,20,12704,12730,0,12731,12783,20,12784,12799,0,12800,13311,20,13312,19893,0,19894,19967,20,19968,40908,0,40909,40959,20,40960,42124,0,42125,42191,20,42192,42237,0,42238,42239,20,42240,42508,0,42509,42511,20,42512,42527,21,42528,42537,20,42538,42539,0,42540,42559,20,42560,42606,21,42607,42607,0,42608,42611,21,42612,42621,0,42622,42622,20,42623,42647,0,42648,42654,21,42655,42655,20,42656,42735,21,42736,42737,0,42738,42774,20,42775,42783,0,42784,42785,20,42786,42888,0,42889,42890,20,42891,42894,0,42895,42895,20,42896,42899,0,42900,42911,20,42912,42922,0,42923,42999,20,43e3,43009,21,43010,43010,20,43011,43013,21,43014,43014,20,43015,43018,21,43019,43019,20,43020,43042,21,43043,43047,0,43048,43071,20,43072,43123,0,43124,43135,21,43136,43137,20,43138,43187,21,43188,43204,0,43205,43215,21,43216,43225,0,43226,43231,21,43232,43249,20,43250,43255,0,43256,43258,20,43259,43259,0,43260,43263,21,43264,43273,20,43274,43301,21,43302,43309,0,43310,43311,20,43312,43334,21,43335,43347,0,43348,43359,20,43360,43388,0,43389,43391,21,43392,43395,20,43396,43442,21,43443,43456,0,43457,43470,20,43471,43471,21,43472,43481,0,43482,43519,20,43520,43560,21,43561,43574,0,43575,43583,20,43584,43586,21,43587,43587,20,43588,43595,21,43596,43597,0,43598,43599,21,43600,43609,0,43610,43615,20,43616,43638,0,43639,43641,20,43642,43642,21,43643,43643,0,43644,43647,20,43648,43695,21,43696,43696,20,43697,43697,21,43698,43700,20,43701,43702,21,43703,43704,20,43705,43709,21,43710,43711,20,43712,43712,21,43713,43713,20,43714,43714,0,43715,43738,20,43739,43741,0,43742,43743,20,43744,43754,21,43755,43759,0,43760,43761,20,43762,43764,21,43765,43766,0,43767,43776,20,43777,43782,0,43783,43784,20,43785,43790,0,43791,43792,20,43793,43798,0,43799,43807,20,43808,43814,0,43815,43815,20,43816,43822,0,43823,43967,20,43968,44002,21,44003,44010,0,44011,44011,21,44012,44013,0,44014,44015,21,44016,44025,0,44026,44031,20,44032,55203,0,55204,55215,20,55216,55238,0,55239,55242,20,55243,55291,0,55292,63743,20,63744,64109,0,64110,64111,20,64112,64217,0,64218,64255,20,64256,64262,0,64263,64274,20,64275,64279,0,64280,64284,20,64285,64285,21,64286,64286,20,64287,64296,0,64297,64297,20,64298,64310,0,64311,64311,20,64312,64316,0,64317,64317,20,64318,64318,0,64319,64319,20,64320,64321,0,64322,64322,20,64323,64324,0,64325,64325,20,64326,64433,0,64434,64466,20,64467,64829,0,64830,64847,20,64848,64911,0,64912,64913,20,64914,64967,0,64968,65007,20,65008,65019,0,65020,65023,21,65024,65039,0,65040,65055,21,65056,65062,0,65063,65074,21,65075,65076,0,65077,65100,21,65101,65103,0,65104,65135,20,65136,65140,0,65141,65141,20,65142,65276,0,65277,65295,21,65296,65305,0,65306,65312,20,65313,65338,0,65339,65342,21,65343,65343,0,65344,65344,20,65345,65370,0,65371,65381,20,65382,65470,0,65471,65473,20,65474,65479,0,65480,65481,20,65482,65487,0,65488,65489,20,65490,65495,0,65496,65497,20,65498,65500,0,65501,1/0],isEnd:[0,1,1,0,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,0,1,0,0,1,1,1,1,1,1],hasArc:[1,1,1,1,0,0,1,1,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,0,1,1,1,0]},{pnext:[1,1],disnext:[1,0],checknext:[1,0],maxAsicii:255,classTable:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],unicodeClassTable:[0,256,1/0],isEnd:[0,1],hasArc:[1,1]}];var dt=[-1,-1,-1,-1,1,-1,-1,23,24,29,30,38,31,-1,32,34,22,25,21,28,26,27,37,3,36,4,1,-1,2,-1,-1,1,1,1,1,35,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,-1,-1,-1,33,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,17,-1,8,-1,-1,-1,16,-1,-1,15,-1,14,-1,-1,-1,20,-1,-1,-1,9,7,-1,12,19,-1,5,18,-1,-1,-1,10,13],vt=[-1,39,-1,3,4,-1,39,40],gt=[-1,39,39,-1,3,4,-1,39,41,-1,39,39,39,39,40,39,39,39,39,39,39,39,39,39,39,39,39,42,-1,39,39,39,-1,-1,44,-1,-1,39,44,39,39,39,43],mt=[-1,39],kt=45,bt=209,xt=[9,7,15,16,17,18,182,10,11,204,12,171,13,14,181,207,152,146,203,-57,181,202,-57,187,188,186,110,113,170,200,5,169,167,199,-57,168,73,108,135,160,152,73,69,132,133,197,134,112,99,194,175,176,177,178,179,180,175,176,177,178,179,180,135,-95,113,-44,-44,132,133,105,134,-58,71,72,-58,27,113,71,72,27,113,-95,22,-95,112,117,-58,81,107,-42,79,75,66,76,56,160,112,55,192,118,112,50,51,191,145,173,172,164,129,67,152,150,149,148,147,143,37,-44,139,138,137,107,129,107,126,-102,124,121,120,119,114,103,102,97,93,91,90,84,83,78,74,68,61,59,58,54,52,47,46,30,41,36,34,30,30,30,30,28,22,4],yt=[-45,159,-5,-45,157,-45,-45,78,154,153,152,151,150,150,129,-45,-45,-45,81,-45,-45,-45,128,74,-45,-45,-45,-45,-45,-45,-45,-45,146,-45,126,146,-45,-45,69,143,144,-45,93,-45,-45,143,122,103,-45,-45,-45,-45,71,-45,-45,116,38,119,-45,-45,-45,57,-45,128,86,-45,137,135,-45,-45,-45,-45,-45,-45,-45,-45,122,112,-45,-45,-45,112,-45,-45,-45,-45,-45,117,47,-45,131,106,68,33,-45,63,25,-45,105,62,61,-45,107,107,95,-45,-45,-45,-45,-45,-45,125,-45,124,-45,-45,-45,123,103,90,101,-45,-45,99,118,-45,97,-45,114,94,-45,113,-45,112,110,-45,-45,-45,-45,-45,85,107,76,-45,-45,37,-45,-45,-45,13,-45,-45,-45,71,50,-45,9,68,-45,74,-45,-21,-45,-45,-45,-5,-45,67,102,75,-45,93,47,-45,-45,-45,-45,-45,-45,-45,-45,-45,-45,-2,-45,-45,-45,-45,21,37,12,27,-45,-45,-45,17,-45,-9,-45,-15,-45,-45,-45,-45,11,-45,-45,-45],St=[2,2,2,2,2,2,161,2,2,199,2,156,2,2,204,204,149,161,197,183,195,195,183,165,165,165,96,96,156,191,2,156,156,190,183,156,93,93,149,189,145,56,56,149,149,188,149,96,88,172,204,204,204,204,204,204,195,195,195,195,195,195,145,88,99,99,95,145,145,92,145,154,93,93,154,23,23,56,56,7,7,88,18,88,99,100,154,64,92,95,64,61,52,61,42,171,23,42,169,100,7,38,38,168,167,159,157,153,142,52,141,140,134,133,131,129,18,128,126,124,123,120,119,118,117,113,111,104,103,102,98,91,90,87,81,77,76,67,66,63,57,55,47,46,45,40,39,35,34,32,22,14,13,12,11,10,9,8,4,1],Tt=[4,-1,-1,0,-1,3,5,-1,-1,-1,-1,-1,-1,-1,-1,19,20,21,-1,80,81,82,29,7,23,24,25,27,9,112,10,11,-1,13,14,-1,1,79,-1,-1,-1,22,-1,116,12,-1,-1,17,88,84,85,33,-1,30,8,-1,-1,-1,16,2,18,-1,87,91,38,28,-1,-1,113,115,117,118,119,15,83,88,97,-1,6,32,34,-1,31,26,114,116,86,107,99,95,-1,-1,54,-1,89,108,-1,96,100,41,-1,93,-1,-1,-1,52,54,120,109,110,111,-1,106,98,103,104,90,-1,54,40,54,53,121,-1,-1,92,-1,36,41,-1,46,-1,48,-1,-1,51,105,102,35,39,-1,-1,40,60,71,-1,47,49,50,-1,44,122,37,55,60,59,-1,73,76,77,45,-1,123,60,58,65,54,72,-1,-1,70,-1,-1,126,128,129,130,131,132,133,134,42,127,60,61,62,63,64,-1,74,-1,-1,75,78,135,-1,66,-1,68,-1,127,124,67,69,-1,125,136,137],wt=[5,173,173,165,7,161,130,160,108,140,141,69,69,39,115,140,141,103,105,143,99,97,23,24,164,156,184,164,156,110,94,95,76,48,41,22,200,197,157,158,195,192,189,127,100,135,135,114,139,140,141,87,88,79,32,81,37,20,31,30,28,152,150,124,91,25,129,105,143,126,105,143,86,63,64,59,25,52,44,38,34,18,19,20,1,207,2,205,204,194,188,143,183,155,156,182,162,153,154,155,156,122,121,143,93,85,84,61,62,63,56,47,43,42],Et=[83,-71,-4,-71,44,-71,30,13,-71,5,4,3,-1,-71,74,-71,-71,-71,18,-71,-71,39,1,24,-71,-71,-71,102,-71,56,-71,-71,23,-71,-71,-71,109,-71,-8,-71,64,-71,-71,52,-71,-71,-71,68,65,-71,-71,60,-71,-71,-71,-71,-48,-71,-71,-71,-71,-71,-71,-13,38,-71,-71,-71,49,-71,-71,-71,45,-71,-71,29,4,-71,-71,-71,48,-71,-71,-71,-71,46,-71,-23,-29,-71,-2,-71,-7,-47,-71,-11,-23,-71,-71,-5,-71,-71,-71,-71,-71,-71,77,40,-71,-71,-71,-71,-71,12,-71,-71,-71,-71,45,25,42,-71,-71,-71,-71,-71,-71,-71,29,-71,-71,-71,-71,-71,-71,-71,-71,-71,-71,-71,-71,0,43,70,-71,-16,-71,-71,-71,-17,-71,33,-71,-71,-2,-71,-29,-71,-71,-71,-71,-71,31,64,-71,-5,65,9,-71,-71,-71,5,-71,-71,-71,-71,-71,-71,-71,-71,21,-71,-26,-5,-71,-71,-71,-71,-71,3,-71,-71,-71,-71,-33,-65,-71,-71,-71,-71,22,22,-71,-71,-66,-71,15,-71],At=[2,0,6,2,0,0,6,2,4,2,2,2,3,2,2,4,3,0,1,1,1,1,2,1,1,1,4,0,3,0,1,3,2,0,0,6,5,7,0,2,0,0,4,0,2,3,1,2,1,2,2,1,1,2,0,2,3,1,2,1,0,3,1,1,1,0,3,4,3,4,1,1,0,1,0,3,1,1,3,2,1,1,0,5,1,1,3,1,0,4,4,0,3,1,1,1,2,0,2,0,1,0,4,2,2,3,1,0,1,2,2,2,0,0,5,2,0,1,1,0,0,5,0,0,0,6,2,0,1,1,1,1,1,1,0,0,0,6],Ct=[0,2,1,3,3,5,4,4,4,4,4,4,4,4,4,6,6,7,7,8,8,8,9,9,10,10,11,11,12,12,13,13,14,14,16,15,15,15,17,18,18,20,19,21,19,22,22,23,23,23,23,23,24,24,26,25,27,27,28,28,30,29,31,31,31,31,32,32,32,32,32,33,33,34,34,35,35,36,36,37,37,38,40,39,41,41,42,42,44,43,45,45,46,46,47,47,48,48,49,49,50,51,50,50,50,52,52,53,53,53,54,54,56,57,55,58,58,59,59,60,61,59,63,64,65,62,66,66,67,67,67,67,67,67,68,69,70,67],It=["EOF","NAME","STRING","OPEN_BLOCK","CLOSE_BLOCK","OPT_DIR","LEX_DIR","TOKEN_DIR","LEFT_DIR","RIGHT_DIR","NONASSOC_DIR","USE_DIR","HEADER_DIR","EXTRA_ARG_DIR","EMPTY","TYPE_DIR","PREC_DIR","INIT_DIR","OUTPUT_DIR","IMPORT_DIR","LEAST_DIR","GT","LT","BRA","KET","EQU","CBRA","CKET","QUESTION","STAR","PLUS","DASH","COLON","ARROW","EOL","SEPERATOR","OR","WEDGE","COMMA","ANY_CODE","ESCAPED_CHAR_IN_BLOCK","LHS_REF","TOKEN_REF","MATCHED","EMIT_TOKEN"],Rt=[null,null,null,"{","}","%option","%lex","%token","%left","%right","%nonassoc","%use","%header","%extra_arg","%empty","%type","%prec","%init","%output","%import","%least",">","<","(",")","=","[","]","?","*","+","-",":","=>",";","%%","|","^",",",null,null,"$$","$token","$matched",null];var Nt=function(){function t(t,e,n,r,i,a){this.id=t,this.val=e,this.startLine=n,this.startColumn=r,this.endLine=i,this.endColumn=a}return t.prototype.clone=function(){return new t(this.id,this.val,this.startLine,this.startColumn,this.endLine,this.endColumn)},t.prototype.toString=function(){return(null===Rt[this.id]?"<"+It[this.id]+">":'"'+Rt[this.id]+'"')+'("'+this.val+'")'},t}();function Lt(){var t,e,n,r,i,a,o,s,u,l,c,h,f,p,d,g,m,k,b,x={state:-1,line:0,column:0},y={};return{init:function(v,g){t=[0],e=0,n="",r=new Nt(-1,null,0,0,0,0),x.state=-1,i=0,a=s=0,o=u=0,l=[0],c=[],h=null,f=[],p=!1,d=g,_()},on:function(t,e){y[t]||(y[t]=[]),y[t].push(e)},accept:N,end:function(){for(;!p&&!R(););p=!0},halt:function(){p=!0}};function S(t){n=t,s=a,u=o}function T(t){r.id=t,r.val=n,r.startLine=s,r.startColumn=u,r.endLine=a,r.endColumn=o-1,f.push(r),n="",s=a,u=o}function w(t,e,n,r){var i=y[t];if(i)for(var a=0;a<i.length;a++)i[a](e,n,r)}function E(t,e){switch(t){case 0:!function(t){var e=dt[t];switch(-1!==e&&T(e),t){case 1:case 3:S("");break;case 4:h=ut(r);break;case 23:case 25:h=lt(r);break;case 26:h=ut(r);break;case 28:(h=ut(r)).val=ht(h.val.substr(1,h.val.length-2));break;case 30:S("");break;case 31:case 32:case 33:case 34:h=ut(r);break;case 47:(h=ut(r)).val=ht(h.val.substr(1,h.val.length-2));break;case 50:case 93:S("")}}(e);break;case 1:!function(t){var e=vt[t];switch(-1!==e&&T(e),t){case 1:h=Y(r.val);break;case 3:case 4:h=lt(r);break;case 6:h=Y(r.val);break;case 7:h=Y(r.val.charAt(1))}}(e);break;case 2:!function(t){var e=gt[t];switch(-1!==e&&T(e),t){case 1:case 2:h=ut(r);break;case 4:case 5:h=lt(r);break;case 7:case 10:case 11:case 12:case 13:h=ut(r);break;case 14:(h=ut(r)).val=h.val.charAt(1);break;case 15:case 16:case 17:case 18:case 19:case 20:case 21:case 22:case 23:case 24:case 25:case 26:case 29:case 30:case 31:h=ut(r);break;case 34:(h=ut(r)).val=h.val.substr(6,h.val.length-7);break;case 37:h=ut(r);break;case 38:(h=ut(r)).val=h.val.substr(6,h.val.length-7);break;case 39:case 40:case 41:h=ut(r)}}(e);break;case 3:!function(t){var e=mt[t];switch(-1!==e&&T(e),t){case 1:h=ut(r)}}(e)}f.length>0&&D(null)}function A(){var t=n.substr(n.length-i,i);return n=n.substr(0,n.length-i),i=0,a=x.line,o=x.column,e=x.state,x.state=-1,t}function C(t){return t===ft?(a++,o=0):o+=t>255?2:1,n+=String.fromCharCode(t),-1!==x.state&&i++,!0}function I(n){var r=t[t.length-1],s=pt[r],u=1===s.isEnd[e],l=1===s.hasArc[e],c=n<s.maxAsicii?s.classTable[n]:function(t,e){for(var n=0;n<t.length;n+=3){if(e>=t[n+1]&&e<=t[n+2])return t[n];if(e<t[n+1])return-1}return-1}(s.unicodeClassTable,n),h=-1;if(-1!==c){var f=s.disnext[e]+c;f>=0&&f<s.pnext.length&&s.checknext[f]===e&&(h=s.pnext[f])}if(u)return l?-1===h?(E(r,e),x.state=-1,i=0,e=0,!1):(x.state=e,x.line=a,x.column=o,i=0,e=h,C(n)):(E(r,e),x.state=-1,i=0,e=0,!1);if(-1===h){if(-1!==x.state){var p=A();return E(r,e),e=0,N(p),!1}return w("lexicalerror",String.fromCharCode(n),a,o),!0}return e=h,C(n)}function R(){if(0===e)return T(0),D(null),!0;var n=t[t.length-1];if(pt[n].isEnd[e])return E(n,e),e=0,x.state=-1,!1;if(-1!==x.state){var r=A();return E(n,e),e=0,N(r),!1}return w("lexicalerror","",a,o),!0}function N(t){for(var e=0;e<t.length&&!p;)I(t.charCodeAt(e))&&e++}function L(e){var n=Ct[e],r=c.length,i=c[r-At[e]]||null;switch(e){case 1:t.push(3);break;case 5:d.lexBuilder.prepareLex();break;case 7:d.incPr();break;case 9:var a=c[r-1];d.setHeader(a);break;case 10:a=c[r-1];d.setExtraArg(a);break;case 11:var o=c[r-1];d.setType(o);break;case 12:var s=c[r-2];a=c[r-1];d.setInit(s,a);break;case 13:var u=c[r-1];d.setOutput(u);break;case 15:case 16:U=c[r-2];d.defToken(U,null);break;case 18:var h=c[r-1];d.setEpilogue(h);break;case 19:g=v.LEFT;break;case 20:g=v.RIGHT;break;case 21:g=v.NON;break;case 24:U=c[r-1];d.defineTokenPrec(U,g,U.ext);break;case 25:U=c[r-1];d.defineTokenPrec(U,g,at.NAME);break;case 26:var f=c[r-3],p=c[r-1];d.setOpt(f,p);break;case 29:d.lexBuilder.selectState("DEFAULT");break;case 30:case 31:I=c[r-1];d.lexBuilder.selectState(I.val);break;case 34:var x=c[r-1];d.lexBuilder.prepareVar(x);break;case 35:x=c[r-6];d.lexBuilder.endVar();break;case 36:d.lexBuilder.end(m,b,"(untitled)");break;case 37:var y=c[r-5],S=d.defToken(y,d.lexBuilder.getPossibleAlias());m.returnToken(S),d.lexBuilder.end(m,b,y.val);break;case 38:d.lexBuilder.newState();break;case 40:case 41:case 43:m=new ot;break;case 47:var T=c[r-1];d.addPushStateAction(m,T),m.raw("; ");break;case 48:m.popState(),m.raw("; ");break;case 49:var w=c[r-1];d.addSwitchToStateAction(m,w),m.raw("; ");break;case 50:I=c[r-1];m.setImg(I.val),m.raw("; ");break;case 52:b=!1;break;case 53:b=!0;break;case 54:d.lexBuilder.enterUnion();break;case 55:d.lexBuilder.leaveUnion();break;case 56:case 57:d.lexBuilder.endUnionItem();break;case 60:d.lexBuilder.enterSimple();break;case 61:var E=c[r-1];d.lexBuilder.simplePostfix(E.val);break;case 62:i=Y("+");break;case 63:i=Y("?");break;case 64:i=Y("*");break;case 65:i=Y("");break;case 68:var A=c[r-2];d.lexBuilder.addVar(A);break;case 69:var C=c[r-2];d.lexBuilder.importVar(C);break;case 70:I=c[r-1];d.lexBuilder.addString(I.val);break;case 71:d.lexBuilder.beginSet(!0);break;case 72:d.lexBuilder.beginSet(!1);break;case 77:var I=c[r-1];d.lexBuilder.addSetItem(I,I);break;case 78:var R=c[r-3],N=c[r-1];d.lexBuilder.addSetItem(R,N);break;case 82:A=c[r-1];k=A;break;case 88:d.prepareRule(k);break;case 89:d.commitRule();break;case 92:case 93:T=c[r-1];d.addRuleUseVar(T);break;case 98:var L=c[r-2];d.addRuleSematicVar(L);break;case 100:U=c[r-1];d.addRuleItem(U,at.NAME);break;case 101:T=c[r-2];d.addRuleSematicVar(T);break;case 102:T=c[r-4],U=c[r-1];d.addRuleItem(U,at.NAME);break;case 103:U=c[r-1];d.addRuleItem(U,U.ext);break;case 104:d.addAction(m);break;case 105:(i=U=c[r-2]).ext=at.TOKEN;break;case 106:i.ext=at.STRING;break;case 109:d.addAction(m);break;case 110:U=c[r-1];d.defineRulePr(U,at.NAME);break;case 111:U=c[r-1];d.defineRulePr(U,U.ext);break;case 112:var D=c[r-1];t.push(1);break;case 113:D=c[r-4];var _=c[r-2],O=c[r-1];t.pop();break;case 114:D=c[r-5],_=c[r-3],O=c[r-2];B=D,M=O,i={val:_.val,startLine:B.startLine,startColumn:B.startColumn,endLine:M.endLine,endColumn:M.endColumn};break;case 115:a=c[r-1];i.val+=a.val;break;case 116:i=Y("");break;case 119:t.push(1);break;case 120:a=c[r-2];t.pop();break;case 121:a=c[r-3];(i=Y("")).val="{"+a.val+"}";break;case 122:D=c[r-1];t.push(2);break;case 123:D=c[r-2];m.beginBlock(D);break;case 124:D=c[r-5],U=c[r-3],O=c[r-1];t.pop();break;case 125:D=c[r-6],U=c[r-4],O=c[r-2];m.endBlock(O);break;case 128:case 129:var F=c[r-1];m.raw(F.val);break;case 130:m.lhs();break;case 131:m.tokenObj();break;case 132:m.matched();break;case 133:var U=c[r-1];d.addEmitTokenAction(m,U);break;case 134:t.push(2);break;case 135:m.raw("{");break;case 136:t.pop();break;case 137:m.raw("}")}var B,M;l.length-=At[e];var P=l[l.length-1];l.push(wt[Et[P]+n]),c.length-=At[e],c.push(i)}function D(t){for(null!==t&&f.push(t);!p&&f.length>0;){var e=f[0],n=l[l.length-1],r=yt[n]+e.id,i=0;(i=r<0||r>=xt.length||St[r]!==n?-Tt[n]-1:xt[r])===bt?(O(e),f.shift()):i>0?0===e.id?(p=!0,w("accept"),f.shift()):(l.push(i-1),c.push(h),h=null,_(),f.shift()):i<0?(L(-i-1),_()):(O(e),f.shift())}}function _(){for(var t,e=l[l.length-1];yt[e]===-kt&&-1!==(t=Tt[e]);)L(t),e=l[l.length-1]}function O(t){var e="unexpected token "+t.toString()+", expecting one of the following token(s):\n";w("syntaxerror",e+=function(t){var e=yt[t],n="";function r(n){var r=e+n;return!(r<0||r>=xt.length||t!==St[r])||-1!==Tt[t]}for(var i=0;i<kt;i++)r(i)&&(n+="    "+(a=i,null===Rt[a]?"<"+It[a]+">":'"'+Rt[a]+'"')+" ...\n");var a;return n}(l[l.length-1]),t)}}function Dt(t,e){var n=Lt(),i=!1;n.on("lexicalerror",function(e,r,a){t.requireLines(function(t,n){var i="unexpected character "+e;i+=" "+X((o=e,s=r,u=a,{startLine:s,startColumn:u,endLine:s,endColumn:o.charCodeAt(0)>255?u+1:u}),n);var o,s,u;t.err(new A(i,"Lexical error"))}),n.halt(),i=!0}),n.on("syntaxerror",function(e,a){t.requireLines(function(t,n){var i=X(a,n)+r+e;t.err(new A(i,"Syntax error"))}),n.halt(),i=!0});var a=function(t){var e,n=new F,i=new O,a={},o={},s=[],u=null,l={},c=null,h=null,f=0,d=!0,g=1,m=[],k=[],b={};return n.grammar=i,e=rt(t),c=new W(function(t){return l[t]}),h=new W(function(t){return a[t]}),w(Y("EOF"),null),{defToken:w,getTokenID:function(t){var e=I(t);return null===e?"0":String(e.index)},getTokenByAlias:E,getTokenByName:I,defineTokenPrec:function(t,e,n){if(n===at.TOKEN){var r=I(t);null!==r&&(r.assoc=e,r.pr=g)}else if(n===at.STRING){var r=E(t);null!==r&&(r.assoc=e,r.pr=g)}else n===at.NAME&&(b[t.val]=b[t.val]||{assoc:e,pr:g,pos:t})},setOpt:function(t,e){n.opt[t.val]={name:t,val:e}},setOutput:function(t){null!==n.output&&T("redefine of output",n.output,t),n.output=t},setHeader:function(t){n.header.push(t)},setExtraArg:function(t){null!==n.extraArgs&&T("redefine of extra arguments",n.extraArgs,t),n.extraArgs=t},setType:function(t){null!==n.sematicType&&T("redefine of sematic type",n.sematicType,t),n.sematicType=t},setInit:function(t,e){null!==n.initArg&&T("redefine of initializing block",n.initArg,t),n.initArg=t,n.initBody=e},setEpilogue:function(t){n.epilogue=t},incPr:function(){g++},prepareRule:R,addRuleUseVar:function(t){var e=x();void 0!==e.usedVars[t.val]?S('re-use of sematic variable "'+t.val+'"',t):e.usedVars[t.val]={pos:t,val:0}},addRuleSematicVar:function(t){var e=x();void 0!==e.usedVars[t.val]?S('variable "'+t.val+'" conflicts with another imported variable',t):void 0!==e.vars[t.val]?S('sematic variable "'+t.val+'" is already defined',t):u=t},addRuleItem:N,addAction:L,defineRulePr:function(t,e){if(e===at.STRING||e===at.TOKEN){var n=e===at.STRING?E(t):I(t);if(null!==n){if(n.assoc===v.UNDEFINED)return void S('precedence of token "'+t.val+'" has not been defined',t);x().pr=n.pr}}else{var r=b[t.val];r||S('pseudo token "'+t+'" is not defined',t),x().pr=r.pr}},commitRule:D,addPushStateAction:function(t,n){var r=t.placeHolder();e.requiringState.wait(n.val,function(e,i){e?t.set(r,it(i)):S('state "'+n.val+'" is undefined',n)})},addSwitchToStateAction:function(t,n){var r=t.placeHolder();e.requiringState.wait(n.val,function(e,i){e?t.set(r,(a=i,function(t){t.switchToLexState(a)})):S('state "'+n.val+'" is undefined',n);var a})},addEmitTokenAction:function(t,e){var n=t.placeHolder();h.wait(e.val,function(r,i){r?t.set(n,function(t){t.emitToken(i.index)}):S("use of undefined token <"+e.val+">",e)})},build:function(){i.tokenCount=i.tokens.length,i.tokens[0].used=!0,i.nts[0].used=!0,t.beginTime("building grammar");for(var r=0,a=i.nts;r<a.length;r++){var o=a[r];o.firstSet=new p(i.tokenCount);for(var s=0,u=o.rules;s<u.length;s++){var l=u[s];l.calcPr();var f=function(t){var e=l.usedVars[t];e.val=l.getVarSp(t,function(n){S('cannot find variable "'+t+'": '+n,e.pos)})};for(var d in l.usedVars)f(d)}}t.endTime(),t.beginTime("building lexical DFAs"),n.lexDFA=e.build(),t.endTime();for(var v=0,g=k;v<g.length;v++){var m=g[v];m()}return h.fail(),c.fail(),n},lexBuilder:e};function x(){return s[s.length-1]}function y(){var t=u;u=null;var e=x(),n="@"+f++;R(Y(n));var r=x();L(e.action),D(),e.action=null,N(Y(n),at.NAME),u=t;for(var i in e.vars){var a=e.vars[i];r.usedVars[i]={val:a.val,pos:a.pos}}for(var i in e.usedVars)a=e.usedVars[i],r.usedVars[i]={val:a.val,pos:a.pos}}function S(e,n){t.requireLines(function(t,r){t.err(new A(e+" "+X(n,r),"Compilation error"))})}function T(e,n,i){t.requireLines(function(t,a){var o=e+" "+X(i,a)+r;o+="previous defination was at "+X(n,a),t.warn(new C(o))})}function w(t,e){var n=a[t.val];return void 0!==n?(n.appears.push(t),n):(n={index:i.tokens.length,sym:t.val,alias:e,pr:0,assoc:v.UNDEFINED,used:!1,appears:[t]},null!==e&&(o[e]||(o[e]=[]),o[e].push(n)),a[t.val]=n,i.tokens.push(n),n)}function E(t){var e=o[t.val];if(void 0===e)return S('cannot identify "'+t.val+'" as a token',t),null;if(e.length>1){for(var n="",r=0;r<e.length;r++)r>0&&(n+=","),n+="<"+e[r].sym+">";return S("cannot identify "+t.val+" as a token, since it could be "+n,t),null}return e[0]}function I(t){var e=a[t.val];return void 0===e?(S("cannot identify <"+t.val+"> as a token",t),null):e}function R(t){d&&(d=!1,R(Y("(accept)")),N(Y(t.val),at.NAME),N(Y("EOF"),at.TOKEN),D());var e=l[t.val];void 0===e&&(e=l[t.val]={index:i.nts.length,sym:t.val,firstSet:null,used:!1,rules:[],parents:[]},i.nts.push(e),c.signal(t.val,e));var n=new _(i,e,t);s.push(n)}function N(t,e){var n=x();if(null!==n.action&&y(),null!==u&&(n.vars[u.val]={val:n.rhs.length,pos:u},u=null),e===at.NAME){var r=n.rhs.length;n.rhs.push(0),c.wait(t.val,function(e,i){e?(n.rhs[r]=-i.index-1,i.parents.push({rule:n,pos:r}),i.used=!0):S("use of undefined non terminal "+t.val,t)})}else if(e===at.TOKEN){var i=a[t.val];if(void 0===i)return void S("cannot recognize <"+t.val+"> as a token",t);n.rhs.push(i.index),i.used=!0}else if(e===at.STRING){var o=E(t);null!==o&&(n.rhs.push(o.index),o.used=!0)}}function L(t){var e=x();null!==e.action&&y(),e.action=t,null!==u&&(y(),e.vars[u.val]={val:e.rhs.length-1,pos:u},u=null)}function D(){var t=s.pop();t.index=i.rules.length,t.lhs.rules.push(t),i.rules.push(t);for(var e=0,n=m;e<n.length;e++)(0,n[e])();m.length=0}}(t);return n.init(t,a),t.beginTime("parse grammar file"),n.accept(e),n.end(),t.endTime(),i?null:a.build()}var _t=function(t,e){p("/*"),p("    generated by jscc, an LALR(1) parser generator made by hadroncfy."),p("    template for typescript, written by hadroncfy, aussi."),f("*/");for(var n=0,r=t.file.header;n<r.length;n++){var i=r[n];p(""),f(i.val)}var a=t.file.prefix,o=h("tab","    "),s="typescript"===t.output;function u(t,e){return s?t:e||""}function l(t,e){return void 0===e&&(e=""),null===t?e:t.val}function h(e,n){var r=t.file.opt[e];return void 0===r?n:r.val.val}function f(t){e.write(t)}function p(t){e.writeln(t)}function d(t,e){return(t.length<e?function(t,e){for(var n="";e-- >0;)n+=t;return n}(" ",e-t.length):"")+t}function v(e,n,r,i,s,l){var c=1;p(""),f("var "),f(a+e+u(": "+n+"[]")),p(" = [ "),f(o);for(var h=0,v=r;h<v.length;h++){f(d(l(v[h]),i)),f(","),c++>=s&&(c=1,f(t.endl+o))}p(""),f("]; ")}p(""),p("/*"),p("    constants"),p("*/"),f("var "),f(a),f("eol = '\\n'.charCodeAt(0);"),s&&(p(""),p("interface DFATable{"),p("    pnext: number[];"),p("    disnext: number[];"),p("    checknext: number[];"),p("    maxAsicii: number;"),p("    classTable: number[];"),p("    unicodeClassTable: number[];"),p("    isEnd: number[];"),p("    hasArc: number[];"),f("};"));var m=t.file.dfaTables;function k(t,e){function n(t){return a+t+String(e)}v("lexpnext"+e,"number",t.pnext,6,10,function(t){return null===t?"-1":String(t.to.index)}),v("lexdisnext"+e,"number",t.disnext,6,10,function(t){return String(t)}),v("lexchecknext"+e,"number",t.checknext,6,10,function(t){return String(t)}),v("lexclassTable"+e,"number",t.classTable,6,10,function(t){return String(t)}),v("lexunicodeClassTable"+e,"number",t.unicodeClassTable,6,10,function(t){return String(t)}),v("lexisEnd"+e,"number",t.states,1,15,function(t){return null===t.endAction?"0":"1"}),v("lexhasArc"+e,"number",t.states,1,15,function(t){return 0===t.arcs.length?"0":"1"}),p(""),f("var "),f(a),f("lextable"),f(String(e)+u(": DFATable")),p(" = {"),f("    pnext: "),f(n("lexpnext")),p(","),f("    disnext: "),f(n("lexdisnext")),p(","),f("    checknext: "),f(n("lexchecknext")),p(","),f("    maxAsicii: "),f(t.maxAsicii),p(","),f("    classTable: "),f(n("lexclassTable")),p(","),f("    unicodeClassTable: "),f(n("lexunicodeClassTable")),p(","),f("    isEnd: "),f(n("lexisEnd")),p(","),f("    hasArc: "),f(n("lexhasArc")),p(""),f("};")}p(""),p("/*"),p("    dfa table definations"),f("*/");for(var b=0,x=m;b<x.length;b++)k(x[b],b);p(""),p("/*"),p("    dfa tables"),p("*/"),f("var "),f(a),f("dfaTables"),f(u(": DFATable[]")),f(" = [");for(b=0;b<m.length;b++)p(""),f("    "),f(a),f("lextable"),f(b),f(",");p(""),p("];"),p("/*"),p("    find unicode class"),p("*/"),f("function "),f(a),f("findUnicodeClass(uc"),f(u(": number[]")),f(", c"),f(u(": number")),p("){"),p("    for(var i = 0; i < uc.length; i += 3){"),p("        if(c >= uc[i + 1] && c <= uc[i + 2]){"),p("            return uc[i];"),p("        }"),p("        else if(c < uc[i + 1]){"),p("            return -1;"),p("        }"),p("    }"),p("    return -1;"),p("}"),p("/*"),p("    tokens that a lexical dfa state can return"),f("*/");for(b=0,x=m;b<x.length;b++)v("lexTokens"+b,"number",x[b].states,6,10,function(t){return null===t.endAction||null===t.endAction.data.token?"-1":String(t.endAction.data.token.index)});p("");var y=t.pt;p(""),f("var "),f(a),f("stateCount = "),f(y.stateCount),p(";"),f("var "),f(a),f("tokenCount = "),f(t.file.grammar.tokens.length),p(";"),f("var "),f(a),f("actERR = "),f(y.stateCount+1),p(";"),p("/*"),f("    compressed action table: action = "),f(a),f("pact["),f(a),p("disact[STATE-NUM] + TOKEN]"),p("    when action > 0, shift the token and goto state (action - 1);"),p("    when action < 0, reduce with rule (1-action);"),p("    when action = 0, do default action."),f("*/"),v("pact","number",y.pact,6,10,function(t){return null===t?"0":t===g.NULL?String(y.stateCount+1):t.actionType===c.SHIFT?(t.shift.stateIndex+1).toString():t.actionType===c.REDUCE?(-t.rule.index-1).toString():void 0}),p(""),p("/*"),p("    displacement of action table."),f("*/"),v("disact","number",y.disact,6,10,function(t){return t.toString()}),p(""),p("/*"),f("    used to check if a position in "),f(a),p("pact is out of bouds."),f("    if "),f(a),f("checkact["),f(a),p("disact[STATE-NUM] + TOKEN] = STATE-NUM, this position is not out of bounds."),f("*/"),v("checkact","number",y.checkact,6,10,function(t){return void 0===t?"0":t.toString()}),p(""),p("/*"),f("    default action table. action = "),f(a),p("defred[STATE-NUM],"),p("    where action is the number of the rule to reduce with."),f("*/"),v("defred","number",y.defred,6,10,function(t){return t.toString()}),p(""),p("/*"),f("    compressed goto table: goto = "),f(a),f("pgoto["),f(a),p("disgoto[STATE-NUM] + NON_TERMINAL]"),f("*/"),v("pgoto","number",y.pgoto,6,10,function(t){return null===t?"-1":t.shift.stateIndex.toString()}),p(""),p("/*"),p("    displacement of the goto table"),f("*/"),v("disgoto","number",y.disgoto,6,10,function(t){return t.toString()}),p(""),p("/*"),f("    length of each rule: rule length = "),f(a),p("ruleLen[RULE-NUM]"),f("*/"),v("ruleLen","number",y.g.rules,6,10,function(t){return t.rhs.length.toString()}),p(""),p("/*"),p("    index of the LHS of each rule"),f("*/"),v("lhs","number",y.g.rules,6,10,function(t){return t.lhs.index.toString()}),p(""),p("/*"),p("    token names"),f("*/"),v("tokenNames","string",y.g.tokens,20,3,function(t){return'"'+t.sym.replace(/"/g,'\\"')+'"'}),p(""),p("/*"),p("    token alias"),f("*/"),v("tokenAlias","string",y.g.tokens,20,3,function(t){return t.alias?'"'+t.alias.replace(/"/g,'\\"')+'"':"null"});var S=h("className","Parser");p("");function T(t,e){var n={raw:function(t){f(t)},beginBlock:function(t){f("{")},endBlock:function(t){f("}")},pushLexState:function(t){f(a+"lexState.push("+t+")")},switchToLexState:function(t){f(a+"lexState["+a+"lexState.length - 1] = "+t)},popLexState:function(){f(a+"lexState.pop()")},setImg:function(t){f(a+'setImg("'+t+'")')},tokenObj:function(){f(a+"token")},matched:function(){f(a+"matched")},lhs:function(){f(a+"sematicVal")},emitToken:function(t){f(a+"tokenQueue.push(new Token("+t+", null, -1, 0, 0, 0))")}},r=a+"staten";p(""),f("    function "),f(a),f("doLexAction"),f(e),f("("),f(r+u(": number")),p("){"),f("        var "),f(a),f("tk = "),f(a),f("lexTokens"),f(e),f("["),f(r),p("];"),f("        "),f(a),f("tk !== -1 && "),f(a),f("prepareToken("),f(a),p("tk);"),f("        switch("),f(r),f("){");for(var i=0,o=t.states;i<o.length;i++)null!==o[i].endAction&&o[i].endAction.data.actions.length>0&&(p(""),f("            case "),f(i),f(":"),p(""),f("                "),o[i].endAction.data.toCode(n),p(""),f("                break;"));p(""),p("            default:;"),p("        }"),f("    }")}p(""),s?(p(""),p("function tokenToString(tk: number){"),f("    return "),f(a),f("tokenAlias[tk] === null ? `<${"),f(a),f('tokenNames[tk]}>` : `"${'),f(a),p('tokenAlias[tk]}"`;'),f("}")):(p(""),p("function tokenToString(tk){"),f("    return "),f(a),f('tokenAlias[tk] === null ? "<" + '),f(a),f('tokenNames[tk] + ">" : \'"\' + '),f(a),p("tokenAlias[tk] + '\"';"),f("}")),s?(p(""),p("class Token {"),p("    constructor("),p("        public id: number,"),p("        public val: string,"),p("        public startLine: number,"),p("        public startColumn: number,"),p("        public endLine: number,"),p("        public endColumn: number"),p("    ){}"),p("    clone(){"),p("        return new Token("),p("            this.id,"),p("            this.val,"),p("            this.startLine,"),p("            this.startColumn,"),p("            this.endLine,"),p("            this.endColumn"),p("        );"),p("    }"),p("    toString(){"),f("        return ("),f(a),p("tokenAlias[this.id] === null ? "),f("            `<${"),f(a),p("tokenNames[this.id]}>` :"),f('            `"${'),f(a),p('tokenAlias[this.id]}"`) + `("${this.val}")`;'),p("    }"),p("}"),f("interface "),f(S),p("{"),f("    init("),f(l(t.file.initArg)),p(");"),p("    accept(s: string);"),p("    end();"),p("    halt();"),p("    on(ent: string, cb: (a1?, a2?, a3?) => any);"),f("}")):(p(""),p("function Token(id, val, startLine, startColumn, endLine, endColumn){"),p("    this.id = id;"),p("    this.val = val;"),p("    this.startLine = startLine;"),p("    this.startColumn = startColumn;"),p("    this.endLine = endLine;"),p("    this.endColumn = endColumn;"),p("}"),p("Token.prototype.clone = function(){"),p("    return new Token("),p("        this.id,"),p("        this.val,"),p("        this.startLine,"),p("        this.startColumn,"),p("        this.endLine,"),p("        this.endColumn"),p("    );"),p("}"),p("Token.prototype.toString = function(){"),f("    return ("),f(a),p("tokenAlias[this.id] === null ? "),f("        '<' + "),f(a),p("tokenNames[this.id] + '>' :"),f("        '\"' + "),f(a),p('tokenAlias[this.id] + \'"\') + "(" + this.val + ")";'),f("}"));var w=l(t.file.sematicType,"any");p(""),f("function create"),f(S),f("()"),f(u(": "+S)),p(" {"),p("    // members for lexer"),f("    var "),f(a),f("lexState"),f(u(": number[]")),p(";"),f("    var "),f(a),f("state"),f(u(": number")),p(";"),f("    var "),f(a),f("matched"),f(u(": string")),p(";"),f("    var "),f(a),f("token"),f(u(": Token")),p(";"),p("    "),f("    var "),f(a),f("marker"),f(u(": { state: number, line: number, column: number }")),p(" = { state: -1, line: 0, column: 0 };"),f("    var "),f(a),f("backupCount"),f(u(": number")),p(";"),p(""),f("    var "),f(a),f("line"),f(u(": number")),p(";"),f("    var "),f(a),f("column"),f(u(": number")),p(";"),f("    var "),f(a),f("tline"),f(u(": number")),p(";"),f("    var "),f(a),f("tcolumn"),f(u(": number")),p(";"),p(""),p("    // members for parser"),f("    var "),f(a),f("lrState"),f(u(": number[]")),p(";"),f("    var "),f(a),f("sematicS"),f(u(": "+w+"[]")),p(";"),f("    var "),f(a),f("sematicVal"),f(u(": "+w)),p(";"),f("    var "),f(a),f("tokenQueue"),f(u(": Token[]")),p(";"),p(""),f("    var "),f(a),p("stop;"),p(""),f("    var "),f(a),f("handlers"),f(u(": {[s: string]: ((a1?, a2?, a3?) => any)[]}")),p(" = {};"),p(""),p("    // extra members, defined by %extra_arg"),f("    "),f(l(t.file.extraArgs)),p(""),s?(p(""),p("    return {"),p("        init,"),p("        on,"),p("        accept,"),p("        end,"),p("        halt"),f("    };")):(p(""),p("    return {"),p("        init: init,"),p("        on: on,"),p("        accept: accept,"),p("        end: end,"),p("        halt: halt"),f("    };")),p(""),f("    function init("),f(l(t.file.initArg)),p("){"),f("        "),f(a),p("lexState = [ 0 ];// DEFAULT"),f("        "),f(a),p("state = 0;"),f("        "),f(a),p("matched = '';"),f("        "),f(a),p("token = new Token(-1, null, 0, 0, 0, 0);"),f("        "),f(a),p("marker.state = -1;"),f("        "),f(a),p("backupCount = 0;"),f("        "),f(a),f("line = "),f(a),p("tline = 0;"),f("        "),f(a),f("column = "),f(a),p("tcolumn = 0;"),p("        "),f("        "),f(a),p("lrState = [ 0 ];"),f("        "),f(a),p("sematicS = [];"),f("        "),f(a),p("sematicVal = null;"),f("        "),f(a),p("tokenQueue = [];"),p(""),f("        "),f(a),p("stop = false;"),f("        "),f(l(t.file.initBody)),p(""),p(""),f("        "),f(a),p("tryReduce();"),p("    }"),p("    /**"),p("     *  set "),p("     */"),f("    function "),f(a),f("setImg(s"),f(u(": string")),p("){"),f("        "),f(a),p("matched = s;"),f("        "),f(a),f("tline = "),f(a),p("line;"),f("        "),f(a),f("tcolumn = "),f(a),p("column;"),p("    }"),f("    function "),f(a),f("prepareToken(tid"),f(u(": number")),p("){"),f("        "),f(a),p("token.id = tid;"),f("        "),f(a),f("token.val = "),f(a),p("matched;"),f("        "),f(a),f("token.startLine = "),f(a),p("tline;"),f("        "),f(a),f("token.startColumn = "),f(a),p("tcolumn;"),f("        "),f(a),f("token.endLine = "),f(a),p("line;"),f("        "),f(a),f("token.endColumn = "),f(a),p("column - 1;"),p(""),f("        "),f(a),f("tokenQueue.push("),f(a),p("token);"),p(""),f("        "),f(a),p("matched = '';"),f("        "),f(a),f("tline = "),f(a),p("line;"),f("        "),f(a),f("tcolumn = "),f(a),p("column;"),p("    }"),f("    function "),f(a),f("emit(name"),f(u(": string")+u(", a1?, a2?, a3?",", a1, a2, a3")),p("){"),f("        var cbs = "),f(a),p("handlers[name];"),p("        if(cbs){"),p("            for(var i = 0; i < cbs.length; i++){"),p("                cbs[i](a1, a2, a3);"),p("            }"),p("        }"),p("    }"),f("    function on(name"),f(u(": string")),f(", cb"),f(u(": (a1?, a2?, a3?) => any")),p("){"),f("        "),f(a),f("handlers[name] || ("),f(a),p("handlers[name] = []);"),f("        "),f(a),p("handlers[name].push(cb);"),f("    }");for(b=0,x=m;b<x.length;b++)T(x[b],b);p(""),p("    /**"),p("     *  do a lexical action"),p("     *  @api private"),p("     *  @internal"),p("     */"),f("    function "),f(a),f("doLexAction(lexstate"),f(u(": number")),f(", state"),f(u(": number")),p("){"),f("        switch(lexstate){");for(b=0;b<m.length;b++)p(""),f("            case "),f(b),p(":"),f("                "),f(a),f("doLexAction"),f(b),p("(state);"),f("                break;");p(""),p("            default:;"),p("        }"),f("        "),f(a),f("tokenQueue.length > 0 && "),f(a),p("acceptToken(null);"),p("    }"),f("    function "),f(a),f("rollback()"),f(u(": string")),p("{"),f("        var ret = "),f(a),f("matched.substr("),f(a),f("matched.length - "),f(a),f("backupCount, "),f(a),p("backupCount);"),f("        "),f(a),f("matched = "),f(a),f("matched.substr(0, "),f(a),f("matched.length - "),f(a),p("backupCount);"),f("        "),f(a),p("backupCount = 0;"),f("        "),f(a),f("line = "),f(a),p("marker.line;"),f("        "),f(a),f("column = "),f(a),p("marker.column;"),f("        "),f(a),f("state = "),f(a),p("marker.state;"),f("        "),f(a),p("marker.state = -1;"),p("        return ret;"),p("    }"),f("    function "),f(a),p("mark(){"),f("        "),f(a),f("marker.state = "),f(a),p("state;"),f("        "),f(a),f("marker.line = "),f(a),p("line;"),f("        "),f(a),f("marker.column = "),f(a),p("column;"),f("        "),f(a),p("backupCount = 0;"),p("    }"),f("    function "),f(a),f("consume(c"),f(u(": number")),p("){"),f("        c === "),f(a),f("eol ? ("),f(a),f("line++, "),f(a),f("column = 0) : ("),f(a),p("column += c > 0xff ? 2 : 1);"),f("        "),f(a),p("matched += String.fromCharCode(c);"),f("        "),f(a),f("marker.state !== -1 && ("),f(a),p("backupCount++);"),p("        return true;"),p("    }"),p("    /**"),p("     *  accept a character"),p("     *  @return - true if the character is consumed, false if not consumed"),p("     *  @api private"),p("     *  @internal"),p("     */"),f("    function "),f(a),f("acceptChar(ccode"),f(u(": number")),p("){"),f("        var lexstate = "),f(a),f("lexState["),f(a),p("lexState.length - 1];"),f("        var ltable = "),f(a),p("dfaTables[lexstate];"),f("        var isEnd = ltable.isEnd["),f(a),p("state] === 1;"),f("        var hasArc = ltable.hasArc["),f(a),p("state] === 1;"),p("        // get the class of the given character"),f("        var cl = ccode < ltable.maxAsicii ? ltable.classTable[ccode] : "),f(a),p("findUnicodeClass(ltable.unicodeClassTable, ccode);"),p("        // find the next state to go"),p("        var nstate = -1;"),p("        if(cl !== -1){"),f("            var ind = ltable.disnext["),f(a),p("state] + cl;"),f("            if(ind >= 0 && ind < ltable.pnext.length && ltable.checknext[ind] === "),f(a),p("state){"),p("                nstate = ltable.pnext[ind];"),p("            }"),p("        }"),p("        if(isEnd){"),p("            // if current state is a terminate state, be careful"),p("            if(hasArc){"),p("                if(nstate === -1){"),p("                    // nowhere to go, stay where we are"),f("                    "),f(a),f("doLexAction(lexstate, "),f(a),p("state);"),p("                    // recover"),f("                    "),f(a),p("marker.state = -1;"),f("                    "),f(a),p("backupCount = 0;"),f("                    "),f(a),p("state = 0;                    "),p("                    // character not consumed"),p("                    return false;"),p("                }"),p("                else {"),p("                    // now we can either go to that new state, or stay where we are"),p("                    // it is prefered to move forward, but that could lead to errors,"),p("                    // so we need to memorize this state before move on, in case if "),p("                    // an error occurs later, we could just return to this state."),f("                    "),f(a),p("mark();"),f("                    "),f(a),p("state = nstate;"),f("                    return "),f(a),p("consume(ccode);"),p("                }"),p("            }"),p("            else {"),p("                // current state doesn't lead to any state, just stay here."),f("                "),f(a),f("doLexAction(lexstate, "),f(a),p("state);"),p("                // recover"),f("                "),f(a),p("marker.state = -1;"),f("                "),f(a),p("backupCount = 0;"),f("                "),f(a),p("state = 0;"),p("                // character not consumed"),p("                return false;"),p("            }"),p("        }"),p("        else {"),p("            if(nstate === -1){"),p("                // nowhere to go at current state, error may have occured."),p("                // check marker to verify that"),f("                if("),f(a),p("marker.state !== -1){"),p("                    // we have a previously marked state, which is a terminate state."),f("                    var s = "),f(a),p("rollback();"),f("                    "),f(a),f("doLexAction(lexstate, "),f(a),p("state);"),f("                    "),f(a),p("state = 0;"),p("                    accept(s);"),p("                    // character not consumed"),p("                    return false;"),p("                }"),p("                else {"),p("                    // error occurs"),f("                    "),f(a),f("emit('lexicalerror', String.fromCharCode(ccode), "),f(a),f("line, "),f(a),p("column);"),p("                    // force consume"),p("                    return true;"),p("                }"),p("            }"),p("            else {"),f("                "),f(a),p("state = nstate;"),p("                // character consumed"),f("                return "),f(a),p("consume(ccode);"),p("            }"),p("        }"),p("    }"),f("    function "),f(a),p("acceptEOF(){"),f("        if("),f(a),p("state === 0){"),p("            // recover"),f("            "),f(a),p("prepareToken(0);"),f("            "),f(a),p("acceptToken(null);"),p("            return true;"),p("        }"),p("        else {"),f("            var lexstate = "),f(a),f("lexState["),f(a),p("lexState.length - 1];"),f("            var ltable = "),f(a),p("dfaTables[lexstate];"),f("            var isEnd = ltable.isEnd["),f(a),p("state];"),p("            if(isEnd){"),f("                "),f(a),f("doLexAction(lexstate, "),f(a),p("state);"),f("                "),f(a),p("state = 0;"),f("                "),f(a),p("marker.state = -1;"),p("                return false;"),p("            }"),f("            else if("),f(a),p("marker.state !== -1){"),f("                var s = "),f(a),p("rollback();"),f("                "),f(a),f("doLexAction(lexstate, "),f(a),p("state);"),f("                "),f(a),p("state = 0;"),p("                accept(s);"),p("                return false;"),p("            }"),p("            else {"),f("                "),f(a),f("emit('lexicalerror', '', "),f(a),f("line, "),f(a),p("column);"),p("                return true;"),p("            }"),p("        }"),p("    }"),p("    /**"),p("     *  input a string"),p("     *  @api public"),p("     */"),f("    function accept(s"),f(u(": string")),p("){"),f("        for(var i = 0; i < s.length && !"),f(a),p("stop;){"),f("            "),f(a),p("acceptChar(s.charCodeAt(i)) && i++;"),p("        }"),p("    }"),p("    /**"),p("     *  tell the compiler that end of file is reached"),p("     *  @api public"),p("     */"),p("    function end(){"),f("        while(!"),f(a),f("stop && !"),f(a),p("acceptEOF());"),f("        "),f(a),p("stop = true;"),p("    }"),p("    function halt(){"),f("        "),f(a),p("stop = true;"),f("    }");p(""),f("    function "),f(a),f("doReduction("),f(a),f("rulenum"),f(u(": number")),p("){"),f("        var "),f(a),f("nt = "),f(a),f("lhs["),f(a),p("rulenum];"),f("        var "),f(a),f("sp = "),f(a),p("sematicS.length;"),f("        var "),f(a),f("top = "),f(a),f("sematicS["),f(a),f("sp - "),f(a),f("ruleLen["),f(a),p("rulenum]] || null;"),f("        switch("),f(a),f("rulenum){"),function(){for(var e={raw:function(t){f(t)},beginBlock:function(t){f("{")},endBlock:function(t){f("} ")},pushLexState:function(t){f(a+"lexState.push("+t+")")},switchToLexState:function(t){f(a+"lexState["+a+"lexState.length - 1] = "+t)},popLexState:function(){f(a+"lexState.pop()")},setImg:function(t){f(a+'setImg("'+t+'")')},tokenObj:function(){f(a+"token")},matched:function(){f(a+"matched")},lhs:function(){f(a+"top")},emitToken:function(t){f(a+"tokenQueue.push(new Token("+t+", null, -1, 0, 0, 0))")}},n=0,r=t.file.grammar.rules;n<r.length;n++){var i=r[n];if(null!==i.action){p(""),f("            case "),f(i.index),p(":"),f("                /* "),f(i.toString()),f(" */");for(var o in i.vars)p(""),f("                var "),f(o),f(" = "),f(a),f("sematicS["),f(a),f("sp - "),f(i.rhs.length-i.vars[o].val),f("];");for(var s in i.usedVars)p(""),f("                var "),f(s),f(" = "),f(a),f("sematicS["),f(a),f("sp - "),f(i.usedVars[s].val),f("];");p(""),f("                "),i.action.toCode(e),p(""),f("                break;")}}}(),p(""),p("        }"),f("        "),f(a),f("lrState.length -= "),f(a),f("ruleLen["),f(a),p("rulenum];"),f("        var "),f(a),f("cstate = "),f(a),f("lrState["),f(a),p("lrState.length - 1];"),f("        "),f(a),f("lrState.push("),f(a),f("pgoto["),f(a),f("disgoto["),f(a),f("cstate] + "),f(a),p("nt]);"),p(""),f("        "),f(a),f("sematicS.length -= "),f(a),f("ruleLen["),f(a),p("rulenum];"),f("        "),f(a),f("sematicS.push("),f(a),p("top);"),p("    }"),f("    function "),f(a),f("acceptToken(tk"),f(u(": Token")),p("){"),p("        // look up action table"),p("        var shifted = false;"),f("        tk !== null && "),f(a),p("tokenQueue.push(tk);"),f("        while(!"),f(a),f("stop && "),f(a),p("tokenQueue.length > 0){"),f("            var t = "),f(a),p("tokenQueue[0];"),f("            var cstate = "),f(a),f("lrState["),f(a),p("lrState.length - 1];"),f("            var ind = "),f(a),p("disact[cstate] + t.id;"),p("            var act = 0;"),f("            if(ind < 0 || ind >= "),f(a),f("pact.length || "),f(a),p("checkact[ind] !== cstate){"),f("                act = -"),f(a),p("defred[cstate] - 1;"),p("            }"),p("            else {"),f("                act = "),f(a),p("pact[ind];"),p("            }"),f("            if(act === "),f(a),p("actERR){"),p("                // explicit error"),f("                "),f(a),p("syntaxError(t);"),f("                "),f(a),p("tokenQueue.shift();"),p("            }"),p("            else if(act > 0){"),p("                // shift"),p("                if(t.id === 0){"),p("                    // end of file"),f("                    "),f(a),p("stop = true;"),f("                    "),f(a),p("emit('accept');"),f("                    "),f(a),p("tokenQueue.shift();"),p("                }"),p("                else {"),f("                    "),f(a),p("lrState.push(act - 1);"),f("                    "),f(a),f("sematicS.push("),f(a),p("sematicVal);"),f("                    "),f(a),p("sematicVal = null;"),f("                    "),f(a),p("tryReduce();"),p("                    // token consumed"),f("                    "),f(a),p("tokenQueue.shift();"),p("                }"),p("            }"),p("            else if(act < 0){"),f("                "),f(a),p("doReduction(-act - 1);"),f("                "),f(a),p("tryReduce();"),p("            }"),p("            else {"),p("                // error"),f("                "),f(a),p("syntaxError(t);"),p("                // force consume"),f("                "),f(a),p("tokenQueue.shift();"),p("            }"),p("        }"),p("    }"),f("    function "),f(a),p("tryReduce(){"),f("        var cstate = "),f(a),f("lrState["),f(a),p("lrState.length - 1];"),p("        var act;"),f("        while("),f(a),f("disact[cstate] === -"),f(a),f("tokenCount && (act = "),f(a),p("defred[cstate]) !== -1){"),f("            "),f(a),p("doReduction(act);"),f("            cstate = "),f(a),f("lrState["),f(a),p("lrState.length - 1];"),p("        }"),p("    }"),f("    function "),f(a),f("syntaxError(t"),f(u(": Token")),p("){"),p('        var msg = "unexpected token " + t.toString() + ", expecting one of the following token(s):\\n"'),f("        msg += "),f(a),f("expected("),f(a),f("lrState["),f(a),p("lrState.length - 1]);"),f("        "),f(a),p('emit("syntaxerror", msg, t);'),p("    }"),f("    function "),f(a),f("expected(state"),f(u(": number")),p("){"),f("        var dis = "),f(a),p("disact[state];"),p("        var ret = '';"),f("        function expect(tk"),f(u(": number")),p("){"),p("            var ind = dis + tk;"),f("            if(ind < 0 || ind >= "),f(a),f("pact.length || state !== "),f(a),p("checkact[ind]){"),f("                return "),f(a),p("defred[state] !== -1;"),p("            }"),p("            else {"),p("                return true;"),p("            }"),p("        }"),f("        for(var tk = 0; tk < "),f(a),p("tokenCount; tk++){"),p('            expect(tk) && (ret += "    " + tokenToString(tk) + " ..." + \'\\n\');'),p("        }"),p("        return ret;"),p("    }"),p("}"),f(l(t.file.epilogue))},Ot={};function Ft(t,e){Ot[t]=e}function Ut(t,e,n){if(void 0===Ot[t])throw'template for language "'+t+'" is not implemented yet';Ot[t](e,n)}Ft("typescript",function(t,e){_t(t,e),e.save(t.file.name+".ts")}),Ft("javascript",function(t,e){_t(t,e),e.save(t.file.name+".js")});function Bt(){var t=0,e=0,n=[],r=new H({createData:function(){return{id:-1,data:[]}},stringify:function(t){return"("+t.id+")"},union:function(r,i){-1===r.id?r.id=i.id:r.id<e&&(r.id=void 0!==n[r.id]?n[r.id]:n[r.id]=t++);for(var a=0,o=i.data;a<o.length;a++){var s=o[a];r.data.push(s)}}});return{addClass:function(i,a){var o=t;e=t++,n.length=0,i.forEach(function(t,e,n){r.add(t,e,{id:o,data:[a]})})},done:function(){return n.length=0,t=0,r.forEach(function(e,r,i){i.data.id=void 0!==n[i.data.id]?n[i.data.id]:n[i.data.id]=t++}),{classCount:t,classSet:r}}}}var Mt=function(){function t(t,e){void 0===e&&(e=255),this.maxAsicii=e;function n(t,e,n){for(;t<=e;t++)a[t]=n}var r=Bt();t.forEachArc(function(t,e,n){r.addClass(t.chars,t)});var i=r.done();this.classCount=i.classCount,this.states=t.states;var a=this.classTable=L(e+1,function(t){return-1}),o=this.unicodeClassTable=[],s=L(i.classCount*t.states.length,function(t){return null});i.classSet.forEach(function(t,r,a){t>e?o.push(a.data.id,t,r):r<=e?n(t,r,a.data.id):(n(t,e,a.data.id),e<r&&o.push(a.data.id,e+1,r));for(var u=0,l=a.data.data;u<l.length;u++){var c=l[u];s[c.from.index*i.classCount+a.data.id]=c}});var u=N(function(t,e,n){for(var r=[],i=0;i<t;i++){r.push(0);for(var a=0;a<e;a++)null===n[i*e+a]&&r[i]++}return{rows:t,columns:e,isEmpty:function(t,r){return null===n[t*e+r]},emptyCount:function(t){return r[t]}}}(this.states.length,i.classCount,s));this.disnext=u.dps,this.pnext=L(u.len,function(t){return null}),this.checknext=L(u.len,function(t){return-1});for(var l=0;l<this.states.length;l++)for(var c=0;c<this.classCount;c++){var h=s[l*this.classCount+c];null!==h&&(this.pnext[this.disnext[l]+c]=h,this.checknext[this.disnext[l]+c]=l)}this._trim()}return t.prototype._trim=function(){for(;null===this.pnext[this.pnext.length-1];)this.pnext.pop(),this.checknext.pop()},t.prototype.lookup=function(t,e){var n=this.disnext[t]+e;return n>=0&&n<this.pnext.length&&this.checknext[n]===t?this.pnext[n]:null},t.prototype.print=function(t){for(var e=0,n=0;n<this.classTable.length;n++)-1!==this.classTable[n]&&(t.write(((r=n)>=32&&r<=126?"'"+String.fromCharCode(r)+"'":"\\x"+r.toString(16))+" -> c"+this.classTable[n]+", "),e++>9&&(t.writeln(),e=0));var r;t.writeln(),e=0;n=0;for(var i=this.unicodeClassTable;n<i.length;n+=3)t.write("\\x"+i[n+1]+"-\\x"+i[n+2]+" -> c"+i[n]+", "),e++>4&&(t.writeln(),e=0);t.writeln();for(var a=0;a<this.states.length;a++){t.writeln("state "+a+":");var o=this.states[a];null!==o.endAction&&t.writeln("    end = "+o.endAction.id);for(n=0;n<this.classCount;n++){var s=this.lookup(a,n);null!==s&&t.writeln("    c"+n+": state "+s.to.index)}}},t}();function Pt(t,e){for(var n,i,a,o,s=[],h=[],f=[],p=!1,d=[],m={warn:J,err:Z,printItemSets:function(t){t.writeln(i.size+" state(s) in total,finished in "+a+" iteration(s)."),i.forEach(function(e){t.writeln(e.toString({showTrailer:!0}))})},printTable:function(t){!function(t,e,n){var i=e.g,a=i.tokenCount,o=i.nts.length;n.forEach(function(n){var s=n.stateIndex,l="",h="",f="";t.writeln("state "+s),n.forEach(function(e){t.writeln(u+e.toString({showTrailer:!1}))}),-1!==e.defred[s]?t.writeln(u+"default action: reduce with rule "+e.defred[s]):t.writeln(u+"no default action");for(var p=0;p<a;p++)null!==(d=e.lookupShift(s,p))&&d!==g.NULL&&(d.actionType===c.SHIFT?l+=""+u+x(i.tokens[p])+" : shift, and go to state "+d.shift.stateIndex+r:h+=""+u+x(i.tokens[p])+" : reduce with rule "+d.rule.index+r);for(p=0;p<o;p++){var d;null!==(d=e.lookupGoto(s,p))&&(f+=""+u+i.nts[p].sym+" : go to state "+d.shift.stateIndex+r)}t.writeln(l+h+f),t.writeln("")})}(t,o,i)},printDFA:function(t){for(var e=0,r=n.dfaTables;e<r.length;e++){var i=r[e];i.print(t),t.writeln(),t.writeln()}},testParse:function(t,e){return function(t,e,n,r){for(var i=[],a=0,o=n;a<o.length;a++){var s=o[a],u=void 0;if(/<[^>]+>/.test(s)){if(null===(u=t.findTokenByName(s.substr(1,s.length-2))))return r("cannot recognize "+s+" as a token"),[]}else{var l=t.findTokensByAlias(s);if(0===l.length)return r('cannot recognize "'+s+'" as a token'),[];if(l.length>1){for(var h="",f=0,p=l;f<p.length;f++)h+="<"+p[f].sym+"> ";return r('cannot recognize "'+s+'" as a token, since it can be '+h),[]}u=l[0]}i.push(u)}var d=[0],v=[],m=[];function k(){return d[d.length-1]}function b(t){d.push(t);var e=i.shift();v.push(x(e))}function y(t){d.length-=t.rhs.length,v.length-=t.rhs.length,v.push(t.lhs.sym);var n=e.lookupGoto(k(),t.lhs.index).shift.stateIndex;d.push(n)}function S(){for(var t="",e=0,n=v;e<n.length;e++)t+=n[e]+" ";t+="| ";for(var r=0,a=i;r<a.length;r++)t+=x(a[r]),t+=" ";return t}for(m.push(S());;){var T=e.lookupShift(k(),i[0]?i[0].index:0);if(null!==T){if(T===g.NULL){m.push("syntax error!");break}if(T.actionType===c.SHIFT){if(0===i.length){m.push("accepted!");break}b(T.shift.stateIndex)}else if(T.actionType===c.REDUCE){if(y(T.rule))break}else console.assert(!1)}else{var w=e.defred[k()];if(-1===w){m.push("syntax error!");break}y(t.rules[w])}m.push(S())}return m}(R,o,t,e)},printError:function(t,e){for(var n=0,r=s;n<r.length;n++){var i=r[n];t.writeln(i.toString(e))}t.writeln()},printWarning:function(t,e){for(var n=0,r=h;n<r.length;n++){var i=r[n];t.writeln(i.toString(e))}t.writeln()},printDetailedTime:function(t){for(var e=0,n=d;e<n.length;e++){var r=n[e];t.writeln(r.name+": "+(r.end.valueOf()-r.start.valueOf())/1e3+"s")}},hasWarning:function(){return h.length>0},hasError:tt,warningSummary:function(){return h.length+" warning(s), "+s.length+" error(s)"},getTemplateInput:function(){return{endl:"\n",output:null===k.output?"typescript":k.output.val,pt:o,file:n}},requireLines:function(t){return f.push(t)},isTerminated:function(){return p},beginTime:W,endTime:Y},k=Dt(m,t),b=t.split("\n"),T=0,I=f;T<I.length;T++){(0,I[T])(m,b)}if(tt())return p=!0,m;k.name=e;var R=k.grammar;n=k;for(var N=0,L=R.tokens;N<L.length;N++){var _=L[N];if(!_.used){for(var O="token <"+_.sym+"> is never used, definations are(is):"+r,F=0,U=_.appears;F<U.length;F++){O+=X(U[F],b)+r}J(new C(O))}}for(var B=0,M=R.nts;B<M.length;B++){var P=M[B];P.used||J(new C('non terminal "'+P.sym+'" is unreachable'))}if(null!==k.output&&(V=k.output.val,void 0===Ot[V])){O="template for '"+k.output.val+"' is not implemented yet "+X(k.output,b)+r;O+="available templates are: "+Object.keys(Ot).join(", "),Z(new A(O))}var V;if(tt())return p=!0,m;W("generate first sets"),R.genFirstSets(),Y(),W("generate item sets");var H=E(R);Y(),i=H.result,a=H.iterations,W("generate parse table");var G=function(t,e){var n=[];function r(e,r,i){var a=t.tokens[r.getShift()];if(a.assoc!==v.UNDEFINED){var o=i.rule.pr;if(-1!==o){if(o>a.pr)return i;if(o<a.pr)return r;if(a.assoc===v.LEFT)return i;if(a.assoc===v.RIGHT)return r;if(a.assoc===v.NON)return g.NULL;l.assert(!1)}}var s=new w;return s.type=y.SR,s.set=e,s.token=a,s.used=r,s.discarded=i,n.push(s),r}function i(e,r,i,a){var o=t.tokens[a];if(-1!==r.rule.pr&&-1!==i.rule.pr&&r.rule.pr!==i.rule.pr)return r.rule.pr>i.rule.pr?r:i;var s=r.rule.index>i.rule.index?i:r,u=r.rule.index>i.rule.index?r:i,l=new w;return l.type=y.RR,l.set=e,l.token=o,l.used=s,l.discarded=u,n.push(l),s}var a=new S(t,e.size);return e.forEach(function(e){e.forEach(function(n){if(n.actionType===c.SHIFT){var o=n.getShift();if(t.isToken(o)){var s=e.stateIndex*t.tokenCount+o;null!==(h=a.shift[s])?h.actionType===c.REDUCE?a.shift[s]=r(e,n,h):l.assert(h.shift===n.shift):a.shift[s]=n}else s=e.stateIndex*t.nts.length+(-o-1),a.gotot[s]=n}else if(n.actionType===c.REDUCE){for(var u=0;u<t.tokenCount;u++)if(n.lah.contains(u+1)){var h,f=e.stateIndex*t.tokenCount+u;null!==(h=a.shift[f])?h.actionType===c.REDUCE?a.shift[f]=i(e,h,n,u):h.actionType===c.SHIFT&&(a.shift[f]=r(e,h,n)):a.shift[f]=n}}else l.assert(!1)})}),{result:a,conflicts:n}}(R,i);Y(),G.result.findDefAct(),W("compress parse table"),o=new D(G.result),Y();for(var K=0,j=G.conflicts;K<j.length;K++){var z=j[K];J(new C(z.toString()))}W("generate lexical DFA tables");for(var Q=0,q=n.lexDFA;Q<q.length;Q++){var $=q[Q];n.dfaTables.push(new Mt($))}return Y(),m;function W(t){d.push({name:t,start:new Date,end:null})}function Y(){d[d.length-1].end=new Date}function J(t){h.push(t)}function Z(t){s.push(t)}function tt(){return s.length>0}}var Vt=Object.freeze({compress:N,IntervalSet:H,createClassFinder:Bt});function Ht(t){var e=t.lastIndexOf(".");return-1===e?t:t.substr(0,e)}t.io=s,t.genResult=Pt,t.generateCode=Ut,t.debug=Vt,t.main=function(t){var e=t.stdout,n=function(t){return e.writeln(t)},r=null;do{var i=new Date;if((r=Pt(t.input,Ht(t.inputFile))).hasWarning()&&r.printWarning(e),r.hasError()){r.printError(e),r.isTerminated()&&n("compilation terminated");break}if(t.outputFile){var o=new a;r.beginTime("generate output file"),r.printDFA(o),r.printTable(o),r.endTime(),t.writeFile(t.outputFile,o.s)}var s=r.getTemplateInput(),u=new a;if(r.beginTime("generate parser code"),Ut(s.output,s,{save:function(e){return t.writeFile(e,u.s)},write:function(t){return u.write(t)},writeln:function(t){return u.writeln(t)}}),r.endTime(),t.testInput){n("preparing for test");for(var l=0,c=r.testParse(t.testInput.split(/[ ]+/g),function(t){return n(t)});l<c.length;l++){var h=c[l];n(h)}}n("compilation done in "+((new Date).valueOf()-i.valueOf())/1e3+"s"),t.printDetailedTime&&r.printDetailedTime(e)}while(0);return n(r.warningSummary()),r.hasError()?-1:0},t.setDebugger=function(t){return l.log=t.log},t.setTab=function(t){return u=t},t.defineTemplate=Ft,Object.defineProperty(t,"__esModule",{value:!0})});
