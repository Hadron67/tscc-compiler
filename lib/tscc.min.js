!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e(t.tscc={})}(this,function(t){"use strict";var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])};function n(t,n){e(t,n);function r(){this.constructor=t}t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}var r=function(){function t(){this.endl="\n"}return t.prototype.writeln=function(t){t&&this.write(t),this.write(this.endl)},t}(),a=function(t){n(e,t);function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.s="",e}return e.prototype.write=function(t){this.s+=t},e.prototype.reset=function(){this.s=""},e}(r);function i(t){var e=[];return{peek:function(){return e.length>0?e[e.length-1]:t.peek()},next:function(){return e.length>0?e.pop():t.next()},backup:function(t){e.push(t)}}}var o=Object.freeze({OutputStream:r,StringOS:a,StringIS:function(t){var e=0;return{peek:function(){return t.charAt(e)||null},next:function(){var t=this.peek();return e++,t}}},biss:i}),s={assert:function(t){if(!t)throw new Error("Assertion failed")},log:function(t){}};var l,u=32,c=function(){function t(t){this._size=t,this._s=new Array(Math.ceil(t/u));for(var e=0;e<this._s.length;e++)this._s[e]=0}return t.prototype.add=function(t){var e=Math.floor(t/u),n=t-e*u,r=this._s[e];return this._s[e]|=1<<n,r!==this._s[e]},t.prototype.addAll=function(){for(var t=0;t<this._s.length;t++)this._s[t]=-1},t.prototype.remove=function(t){var e=Math.floor(t/u),n=t-e*u,r=this._s[e];return this._s[e]&=~(1<<n),r!==this._s[e]},t.prototype.removeAll=function(){for(var t=0;t<this._s.length;t++)this._s[t]=0},t.prototype.contains=function(t){var e=Math.floor(t/u),n=t-e*u;return 0!=(this._s[e]&1<<n)},t.prototype.union=function(t,e){for(var n=!1,r=0;r<this._s.length;r++){var a=this._s[r],i=t._s[r];e&&(i&=e._s[r]),this._s[r]|=i,n=this._s[r]!==a||n}return n},t.prototype.hasIntersection=function(t){for(var e=0;e<this._s.length;e++)if(0!=(this._s[e]&t._s[e]))return!0;return!1},t.prototype.equals=function(t){for(var e=0;e<this._s.length;e++)if(this._s[e]!==t._s[e])return!1;return!0},t.prototype.forEach=function(t){for(var e=0;e<this._size;e++)this.contains(e)&&t(e)},t.prototype.hash=function(){for(var t="",e=0;e<this._s.length;e++)t+=this._s[e].toString(16)+"-";return t},t}(),h=function(t){n(e,t);function e(e){return t.call(this,e)||this}return e.prototype.toString=function(t){var e="",n=!0;this.contains(0)&&(e+='""',n=!1);for(var r=0;r<t.tokenCount;r++)if(this.contains(r+1)){n||(e+=", ");var a=t.tokens[r];e+=null===a.alias?"<"+a.sym+">":'"'+a.alias+'"',n=!1}return e},e}(c);(f=l||(l={}))[f.NONE=1]="NONE",f[f.SHIFT=2]="SHIFT",f[f.REDUCE=3]="REDUCE";var f,p=function(){function t(t,e){this.marker=0,this.shift=null,this.actionType=l.NONE,this.changed=!0,this.rule=t,this.isKernel=e,this.lah=new h(t.g.tokenCount)}return t.prototype.canShift=function(){return this.rule.rhs.length>this.marker},t.prototype.getShift=function(){return this.rule.rhs[this.marker]},t.prototype.toString=function(t){var e=t&&t.showlah||!1,n=t&&t.showTrailer||!1,r="[ "+this.rule.toString(this.marker)+(e?", { "+this.lah.toString(this.rule.g)+" }":"")+" ]";if(this.isKernel&&(r+="*"),n)switch(this.actionType){case l.NONE:r+="(-)";break;case l.SHIFT:r+="(s"+this.shift.stateIndex+")";break;case l.REDUCE:r+="(r)"}return r},t.prototype.hash=function(){return this.rule.index+"-"+this.marker},t.prototype.hasRRConflictWith=function(t){return this.actionType===l.REDUCE&&t.actionType===l.REDUCE&&this.rule.index!==t.rule.index&&this.lah.hasIntersection(t.lah)},t.prototype.getFollowSet=function(t){var e,n=this.rule.g;for(e=this.marker+1;e<this.rule.rhs.length;e++){var r=this.rule.rhs[e];if(n.isToken(r)){t.add(r+1);break}var a=n.nts[-r-1].firstSet;if(t.union(a),t.remove(0),!a.contains(0))break}e===this.rule.rhs.length&&t.union(this.lah)},t.NULL={},t}(),d=function(){function t(t){this.items=[],this.itemTable=[],this.reduces=[],this.complete=!1,this.index=-1,this.stateIndex=0,this.prev=null,this.next=null,this.merges=[],this.g=t,this.data=this}return t.prototype.add=function(t,e,n,r,a){var i=this.itemTable[t.index]=this.itemTable[t.index]||[],o=i[e];if(void 0===o){var s=new p(t,n);return s.marker=e,r&&s.lah.union(r),i[e]=s,this.items.push(s),e===t.rhs.length&&this.reduces.push(s),!0}if(r){var u=o.lah.union(r);return a&&u&&o.canShift()&&(o.actionType=l.NONE),u&&(o.changed=!0),u}},t.prototype.contains=function(){},t.prototype.closure=function(){for(var t=!0,e=new h(this.g.tokenCount),n=this;t;){t=!1;for(var r=0,a=this.items;r<a.length;r++){var i=a[r];if(i.changed&&i.canShift()){var o=i.getShift();o<0&&(e.removeAll(),i.getFollowSet(e),this.g.forEachRuleOfNt(-o-1,function(r){return t=n.add(r,0,!1,e,!1)||t,!1}))}i.changed=!1}}},t.prototype.toString=function(t){var e="s"+this.stateIndex;if(null!==this.index?e+="(i"+this.index:e+="(i?",this.merges.length>0){e+=", merged from ";for(var n=0;n<this.merges.length;n++)n>0&&(e+=", "),e+="i"+this.merges[n]}e+=")\n";for(var r=0,a=this.items;r<a.length;r++){e+=a[r].toString(t)+"\n"}return e},t.prototype.kernelHash=function(){for(var t=0,e=0,n=this.items;e<n.length;e++){var r=n[e];r.isKernel&&(t+=r.rule.index<<5+r.rule.index+r.marker)}return String(t)},t.prototype.forEach=function(t){for(var e=0,n=this.items;e<n.length;e++){t(n[e])}},t.prototype.canMergeTo=function(t){for(var e=!0,n=0;n<this.g.rules.length;n++){var r=this.itemTable[n],a=t.itemTable[n];if(e=e&&!!(r&&a||!r&&!a),r||a)for(var i=this.g.rules[n].rhs,o=0;o<=i.length;o++){if(r&&r[o]&&r[o].isKernel&&(!a||!a[o]||!a[o].isKernel)||a&&a[o]&&a[o].isKernel&&(!r||!r[o]||!r[o].isKernel))return!1;e=e&&(!r&&!r&&!r[o]&&!a[o]||r&&a&&r[o]&&a[o]&&r[o].lah.equals(a[o].lah))}}if(!e)for(var s=0,l=this.reduces;s<l.length;s++)for(var u=l[s],c=0,h=t.reduces;c<h.length;c++){var f=h[c];if(u.rule!==f.rule&&u.lah.hasIntersection(f.lah))return!1}return!0},t.prototype.mergeTo=function(t){for(var e=!1,n=0,r=t.items;n<r.length;n++){var a=r[n];e=this.add(a.rule,a.marker,a.isKernel,a.lah,!0)||e}return this.merges.push(t.index),e},t}(),v=function(){function t(){this.size=0,this.head={prev:null,next:null,data:null},this.tail={prev:null,next:null,data:null},this.head.next=this.tail,this.tail.prev=this.head}return t.prototype.append=function(t){t.prev=this.tail.prev,t.next=this.tail,this.tail.prev.next=t,this.tail.prev=t,this.size++},t.prototype.pull=function(){var t=this.head.next;return this.head.next=t.next,t.next.prev=this.head,t.prev=t.next=null,this.size--,t.data},t.prototype.isEmpty=function(){return 0===this.size},t.prototype.forEach=function(t){for(var e=this.head.next;e!==this.tail;e=e.next)t(e.data)},t.prototype.remove=function(t){t.next.prev=t.prev,t.prev.next=t.next,this.size--},t.prototype.iterator=function(){var t=this.head,e=this;return function(){return t!==e.tail?(t=t.next).data:null}},t}();(g=t.Assoc||(t.Assoc={}))[g.UNDEFINED=0]="UNDEFINED",g[g.LEFT=1]="LEFT",g[g.RIGHT=2]="RIGHT",g[g.NON=3]="NON";var g;function m(t){return null===t.alias?"<"+t.sym+">":'"'+t.alias+'"'}function k(t,e){for(var n="",r=0;r<t.length;r++){var a=t.charAt(r);n+=e[a]||a}return n}var b=function(){function t(){this._s=[]}return t.prototype.append=function(t,e){return void 0===e&&(e=!0),this._s.length>0&&this._s[this._s.length-1].escape===e?this._s[this._s.length-1].content+=t:this._s.push({content:t,escape:e}),this},t.prototype.toString=function(t){for(var e="",n=0,r=this._s;n<r.length;n++){var a=r[n],i=a.content;t&&a.escape&&(i=k(i,t)),e+=i}return e},t}();var T,E=function(){function t(t,e){this.defred=null,this.g=t;var n=t.tokenCount,r=t.nts.length;this.stateCount=e,this.shift=new Array(n*e),this.gotot=new Array(r*e);for(var a=0;a<this.shift.length;a++)this.shift[a]=null;for(a=0;a<this.gotot.length;a++)this.gotot[a]=null}return t.prototype.forEachShift=function(t){for(var e=0;e<this.stateCount;e++)for(var n=0;n<this.g.tokens.length;n++){var r=this.lookupShift(e,n);r&&t(r,e,n)}},t.prototype.forEachGoto=function(t){for(var e=0;e<this.stateCount;e++)for(var n=0;n<this.g.nts.length;n++){var r=this.lookupGoto(e,n);r&&t(r,e,n)}},t.prototype.lookupShift=function(t,e){return this.shift[this.g.tokenCount*t+e]},t.prototype.lookupGoto=function(t,e){return this.gotot[this.g.nts.length*t+e]},t.prototype._getDefRed=function(t,e){for(var n=0;n<e.length;n++)e[n]=0;for(var r=0;r<this.g.tokenCount;r++){var a=this.lookupShift(t,r);a&&a.actionType===l.REDUCE&&e[a.rule.index]++}var i=0;for(n=0;n<e.length;n++)e[n]>e[i]&&(i=n);return e[i]>0?i:-1},t.prototype.findDefAct=function(){this.defred=new Array(this.stateCount);for(var t=new Array(this.g.rules.length),e=0;e<this.stateCount;e++){var n=this._getDefRed(e,t);if(this.defred[e]=n,-1!==n)for(var r=0;r<this.g.tokens.length;r++){var a=this.lookupShift(e,r);a&&a.actionType===l.REDUCE&&a.rule.index===n&&(this.shift[this.g.tokenCount*e+r]=null)}}},t}();(x=T||(T={}))[x.RR=0]="RR",x[x.SR=1]="SR";var x,S=function(){function t(){}return t.prototype.toString=function(){return"state "+this.set.stateIndex+", "+t.cNames[this.type]+" conflict:\n    token: "+m(this.token)+"\n    used rule: "+this.used.toString()+"\n    discarded rule: "+this.discarded.toString()},t.cNames=["reduce/reduce","shift/reduce"],t}();function y(t){var e={},n=0;function r(t){var n=t.kernelHash();void 0===e[n]&&(e[n]=[]),e[n].push(t)}function a(t,n){var r=e[t.kernelHash()];if(void 0!==r)for(var a=0;a<r.length&&!n(r[a]);a++);}var i=1,o=new v,u=new v,c=new v;for(o.append(function(t){var e=t.nts[0].rules[0],n=new d(t);n.index=0;var r=new h(t.tokenCount);return r.add(1),n.add(e,0,!0,r,!1),n}(t));!o.isEmpty()||!u.isEmpty();){var f=null;if(!u.isEmpty()){(p=f=u.pull()).forEach(function(e){if(e.actionType===l.NONE){s.assert(e.canShift());var n=e.getShift(),r=new d(t);r.index=i++,o.append(r),p.forEach(function(t){if(t.canShift()){t.getShift()===n&&(t.actionType=l.SHIFT,t.shift=r,r.add(t.rule,t.marker+1,!0,t.lah,!1))}})}}),p.complete=!0,c.append(p)}for(;!o.isEmpty();){var p;(p=o.pull()).closure(),p.forEach(function(t){t.canShift()||(t.actionType=l.REDUCE)});var g=null;a(p,function(t){return!!t.canMergeTo(p)&&(t.mergeTo(p)&&t.complete&&(g=t),null!==f&&f.forEach(function(e){e.actionType===l.SHIFT&&e.shift===p&&(e.shift=t)}),p=null,!0)}),null!==g?(c.remove(g),u.append(g),g.complete=!1):null!==p&&(u.append(p),r(p))}n++}var m=0;return c.forEach(function(t){t.stateIndex=m++}),{result:c,iterations:n}}!function(){function t(t){this.msg=t}t.prototype.toString=function(){return this.msg}}();var A=function(){function t(t,e){void 0===e&&(e="Error"),this.msg=t,this.type=e}return t.prototype.toString=function(t){void 0===t&&(t={});var e=new b;return t.typeClass?e.append('<span class="'+t.typeClass+'">'+e+"</span>",!1):e.append(this.type),e.append(": "),e.append(this.msg),e},t}(),C=(function(t){n(e,t);function e(e,n){var r=t.call(this,e,"CompilationError")||this;return r.line=n,r}e.prototype.toString=function(e){return t.prototype.toString.call(this).append("(at line "+this.line+")")}}(A),function(t){n(e,t);function e(e){return t.call(this,e,"Warning")||this}return e}(A));function R(t){var e=[];return{add:function(n){var r;for(r=0;r<e.length&&!((0===r||t(n,e[r-1])>=0)&&t(n,e[r])<=0);r++);!function(t,n){e.push(null);for(var r=e.length-1;r>t;r--)e[r]=e[r-1];e[t]=n}(r,n)},done:function(){return e}}}var w=function(){return function(t,e){this.emptyCount=t,this.row=e,this.dp=0}}();function I(t){function e(e,n){return(n-=o[e].dp)<0||n>=t.columns||t.isEmpty(o[e].row,n)}function n(n,r){for(var a=0;a<t.columns;a++)if(!e(n,a))for(var i=0;i<n;i++)if(!e(i,a+r))return!1;return!0}function r(e){for(var r=0;-r<t.columns&&t.isEmpty(o[e].row,-r);)r--;for(;!n(e,r);)r++;return r}for(var a=R(function(t,e){return t.emptyCount<e.emptyCount?-1:t.emptyCount>e.emptyCount?1:0}),i=0;i<t.rows;i++)a.add(new w(t.emptyCount(i),i));for(var o=a.done(),s=0,l=0,u=new Array(t.rows),c=0;-c<t.columns&&t.isEmpty(o[0].row,-c);)c--;u[o[0].row]=o[0].dp=c;for(i=1;i<o.length;i++){var h=o[i].row,f=r(i);u[h]=o[i].dp=f,f>s&&(s=f),f<l&&(l=f)}return{dps:u,len:s+t.columns}}function O(t,e){for(var n=new Array(t),r=0;r<t;r++)n[r]=e(r);return n}var N=function(){function t(t){this.g=t.g,this.defred=t.defred,this.stateCount=t.stateCount;var e=I(function(t){for(var e=[],n=0;n<t.stateCount;n++){e.push(0);for(var r=0;r<t.g.tokens.length;r++)null===t.lookupShift(n,r)&&e[n]++}return{rows:t.stateCount,columns:t.g.tokens.length,isEmpty:function(e,n){return null===t.lookupShift(e,n)},emptyCount:function(t){return e[t]}}}(t)),n=I(function(t){for(var e=[],n=0;n<t.stateCount;n++){e.push(0);for(var r=0;r<t.g.nts.length;r++)null===t.lookupShift(n,r)&&e[n]++}return{rows:t.stateCount,columns:t.g.nts.length,isEmpty:function(e,n){return null===t.lookupGoto(e,n)},emptyCount:function(t){return e[t]}}}(t));this.disact=e.dps,this.disgoto=n.dps,this.pact=O(e.len,function(){return null}),this.checkact=O(e.len,function(){return 0});var r=this;t.forEachShift(function(t,e,n){s.assert(null===r.pact[r.disact[e]+n]),r.pact[r.disact[e]+n]=t,r.checkact[r.disact[e]+n]=e}),this.pgoto=O(n.len,function(){return null}),this.checkgoto=O(n.len,function(){return 0}),t.forEachGoto(function(t,e,n){s.assert(null===r.pgoto[r.disgoto[e]+n]),r.pgoto[r.disgoto[e]+n]=t,r.checkgoto[r.disgoto[e]+n]=e}),this._trim()}return t.prototype._trim=function(){for(;null===this.pact[this.pact.length-1];)this.pact.pop(),this.checkact.pop();for(;null===this.pgoto[this.pgoto.length-1];)this.pgoto.pop(),this.checkgoto.pop()},t.prototype.lookupShift=function(t,e){var n=this.disact[t]+e;return n>=0&&n<this.pact.length&&this.checkact[n]===t?this.pact[this.disact[t]+e]:null},t.prototype.lookupGoto=function(t,e){var n=this.disgoto[t]+e;return n>=0&&n<this.pgoto.length&&this.checkgoto[n]===t?this.pgoto[this.disgoto[t]+e]:null},t}(),L=function(){function e(t,e,n){this.g=t,this.lhs=e,this.pos=n,this.pr=-1,this.rhs=[],this.action=null,this.index=0,this.vars={},this.usedVars={}}return e.prototype.calcPr=function(){if(-1===this.pr)for(var e=this.rhs.length-1;e>=0;e--){var n=this.rhs[e];n>=0&&this.g.tokens[n].assoc!==t.Assoc.UNDEFINED&&(this.pr=this.g.tokens[n].pr)}},e.prototype.getVarSp=function(t,e){if(1!==this.lhs.parents.length)return this.lhs.parents.length>1?e("LHS of the rule is referenced by more than one rule"):e("this rule is unreachable"),null;for(var n=this.rhs.length,r=this.lhs.parents[0].pos,a=this.lhs.parents[0].rule;;){var i=a.vars[t];if(void 0!==i&&i.val<r)return n+=r-i.val;if(1!==a.lhs.parents.length)return a.lhs.parents.length>1?e('"'+a.lhs.sym+'" is referenced by more than one rule or unreachable'):e("variable is undefined"),null;n+=r,r=a.lhs.parents[0].pos,a=a.lhs.parents[0].rule}},e.prototype.toString=function(t){for(var e=this.index+": "+this.lhs.sym+" =>",n=0;n<this.rhs.length;n++){var r=this.rhs[n];t===n&&(e+=" ."),e+=r>=0?" "+m(this.g.tokens[r]):" "+this.g.nts[-r-1].sym}return t===this.rhs.length&&(e+=" ."),e},e}(),_=function(){function t(){this.tokens=[],this.tokenCount=0,this.nts=[],this.rules=[]}return t.prototype.isToken=function(t){return t>=0},t.prototype.forEachRule=function(t){for(var e=0;e<this.nts.length;e++)for(var n=this.nts[e].rules,r=0;r<n.length;r++)t(e,n[r])},t.prototype.forEachRuleOfNt=function(t,e){for(var n=this.nts[t].rules,r=0;r<n.length&&!e(n[r]);r++);},t.prototype.genFirstSets=function(){var t=!0,e=new h(this.tokens.length);for(e.addAll(),e.remove(0);t;){t=!1;for(var n=0;n<this.nts.length;n++)for(var r=this.nts[n].rules,a=this.nts[n].firstSet,i=0;i<r.length;i++){for(var o=r[i],s=0;s<o.rhs.length;s++){var l=o.rhs[s];if(this.isToken(l)){t=a.add(l+1)||t;break}if(n!==(l=-l-1)&&(t=a.union(this.nts[l].firstSet,e)||t),!this.nts[l].firstSet.contains(0))break}s===o.rhs.length&&(t=a.add(0)||t)}}},t.prototype.toString=function(t){void 0===t&&(t={});var e=(t=t||{}).endl||e,n=t.escape||!1,r="";if(this.forEachRule(function(t,n){var a=n.toString();r+=a+e}),t.firstSets)for(var a=0;a<this.nts.length;a++){var i=this.nts[a];r+="First("+i.sym+") = { "+i.firstSet.toString(this)+" }"+e}return n&&(r=r.replace(/</g,"&lt;").replace(/>/g,"&gt;")),r.replace(/\n/g,e)},t.prototype.findTokenByName=function(t){for(var e=0,n=this.tokens;e<n.length;e++){var r=n[e];if(r.sym===t)return r}return null},t.prototype.findTokensByAlias=function(t){for(var e=[],n=0,r=this.tokens;n<r.length;n++){var a=r[n];a.alias===t&&e.push(a)}return e},t}(),D=function(){return function(){this.eol="\n",this.grammar=null,this.lexDFA=[],this.dfaTables=[],this.opt={},this.prefix="jj",this.header=[],this.tokenHookArg=null,this.tokenHookBody=null,this.output=null,this.extraArgs=null,this.initArg=null,this.initBody=null,this.epilogue=null,this.sematicType=null}}(),F=Number.POSITIVE_INFINITY,P=Number.NEGATIVE_INFINITY,U=function(){function t(t,e){this.data=null,this.a=t,this.b=e}return t.prototype.insertBefore=function(t,e,n){if(this.parent.isValid(this)&&!this.parent.noMerge&&this.a===e+1)return this.a=t,this;var r=this.parent.createInterval(t,e,n);return r.prev=this.prev,r.next=this,this.prev.next=r,this.prev=r,r},t.prototype.contains=function(t){return this.a<=t&&this.b>=t},t.prototype.overlaps=function(t,e){return!(t>this.b||e<this.a)},t.prototype.insertAfter=function(t,e,n){if(this.parent.isValid(this)&&!this.parent.noMerge&&this.b===t-1)return this.b=e,this;var r=this.parent.createInterval(t,e,n);return r.prev=this,r.next=this.next,this.next.prev=r,this.next=r,r},t.prototype.splitLeft=function(t){if(t>this.a){var e=this.insertBefore(this.a,t-1,this.data);return this.a=t,e}return this},t.prototype.splitRight=function(t){if(t<this.b){var e=this.insertAfter(t+1,this.b,this.data);return this.b=t,e}return this},t.prototype.remove=function(){return this.prev.next=this.next,this.next.prev=this.prev,this},t.prototype.checkMerge=function(){return this.a!==P&&null!==this.prev.a&&this.a===this.prev.b+1&&(this.a=this.prev.a,this.prev.remove()),this.b!==F&&null!==this.next.a&&this.b===this.next.a-1&&(this.b=this.next.b,this.next.remove()),this},t.prototype.toString=function(t){var e="";function n(t){return t===F?"+oo":t===P?"-oo":t.toString()}var r=(t||n)(this.a),a=(t||n)(this.b);return this.a===this.b?e+=r:(e+=this.a===P?"("+r:"["+r,e+=",",e+=this.b===F?a+")":a+"]"),this.data&&(e+=this.parent.dataOp.stringify(this.data)),e},t}();function B(t,e){if(t>e)throw new Error('illegal argument: "a"('+t+') must be no more than "b"('+e+")")}var M,H=function(){function t(t){this.head=new U(0,0),this.head.parent=this,this.tail=new U(null,null),this.tail.parent=this,this.head.next=this.tail,this.tail.prev=this.head,this.noMerge=void 0!==t,this.dataOp=t||null}return t.prototype.isValid=function(t){return t!==this.head&&t!==this.tail},t.prototype.createInterval=function(t,e,n){void 0===n&&(n=null);var r=new U(t,e);return r.parent=this,this.dataOp&&(r.data=this.dataOp.createData(),null!==n&&this.dataOp.union(r.data,n)),r},t.prototype.fitPoint=function(t,e){for(var n=this.head;n!==this.tail;n=n.next)if((n===this.head||t>n.b)&&(n.next===this.tail||e<n.next.a))return n;return null},t.prototype.overlaped=function(t,e){for(var n=null,r=null,a=this.head.next;a!==this.tail&&!a.overlaps(t,e);a=a.next);if(a===this.tail)return null;for(n=r=a;a!==this.tail&&a.overlaps(t,e);a=a.next)r=a;return[n,r]},t.prototype.add=function(t,e,n){void 0===e&&(e=t);var r=this.noMerge;B(t,e);var a=this.overlaped(t,e);if(null===a)this.fitPoint(t,e).insertAfter(t,e,n);else if(r){a[0].contains(t)?a[0].splitLeft(t):a[0].insertBefore(t,a[0].a-1,n),a[1].contains(e)?a[1].splitRight(e):a[1].insertAfter(a[1].b+1,e,n);for(var i=a[0];i!==a[1];i=i.next)this.dataOp.union(i.data,n),i.b+1<i.next.a&&(i.insertAfter(i.b+1,i.next.a-1,n),i=i.next);this.dataOp.union(a[1].data,n)}else{var o=t<a[0].a?t:a[0].a,s=e>a[1].b?e:a[1].b;a[0].a=o,a[0].b=s,a[0].next=a[1].next,a[1].next.prev=a[0],a[0].checkMerge()}return this},t.prototype.remove=function(t,e){B(t,e);var n=this.overlaped(t,e);return null!==n&&(n[0].contains(t)&&n[0].splitLeft(t),n[1].contains(e)&&n[1].splitRight(e),n[0].prev.next=n[1].next,n[1].next.prev=n[0].prev),this},t.prototype.removeAll=function(){return this.head.next=this.tail,this.tail.prev=this.head,this},t.prototype.forEach=function(t){for(var e=this.head.next;e!==this.tail;e=e.next)t(e.a,e.b,e);return this},t.prototype.union=function(t){for(var e=t.head.next;e!==t.tail;e=e.next)this.add(e.a,e.b);return this},t.prototype.contains=function(t){for(var e=this.head.next;e!==this.tail;e=e.next)if(e.contains(t))return!0;return!1},t.prototype.toString=function(t){for(var e="",n=!1,r=this.head.next;r!==this.tail;r=r.next)n&&(e+=","),n=!0,e+=r.toString(t);return""===e?"phi":e},t}(),K=function(t){n(e,t);function e(e){return t.call(this,e)||this}return e.prototype.addAll=function(){t.prototype.add.call(this,0,F)},e.prototype.constainsAll=function(){var t=this.head.next;return t.next===this.tail&&0===t.a&&t.b===F},e.prototype.toString=function(){return t.prototype.toString.call(this,function(t){return t!==F&&t!==P?t>=32&&t<=126?"'"+String.fromCharCode(t)+"'":"\\x"+t.toString(16):t===F?"oo":"-oo"})},e}(H);(G=M||(M={}))[G.START=0]="START",G[G.END=1]="END",G[G.NONE=2]="NONE";var G,V=function(){return function(t,e){this.chars=new K,this.from=t,this.to=e}}(),Q=function(){return function(){this.priority=0,this.least=!1,this.id=0,this.data=null}}(),j=function(){function t(t){this.valid=!1,this.arcs=[],this.epsilons=[],this.index=0,this.isStart=!1,this.isEnd=!1,this.marker=!1,this.endAction=null,this.endAction=t||null}return t.prototype.findArc=function(t){for(var e=0,n=this.arcs;e<n.length;e++){var r=n[e];if(r.to===t)return r}return null},t.prototype.to=function(t){var e=this.findArc(t);return null===e&&(e=new V(this,t),this.arcs.push(e)),t.valid=!0,e},t.prototype.epsilonTo=function(t){this.epsilons.push(t)},t.prototype.hasDefinate=function(){return 1===this.arcs.length&&this.arcs[0].chars.constainsAll()},t.prototype.iterator=function(t){void 0===t&&(t=!1);var e=[this],n=[this];return this.marker=!0,function(){if(e.length>0){var r=e.pop();if(!t)for(var a=0,i=r.arcs;a<i.length;a++){var o=i[a].to;o.marker||(e.push(o),n.push(o),o.marker=!0)}for(var s=0,l=r.epsilons;s<l.length;s++){var u=l[s];u.marker||(e.push(u),n.push(u),u.marker=!0)}return r}for(var c=0,h=n;c<h.length;c++){h[c].marker=!1}return null}},t.prototype.forEach=function(t,e){void 0===e&&(e=!1);var n=[this],r=[this];for(this.marker=!0;n.length>0;){var a=n.pop();if(t(a),!e)for(var i=0,o=a.arcs;i<o.length;i++){var s=o[i].to;s.marker||(n.push(s),r.push(s),s.marker=!0)}for(var l=0,u=a.epsilons;l<u.length;l++){var c=u[l];c.marker||(n.push(c),r.push(c),c.marker=!0)}}for(var h=0,f=r;h<f.length;h++){f[h].marker=!1}},t.prototype.number=function(){var t=0;this.forEach(function(e){e.index=t++})},t.prototype.print=function(t,e,n){void 0===n&&(n=!0);var r="\n",a="    ";function i(n){e&&(n=k(n,e)),t.writeln(n)}function o(t){var e="";e+="state "+t.index,t.isStart&&(e+="(start)"),t.endAction&&(e+="(end "+t.endAction.id+")"),e+=r;for(var n=0;n<t.arcs.length;n++){var i=t.arcs[n];e+=""+a+i.chars.toString()+" -> state "+i.to.index+r}if(t.epsilons.length>0){e+=a+"epsilon: ";for(n=0;n<t.epsilons.length;n++)n>0&&(e+=","),e+=t.epsilons[n].index.toString();e+=r}return e}n?this.forEach(function(t){i(o(t))}):i(o(this))},t.prototype.toString=function(t,e){void 0===e&&(e=!0);var n=new a;return this.print(n,t,e),n.s},t.prototype.copyEndFrom=function(t){null!==t.endAction&&(null!==this.endAction?this.endAction.priority<t.endAction.priority&&(this.endAction=t.endAction):this.endAction=t.endAction)},t.prototype.removeEpsilons=function(){var t=[this];this.forEach(function(e){e.valid&&t.push(e)});for(var e=0;e<t.length;e++){var n=t[e];n.forEach(function(t){if(t!==n){for(var e=0;e<t.arcs.length;e++){var r=t.arcs[e];n.to(r.to).chars.union(r.chars)}n.copyEndFrom(t)}},!0),n.epsilons.length=0}for(e=0;e<t.length;e++)t[e].index=e},t.prototype.count=function(){var t=0;return this.forEach(function(){t++}),t},t.prototype.size=function(){var t=0;return this.forEach(function(){t++}),t},t.prototype.allChars=function(t){for(var e=0;e<this.arcs.length;e++){var n=this.arcs[e];n.chars.forEach(function(e,r){t.add(e,r,[n.to])})}},t.prototype.getState=function(t){for(var e=0;e<this.arcs.length;e++){var n=this.arcs[e];if(n.chars.contains(t))return n.to}return null},t.prototype.hasArc=function(){return this.arcs.length>0},t.prototype.clone=function(){},t.prototype.toDFA=function(){var t={},e=[],n=0,r=this.count(),a=new K({createData:function(){return[]},union:function(t,e){for(var n=0,r=e;n<r.length;n++){for(var a=r[n],i=!1,o=0,s=t;o<s.length;o++){if(a===s[o]){i=!0;break}}!i&&t.push(a)}},stringify:function(t){return""}}),i=new W(r,[this]);i.index=n++,e.push(i),t[i.hash()]=i;for(var o=[i];o.length>0;){var s=o.shift();a.removeAll(),s.allChars(a),a.forEach(function(a,i,l){var u=new W(r,l.data),c=u.hash();t[c]?u=t[c]:(t[c]=u,(null===u.endAction||!u.endAction.least)&&o.push(u),u.index=n++,e.push(u)),s.to(u).chars.add(a,i)})}return i.release(),{head:i,states:e}},t}(),W=function(t){n(e,t);function e(e,n){var r=t.call(this)||this;r.isEnd=r.isStart=!1,r.valid=!0,r.states=n,r.stateSet=new c(e);for(var a=0;a<n.length;a++)r.stateSet.add(n[a].index),r.copyEndFrom(n[a]),r.isStart=r.isStart||n[a].isStart;return r}return e.prototype.hash=function(){return this.stateSet.hash()},e.prototype.allChars=function(t){for(var e=0;e<this.states.length;e++)this.states[e].allChars(t)},e.prototype.forEach=function(e){t.prototype.forEach.call(this,e)},e.prototype.release=function(){this.forEach(function(t){t.states.length=0})},e}(j),z=function(){function t(t){this.states=t,this.start=t[0]}return t.prototype.forEachArc=function(t){for(var e=0,n=this.states;e<n.length;e++)for(var r=n[e],a=0,i=r.arcs;a<i.length;a++){var o=i[a];t(o,r,o.to)}},t.prototype.print=function(t,e){for(var n=0,r=this.states;n<r.length;n++){r[n].print(t,e,!1),t.writeln()}},t.prototype.matcher=function(t){var e,n=i(t),r=[],a=[],o=null,s=n.peek();function l(){null!==o&&r.push(s),a.push(s),n.next(),s=n.peek()}function u(){for(e=o,o=null;r.length>0;)n.backup(r.pop()),a.pop()}var c=this;return function(){s=n.peek(),e=c.start,a.length=0,r.length=0,o=null;for(var t;;)if(null!==e.endAction){if(!e.hasArc())return{matched:a.join(""),action:e.endAction};if(null===(t=null!==s?e.getState(s.charCodeAt(0)):null))return{matched:a.join(""),action:e.endAction};r.length=0,o=e,e=t,l()}else{if(null===(t=null!==s?e.getState(s.charCodeAt(0)):null)){if(null!==o)return u(),{matched:a.join(""),action:e.endAction};if(null===s)return null;throw new Error('unexpected character "'+s+'"')}e=t,l()}}},t}(),Y=function(){function t(t){this.getRes=t,this._blocked={}}return t.prototype.wait=function(t,e){var n=this.getRes(t);void 0===n?(this._blocked[t]||(this._blocked[t]=[]),this._blocked[t].push(e)):e(!0,n)},t.prototype.signal=function(t,e){var n=this._blocked[t];if(void 0!==n){for(var r=0,a=n;r<a.length;r++){(0,a[r])(!0,e)}delete this._blocked[t]}},t.prototype.fail=function(){for(var t in this._blocked)for(var e=0,n=this._blocked[t];e<n.length;e++){(0,n[e])(!1,null)}},t}();function q(t){return{val:t,startLine:-1,startColumn:0,endLine:0,endColumn:0}}function X(t,e,n){t.endLine=e.endLine,t.endColumn=e.endColumn,t.val=n}function $(t,e,n){void 0===n&&(n="^");function r(t){for(var e=0,n=0;n<t.length;n++)e+=t.charCodeAt(n)>255?2:1;return e}if(-1!==t.startLine){var a="(line "+(t.startLine+1)+", column "+(t.startColumn+1)+"):\n",i=t.startLine,o=t.startColumn;a+=e[i]+"\n",a+=function(t,e){for(var n="";e-- >0;)n+=t;return n}(" ",o);for(var s=r(e[i]);i<t.endLine||o<=t.endColumn;)a+=n,o++>=s&&(o=0,a+="\n"+e[++i]+"\n",s=r(e[i]));return a}return"<internal position>"}var J=[170,170,181,181,186,186,192,214,216,246,248,705,710,721,736,740,748,748,750,750,880,884,886,887,890,893,902,902,904,906,908,908,910,929,931,1013,1015,1153,1162,1319,1329,1366,1369,1369,1377,1415,1488,1514,1520,1522,1568,1610,1646,1647,1649,1747,1749,1749,1765,1766,1774,1775,1786,1788,1791,1791,1808,1808,1810,1839,1869,1957,1969,1969,1994,2026,2036,2037,2042,2042,2048,2069,2074,2074,2084,2084,2088,2088,2112,2136,2208,2208,2210,2220,2308,2361,2365,2365,2384,2384,2392,2401,2417,2423,2425,2431,2437,2444,2447,2448,2451,2472,2474,2480,2482,2482,2486,2489,2493,2493,2510,2510,2524,2525,2527,2529,2544,2545,2565,2570,2575,2576,2579,2600,2602,2608,2610,2611,2613,2614,2616,2617,2649,2652,2654,2654,2674,2676,2693,2701,2703,2705,2707,2728,2730,2736,2738,2739,2741,2745,2749,2749,2768,2768,2784,2785,2821,2828,2831,2832,2835,2856,2858,2864,2866,2867,2869,2873,2877,2877,2908,2909,2911,2913,2929,2929,2947,2947,2949,2954,2958,2960,2962,2965,2969,2970,2972,2972,2974,2975,2979,2980,2984,2986,2990,3001,3024,3024,3077,3084,3086,3088,3090,3112,3114,3123,3125,3129,3133,3133,3160,3161,3168,3169,3205,3212,3214,3216,3218,3240,3242,3251,3253,3257,3261,3261,3294,3294,3296,3297,3313,3314,3333,3340,3342,3344,3346,3386,3389,3389,3406,3406,3424,3425,3450,3455,3461,3478,3482,3505,3507,3515,3517,3517,3520,3526,3585,3632,3634,3635,3648,3654,3713,3714,3716,3716,3719,3720,3722,3722,3725,3725,3732,3735,3737,3743,3745,3747,3749,3749,3751,3751,3754,3755,3757,3760,3762,3763,3773,3773,3776,3780,3782,3782,3804,3807,3840,3840,3904,3911,3913,3948,3976,3980,4096,4138,4159,4159,4176,4181,4186,4189,4193,4193,4197,4198,4206,4208,4213,4225,4238,4238,4256,4293,4295,4295,4301,4301,4304,4346,4348,4680,4682,4685,4688,4694,4696,4696,4698,4701,4704,4744,4746,4749,4752,4784,4786,4789,4792,4798,4800,4800,4802,4805,4808,4822,4824,4880,4882,4885,4888,4954,4992,5007,5024,5108,5121,5740,5743,5759,5761,5786,5792,5866,5870,5872,5888,5900,5902,5905,5920,5937,5952,5969,5984,5996,5998,6e3,6016,6067,6103,6103,6108,6108,6176,6263,6272,6312,6314,6314,6320,6389,6400,6428,6480,6509,6512,6516,6528,6571,6593,6599,6656,6678,6688,6740,6823,6823,6917,6963,6981,6987,7043,7072,7086,7087,7098,7141,7168,7203,7245,7247,7258,7293,7401,7404,7406,7409,7413,7414,7424,7615,7680,7957,7960,7965,7968,8005,8008,8013,8016,8023,8025,8025,8027,8027,8029,8029,8031,8061,8064,8116,8118,8124,8126,8126,8130,8132,8134,8140,8144,8147,8150,8155,8160,8172,8178,8180,8182,8188,8305,8305,8319,8319,8336,8348,8450,8450,8455,8455,8458,8467,8469,8469,8473,8477,8484,8484,8486,8486,8488,8488,8490,8493,8495,8505,8508,8511,8517,8521,8526,8526,8544,8584,11264,11310,11312,11358,11360,11492,11499,11502,11506,11507,11520,11557,11559,11559,11565,11565,11568,11623,11631,11631,11648,11670,11680,11686,11688,11694,11696,11702,11704,11710,11712,11718,11720,11726,11728,11734,11736,11742,11823,11823,12293,12295,12321,12329,12337,12341,12344,12348,12353,12438,12445,12447,12449,12538,12540,12543,12549,12589,12593,12686,12704,12730,12784,12799,13312,19893,19968,40908,40960,42124,42192,42237,42240,42508,42512,42527,42538,42539,42560,42606,42623,42647,42656,42735,42775,42783,42786,42888,42891,42894,42896,42899,42912,42922,43e3,43009,43011,43013,43015,43018,43020,43042,43072,43123,43138,43187,43250,43255,43259,43259,43274,43301,43312,43334,43360,43388,43396,43442,43471,43471,43520,43560,43584,43586,43588,43595,43616,43638,43642,43642,43648,43695,43697,43697,43701,43702,43705,43709,43712,43712,43714,43714,43739,43741,43744,43754,43762,43764,43777,43782,43785,43790,43793,43798,43808,43814,43816,43822,43968,44002,44032,55203,55216,55238,55243,55291,63744,64109,64112,64217,64256,64262,64275,64279,64285,64285,64287,64296,64298,64310,64312,64316,64318,64318,64320,64321,64323,64324,64326,64433,64467,64829,64848,64911,64914,64967,65008,65019,65136,65140,65142,65276,65313,65338,65345,65370,65382,65470,65474,65479,65482,65487,65490,65495,65498,65500],Z=[170,170,181,181,186,186,192,214,216,246,248,705,710,721,736,740,748,748,750,750,768,884,886,887,890,893,902,902,904,906,908,908,910,929,931,1013,1015,1153,1155,1159,1162,1319,1329,1366,1369,1369,1377,1415,1425,1469,1471,1471,1473,1474,1476,1477,1479,1479,1488,1514,1520,1522,1552,1562,1568,1641,1646,1747,1749,1756,1759,1768,1770,1788,1791,1791,1808,1866,1869,1969,1984,2037,2042,2042,2048,2093,2112,2139,2208,2208,2210,2220,2276,2302,2304,2403,2406,2415,2417,2423,2425,2431,2433,2435,2437,2444,2447,2448,2451,2472,2474,2480,2482,2482,2486,2489,2492,2500,2503,2504,2507,2510,2519,2519,2524,2525,2527,2531,2534,2545,2561,2563,2565,2570,2575,2576,2579,2600,2602,2608,2610,2611,2613,2614,2616,2617,2620,2620,2622,2626,2631,2632,2635,2637,2641,2641,2649,2652,2654,2654,2662,2677,2689,2691,2693,2701,2703,2705,2707,2728,2730,2736,2738,2739,2741,2745,2748,2757,2759,2761,2763,2765,2768,2768,2784,2787,2790,2799,2817,2819,2821,2828,2831,2832,2835,2856,2858,2864,2866,2867,2869,2873,2876,2884,2887,2888,2891,2893,2902,2903,2908,2909,2911,2915,2918,2927,2929,2929,2946,2947,2949,2954,2958,2960,2962,2965,2969,2970,2972,2972,2974,2975,2979,2980,2984,2986,2990,3001,3006,3010,3014,3016,3018,3021,3024,3024,3031,3031,3046,3055,3073,3075,3077,3084,3086,3088,3090,3112,3114,3123,3125,3129,3133,3140,3142,3144,3146,3149,3157,3158,3160,3161,3168,3171,3174,3183,3202,3203,3205,3212,3214,3216,3218,3240,3242,3251,3253,3257,3260,3268,3270,3272,3274,3277,3285,3286,3294,3294,3296,3299,3302,3311,3313,3314,3330,3331,3333,3340,3342,3344,3346,3386,3389,3396,3398,3400,3402,3406,3415,3415,3424,3427,3430,3439,3450,3455,3458,3459,3461,3478,3482,3505,3507,3515,3517,3517,3520,3526,3530,3530,3535,3540,3542,3542,3544,3551,3570,3571,3585,3642,3648,3662,3664,3673,3713,3714,3716,3716,3719,3720,3722,3722,3725,3725,3732,3735,3737,3743,3745,3747,3749,3749,3751,3751,3754,3755,3757,3769,3771,3773,3776,3780,3782,3782,3784,3789,3792,3801,3804,3807,3840,3840,3864,3865,3872,3881,3893,3893,3895,3895,3897,3897,3902,3911,3913,3948,3953,3972,3974,3991,3993,4028,4038,4038,4096,4169,4176,4253,4256,4293,4295,4295,4301,4301,4304,4346,4348,4680,4682,4685,4688,4694,4696,4696,4698,4701,4704,4744,4746,4749,4752,4784,4786,4789,4792,4798,4800,4800,4802,4805,4808,4822,4824,4880,4882,4885,4888,4954,4957,4959,4992,5007,5024,5108,5121,5740,5743,5759,5761,5786,5792,5866,5870,5872,5888,5900,5902,5908,5920,5940,5952,5971,5984,5996,5998,6e3,6002,6003,6016,6099,6103,6103,6108,6109,6112,6121,6155,6157,6160,6169,6176,6263,6272,6314,6320,6389,6400,6428,6432,6443,6448,6459,6470,6509,6512,6516,6528,6571,6576,6601,6608,6617,6656,6683,6688,6750,6752,6780,6783,6793,6800,6809,6823,6823,6912,6987,6992,7001,7019,7027,7040,7155,7168,7223,7232,7241,7245,7293,7376,7378,7380,7414,7424,7654,7676,7957,7960,7965,7968,8005,8008,8013,8016,8023,8025,8025,8027,8027,8029,8029,8031,8061,8064,8116,8118,8124,8126,8126,8130,8132,8134,8140,8144,8147,8150,8155,8160,8172,8178,8180,8182,8188,8204,8205,8255,8256,8276,8276,8305,8305,8319,8319,8336,8348,8400,8412,8417,8417,8421,8432,8450,8450,8455,8455,8458,8467,8469,8469,8473,8477,8484,8484,8486,8486,8488,8488,8490,8493,8495,8505,8508,8511,8517,8521,8526,8526,8544,8584,11264,11310,11312,11358,11360,11492,11499,11507,11520,11557,11559,11559,11565,11565,11568,11623,11631,11631,11647,11670,11680,11686,11688,11694,11696,11702,11704,11710,11712,11718,11720,11726,11728,11734,11736,11742,11744,11775,11823,11823,12293,12295,12321,12335,12337,12341,12344,12348,12353,12438,12441,12442,12445,12447,12449,12538,12540,12543,12549,12589,12593,12686,12704,12730,12784,12799,13312,19893,19968,40908,40960,42124,42192,42237,42240,42508,42512,42539,42560,42607,42612,42621,42623,42647,42655,42737,42775,42783,42786,42888,42891,42894,42896,42899,42912,42922,43e3,43047,43072,43123,43136,43204,43216,43225,43232,43255,43259,43259,43264,43309,43312,43347,43360,43388,43392,43456,43471,43481,43520,43574,43584,43597,43600,43609,43616,43638,43642,43643,43648,43714,43739,43741,43744,43759,43762,43766,43777,43782,43785,43790,43793,43798,43808,43814,43816,43822,43968,44010,44012,44013,44016,44025,44032,55203,55216,55238,55243,55291,63744,64109,64112,64217,64256,64262,64275,64279,64285,64296,64298,64310,64312,64316,64318,64318,64320,64321,64323,64324,64326,64433,64467,64829,64848,64911,64914,64967,65008,65019,65024,65039,65056,65062,65075,65076,65101,65103,65136,65140,65142,65276,65296,65305,65313,65338,65343,65343,65345,65370,65382,65470,65474,65479,65482,65487,65490,65495,65498,65500],tt=[170,170,181,181,186,186,192,214,216,246,248,543,546,563,592,685,688,696,699,705,720,721,736,740,750,750,890,890,902,902,904,906,908,908,910,929,931,974,976,983,986,1011,1024,1153,1164,1220,1223,1224,1227,1228,1232,1269,1272,1273,1329,1366,1369,1369,1377,1415,1488,1514,1520,1522,1569,1594,1600,1610,1649,1747,1749,1749,1765,1766,1786,1788,1808,1808,1810,1836,1920,1957,2309,2361,2365,2365,2384,2384,2392,2401,2437,2444,2447,2448,2451,2472,2474,2480,2482,2482,2486,2489,2524,2525,2527,2529,2544,2545,2565,2570,2575,2576,2579,2600,2602,2608,2610,2611,2613,2614,2616,2617,2649,2652,2654,2654,2674,2676,2693,2699,2701,2701,2703,2705,2707,2728,2730,2736,2738,2739,2741,2745,2749,2749,2768,2768,2784,2784,2821,2828,2831,2832,2835,2856,2858,2864,2866,2867,2870,2873,2877,2877,2908,2909,2911,2913,2949,2954,2958,2960,2962,2965,2969,2970,2972,2972,2974,2975,2979,2980,2984,2986,2990,2997,2999,3001,3077,3084,3086,3088,3090,3112,3114,3123,3125,3129,3168,3169,3205,3212,3214,3216,3218,3240,3242,3251,3253,3257,3294,3294,3296,3297,3333,3340,3342,3344,3346,3368,3370,3385,3424,3425,3461,3478,3482,3505,3507,3515,3517,3517,3520,3526,3585,3632,3634,3635,3648,3654,3713,3714,3716,3716,3719,3720,3722,3722,3725,3725,3732,3735,3737,3743,3745,3747,3749,3749,3751,3751,3754,3755,3757,3760,3762,3763,3773,3773,3776,3780,3782,3782,3804,3805,3840,3840,3904,3911,3913,3946,3976,3979,4096,4129,4131,4135,4137,4138,4176,4181,4256,4293,4304,4342,4352,4441,4447,4514,4520,4601,4608,4614,4616,4678,4680,4680,4682,4685,4688,4694,4696,4696,4698,4701,4704,4742,4744,4744,4746,4749,4752,4782,4784,4784,4786,4789,4792,4798,4800,4800,4802,4805,4808,4814,4816,4822,4824,4846,4848,4878,4880,4880,4882,4885,4888,4894,4896,4934,4936,4954,5024,5108,5121,5740,5743,5750,5761,5786,5792,5866,6016,6067,6176,6263,6272,6312,7680,7835,7840,7929,7936,7957,7960,7965,7968,8005,8008,8013,8016,8023,8025,8025,8027,8027,8029,8029,8031,8061,8064,8116,8118,8124,8126,8126,8130,8132,8134,8140,8144,8147,8150,8155,8160,8172,8178,8180,8182,8188,8319,8319,8450,8450,8455,8455,8458,8467,8469,8469,8473,8477,8484,8484,8486,8486,8488,8488,8490,8493,8495,8497,8499,8505,8544,8579,12293,12295,12321,12329,12337,12341,12344,12346,12353,12436,12445,12446,12449,12538,12540,12542,12549,12588,12593,12686,12704,12727,13312,19893,19968,40869,40960,42124,44032,55203,63744,64045,64256,64262,64275,64279,64285,64285,64287,64296,64298,64310,64312,64316,64318,64318,64320,64321,64323,64324,64326,64433,64467,64829,64848,64911,64914,64967,65008,65019,65136,65138,65140,65140,65142,65276,65313,65338,65345,65370,65382,65470,65474,65479,65482,65487,65490,65495,65498,65500],et=[170,170,181,181,186,186,192,214,216,246,248,543,546,563,592,685,688,696,699,705,720,721,736,740,750,750,768,846,864,866,890,890,902,902,904,906,908,908,910,929,931,974,976,983,986,1011,1024,1153,1155,1158,1164,1220,1223,1224,1227,1228,1232,1269,1272,1273,1329,1366,1369,1369,1377,1415,1425,1441,1443,1465,1467,1469,1471,1471,1473,1474,1476,1476,1488,1514,1520,1522,1569,1594,1600,1621,1632,1641,1648,1747,1749,1756,1759,1768,1770,1773,1776,1788,1808,1836,1840,1866,1920,1968,2305,2307,2309,2361,2364,2381,2384,2388,2392,2403,2406,2415,2433,2435,2437,2444,2447,2448,2451,2472,2474,2480,2482,2482,2486,2489,2492,2492,2494,2500,2503,2504,2507,2509,2519,2519,2524,2525,2527,2531,2534,2545,2562,2562,2565,2570,2575,2576,2579,2600,2602,2608,2610,2611,2613,2614,2616,2617,2620,2620,2622,2626,2631,2632,2635,2637,2649,2652,2654,2654,2662,2676,2689,2691,2693,2699,2701,2701,2703,2705,2707,2728,2730,2736,2738,2739,2741,2745,2748,2757,2759,2761,2763,2765,2768,2768,2784,2784,2790,2799,2817,2819,2821,2828,2831,2832,2835,2856,2858,2864,2866,2867,2870,2873,2876,2883,2887,2888,2891,2893,2902,2903,2908,2909,2911,2913,2918,2927,2946,2947,2949,2954,2958,2960,2962,2965,2969,2970,2972,2972,2974,2975,2979,2980,2984,2986,2990,2997,2999,3001,3006,3010,3014,3016,3018,3021,3031,3031,3047,3055,3073,3075,3077,3084,3086,3088,3090,3112,3114,3123,3125,3129,3134,3140,3142,3144,3146,3149,3157,3158,3168,3169,3174,3183,3202,3203,3205,3212,3214,3216,3218,3240,3242,3251,3253,3257,3262,3268,3270,3272,3274,3277,3285,3286,3294,3294,3296,3297,3302,3311,3330,3331,3333,3340,3342,3344,3346,3368,3370,3385,3390,3395,3398,3400,3402,3405,3415,3415,3424,3425,3430,3439,3458,3459,3461,3478,3482,3505,3507,3515,3517,3517,3520,3526,3530,3530,3535,3540,3542,3542,3544,3551,3570,3571,3585,3642,3648,3662,3664,3673,3713,3714,3716,3716,3719,3720,3722,3722,3725,3725,3732,3735,3737,3743,3745,3747,3749,3749,3751,3751,3754,3755,3757,3769,3771,3773,3776,3780,3782,3782,3784,3789,3792,3801,3804,3805,3840,3840,3864,3865,3872,3881,3893,3893,3895,3895,3897,3897,3902,3911,3913,3946,3953,3972,3974,3979,3984,3991,3993,4028,4038,4038,4096,4129,4131,4135,4137,4138,4140,4146,4150,4153,4160,4169,4176,4185,4256,4293,4304,4342,4352,4441,4447,4514,4520,4601,4608,4614,4616,4678,4680,4680,4682,4685,4688,4694,4696,4696,4698,4701,4704,4742,4744,4744,4746,4749,4752,4782,4784,4784,4786,4789,4792,4798,4800,4800,4802,4805,4808,4814,4816,4822,4824,4846,4848,4878,4880,4880,4882,4885,4888,4894,4896,4934,4936,4954,4969,4977,5024,5108,5121,5740,5743,5750,5761,5786,5792,5866,6016,6099,6112,6121,6160,6169,6176,6263,6272,6313,7680,7835,7840,7929,7936,7957,7960,7965,7968,8005,8008,8013,8016,8023,8025,8025,8027,8027,8029,8029,8031,8061,8064,8116,8118,8124,8126,8126,8130,8132,8134,8140,8144,8147,8150,8155,8160,8172,8178,8180,8182,8188,8255,8256,8319,8319,8400,8412,8417,8417,8450,8450,8455,8455,8458,8467,8469,8469,8473,8477,8484,8484,8486,8486,8488,8488,8490,8493,8495,8497,8499,8505,8544,8579,12293,12295,12321,12335,12337,12341,12344,12346,12353,12436,12441,12442,12445,12446,12449,12542,12549,12588,12593,12686,12704,12727,13312,19893,19968,40869,40960,42124,44032,55203,63744,64045,64256,64262,64275,64279,64285,64296,64298,64310,64312,64316,64318,64318,64320,64321,64323,64324,64326,64433,64467,64829,64848,64911,64914,64967,65008,65019,65056,65059,65075,65076,65101,65103,65136,65138,65140,65140,65142,65276,65296,65305,65313,65338,65343,65343,65345,65370,65381,65470,65474,65479,65482,65487,65490,65495,65498,65500],nt=function(){return function(t){this.label=t,this.opcodes=[]}}();function rt(t){var e,n=new j,r=null,a=[],i=[],o=null,s=!1,l=null,u=!1,c=0,h={},f=[new nt("")],p={DEFAULT:0},d=[],v=null,g=[],m={es3UnicodeIDStart:function(){return y(tt)},es3UnicodeIDPart:function(){return y(et)},es5UnicodeIDStart:function(){return y(J)},es5UnicodeIDPart:function(){return y(Z)}};return{prepareVar:function(e){var n=h[e.val];void 0!==n&&(r='variable "'+e.val+'" was already defined',a=n.pos,i=e,t.requireLines(function(t,e){var n=r+" "+$(i,e)+"\n";n+="previous defination was at "+$(a,e),t.err(new A(n))}));var r,a,i;n=h[e.val]={pos:e,cmds:new nt(e.val)},v=n.cmds},endVar:function(){v=null},prepareLex:function(){d.length=0},selectState:function(t){var n=p[t];void 0===n&&(n=p[t]=f.length,f.push(new nt("")),e.signal(t,n));d.push(f[p[t]])},newState:function(){u=!0,l=null,k(function(){r=new j,n.epsilonTo(r)})},end:function(t,e,n){void 0===n&&(n="(untitled)");for(var a=0,i=d;a<i.length;a++){var o=i[a];o.label="<"+n+">"}k(function(){var n=new Q;n.id=n.priority=c++,n.data=t,n.least=e,r.endAction=n})},enterUnion:function(){k(function(){var t=new j;r.epsilonTo(t),r=new j,t.epsilonTo(r),a.push({head:t,tail:new j})})},endUnionItem:function(){k(function(){var t=a[a.length-1];r.epsilonTo(t.tail),r=new j,t.head.epsilonTo(r)})},leaveUnion:function(){k(function(){r=a.pop().tail})},enterSimple:function(){k(function(){i.push(r)})},simplePostfix:function(t){""===t||(l=null,u=!1),k(function(){var e=i.pop();"?"===t?e.epsilonTo(r):"+"===t?r.epsilonTo(e):"*"===t&&(r.epsilonTo(e),r=e)})},addString:function(t){u?(l=t,u=!1):l=null;k(function(){for(var e=0;e<t.length;e++){var n=new j;r.to(n).chars.add(t.charCodeAt(e)),r=n}})},addVar:function(t){u=!1,l=null,k(function(){var e=h[t.val];if(void 0!==e){for(var n=e.cmds,r=0;r<g.length;r++){var a=g[r];if(a.cmds===n){var i="circular dependence in lexical variable detected: "+n.label;for(r++;r<g.length;r++)i+=" -> "+g[r].cmds.label;return void T(i+=" -> "+n.label,t)}}g.push({pc:0,cmds:n})}else T('use of undefined variable "'+t.val+'"',t)})},beginSet:E,addSetItem:function(t,e){if(1!==t.val.length)return void T('character expected in union, got "'+t.val+'"',t);if(t!==e&&1!==e.val.length)return void T('character expected in union, got "'+e.val+'"',e);if(t.val.charCodeAt(0)>e.val.charCodeAt(0))return void T("character code of right hand side must be larger than left hand side in wild card character (got '"+t.val+"' > '"+e.val+"')",e);x(t.val.charCodeAt(0),e.val.charCodeAt(0))},addSetItemRaw:x,endSet:S,build:function(){for(var t=[],n=0,r=f;n<r.length;n++){var a=r[n];t.push(b(a))}return e.fail(),t},importVar:function(t){var e=m[t.val];if(void 0===e)return void T('import variable "'+t.val+'" does not exist',t);e()},getPossibleAlias:function(){return l},requiringState:e=new Y(function(t){return p[t]})};function k(t){if(null!==v)v.opcodes.push(t);else for(var e=0,n=d;e<n.length;e++){n[e].opcodes.push(t)}}function b(t){if((n=r=new j).isStart=!0,a.length=0,i.length=0,o=null,s=!1,g.length=0,g.push({pc:0,cmds:t}),t.opcodes.length>0)for(;g.length>0;){var e=g[g.length-1];e.cmds.opcodes[e.pc++](),(e=g[g.length-1]).pc>=e.cmds.opcodes.length&&g.pop()}n.removeEpsilons();var l=n.toDFA();return new z(l.states)}function T(e,n){t.requireLines(function(t,r){t.err(new A(e+" "+$(n,r),"Compilation error"))})}function E(t){u=!1,l=null,k(function(){s=t;var e=new j;o=r.to(e),r=e,t&&o.chars.addAll()})}function x(t,e){k(function(){s?o.chars.remove(t,e):o.chars.add(t,e)})}function S(){k(function(){o=null})}function y(t){if(t.length%2!=0)throw new Error("invalid character set array");E(!1);for(var e=0,n=t;e<n.length;e+=2)x(n[e],n[e+1]);S()}}function at(t){return function(e){e.pushLexState(t)}}var it,ot=function(){function t(){this.token=null,this.actions=[]}return t.prototype.toCode=function(t){for(var e=0,n=this.actions;e<n.length;e++){var r=n[e];null!==r&&r(t)}},t.prototype.returnToken=function(t){this.token=t},t.prototype.raw=function(t){this.actions.push(function(e){return e.raw(t)})},t.prototype.pushState=function(t){this.actions.push(at(t))},t.prototype.placeHolder=function(){var t=this.actions.length;return this.actions.push(null),t},t.prototype.set=function(t,e){this.actions[t]=e},t.prototype.popState=function(){this.actions.push(function(t){return t.popLexState()})},t.prototype.beginBlock=function(t,e){this.actions.push(function(n){return n.beginBlock(t,e)})},t.prototype.setImg=function(t){this.actions.push(function(e){return e.setImg(t)})},t.prototype.endBlock=function(t){this.actions.push(function(e){return e.endBlock(t)})},t.prototype.lhs=function(){this.actions.push(function(t){return t.lhs()})},t.prototype.tokenObj=function(){this.actions.push(function(t){return t.tokenObj()})},t.prototype.matched=function(){this.actions.push(function(t){return t.matched()})},t}();(st=it||(it={}))[st.TOKEN=0]="TOKEN",st[st.STRING=1]="STRING",st[st.NAME=2]="NAME";var st;function lt(t){return{val:t.val,ext:null,startLine:t.startLine,startColumn:t.startColumn,endLine:t.endLine,endColumn:t.endColumn}}function ut(t){return{val:null,ext:null,startLine:t.startLine,startColumn:t.startColumn,endLine:t.endLine,endColumn:t.endColumn}}var ct={n:"\n",f:"\f",b:"\b",r:"\r",t:"\t","\\":"\\",'"':'"',"'":"'"};function ht(t){for(var e="",n=0;n<t.length;){var r=t.charAt(n);if("\\"===r){if(r=t.charAt(++n),ct[r])e+=ct[r],n++;else if("u"===r||"x"===r||"U"===r||"X"===r){r=t.charAt(++n);for(var a="";/[0-9a-fA-F]/.test(r);)a+=r,r=t.charAt(++n);e+=String.fromCharCode(parseInt(a,16))}}else e+=r,n++}return e}var ft="\n".charCodeAt(0),pt="\r".charCodeAt(0),dt=[{pnext:[50,50,141,50,50,50,50,50,51,50,50,50,50,50,50,50,112,50,50,50,50,50,50,112,50,50,52,50,50,50,112,112,112,112,112,112,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,30,30,140,30,31,30,30,30,30,30,30,30,30,30,30,30,95,30,30,30,30,30,30,95,30,30,32,30,30,30,95,95,95,95,95,95,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,50,50,139,50,50,50,50,50,51,50,50,50,50,50,50,50,112,50,50,50,50,50,50,112,50,50,52,50,50,50,112,112,112,112,112,112,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,30,30,138,30,31,30,30,30,30,30,30,30,30,30,30,30,95,30,30,30,30,30,30,95,30,30,32,30,30,30,95,95,95,95,95,95,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,50,50,137,50,50,50,50,50,51,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,52,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,30,30,136,30,31,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,32,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,33,33,135,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,50,50,134,50,50,50,50,50,51,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,52,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,33,33,133,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,30,30,132,30,31,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,32,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,50,50,131,50,50,50,50,50,51,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,52,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,33,33,130,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,30,30,129,30,31,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,32,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,128,16,17,18,19,20,21,6,6,22,127,23,24,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,25,26,27,28,34,82,90,66,70,59,83,67,62,63,35,91,71,126,60,53,125,34,34,54,124,84,123,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,122,121,36,37,120,119,118,117,116,35,115,114,113,111,110,109,34,34,108,107,106,105,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,104,103,36,37,102,101,100,99,98,35,97,96,93,92,89,88,34,34,87,86,85,81,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,80,79,36,37,78,77,76,72,69,35,68,65,64,61,58,55,34,34,29,1,-1,-1,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-1,-1,36,37,-1,-1,-1,-1,-1,35,-1,-1,-1,-1,-1,-1,34,34,-1,-1,-1,-1,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-1,-1,36,37,-1,-1,-1,-1,-1,35,-1,-1,-1,-1,-1,-1,34,34,-1,-1,-1,-1,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,38,-1,-1,36,37,-1,-1,-1,-1,-1,-1,-1,73,-1,-1,-1,73,-1,-1,-1,-1,-1,-1,39,-1,-1,-1,40,-1,-1,41,42,74,43,73,44,45,46,47,73,48,49,56,73,-1,-1,56,-1,-1,-1,73,-1,-1,73,-1,73,74,-1,74,-1,94,-1,57,-1,56,-1,-1,94,-1,56,-1,-1,-1,56,94,94,94,94,94,94,56,-1,75,56,-1,56,57,-1,57,75,-1,-1,-1,-1,-1,-1,75,75,75,75,75,75],disnext:[740,953,-57,951,684,627,1020,1065,570,-57,-57,-57,-57,-57,-57,800,-57,-57,-57,929,-57,-57,-57,-57,-57,-57,-57,-57,974,-57,513,-57,1110,456,928,882,836,790,-57,909,760,914,763,913,903,755,900,905,757,896,399,-57,1080,-57,342,-57,285,1138,892,896,892,906,891,872,767,867,861,860,870,867,759,858,867,228,1116,171,870,852,852,863,852,847,847,843,-57,859,826,819,830,824,824,825,822,-57,114,57,804,803,823,817,805,-57,802,-57,802,804,796,-57,796,776,779,-57,0,766,-57,780,721,709,-57,640,587,525,-57,486,-57,-57,428,-57,-57,358,-57,-57,307,242,198,130,80,-57,16,-57,-37,-57],checknext:[112,112,140,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,95,95,138,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,94,94,136,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,75,75,135,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,73,73,134,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,56,56,133,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,54,54,132,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,50,50,129,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,33,33,126,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,30,30,123,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,8,8,121,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,5,5,120,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,4,119,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,117,0,0,0,0,0,0,0,0,0,116,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,64,70,45,48,40,64,45,42,42,37,70,48,115,40,15,113,37,37,15,110,64,109,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,36,108,106,37,37,105,104,102,100,99,36,98,97,96,92,91,90,36,36,89,88,87,86,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,35,85,83,36,36,82,81,80,79,78,35,77,76,72,71,69,68,35,35,67,66,65,63,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,34,62,61,35,35,60,59,58,49,47,34,46,44,43,41,39,19,34,34,3,1,-1,-1,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,28,-1,-1,34,34,-1,-1,-1,-1,-1,28,-1,-1,-1,-1,-1,-1,28,28,-1,-1,-1,-1,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,6,-1,-1,28,28,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,6,6,-1,-1,-1,-1,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,-1,-1,6,6,-1,-1,-1,-1,-1,-1,-1,52,-1,-1,-1,52,-1,-1,-1,-1,-1,-1,7,-1,-1,-1,7,-1,-1,7,7,52,7,52,7,7,7,7,52,7,7,32,52,-1,-1,32,-1,-1,-1,52,-1,-1,52,-1,52,52,-1,52,-1,74,-1,32,-1,32,-1,-1,74,-1,32,-1,-1,-1,32,74,74,74,74,74,74,32,-1,57,32,-1,32,32,-1,32,57,-1,-1,-1,-1,-1,-1,57,57,57,57,57,57],maxAsicii:255,classTable:[0,0,0,0,0,0,0,0,0,1,2,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,4,5,6,7,0,8,9,10,11,12,13,14,0,15,16,16,16,16,16,16,16,16,16,16,17,18,19,20,21,22,0,23,23,23,23,23,23,6,6,6,6,6,6,6,6,6,6,6,6,6,6,24,6,6,24,6,6,25,26,27,28,29,0,30,31,32,33,34,35,36,37,38,6,39,40,41,42,43,44,6,45,46,47,48,6,49,50,51,6,52,53,54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,55,0,0,0,0,0,0,0,0,0,0,55,0,0,0,0,55,0,0,0,0,0,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,0,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,0,55,55,55,55,55,55,55,55],unicodeClassTable:[55,256,705,0,706,709,55,710,721,0,722,735,55,736,740,0,741,747,55,748,748,0,749,749,55,750,750,0,751,767,56,768,879,55,880,884,0,885,885,55,886,887,0,888,889,55,890,893,0,894,901,55,902,902,0,903,903,55,904,906,0,907,907,55,908,908,0,909,909,55,910,929,0,930,930,55,931,1013,0,1014,1014,55,1015,1153,0,1154,1154,56,1155,1159,0,1160,1161,55,1162,1319,0,1320,1328,55,1329,1366,0,1367,1368,55,1369,1369,0,1370,1376,55,1377,1415,0,1416,1424,56,1425,1469,0,1470,1470,56,1471,1471,0,1472,1472,56,1473,1474,0,1475,1475,56,1476,1477,0,1478,1478,56,1479,1479,0,1480,1487,55,1488,1514,0,1515,1519,55,1520,1522,0,1523,1551,56,1552,1562,0,1563,1567,55,1568,1610,56,1611,1641,0,1642,1645,55,1646,1647,56,1648,1648,55,1649,1747,0,1748,1748,55,1749,1749,56,1750,1756,0,1757,1758,56,1759,1764,55,1765,1766,56,1767,1768,0,1769,1769,56,1770,1773,55,1774,1775,56,1776,1785,55,1786,1788,0,1789,1790,55,1791,1791,0,1792,1807,55,1808,1808,56,1809,1809,55,1810,1839,56,1840,1866,0,1867,1868,55,1869,1957,56,1958,1968,55,1969,1969,0,1970,1983,56,1984,1993,55,1994,2026,56,2027,2035,55,2036,2037,0,2038,2041,55,2042,2042,0,2043,2047,55,2048,2069,56,2070,2073,55,2074,2074,56,2075,2083,55,2084,2084,56,2085,2087,55,2088,2088,56,2089,2093,0,2094,2111,55,2112,2136,56,2137,2139,0,2140,2207,55,2208,2208,0,2209,2209,55,2210,2220,0,2221,2275,56,2276,2302,0,2303,2303,56,2304,2307,55,2308,2361,56,2362,2364,55,2365,2365,56,2366,2383,55,2384,2384,56,2385,2391,55,2392,2401,56,2402,2403,0,2404,2405,56,2406,2415,0,2416,2416,55,2417,2423,0,2424,2424,55,2425,2431,0,2432,2432,56,2433,2435,0,2436,2436,55,2437,2444,0,2445,2446,55,2447,2448,0,2449,2450,55,2451,2472,0,2473,2473,55,2474,2480,0,2481,2481,55,2482,2482,0,2483,2485,55,2486,2489,0,2490,2491,56,2492,2492,55,2493,2493,56,2494,2500,0,2501,2502,56,2503,2504,0,2505,2506,56,2507,2509,55,2510,2510,0,2511,2518,56,2519,2519,0,2520,2523,55,2524,2525,0,2526,2526,55,2527,2529,56,2530,2531,0,2532,2533,56,2534,2543,55,2544,2545,0,2546,2560,56,2561,2563,0,2564,2564,55,2565,2570,0,2571,2574,55,2575,2576,0,2577,2578,55,2579,2600,0,2601,2601,55,2602,2608,0,2609,2609,55,2610,2611,0,2612,2612,55,2613,2614,0,2615,2615,55,2616,2617,0,2618,2619,56,2620,2620,0,2621,2621,56,2622,2626,0,2627,2630,56,2631,2632,0,2633,2634,56,2635,2637,0,2638,2640,56,2641,2641,0,2642,2648,55,2649,2652,0,2653,2653,55,2654,2654,0,2655,2661,56,2662,2673,55,2674,2676,56,2677,2677,0,2678,2688,56,2689,2691,0,2692,2692,55,2693,2701,0,2702,2702,55,2703,2705,0,2706,2706,55,2707,2728,0,2729,2729,55,2730,2736,0,2737,2737,55,2738,2739,0,2740,2740,55,2741,2745,0,2746,2747,56,2748,2748,55,2749,2749,56,2750,2757,0,2758,2758,56,2759,2761,0,2762,2762,56,2763,2765,0,2766,2767,55,2768,2768,0,2769,2783,55,2784,2785,56,2786,2787,0,2788,2789,56,2790,2799,0,2800,2816,56,2817,2819,0,2820,2820,55,2821,2828,0,2829,2830,55,2831,2832,0,2833,2834,55,2835,2856,0,2857,2857,55,2858,2864,0,2865,2865,55,2866,2867,0,2868,2868,55,2869,2873,0,2874,2875,56,2876,2876,55,2877,2877,56,2878,2884,0,2885,2886,56,2887,2888,0,2889,2890,56,2891,2893,0,2894,2901,56,2902,2903,0,2904,2907,55,2908,2909,0,2910,2910,55,2911,2913,56,2914,2915,0,2916,2917,56,2918,2927,0,2928,2928,55,2929,2929,0,2930,2945,56,2946,2946,55,2947,2947,0,2948,2948,55,2949,2954,0,2955,2957,55,2958,2960,0,2961,2961,55,2962,2965,0,2966,2968,55,2969,2970,0,2971,2971,55,2972,2972,0,2973,2973,55,2974,2975,0,2976,2978,55,2979,2980,0,2981,2983,55,2984,2986,0,2987,2989,55,2990,3001,0,3002,3005,56,3006,3010,0,3011,3013,56,3014,3016,0,3017,3017,56,3018,3021,0,3022,3023,55,3024,3024,0,3025,3030,56,3031,3031,0,3032,3045,56,3046,3055,0,3056,3072,56,3073,3075,0,3076,3076,55,3077,3084,0,3085,3085,55,3086,3088,0,3089,3089,55,3090,3112,0,3113,3113,55,3114,3123,0,3124,3124,55,3125,3129,0,3130,3132,55,3133,3133,56,3134,3140,0,3141,3141,56,3142,3144,0,3145,3145,56,3146,3149,0,3150,3156,56,3157,3158,0,3159,3159,55,3160,3161,0,3162,3167,55,3168,3169,56,3170,3171,0,3172,3173,56,3174,3183,0,3184,3201,56,3202,3203,0,3204,3204,55,3205,3212,0,3213,3213,55,3214,3216,0,3217,3217,55,3218,3240,0,3241,3241,55,3242,3251,0,3252,3252,55,3253,3257,0,3258,3259,56,3260,3260,55,3261,3261,56,3262,3268,0,3269,3269,56,3270,3272,0,3273,3273,56,3274,3277,0,3278,3284,56,3285,3286,0,3287,3293,55,3294,3294,0,3295,3295,55,3296,3297,56,3298,3299,0,3300,3301,56,3302,3311,0,3312,3312,55,3313,3314,0,3315,3329,56,3330,3331,0,3332,3332,55,3333,3340,0,3341,3341,55,3342,3344,0,3345,3345,55,3346,3386,0,3387,3388,55,3389,3389,56,3390,3396,0,3397,3397,56,3398,3400,0,3401,3401,56,3402,3405,55,3406,3406,0,3407,3414,56,3415,3415,0,3416,3423,55,3424,3425,56,3426,3427,0,3428,3429,56,3430,3439,0,3440,3449,55,3450,3455,0,3456,3457,56,3458,3459,0,3460,3460,55,3461,3478,0,3479,3481,55,3482,3505,0,3506,3506,55,3507,3515,0,3516,3516,55,3517,3517,0,3518,3519,55,3520,3526,0,3527,3529,56,3530,3530,0,3531,3534,56,3535,3540,0,3541,3541,56,3542,3542,0,3543,3543,56,3544,3551,0,3552,3569,56,3570,3571,0,3572,3584,55,3585,3632,56,3633,3633,55,3634,3635,56,3636,3642,0,3643,3647,55,3648,3654,56,3655,3662,0,3663,3663,56,3664,3673,0,3674,3712,55,3713,3714,0,3715,3715,55,3716,3716,0,3717,3718,55,3719,3720,0,3721,3721,55,3722,3722,0,3723,3724,55,3725,3725,0,3726,3731,55,3732,3735,0,3736,3736,55,3737,3743,0,3744,3744,55,3745,3747,0,3748,3748,55,3749,3749,0,3750,3750,55,3751,3751,0,3752,3753,55,3754,3755,0,3756,3756,55,3757,3760,56,3761,3761,55,3762,3763,56,3764,3769,0,3770,3770,56,3771,3772,55,3773,3773,0,3774,3775,55,3776,3780,0,3781,3781,55,3782,3782,0,3783,3783,56,3784,3789,0,3790,3791,56,3792,3801,0,3802,3803,55,3804,3807,0,3808,3839,55,3840,3840,0,3841,3863,56,3864,3865,0,3866,3871,56,3872,3881,0,3882,3892,56,3893,3893,0,3894,3894,56,3895,3895,0,3896,3896,56,3897,3897,0,3898,3901,56,3902,3903,55,3904,3911,0,3912,3912,55,3913,3948,0,3949,3952,56,3953,3972,0,3973,3973,56,3974,3975,55,3976,3980,56,3981,3991,0,3992,3992,56,3993,4028,0,4029,4037,56,4038,4038,0,4039,4095,55,4096,4138,56,4139,4158,55,4159,4159,56,4160,4169,0,4170,4175,55,4176,4181,56,4182,4185,55,4186,4189,56,4190,4192,55,4193,4193,56,4194,4196,55,4197,4198,56,4199,4205,55,4206,4208,56,4209,4212,55,4213,4225,56,4226,4237,55,4238,4238,56,4239,4253,0,4254,4255,55,4256,4293,0,4294,4294,55,4295,4295,0,4296,4300,55,4301,4301,0,4302,4303,55,4304,4346,0,4347,4347,55,4348,4680,0,4681,4681,55,4682,4685,0,4686,4687,55,4688,4694,0,4695,4695,55,4696,4696,0,4697,4697,55,4698,4701,0,4702,4703,55,4704,4744,0,4745,4745,55,4746,4749,0,4750,4751,55,4752,4784,0,4785,4785,55,4786,4789,0,4790,4791,55,4792,4798,0,4799,4799,55,4800,4800,0,4801,4801,55,4802,4805,0,4806,4807,55,4808,4822,0,4823,4823,55,4824,4880,0,4881,4881,55,4882,4885,0,4886,4887,55,4888,4954,0,4955,4956,56,4957,4959,0,4960,4991,55,4992,5007,0,5008,5023,55,5024,5108,0,5109,5120,55,5121,5740,0,5741,5742,55,5743,5759,0,5760,5760,55,5761,5786,0,5787,5791,55,5792,5866,0,5867,5869,55,5870,5872,0,5873,5887,55,5888,5900,0,5901,5901,55,5902,5905,56,5906,5908,0,5909,5919,55,5920,5937,56,5938,5940,0,5941,5951,55,5952,5969,56,5970,5971,0,5972,5983,55,5984,5996,0,5997,5997,55,5998,6e3,0,6001,6001,56,6002,6003,0,6004,6015,55,6016,6067,56,6068,6099,0,6100,6102,55,6103,6103,0,6104,6107,55,6108,6108,56,6109,6109,0,6110,6111,56,6112,6121,0,6122,6154,56,6155,6157,0,6158,6159,56,6160,6169,0,6170,6175,55,6176,6263,0,6264,6271,55,6272,6312,56,6313,6313,55,6314,6314,0,6315,6319,55,6320,6389,0,6390,6399,55,6400,6428,0,6429,6431,56,6432,6443,0,6444,6447,56,6448,6459,0,6460,6469,56,6470,6479,55,6480,6509,0,6510,6511,55,6512,6516,0,6517,6527,55,6528,6571,0,6572,6575,56,6576,6592,55,6593,6599,56,6600,6601,0,6602,6607,56,6608,6617,0,6618,6655,55,6656,6678,56,6679,6683,0,6684,6687,55,6688,6740,56,6741,6750,0,6751,6751,56,6752,6780,0,6781,6782,56,6783,6793,0,6794,6799,56,6800,6809,0,6810,6822,55,6823,6823,0,6824,6911,56,6912,6916,55,6917,6963,56,6964,6980,55,6981,6987,0,6988,6991,56,6992,7001,0,7002,7018,56,7019,7027,0,7028,7039,56,7040,7042,55,7043,7072,56,7073,7085,55,7086,7087,56,7088,7097,55,7098,7141,56,7142,7155,0,7156,7167,55,7168,7203,56,7204,7223,0,7224,7231,56,7232,7241,0,7242,7244,55,7245,7247,56,7248,7257,55,7258,7293,0,7294,7375,56,7376,7378,0,7379,7379,56,7380,7400,55,7401,7404,56,7405,7405,55,7406,7409,56,7410,7412,55,7413,7414,0,7415,7423,55,7424,7615,56,7616,7654,0,7655,7675,56,7676,7679,55,7680,7957,0,7958,7959,55,7960,7965,0,7966,7967,55,7968,8005,0,8006,8007,55,8008,8013,0,8014,8015,55,8016,8023,0,8024,8024,55,8025,8025,0,8026,8026,55,8027,8027,0,8028,8028,55,8029,8029,0,8030,8030,55,8031,8061,0,8062,8063,55,8064,8116,0,8117,8117,55,8118,8124,0,8125,8125,55,8126,8126,0,8127,8129,55,8130,8132,0,8133,8133,55,8134,8140,0,8141,8143,55,8144,8147,0,8148,8149,55,8150,8155,0,8156,8159,55,8160,8172,0,8173,8177,55,8178,8180,0,8181,8181,55,8182,8188,0,8189,8203,56,8204,8205,0,8206,8254,56,8255,8256,0,8257,8275,56,8276,8276,0,8277,8304,55,8305,8305,0,8306,8318,55,8319,8319,0,8320,8335,55,8336,8348,0,8349,8399,56,8400,8412,0,8413,8416,56,8417,8417,0,8418,8420,56,8421,8432,0,8433,8449,55,8450,8450,0,8451,8454,55,8455,8455,0,8456,8457,55,8458,8467,0,8468,8468,55,8469,8469,0,8470,8472,55,8473,8477,0,8478,8483,55,8484,8484,0,8485,8485,55,8486,8486,0,8487,8487,55,8488,8488,0,8489,8489,55,8490,8493,0,8494,8494,55,8495,8505,0,8506,8507,55,8508,8511,0,8512,8516,55,8517,8521,0,8522,8525,55,8526,8526,0,8527,8543,55,8544,8584,0,8585,11263,55,11264,11310,0,11311,11311,55,11312,11358,0,11359,11359,55,11360,11492,0,11493,11498,55,11499,11502,56,11503,11505,55,11506,11507,0,11508,11519,55,11520,11557,0,11558,11558,55,11559,11559,0,11560,11564,55,11565,11565,0,11566,11567,55,11568,11623,0,11624,11630,55,11631,11631,0,11632,11646,56,11647,11647,55,11648,11670,0,11671,11679,55,11680,11686,0,11687,11687,55,11688,11694,0,11695,11695,55,11696,11702,0,11703,11703,55,11704,11710,0,11711,11711,55,11712,11718,0,11719,11719,55,11720,11726,0,11727,11727,55,11728,11734,0,11735,11735,55,11736,11742,0,11743,11743,56,11744,11775,0,11776,11822,55,11823,11823,0,11824,12292,55,12293,12295,0,12296,12320,55,12321,12329,56,12330,12335,0,12336,12336,55,12337,12341,0,12342,12343,55,12344,12348,0,12349,12352,55,12353,12438,0,12439,12440,56,12441,12442,0,12443,12444,55,12445,12447,0,12448,12448,55,12449,12538,0,12539,12539,55,12540,12543,0,12544,12548,55,12549,12589,0,12590,12592,55,12593,12686,0,12687,12703,55,12704,12730,0,12731,12783,55,12784,12799,0,12800,13311,55,13312,19893,0,19894,19967,55,19968,40908,0,40909,40959,55,40960,42124,0,42125,42191,55,42192,42237,0,42238,42239,55,42240,42508,0,42509,42511,55,42512,42527,56,42528,42537,55,42538,42539,0,42540,42559,55,42560,42606,56,42607,42607,0,42608,42611,56,42612,42621,0,42622,42622,55,42623,42647,0,42648,42654,56,42655,42655,55,42656,42735,56,42736,42737,0,42738,42774,55,42775,42783,0,42784,42785,55,42786,42888,0,42889,42890,55,42891,42894,0,42895,42895,55,42896,42899,0,42900,42911,55,42912,42922,0,42923,42999,55,43e3,43009,56,43010,43010,55,43011,43013,56,43014,43014,55,43015,43018,56,43019,43019,55,43020,43042,56,43043,43047,0,43048,43071,55,43072,43123,0,43124,43135,56,43136,43137,55,43138,43187,56,43188,43204,0,43205,43215,56,43216,43225,0,43226,43231,56,43232,43249,55,43250,43255,0,43256,43258,55,43259,43259,0,43260,43263,56,43264,43273,55,43274,43301,56,43302,43309,0,43310,43311,55,43312,43334,56,43335,43347,0,43348,43359,55,43360,43388,0,43389,43391,56,43392,43395,55,43396,43442,56,43443,43456,0,43457,43470,55,43471,43471,56,43472,43481,0,43482,43519,55,43520,43560,56,43561,43574,0,43575,43583,55,43584,43586,56,43587,43587,55,43588,43595,56,43596,43597,0,43598,43599,56,43600,43609,0,43610,43615,55,43616,43638,0,43639,43641,55,43642,43642,56,43643,43643,0,43644,43647,55,43648,43695,56,43696,43696,55,43697,43697,56,43698,43700,55,43701,43702,56,43703,43704,55,43705,43709,56,43710,43711,55,43712,43712,56,43713,43713,55,43714,43714,0,43715,43738,55,43739,43741,0,43742,43743,55,43744,43754,56,43755,43759,0,43760,43761,55,43762,43764,56,43765,43766,0,43767,43776,55,43777,43782,0,43783,43784,55,43785,43790,0,43791,43792,55,43793,43798,0,43799,43807,55,43808,43814,0,43815,43815,55,43816,43822,0,43823,43967,55,43968,44002,56,44003,44010,0,44011,44011,56,44012,44013,0,44014,44015,56,44016,44025,0,44026,44031,55,44032,55203,0,55204,55215,55,55216,55238,0,55239,55242,55,55243,55291,0,55292,63743,55,63744,64109,0,64110,64111,55,64112,64217,0,64218,64255,55,64256,64262,0,64263,64274,55,64275,64279,0,64280,64284,55,64285,64285,56,64286,64286,55,64287,64296,0,64297,64297,55,64298,64310,0,64311,64311,55,64312,64316,0,64317,64317,55,64318,64318,0,64319,64319,55,64320,64321,0,64322,64322,55,64323,64324,0,64325,64325,55,64326,64433,0,64434,64466,55,64467,64829,0,64830,64847,55,64848,64911,0,64912,64913,55,64914,64967,0,64968,65007,55,65008,65019,0,65020,65023,56,65024,65039,0,65040,65055,56,65056,65062,0,65063,65074,56,65075,65076,0,65077,65100,56,65101,65103,0,65104,65135,55,65136,65140,0,65141,65141,55,65142,65276,0,65277,65295,56,65296,65305,0,65306,65312,55,65313,65338,0,65339,65342,56,65343,65343,0,65344,65344,55,65345,65370,0,65371,65381,55,65382,65470,0,65471,65473,55,65474,65479,0,65480,65481,55,65482,65487,0,65488,65489,55,65490,65495,0,65496,65497,55,65498,65500,0,65501,1/0],isEnd:[0,1,1,1,0,1,1,0,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0,0,1,0,0,0,1,0,0,0,1,1,1,1,0,1,1,0,1,1,0,0,0,0,0,1,0,1,0,1],hasArc:[1,1,0,1,1,1,1,1,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,1,0,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,0,1,1,1,0,1,1,1,0,1,1,0,1,1,1,0,1,1,1,0,1,0,0,1,0,0,1,0,0,1,1,1,1,1,0,1,0,1,0]},{pnext:[1,2,3,4,1,1,6,7,5,1,7,8,1,-1,7,5,1,7],disnext:[0,12,-5,5,7,14,-5,5,-5],checknext:[0,0,0,0,0,7,3,4,7,7,4,4,1,-1,5,1,1,5],maxAsicii:255,classTable:[0,0,0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],unicodeClassTable:[0,256,1/0],isEnd:[0,1,1,1,0,0,1,1,1],hasArc:[1,1,0,1,1,1,0,1,0]},{pnext:[9,9,9,9,10,10,1,2,3,4,5,6,9,9,9,9,1,1,8,7,7],disnext:[6,17,-6,17,0,-6,-6,12,-6,16,-6],checknext:[4,4,4,4,4,4,0,0,0,0,0,0,7,7,7,7,9,1,3,9,1],maxAsicii:255,classTable:[0,0,0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],unicodeClassTable:[0,256,1/0],isEnd:[0,1,1,1,0,1,1,0,1,1,1],hasArc:[1,1,0,1,1,0,0,1,0,1,0]},{pnext:[16,16,16,17,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,17,17,16,16,1,2,3,4,1,1,1,1,5,1,1,1,1,1,1,1,1,1,1,1,6,7,1,1,18,18,18,9,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-1,-1,18,18,16,16,16,-1,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,-1,10,16,16,35,40,10,41,42,12,42,42,42,42,42,42,42,42,42,42,42,-1,10,43,44,35,40,10,41,42,12,42,42,42,42,42,42,42,42,42,42,42,-1,10,43,44,35,40,10,41,42,12,42,42,42,42,42,42,42,42,42,42,42,-1,10,43,44,35,40,10,41,42,12,42,42,42,42,42,42,42,42,42,42,42,-1,10,43,44,35,40,10,41,42,12,42,42,42,42,42,42,42,42,42,42,42,-1,10,43,44,35,40,10,41,42,12,42,42,42,42,42,42,42,42,42,42,42,-1,10,43,44,31,10,10,10,32,12,32,32,32,32,32,32,32,32,32,32,32,-1,10,33,10,11,10,10,10,10,12,10,10,10,13,10,10,10,14,10,10,15,10,-1,10,10,10,10,10,10,12,10,10,45,10,10,10,10,10,10,10,10,10,-1,10,10,10,10,10,10,12,10,10,10,34,10,10,10,10,10,10,10,10,-1,10,10,10,10,10,10,12,10,10,10,10,10,10,10,10,30,10,10,10,-1,10,10,10,10,10,10,12,10,10,10,10,29,10,10,10,10,10,10,10,-1,10,10,10,28,10,10,12,10,10,10,10,10,10,10,10,10,10,10,10,-1,10,10,10,10,10,10,12,10,10,10,27,10,10,10,10,10,10,10,10,-1,10,10,10,10,10,10,12,10,26,10,10,10,10,10,10,10,10,10,10,-1,10,10,10,10,10,10,12,10,10,10,10,10,10,10,10,10,10,25,10,-1,10,10,10,10,10,10,12,10,10,10,10,10,10,24,10,10,10,10,10,-1,10,10,10,10,10,10,12,10,10,10,10,10,10,10,10,10,10,23,10,-1,10,10,10,10,10,10,12,10,10,10,10,10,22,10,10,10,10,10,10,-1,10,10,10,10,10,10,12,10,10,10,10,10,10,10,10,10,10,10,1,-1,10,10,1,1,1,1,8,1,1,1,1,1,1,1,1,1,1,1,10,-1,1,1,10,10,10,10,12,10,10,10,10,10,10,10,10,10,21,10,10,-1,10,10,10,10,10,10,12,20,10,10,10,10,10,10,10,10,10,10,10,-1,10,10,10,10,10,10,12,10,10,10,10,10,10,10,19,10,10,10,10,-1,10,10,10,10,10,10,12,10,10,10,10,10,10,10,10,10,10,10,1,-1,10,10,1,1,1,1,8,1,1,1,1,1,1,1,1,1,1,1,-1,-1,1,1,35,36,-1,37,35,-1,35,35,35,35,35,35,35,35,35,35,35,-1,-1,38,39,35,36,-1,37,35,-1,35,35,35,35,35,35,35,35,35,35,35,-1,-1,38,39,35,36,-1,37,35,-1,35,35,35,35,35,35,35,35,35,35,35,-1,-1,38,39,35,36,-1,37,35,-1,35,35,35,35,35,35,35,35,35,35,35,-1,-1,38,39,35,36,-1,37,35,-1,35,35,35,35,35,35,35,35,35,35,35,-1,-1,38,39],disnext:[24,600,-24,50,240,0,-24,-24,72,-24,580,-24,48,560,540,520,500,-24,480,460,440,420,400,380,360,340,320,300,219,280,-24,705,198,177,260,684,663,-24,642,621,156,-24,135,114,93,-24],checknext:[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,3,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,-1,-1,12,12,8,8,8,-1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,-1,44,8,8,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,-1,43,44,44,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-1,42,43,43,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-1,40,42,42,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-1,33,40,40,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-1,32,33,33,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-1,28,32,32,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-1,4,28,28,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,34,-1,4,4,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,29,-1,34,34,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,27,-1,29,29,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,26,-1,27,27,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,25,-1,26,26,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,24,-1,25,25,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,-1,24,24,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,22,-1,23,23,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,21,-1,22,22,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,20,-1,21,21,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,19,-1,20,20,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,18,-1,19,19,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,16,-1,18,18,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,15,-1,16,16,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,14,-1,15,15,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,13,-1,14,14,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,10,-1,13,13,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,1,-1,10,10,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1,-1,1,1,39,39,-1,39,39,-1,39,39,39,39,39,39,39,39,39,39,39,-1,-1,39,39,38,38,-1,38,38,-1,38,38,38,38,38,38,38,38,38,38,38,-1,-1,38,38,36,36,-1,36,36,-1,36,36,36,36,36,36,36,36,36,36,36,-1,-1,36,36,35,35,-1,35,35,-1,35,35,35,35,35,35,35,35,35,35,35,-1,-1,35,35,31,31,-1,31,31,-1,31,31,31,31,31,31,31,31,31,31,31,-1,-1,31,31],maxAsicii:255,classTable:[0,0,0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,4,4,4,4,4,4,4,4,4,4,0,0,5,0,6,0,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,8,0,0,7,0,9,7,10,11,12,7,7,13,14,7,15,7,16,17,18,7,7,7,7,19,7,7,7,7,7,7,20,0,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,0,0,0,0,0,0,0,0,0,0,22,0,0,0,0,22,0,0,0,0,0,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,0,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,0,22,22,22,22,22,22,22,22],unicodeClassTable:[22,256,705,0,706,709,22,710,721,0,722,735,22,736,740,0,741,747,22,748,748,0,749,749,22,750,750,0,751,767,23,768,879,22,880,884,0,885,885,22,886,887,0,888,889,22,890,893,0,894,901,22,902,902,0,903,903,22,904,906,0,907,907,22,908,908,0,909,909,22,910,929,0,930,930,22,931,1013,0,1014,1014,22,1015,1153,0,1154,1154,23,1155,1159,0,1160,1161,22,1162,1319,0,1320,1328,22,1329,1366,0,1367,1368,22,1369,1369,0,1370,1376,22,1377,1415,0,1416,1424,23,1425,1469,0,1470,1470,23,1471,1471,0,1472,1472,23,1473,1474,0,1475,1475,23,1476,1477,0,1478,1478,23,1479,1479,0,1480,1487,22,1488,1514,0,1515,1519,22,1520,1522,0,1523,1551,23,1552,1562,0,1563,1567,22,1568,1610,23,1611,1641,0,1642,1645,22,1646,1647,23,1648,1648,22,1649,1747,0,1748,1748,22,1749,1749,23,1750,1756,0,1757,1758,23,1759,1764,22,1765,1766,23,1767,1768,0,1769,1769,23,1770,1773,22,1774,1775,23,1776,1785,22,1786,1788,0,1789,1790,22,1791,1791,0,1792,1807,22,1808,1808,23,1809,1809,22,1810,1839,23,1840,1866,0,1867,1868,22,1869,1957,23,1958,1968,22,1969,1969,0,1970,1983,23,1984,1993,22,1994,2026,23,2027,2035,22,2036,2037,0,2038,2041,22,2042,2042,0,2043,2047,22,2048,2069,23,2070,2073,22,2074,2074,23,2075,2083,22,2084,2084,23,2085,2087,22,2088,2088,23,2089,2093,0,2094,2111,22,2112,2136,23,2137,2139,0,2140,2207,22,2208,2208,0,2209,2209,22,2210,2220,0,2221,2275,23,2276,2302,0,2303,2303,23,2304,2307,22,2308,2361,23,2362,2364,22,2365,2365,23,2366,2383,22,2384,2384,23,2385,2391,22,2392,2401,23,2402,2403,0,2404,2405,23,2406,2415,0,2416,2416,22,2417,2423,0,2424,2424,22,2425,2431,0,2432,2432,23,2433,2435,0,2436,2436,22,2437,2444,0,2445,2446,22,2447,2448,0,2449,2450,22,2451,2472,0,2473,2473,22,2474,2480,0,2481,2481,22,2482,2482,0,2483,2485,22,2486,2489,0,2490,2491,23,2492,2492,22,2493,2493,23,2494,2500,0,2501,2502,23,2503,2504,0,2505,2506,23,2507,2509,22,2510,2510,0,2511,2518,23,2519,2519,0,2520,2523,22,2524,2525,0,2526,2526,22,2527,2529,23,2530,2531,0,2532,2533,23,2534,2543,22,2544,2545,0,2546,2560,23,2561,2563,0,2564,2564,22,2565,2570,0,2571,2574,22,2575,2576,0,2577,2578,22,2579,2600,0,2601,2601,22,2602,2608,0,2609,2609,22,2610,2611,0,2612,2612,22,2613,2614,0,2615,2615,22,2616,2617,0,2618,2619,23,2620,2620,0,2621,2621,23,2622,2626,0,2627,2630,23,2631,2632,0,2633,2634,23,2635,2637,0,2638,2640,23,2641,2641,0,2642,2648,22,2649,2652,0,2653,2653,22,2654,2654,0,2655,2661,23,2662,2673,22,2674,2676,23,2677,2677,0,2678,2688,23,2689,2691,0,2692,2692,22,2693,2701,0,2702,2702,22,2703,2705,0,2706,2706,22,2707,2728,0,2729,2729,22,2730,2736,0,2737,2737,22,2738,2739,0,2740,2740,22,2741,2745,0,2746,2747,23,2748,2748,22,2749,2749,23,2750,2757,0,2758,2758,23,2759,2761,0,2762,2762,23,2763,2765,0,2766,2767,22,2768,2768,0,2769,2783,22,2784,2785,23,2786,2787,0,2788,2789,23,2790,2799,0,2800,2816,23,2817,2819,0,2820,2820,22,2821,2828,0,2829,2830,22,2831,2832,0,2833,2834,22,2835,2856,0,2857,2857,22,2858,2864,0,2865,2865,22,2866,2867,0,2868,2868,22,2869,2873,0,2874,2875,23,2876,2876,22,2877,2877,23,2878,2884,0,2885,2886,23,2887,2888,0,2889,2890,23,2891,2893,0,2894,2901,23,2902,2903,0,2904,2907,22,2908,2909,0,2910,2910,22,2911,2913,23,2914,2915,0,2916,2917,23,2918,2927,0,2928,2928,22,2929,2929,0,2930,2945,23,2946,2946,22,2947,2947,0,2948,2948,22,2949,2954,0,2955,2957,22,2958,2960,0,2961,2961,22,2962,2965,0,2966,2968,22,2969,2970,0,2971,2971,22,2972,2972,0,2973,2973,22,2974,2975,0,2976,2978,22,2979,2980,0,2981,2983,22,2984,2986,0,2987,2989,22,2990,3001,0,3002,3005,23,3006,3010,0,3011,3013,23,3014,3016,0,3017,3017,23,3018,3021,0,3022,3023,22,3024,3024,0,3025,3030,23,3031,3031,0,3032,3045,23,3046,3055,0,3056,3072,23,3073,3075,0,3076,3076,22,3077,3084,0,3085,3085,22,3086,3088,0,3089,3089,22,3090,3112,0,3113,3113,22,3114,3123,0,3124,3124,22,3125,3129,0,3130,3132,22,3133,3133,23,3134,3140,0,3141,3141,23,3142,3144,0,3145,3145,23,3146,3149,0,3150,3156,23,3157,3158,0,3159,3159,22,3160,3161,0,3162,3167,22,3168,3169,23,3170,3171,0,3172,3173,23,3174,3183,0,3184,3201,23,3202,3203,0,3204,3204,22,3205,3212,0,3213,3213,22,3214,3216,0,3217,3217,22,3218,3240,0,3241,3241,22,3242,3251,0,3252,3252,22,3253,3257,0,3258,3259,23,3260,3260,22,3261,3261,23,3262,3268,0,3269,3269,23,3270,3272,0,3273,3273,23,3274,3277,0,3278,3284,23,3285,3286,0,3287,3293,22,3294,3294,0,3295,3295,22,3296,3297,23,3298,3299,0,3300,3301,23,3302,3311,0,3312,3312,22,3313,3314,0,3315,3329,23,3330,3331,0,3332,3332,22,3333,3340,0,3341,3341,22,3342,3344,0,3345,3345,22,3346,3386,0,3387,3388,22,3389,3389,23,3390,3396,0,3397,3397,23,3398,3400,0,3401,3401,23,3402,3405,22,3406,3406,0,3407,3414,23,3415,3415,0,3416,3423,22,3424,3425,23,3426,3427,0,3428,3429,23,3430,3439,0,3440,3449,22,3450,3455,0,3456,3457,23,3458,3459,0,3460,3460,22,3461,3478,0,3479,3481,22,3482,3505,0,3506,3506,22,3507,3515,0,3516,3516,22,3517,3517,0,3518,3519,22,3520,3526,0,3527,3529,23,3530,3530,0,3531,3534,23,3535,3540,0,3541,3541,23,3542,3542,0,3543,3543,23,3544,3551,0,3552,3569,23,3570,3571,0,3572,3584,22,3585,3632,23,3633,3633,22,3634,3635,23,3636,3642,0,3643,3647,22,3648,3654,23,3655,3662,0,3663,3663,23,3664,3673,0,3674,3712,22,3713,3714,0,3715,3715,22,3716,3716,0,3717,3718,22,3719,3720,0,3721,3721,22,3722,3722,0,3723,3724,22,3725,3725,0,3726,3731,22,3732,3735,0,3736,3736,22,3737,3743,0,3744,3744,22,3745,3747,0,3748,3748,22,3749,3749,0,3750,3750,22,3751,3751,0,3752,3753,22,3754,3755,0,3756,3756,22,3757,3760,23,3761,3761,22,3762,3763,23,3764,3769,0,3770,3770,23,3771,3772,22,3773,3773,0,3774,3775,22,3776,3780,0,3781,3781,22,3782,3782,0,3783,3783,23,3784,3789,0,3790,3791,23,3792,3801,0,3802,3803,22,3804,3807,0,3808,3839,22,3840,3840,0,3841,3863,23,3864,3865,0,3866,3871,23,3872,3881,0,3882,3892,23,3893,3893,0,3894,3894,23,3895,3895,0,3896,3896,23,3897,3897,0,3898,3901,23,3902,3903,22,3904,3911,0,3912,3912,22,3913,3948,0,3949,3952,23,3953,3972,0,3973,3973,23,3974,3975,22,3976,3980,23,3981,3991,0,3992,3992,23,3993,4028,0,4029,4037,23,4038,4038,0,4039,4095,22,4096,4138,23,4139,4158,22,4159,4159,23,4160,4169,0,4170,4175,22,4176,4181,23,4182,4185,22,4186,4189,23,4190,4192,22,4193,4193,23,4194,4196,22,4197,4198,23,4199,4205,22,4206,4208,23,4209,4212,22,4213,4225,23,4226,4237,22,4238,4238,23,4239,4253,0,4254,4255,22,4256,4293,0,4294,4294,22,4295,4295,0,4296,4300,22,4301,4301,0,4302,4303,22,4304,4346,0,4347,4347,22,4348,4680,0,4681,4681,22,4682,4685,0,4686,4687,22,4688,4694,0,4695,4695,22,4696,4696,0,4697,4697,22,4698,4701,0,4702,4703,22,4704,4744,0,4745,4745,22,4746,4749,0,4750,4751,22,4752,4784,0,4785,4785,22,4786,4789,0,4790,4791,22,4792,4798,0,4799,4799,22,4800,4800,0,4801,4801,22,4802,4805,0,4806,4807,22,4808,4822,0,4823,4823,22,4824,4880,0,4881,4881,22,4882,4885,0,4886,4887,22,4888,4954,0,4955,4956,23,4957,4959,0,4960,4991,22,4992,5007,0,5008,5023,22,5024,5108,0,5109,5120,22,5121,5740,0,5741,5742,22,5743,5759,0,5760,5760,22,5761,5786,0,5787,5791,22,5792,5866,0,5867,5869,22,5870,5872,0,5873,5887,22,5888,5900,0,5901,5901,22,5902,5905,23,5906,5908,0,5909,5919,22,5920,5937,23,5938,5940,0,5941,5951,22,5952,5969,23,5970,5971,0,5972,5983,22,5984,5996,0,5997,5997,22,5998,6e3,0,6001,6001,23,6002,6003,0,6004,6015,22,6016,6067,23,6068,6099,0,6100,6102,22,6103,6103,0,6104,6107,22,6108,6108,23,6109,6109,0,6110,6111,23,6112,6121,0,6122,6154,23,6155,6157,0,6158,6159,23,6160,6169,0,6170,6175,22,6176,6263,0,6264,6271,22,6272,6312,23,6313,6313,22,6314,6314,0,6315,6319,22,6320,6389,0,6390,6399,22,6400,6428,0,6429,6431,23,6432,6443,0,6444,6447,23,6448,6459,0,6460,6469,23,6470,6479,22,6480,6509,0,6510,6511,22,6512,6516,0,6517,6527,22,6528,6571,0,6572,6575,23,6576,6592,22,6593,6599,23,6600,6601,0,6602,6607,23,6608,6617,0,6618,6655,22,6656,6678,23,6679,6683,0,6684,6687,22,6688,6740,23,6741,6750,0,6751,6751,23,6752,6780,0,6781,6782,23,6783,6793,0,6794,6799,23,6800,6809,0,6810,6822,22,6823,6823,0,6824,6911,23,6912,6916,22,6917,6963,23,6964,6980,22,6981,6987,0,6988,6991,23,6992,7001,0,7002,7018,23,7019,7027,0,7028,7039,23,7040,7042,22,7043,7072,23,7073,7085,22,7086,7087,23,7088,7097,22,7098,7141,23,7142,7155,0,7156,7167,22,7168,7203,23,7204,7223,0,7224,7231,23,7232,7241,0,7242,7244,22,7245,7247,23,7248,7257,22,7258,7293,0,7294,7375,23,7376,7378,0,7379,7379,23,7380,7400,22,7401,7404,23,7405,7405,22,7406,7409,23,7410,7412,22,7413,7414,0,7415,7423,22,7424,7615,23,7616,7654,0,7655,7675,23,7676,7679,22,7680,7957,0,7958,7959,22,7960,7965,0,7966,7967,22,7968,8005,0,8006,8007,22,8008,8013,0,8014,8015,22,8016,8023,0,8024,8024,22,8025,8025,0,8026,8026,22,8027,8027,0,8028,8028,22,8029,8029,0,8030,8030,22,8031,8061,0,8062,8063,22,8064,8116,0,8117,8117,22,8118,8124,0,8125,8125,22,8126,8126,0,8127,8129,22,8130,8132,0,8133,8133,22,8134,8140,0,8141,8143,22,8144,8147,0,8148,8149,22,8150,8155,0,8156,8159,22,8160,8172,0,8173,8177,22,8178,8180,0,8181,8181,22,8182,8188,0,8189,8203,23,8204,8205,0,8206,8254,23,8255,8256,0,8257,8275,23,8276,8276,0,8277,8304,22,8305,8305,0,8306,8318,22,8319,8319,0,8320,8335,22,8336,8348,0,8349,8399,23,8400,8412,0,8413,8416,23,8417,8417,0,8418,8420,23,8421,8432,0,8433,8449,22,8450,8450,0,8451,8454,22,8455,8455,0,8456,8457,22,8458,8467,0,8468,8468,22,8469,8469,0,8470,8472,22,8473,8477,0,8478,8483,22,8484,8484,0,8485,8485,22,8486,8486,0,8487,8487,22,8488,8488,0,8489,8489,22,8490,8493,0,8494,8494,22,8495,8505,0,8506,8507,22,8508,8511,0,8512,8516,22,8517,8521,0,8522,8525,22,8526,8526,0,8527,8543,22,8544,8584,0,8585,11263,22,11264,11310,0,11311,11311,22,11312,11358,0,11359,11359,22,11360,11492,0,11493,11498,22,11499,11502,23,11503,11505,22,11506,11507,0,11508,11519,22,11520,11557,0,11558,11558,22,11559,11559,0,11560,11564,22,11565,11565,0,11566,11567,22,11568,11623,0,11624,11630,22,11631,11631,0,11632,11646,23,11647,11647,22,11648,11670,0,11671,11679,22,11680,11686,0,11687,11687,22,11688,11694,0,11695,11695,22,11696,11702,0,11703,11703,22,11704,11710,0,11711,11711,22,11712,11718,0,11719,11719,22,11720,11726,0,11727,11727,22,11728,11734,0,11735,11735,22,11736,11742,0,11743,11743,23,11744,11775,0,11776,11822,22,11823,11823,0,11824,12292,22,12293,12295,0,12296,12320,22,12321,12329,23,12330,12335,0,12336,12336,22,12337,12341,0,12342,12343,22,12344,12348,0,12349,12352,22,12353,12438,0,12439,12440,23,12441,12442,0,12443,12444,22,12445,12447,0,12448,12448,22,12449,12538,0,12539,12539,22,12540,12543,0,12544,12548,22,12549,12589,0,12590,12592,22,12593,12686,0,12687,12703,22,12704,12730,0,12731,12783,22,12784,12799,0,12800,13311,22,13312,19893,0,19894,19967,22,19968,40908,0,40909,40959,22,40960,42124,0,42125,42191,22,42192,42237,0,42238,42239,22,42240,42508,0,42509,42511,22,42512,42527,23,42528,42537,22,42538,42539,0,42540,42559,22,42560,42606,23,42607,42607,0,42608,42611,23,42612,42621,0,42622,42622,22,42623,42647,0,42648,42654,23,42655,42655,22,42656,42735,23,42736,42737,0,42738,42774,22,42775,42783,0,42784,42785,22,42786,42888,0,42889,42890,22,42891,42894,0,42895,42895,22,42896,42899,0,42900,42911,22,42912,42922,0,42923,42999,22,43e3,43009,23,43010,43010,22,43011,43013,23,43014,43014,22,43015,43018,23,43019,43019,22,43020,43042,23,43043,43047,0,43048,43071,22,43072,43123,0,43124,43135,23,43136,43137,22,43138,43187,23,43188,43204,0,43205,43215,23,43216,43225,0,43226,43231,23,43232,43249,22,43250,43255,0,43256,43258,22,43259,43259,0,43260,43263,23,43264,43273,22,43274,43301,23,43302,43309,0,43310,43311,22,43312,43334,23,43335,43347,0,43348,43359,22,43360,43388,0,43389,43391,23,43392,43395,22,43396,43442,23,43443,43456,0,43457,43470,22,43471,43471,23,43472,43481,0,43482,43519,22,43520,43560,23,43561,43574,0,43575,43583,22,43584,43586,23,43587,43587,22,43588,43595,23,43596,43597,0,43598,43599,23,43600,43609,0,43610,43615,22,43616,43638,0,43639,43641,22,43642,43642,23,43643,43643,0,43644,43647,22,43648,43695,23,43696,43696,22,43697,43697,23,43698,43700,22,43701,43702,23,43703,43704,22,43705,43709,23,43710,43711,22,43712,43712,23,43713,43713,22,43714,43714,0,43715,43738,22,43739,43741,0,43742,43743,22,43744,43754,23,43755,43759,0,43760,43761,22,43762,43764,23,43765,43766,0,43767,43776,22,43777,43782,0,43783,43784,22,43785,43790,0,43791,43792,22,43793,43798,0,43799,43807,22,43808,43814,0,43815,43815,22,43816,43822,0,43823,43967,22,43968,44002,23,44003,44010,0,44011,44011,23,44012,44013,0,44014,44015,23,44016,44025,0,44026,44031,22,44032,55203,0,55204,55215,22,55216,55238,0,55239,55242,22,55243,55291,0,55292,63743,22,63744,64109,0,64110,64111,22,64112,64217,0,64218,64255,22,64256,64262,0,64263,64274,22,64275,64279,0,64280,64284,22,64285,64285,23,64286,64286,22,64287,64296,0,64297,64297,22,64298,64310,0,64311,64311,22,64312,64316,0,64317,64317,22,64318,64318,0,64319,64319,22,64320,64321,0,64322,64322,22,64323,64324,0,64325,64325,22,64326,64433,0,64434,64466,22,64467,64829,0,64830,64847,22,64848,64911,0,64912,64913,22,64914,64967,0,64968,65007,22,65008,65019,0,65020,65023,23,65024,65039,0,65040,65055,23,65056,65062,0,65063,65074,23,65075,65076,0,65077,65100,23,65101,65103,0,65104,65135,22,65136,65140,0,65141,65141,22,65142,65276,0,65277,65295,23,65296,65305,0,65306,65312,22,65313,65338,0,65339,65342,23,65343,65343,0,65344,65344,22,65345,65370,0,65371,65381,22,65382,65470,0,65471,65473,22,65474,65479,0,65480,65481,22,65482,65487,0,65488,65489,22,65490,65495,0,65496,65497,22,65498,65500,0,65501,1/0],isEnd:[0,1,1,1,1,0,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,0,1,0,0,1,1,1,1,1,1],hasArc:[1,1,0,1,1,1,0,0,1,0,1,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,0,1,1,1,0]},{pnext:[1,2,3,4,1],disnext:[0,4,-3,2,-3],checknext:[0,0,0,3,1],maxAsicii:255,classTable:[0,0,0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],unicodeClassTable:[0,256,1/0],isEnd:[0,1,1,1,1],hasArc:[1,1,0,1,0]}];var vt=[-1,2,2,2,-1,3,4,-1,-1,29,30,35,36,44,37,-1,38,40,28,31,27,34,32,33,43,6,42,7,4,2,-1,5,-1,3,4,4,4,4,41,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,-1,3,3,39,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,-1,-1,-1,-1,-1,-1,-1,-1,14,-1,-1,-1,-1,-1,-1,-1,20,-1,11,-1,-1,-1,19,-1,-1,-1,18,-1,-1,17,-1,-1,-1,24,-1,-1,-1,12,10,26,25,-1,15,22,-1,8,21,-1,-1,-1,-1,-1,13,-1,16,-1,23],gt=[-1,3,3,3,-1,-1,3,3,3],mt=[-1,45,45,45,-1,6,7,-1,45,45,45],kt=[-1,45,45,45,45,-1,6,7,-1,45,45,46,-1,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,47,-1,45,45,45,-1,-1,49,-1,-1,45,49,45,45,45,48],bt=[-1,45,45,45,45],Tt=50,Et=222,xt=[9,7,15,18,19,20,127,10,11,109,12,182,13,14,215,16,204,220,17,185,128,204,217,214,-101,134,-63,210,181,-63,157,146,75,5,180,178,143,144,179,145,134,-63,190,191,189,-101,146,-101,123,76,-64,143,144,-64,145,205,200,201,202,203,205,200,201,202,203,-64,120,123,-48,81,118,122,81,78,115,-48,-115,123,-115,29,123,29,123,91,24,85,89,86,63,123,122,62,57,58,117,209,171,207,197,171,122,195,194,122,156,122,184,183,205,175,174,205,122,140,134,161,160,159,158,154,-48,42,150,149,148,117,140,117,137,-108,135,131,130,129,124,113,112,107,103,101,100,94,93,88,84,32,82,77,70,67,66,65,61,59,53,52,51,32,46,39,38,36,32,32,32,32,30,24,4],St=[-50,168,-8,-50,163,-50,-50,77,160,159,158,157,156,156,132,130,84,-50,-50,-50,80,-50,-50,-50,130,75,-50,-50,-50,-50,-50,-50,-50,-50,151,-50,128,151,150,72,-50,-50,-50,54,147,148,-50,84,-50,-50,147,123,119,-50,103,-50,-50,-50,-50,5,-50,-50,116,66,119,-50,139,-50,99,-50,45,-50,129,79,-50,138,136,-50,-50,-50,-50,-50,-50,-50,-50,-50,123,110,-50,-50,-50,110,-50,-50,-50,-50,-50,118,5,-50,132,104,70,63,-50,36,62,-50,103,43,-24,-50,105,105,93,-50,-50,-50,-50,-50,-50,126,-50,125,-50,-50,-50,124,103,88,101,-50,-50,-50,97,119,-50,95,-50,88,92,-50,114,-50,113,111,-50,-50,-50,-50,-50,83,89,75,-50,-50,15,-50,-50,-50,0,-50,104,-50,67,23,-50,6,63,-50,69,-50,-14,-50,-50,-50,8,-50,61,98,72,-50,94,93,-50,-50,-1,-50,-50,-50,-50,67,91,68,22,-50,-50,-50,-50,-50,-50,-50,-50,-50,-50,-50,-50,-10,-50,-16,-50,-50,15,-50,-50,-50,-50,10,-50,-50,-50],yt=[2,2,2,2,2,2,110,2,2,98,2,167,2,2,209,2,217,217,2,172,110,212,212,207,98,160,186,194,167,186,172,160,59,2,167,167,160,160,167,160,156,186,176,176,176,98,156,98,109,59,165,156,156,165,156,217,217,217,217,217,212,212,212,212,212,165,106,106,105,103,103,109,63,63,102,109,105,39,105,25,25,7,7,73,20,70,73,70,47,16,106,47,43,43,102,193,192,191,183,182,39,180,179,25,178,7,170,168,103,164,162,63,16,153,152,151,145,144,142,140,139,20,137,135,134,130,129,128,127,123,121,114,113,112,108,101,100,97,91,87,86,76,75,72,68,66,64,62,54,52,51,50,45,44,38,37,36,34,24,15,14,13,12,11,10,9,8,4,1],At=[4,-1,-1,0,-1,3,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,25,26,27,-1,86,87,88,35,7,29,30,31,33,9,118,10,11,-1,13,14,-1,-1,16,20,1,85,-1,-1,-1,28,-1,122,12,-1,-1,-1,19,21,94,90,91,39,-1,36,8,-1,-1,-1,18,-1,2,22,24,-1,93,97,44,34,-1,-1,119,121,123,124,17,15,23,89,94,103,-1,6,38,40,-1,37,32,120,122,92,113,105,101,-1,-1,60,-1,95,49,-1,102,106,49,-1,99,-1,-1,-1,58,60,125,115,116,117,-1,112,104,109,110,96,-1,60,46,60,59,126,131,-1,-1,98,-1,42,49,-1,52,-1,54,-1,-1,57,111,108,41,45,-1,132,46,66,77,132,53,55,56,132,50,-1,43,61,66,65,-1,79,82,83,51,-1,127,66,64,71,60,78,-1,-1,76,-1,-1,48,128,66,67,68,69,70,-1,80,-1,-1,81,84,133,135,136,137,138,139,140,145,134,72,-1,74,-1,144,141,-1,73,75,134,129,-1,130,142,143],Ct=[5,197,176,197,171,198,7,198,172,141,118,151,152,113,115,154,109,107,25,26,175,167,187,175,167,125,151,152,120,78,104,105,86,78,55,46,44,218,215,195,192,138,79,146,53,39,79,162,146,89,34,91,162,42,22,33,32,30,124,24,163,27,207,168,169,161,150,151,152,162,140,115,154,137,115,154,135,27,110,97,98,96,72,82,67,68,59,49,36,20,21,22,40,1,220,2,217,212,211,205,191,154,186,166,167,185,164,165,166,167,132,131,154,103,101,95,94,73,70,71,72,63,54,48,47,43],Rt=[92,-75,-4,-75,50,-75,54,7,-75,0,-1,-2,-7,-75,82,-75,38,-75,-75,-75,13,-75,-75,83,22,23,-75,-75,-75,111,-75,65,-75,-75,30,-75,-75,-75,-75,-10,-75,120,-75,-9,-75,71,-75,-75,61,-75,-75,-75,-75,-75,76,74,-75,-75,101,-75,-75,-75,-75,-28,-75,-75,26,-75,-75,-75,-75,-75,-15,32,-75,-75,-75,57,-75,-75,53,-75,-75,-75,-75,36,30,-75,-75,-75,96,-75,-75,-75,-75,53,-75,-25,-35,-75,30,-75,-13,-32,-75,-11,-26,-75,-75,4,-75,-75,-75,-75,-75,-75,84,47,-75,-75,-75,-75,-75,23,-75,-75,-75,-75,47,21,44,-75,-75,-75,-75,-75,-75,-75,-75,45,-75,-75,-75,-75,-75,-75,-75,-75,-75,-75,-75,-75,1,40,77,-75,-21,-75,-75,-75,-16,-75,-75,-75,-75,-8,-75,-32,-75,-75,-75,-75,-75,40,72,-75,-11,73,5,-75,-75,-75,1,-75,-75,33,-11,-75,-75,-75,-75,-75,26,-75,-75,-75,-75,-75,-75,-75,-75,-75,-75,27,-75,28,-75,-75,-75,-75,-75,-34,-67,-75,-75,27,-30,-69,-75,21,-75],wt=[2,0,6,2,0,0,6,2,4,2,2,2,3,2,2,5,2,4,3,2,1,0,1,2,1,1,1,1,2,1,1,1,4,0,3,0,1,3,2,0,0,6,5,7,0,2,0,0,4,0,2,3,1,2,1,2,2,1,1,2,0,2,3,1,2,1,0,3,1,1,1,0,3,4,3,4,1,1,0,1,0,3,1,1,3,2,1,1,0,5,1,1,3,1,0,4,4,0,3,1,1,1,2,0,2,0,1,0,4,2,2,3,1,0,1,2,2,2,0,0,5,2,0,1,0,0,5,0,0,0,7,1,0,2,0,1,1,1,1,1,0,0,0,6,2,1],It=[0,2,1,3,3,5,4,4,4,4,4,4,4,4,4,4,4,6,6,7,7,8,8,9,9,10,10,10,11,11,12,12,13,13,14,14,15,15,16,16,18,17,17,17,19,20,20,22,21,23,21,24,24,25,25,25,25,25,26,26,28,27,29,29,30,30,32,31,33,33,33,33,34,34,34,34,34,35,35,36,36,37,37,38,38,39,39,40,42,41,43,43,44,44,46,45,47,47,48,48,49,49,50,50,51,51,52,53,52,52,52,54,54,55,55,55,56,56,58,59,57,60,60,61,62,63,61,65,66,67,64,68,68,69,69,70,70,70,70,70,71,72,73,70,74,74],Ot=["EOF","ERROR","WHITESPACE","COMMENT","NAME","STRING","OPEN_BLOCK","CLOSE_BLOCK","OPT_DIR","LEX_DIR","TOKEN_DIR","LEFT_DIR","RIGHT_DIR","NONASSOC_DIR","USE_DIR","HEADER_DIR","EXTRA_ARG_DIR","EMPTY","TYPE_DIR","PREC_DIR","INIT_DIR","OUTPUT_DIR","IMPORT_DIR","TOKEN_HOOK_DIR","LEAST_DIR","ALWAYS_DIR","TOUCH_DIR","GT","LT","BRA","KET","EQU","CBRA","CKET","QUESTION","STAR","PLUS","DASH","COLON","ARROW","EOL","SEPERATOR","OR","WEDGE","COMMA","ANY_CODE","LHS_REF","TOKEN_REF","MATCHED","EMIT_TOKEN"],Nt=[null,null,null,"/*",null,null,"{","}","%option","%lex","%token","%left","%right","%nonassoc","%use","%header","%extra_arg","%empty","%type","%prec","%init","%output","%import","%token_hook","%least","%always","%touch",">","<","(",")","=","[","]","?","*","+","-",":","=>",";","%%","|","^",",",null,"$$","$token","$matched",null];var Lt;(_t=Lt||(Lt={}))[_t.EOF=0]="EOF",_t[_t.ERROR=1]="ERROR",_t[_t.WHITESPACE=2]="WHITESPACE",_t[_t.COMMENT=3]="COMMENT",_t[_t.NAME=4]="NAME",_t[_t.STRING=5]="STRING",_t[_t.OPEN_BLOCK=6]="OPEN_BLOCK",_t[_t.CLOSE_BLOCK=7]="CLOSE_BLOCK",_t[_t.OPT_DIR=8]="OPT_DIR",_t[_t.LEX_DIR=9]="LEX_DIR",_t[_t.TOKEN_DIR=10]="TOKEN_DIR",_t[_t.LEFT_DIR=11]="LEFT_DIR",_t[_t.RIGHT_DIR=12]="RIGHT_DIR",_t[_t.NONASSOC_DIR=13]="NONASSOC_DIR",_t[_t.USE_DIR=14]="USE_DIR",_t[_t.HEADER_DIR=15]="HEADER_DIR",_t[_t.EXTRA_ARG_DIR=16]="EXTRA_ARG_DIR",_t[_t.EMPTY=17]="EMPTY",_t[_t.TYPE_DIR=18]="TYPE_DIR",_t[_t.PREC_DIR=19]="PREC_DIR",_t[_t.INIT_DIR=20]="INIT_DIR",_t[_t.OUTPUT_DIR=21]="OUTPUT_DIR",_t[_t.IMPORT_DIR=22]="IMPORT_DIR",_t[_t.TOKEN_HOOK_DIR=23]="TOKEN_HOOK_DIR",_t[_t.LEAST_DIR=24]="LEAST_DIR",_t[_t.ALWAYS_DIR=25]="ALWAYS_DIR",_t[_t.TOUCH_DIR=26]="TOUCH_DIR",_t[_t.GT=27]="GT",_t[_t.LT=28]="LT",_t[_t.BRA=29]="BRA",_t[_t.KET=30]="KET",_t[_t.EQU=31]="EQU",_t[_t.CBRA=32]="CBRA",_t[_t.CKET=33]="CKET",_t[_t.QUESTION=34]="QUESTION",_t[_t.STAR=35]="STAR",_t[_t.PLUS=36]="PLUS",_t[_t.DASH=37]="DASH",_t[_t.COLON=38]="COLON",_t[_t.ARROW=39]="ARROW",_t[_t.EOL=40]="EOL",_t[_t.SEPERATOR=41]="SEPERATOR",_t[_t.OR=42]="OR",_t[_t.WEDGE=43]="WEDGE",_t[_t.COMMA=44]="COMMA",_t[_t.ANY_CODE=45]="ANY_CODE",_t[_t.LHS_REF=46]="LHS_REF",_t[_t.TOKEN_REF=47]="TOKEN_REF",_t[_t.MATCHED=48]="MATCHED",_t[_t.EMIT_TOKEN=49]="EMIT_TOKEN";var _t,Dt,Ft=function(){function t(t,e,n,r,a,i){this.id=t,this.val=e,this.startLine=n,this.startColumn=r,this.endLine=a,this.endColumn=i}return t.prototype.clone=function(){return new t(this.id,this.val,this.startLine,this.startColumn,this.endLine,this.endColumn)},t.prototype.toString=function(){return(null===Nt[this.id]?"<"+Ot[this.id]+">":'"'+Nt[this.id]+'"')+'("'+this.val+'")'},t}();(Pt=Dt||(Dt={}))[Pt.NONE=1]="NONE",Pt[Pt.AUTO=2]="AUTO",Pt[Pt.CR=3]="CR",Pt[Pt.LF=4]="LF",Pt[Pt.CRLF=5]="CRLF";var Pt;function Ut(){var e,n,r,a,i,o,s,l,u,c,h,f,p,d,v,g,m,k,b,T,E,x,S,y,A={state:-1,line:0,column:0},C=!0,R={};return{init:function(t,f){e=[0],n=0,a="",v=new Ft(-1,null,0,0,0,0),A.state=-1,i=0,o=l=0,s=u=0,c=[0],h=[],p=null,d=[],k=Dt.AUTO,r=!1,b=f,H()},on:function(t,e){R[t]||(R[t]=[]),R[t].push(e)},setLineTerminator:function(t){k=t},getLineTerminator:function(){return k},accept:function(t){var e=0;w({current:function(){return e<t.length?t.charCodeAt(e):null},next:function(){return e++},isEof:function(){return e>=t.length},backup:function(t){return e-=t.length}});for(;!g&&0!==I().id;);},end:function(){},load:w,parse:function(t){w(t);var e;for(;!g;){if(null===(e=I()))return!1;if(0===e.id)return!0}return!0},nextToken:I,halt:function(){g=!0},enableBlocks:function(){C=!0},disableBlocks:function(){C=!1},loadParserState:function(t){e=t.lexState,c=t.lrState,h=t.sematicS},getParserState:function(){return{lexState:e,lrState:c,sematicS:h}}};function w(t){if("string"==typeof t){var e=0,n=t;f={current:function(){return e<n.length?n.charCodeAt(e):null},next:function(){return e++},isEof:function(){return e>=n.length},backup:function(t){return e-=t.length}}}else f=t}function I(){for(m=!1;!g&&!m;){var t=f.current();if(null!==t)F(t);else{if(!f.isEof())return null;if(P())break}}return v}function O(t){v.id=t,v.val=a,v.startLine=l,v.startColumn=u,v.endLine=o,v.endColumn=s-1,(e=v).id!==Lt.COMMENT&&e.id!==Lt.WHITESPACE&&d.push(v);var e;m=!0,a="",l=o,u=s}function N(t,e,n,r){var a=R[t];if(a)for(var i=0;i<a.length;i++)a[i](e,n,r)}function L(t,n){switch(t){case 0:!function(t){var n=vt[t];switch(-1!==n&&O(n),t){case 6:C&&(p=lt(v));break;case 25:case 27:C&&(p=ut(v));break;case 28:C&&(p=lt(v));break;case 31:C&&((p=lt(v)).val=ht(p.val.substr(1,p.val.length-2)));break;case 34:case 35:case 36:case 37:C&&(p=lt(v));break;case 51:C&&((p=lt(v)).val=ht(p.val.substr(1,p.val.length-2)));break;case 53:e.push(1)}}(n);break;case 1:!function(t){var n=gt[t];switch(-1!==n&&O(n),t){case 8:e.pop()}}(n);break;case 2:!function(t){var e=mt[t];switch(-1!==e&&O(e),t){case 1:case 2:case 3:C&&(p=q(v.val));break;case 5:case 6:C&&(p=ut(v));break;case 8:case 9:C&&(p=q(v.val));break;case 10:C&&(p=q(v.val.charAt(1)))}}(n);break;case 3:!function(t){var e=kt[t];switch(-1!==e&&O(e),t){case 1:case 2:case 3:case 4:C&&(p=lt(v));break;case 6:case 7:C&&(p=ut(v));break;case 9:case 10:case 13:case 14:case 15:case 16:C&&(p=lt(v));break;case 17:C&&((p=lt(v)).val=p.val.charAt(1));break;case 18:case 19:case 20:case 21:case 22:case 23:case 24:case 25:case 26:case 27:case 28:case 29:case 32:case 33:case 34:C&&(p=lt(v));break;case 37:C&&((p=lt(v)).val=p.val.substr(6,p.val.length-7));break;case 40:C&&(p=lt(v));break;case 41:C&&((p=lt(v)).val=p.val.substr(6,p.val.length-7));break;case 42:case 43:case 44:C&&(p=lt(v))}}(n);break;case 4:!function(t){var e=bt[t];switch(-1!==e&&O(e),t){case 1:case 2:case 3:case 4:C&&(p=lt(v))}}(n)}d.length>0&&M(null)}function _(){var t=a.substr(a.length-i,i);f.backup(t),a=a.substr(0,a.length-i),i=0,o=A.line,s=A.column,n=A.state,A.state=-1}function D(t){switch(k){case Dt.NONE:s+=t>255?2:1;break;case Dt.CR:t===pt?(o++,s=0):s+=t>255?2:1;break;case Dt.LF:t===ft?(o++,s=0):s+=t>255?2:1;break;case Dt.CRLF:r&&t===ft?(o++,s=0,r=!1):(s+=t>255?2:1,r=t===pt);break;case Dt.AUTO:r?t===ft?(o++,s=0,r=!1,k=Dt.CRLF):(o++,s=0,k=Dt.CR,t===pt?(o++,s=0):s+=t>255?2:1):t===ft?(o++,s=0,k=Dt.LF):(s+=t>255?2:1,r=t===pt)}a+=String.fromCharCode(t),-1!==A.state&&i++,f.next()}function F(t){var r=e[e.length-1],a=dt[r],l=1===a.isEnd[n],u=1===a.hasArc[n],c=t<a.maxAsicii?a.classTable[t]:function(t,e){for(var n=0;n<t.length;n+=3){if(e>=t[n+1]&&e<=t[n+2])return t[n];if(e<t[n+1])return-1}return-1}(a.unicodeClassTable,t),h=-1;if(-1!==c){var f=a.disnext[n]+c;f>=0&&f<a.pnext.length&&a.checknext[f]===n&&(h=a.pnext[f])}l?u?-1===h?(L(r,n),A.state=-1,i=0,n=0):(A.state=n,A.line=o,A.column=s,i=0,n=h,D(t),U()):(L(r,n),A.state=-1,i=0,n=0):-1===h?-1!==A.state?(_(),L(r,n),n=0):(N("lexicalerror",String.fromCharCode(t),o,s),D(t),O(1),d.length>0&&M(null),n=0):(n=h,D(t),U())}function P(){if(0===n)return O(0),M(null),!0;var t=e[e.length-1];return dt[t].isEnd[n]?(L(t,n),n=0,A.state=-1,!1):-1!==A.state?(_(),L(t,n),n=0,!1):(N("lexicalerror","",o,s),O(1),d.length>0&&M(null),n=0,!0)}function U(){var t=e[e.length-1],r=dt[t],a=1===r.isEnd[n],o=1===r.hasArc[n];a&&!o&&(L(t,n),A.state=-1,i=0,n=0)}function B(n){var r=It[n],a=h.length,i=h[a-wt[n]]||null;switch(n){case 1:e.push(4);break;case 5:C&&b.lexBuilder.prepareLex();break;case 7:C&&b.incPr();break;case 9:var o=h[a-1];C&&b.setHeader(o);break;case 10:o=h[a-1];C&&b.setExtraArg(o);break;case 11:var s=h[a-1];C&&b.setType(s);break;case 12:var l=h[a-2];o=h[a-1];C&&b.setInit(l,o);break;case 13:var u=h[a-1];C&&b.setOutput(u);break;case 15:var f=h[a-3];o=h[a-1];C&&b.setTokenHook(f,o);break;case 17:case 18:M=h[a-2];C&&b.defToken(M,null);break;case 19:case 20:M=h[a-1];C&&b.touchToken(M,M.ext);break;case 22:var p=h[a-1];C&&b.setEpilogue(p);break;case 23:var d=h[a-1];C&&X(i,d,i.val+d.val);break;case 25:C&&(T=t.Assoc.LEFT);break;case 26:C&&(T=t.Assoc.RIGHT);break;case 27:C&&(T=t.Assoc.NON);break;case 30:M=h[a-1];C&&b.defineTokenPrec(M,T,M.ext);break;case 31:M=h[a-1];C&&b.defineTokenPrec(M,T,it.NAME);break;case 32:var v=h[a-3],g=h[a-1];C&&b.setOpt(v,g);break;case 35:C&&b.lexBuilder.selectState("DEFAULT");break;case 36:case 37:L=h[a-1];C&&b.lexBuilder.selectState(L.val);break;case 40:var m=h[a-1];C&&b.lexBuilder.prepareVar(m);break;case 41:m=h[a-6];C&&b.lexBuilder.endVar();break;case 42:C&&b.lexBuilder.end(E,S,"(untitled)");break;case 43:var k=h[a-5];if(C){var A=b.defToken(k,b.lexBuilder.getPossibleAlias());E.returnToken(A),b.lexBuilder.end(E,S,k.val)}break;case 44:C&&b.lexBuilder.newState();break;case 46:case 47:case 49:C&&(E=new ot);break;case 53:var R=h[a-1];C&&(b.addPushStateAction(E,R),E.raw("; "));break;case 54:C&&(E.popState(),E.raw("; "));break;case 55:var w=h[a-1];C&&(b.addSwitchToStateAction(E,w),E.raw("; "));break;case 56:L=h[a-1];C&&(E.setImg(L.val),E.raw("; "));break;case 58:C&&(S=!1);break;case 59:C&&(S=!0);break;case 60:C&&b.lexBuilder.enterUnion();break;case 61:C&&b.lexBuilder.leaveUnion();break;case 62:case 63:C&&b.lexBuilder.endUnionItem();break;case 66:C&&b.lexBuilder.enterSimple();break;case 67:var I=h[a-1];C&&b.lexBuilder.simplePostfix(I.val);break;case 68:C&&(i=q("+"));break;case 69:C&&(i=q("?"));break;case 70:C&&(i=q("*"));break;case 71:C&&(i=q(""));break;case 74:var O=h[a-2];C&&b.lexBuilder.addVar(O);break;case 75:var N=h[a-2];C&&b.lexBuilder.importVar(N);break;case 76:L=h[a-1];C&&b.lexBuilder.addString(L.val);break;case 77:C&&b.lexBuilder.beginSet(!0);break;case 78:C&&b.lexBuilder.beginSet(!1);break;case 83:var L=h[a-1];C&&b.lexBuilder.addSetItem(L,L);break;case 84:var _=h[a-3],D=h[a-1];C&&b.lexBuilder.addSetItem(_,D);break;case 88:O=h[a-1];C&&(x=O);break;case 94:C&&b.prepareRule(x);break;case 95:C&&b.commitRule();break;case 98:case 99:R=h[a-1];C&&b.addRuleUseVar(R);break;case 104:var F=h[a-2];C&&b.addRuleSematicVar(F);break;case 106:M=h[a-1];C&&b.addRuleItem(M,it.NAME);break;case 107:R=h[a-2];C&&b.addRuleSematicVar(R);break;case 108:R=h[a-4],M=h[a-1];C&&b.addRuleItem(M,it.NAME);break;case 109:M=h[a-1];C&&b.addRuleItem(M,M.ext);break;case 110:C&&b.addAction(E);break;case 111:M=h[a-2];C&&((i=M).ext=it.TOKEN);break;case 112:C&&(i.ext=it.STRING);break;case 115:C&&b.addAction(E);break;case 116:M=h[a-1];C&&b.defineRulePr(M,it.NAME);break;case 117:M=h[a-1];C&&b.defineRulePr(M,M.ext);break;case 118:var P=h[a-1];e.push(2);break;case 119:P=h[a-4];var U=h[a-2],B=h[a-1];e.pop();break;case 120:P=h[a-5],U=h[a-3],B=h[a-2];C&&(H=P,K=B,i={val:U.val,startLine:H.startLine,startColumn:H.startColumn,endLine:K.endLine,endColumn:K.endColumn});break;case 121:o=h[a-1];C&&(i.val+=o.val);break;case 122:C&&(i=q(""));break;case 124:e.push(2);break;case 125:o=h[a-2];e.pop();break;case 126:o=h[a-3];C&&((i=q("")).val="{"+o.val+"}");break;case 127:P=h[a-1];e.push(3);break;case 128:P=h[a-2];C&&E.beginBlock(P,y);break;case 129:P=h[a-5],M=h[a-3],B=h[a-1];e.pop();break;case 130:P=h[a-6],M=h[a-4],B=h[a-2];C&&E.endBlock(B);break;case 131:C&&(y=!0);break;case 132:C&&(y=!1);break;case 135:d=h[a-1];C&&E.raw(d.val);break;case 136:C&&E.lhs();break;case 137:C&&E.tokenObj();break;case 138:C&&E.matched();break;case 139:var M=h[a-1];C&&b.addEmitTokenAction(E,M);break;case 140:e.push(3);break;case 141:C&&E.raw("{");break;case 142:e.pop();break;case 143:C&&E.raw("}");break;case 144:d=h[a-1];C&&X(i,d,i.val+d.val)}var H,K;c.length-=wt[n];var G=c[c.length-1];c.push(Ct[Rt[G]+r]),h.length-=wt[n],h.push(i)}function M(t){for(null!==t&&d.push(t);!g&&d.length>0;){var e=d[0],n=c[c.length-1],r=St[n]+e.id,a=0;(a=r<0||r>=xt.length||yt[r]!==n?-At[n]-1:xt[r])===Et?(K(e),d.shift()):a>0?0===e.id?(g=!0,N("accept"),d.shift()):(c.push(a-1),h.push(p),p=null,H(),d.shift()):a<0?(B(-a-1),H()):(K(e),d.shift())}}function H(){for(var t,e=c[c.length-1];St[e]===-Tt&&-1!==(t=At[e]);)B(t),e=c[c.length-1]}function K(t){N("syntaxerror",t,c[c.length-1])}}!function(t){var e;(n=e=t.TokenType||(t.TokenType={}))[n.EOF=1]="EOF",n[n.NONE=2]="NONE",n[n.ERROR=3]="ERROR",n[n.STRING=4]="STRING",n[n.NAME=5]="NAME",n[n.COMMENT=6]="COMMENT",n[n.DIRECTIVE=7]="DIRECTIVE",n[n.PUNCTUATION=8]="PUNCTUATION",n[n.CODE=9]="CODE",n[n.TOKEN_IN_CODE=10]="TOKEN_IN_CODE";var n;function r(){var t=Ut(),n=!1;return t.disableBlocks(),t.on("syntaxerror",function(){return n=!0}),t.init(null,null),{load:function(e){return t.load(e)},nextToken:function(){n=!1;var r=t.nextToken();return null===r?null:r.id!==Lt.EOF&&n?e.ERROR:function(t){switch(t){case Lt.EOF:return e.EOF;case Lt.ERROR:return e.ERROR;case Lt.COMMENT:return e.COMMENT;case Lt.NAME:return e.NAME;case Lt.STRING:return e.STRING;case Lt.OPT_DIR:case Lt.LEX_DIR:case Lt.TOKEN_DIR:case Lt.LEFT_DIR:case Lt.RIGHT_DIR:case Lt.NONASSOC_DIR:case Lt.USE_DIR:case Lt.HEADER_DIR:case Lt.EXTRA_ARG_DIR:case Lt.EMPTY:case Lt.TYPE_DIR:case Lt.PREC_DIR:case Lt.INIT_DIR:case Lt.OUTPUT_DIR:case Lt.IMPORT_DIR:case Lt.TOKEN_HOOK_DIR:case Lt.LEAST_DIR:case Lt.ALWAYS_DIR:case Lt.SEPERATOR:case Lt.TOUCH_DIR:return e.DIRECTIVE;case Lt.OPEN_BLOCK:case Lt.CLOSE_BLOCK:case Lt.GT:case Lt.LT:case Lt.BRA:case Lt.KET:case Lt.EQU:case Lt.CBRA:case Lt.CKET:case Lt.QUESTION:case Lt.STAR:case Lt.PLUS:case Lt.DASH:case Lt.COLON:case Lt.ARROW:case Lt.EOL:case Lt.OR:case Lt.WEDGE:case Lt.COMMA:return e.PUNCTUATION;case Lt.LHS_REF:case Lt.TOKEN_REF:case Lt.MATCHED:case Lt.EMIT_TOKEN:return e.TOKEN_IN_CODE;case Lt.WHITESPACE:case Lt.ANY_CODE:default:return e.NONE}}(r.id)},loadState:function(e){return t.loadParserState(e)},getState:function(){return t.getParserState()}}}t.createHighlightContext=r;t.highlightString=function(t,n){var a={">":"&gt;","<":"&lt;"," ":"&nbsp;","&":"&amp;","\n":"<br />","\t":"&nbsp;&nbsp;&nbsp;&nbsp;"};function i(t){for(var e="",n=0;n<t.length;n++){var r=t.charAt(n);e+=a[r]||r}return e}var o="",s=0,l=r(),u=0;l.load({current:function(){return u<t.length?t.charCodeAt(u):null},next:function(){return u++},isEof:function(){return u>=t.length},backup:function(t){return u-=t.length}});for(var c;(c=l.nextToken())!==e.EOF;){var h=n(c);o+=null!==h?'<span class="'+h+'">'+i(t.substr(s,u-s))+"</span>":i(t.substr(s,u-s)),s=u}return o}}(t.highlight||(t.highlight={}));function Bt(e,n){var r=Ut(),a=!1;r.on("syntaxerror",function(t,n){if(t.id===Lt.ERROR)e.requireLines(function(e,n){var r="unexpected illegal token "+$(t,n)+"\n";e.err(new A(r,"Lexical error"))});else{for(var i="unexpected token "+t.toString()+", expecting one of the following tokens:\n",o=0,s=function(t){var e=St[t],n=[];function r(n){var r=e+n;return!(r<0||r>=xt.length||t!==yt[r])||-1!==At[t]}for(var a=0;a<Tt;a++)r(a)&&n.push(a);return n}(n);o<s.length;o++){var l=s[o];i+="    "+(u=l,null===Nt[u]?"<"+Ot[u]+">":'"'+Nt[u]+'"')+" ...\n"}e.requireLines(function(e,n){var r=$(t,n)+"\n"+i;e.err(new A(r,"Syntax error"))})}var u;r.halt(),a=!0});var i=function(e){var n,r=new D,a=new _,i={},o={},s=[],l=null,u={},c=null,f=null,p=0,d=!0,v=1,g=[],m=[],k={};return r.grammar=a,n=rt(e),c=new Y(function(t){return u[t]}),f=new Y(function(t){return i[t]}),S(q("EOF"),null),S(q("ERROR"),null),{defToken:S,getTokenID:function(t){var e=R(t);return null===e?"0":String(e.index)},getTokenByAlias:y,getTokenByName:R,defineTokenPrec:function(t,e,n){if(n===it.TOKEN){var r=R(t);null!==r&&(r.assoc=e,r.pr=v)}else if(n===it.STRING){var r=y(t);null!==r&&(r.assoc=e,r.pr=v)}else n===it.NAME&&(k[t.val]=k[t.val]||{assoc:e,pr:v,pos:t})},touchToken:function(t,e){if(e===it.TOKEN){var n=R(t);null!==n&&(n.used=!0)}else if(e===it.STRING){var n=y(t);null!==n&&(n.used=!0)}},setLineTerminator:function(t){r.eol=t},setOpt:function(t,e){r.opt[t.val]={name:t,val:e}},setOutput:function(t){null!==r.output&&x("redefine of output",r.output,t),r.output=t},setHeader:function(t){r.header.push(t)},setExtraArg:function(t){null!==r.extraArgs&&x("redefine of extra arguments",r.extraArgs,t),r.extraArgs=t},setTokenHook:function(t,e){null!==r.tokenHookArg&&x("redefine of token hook block",r.tokenHookArg,t),r.tokenHookArg=t,r.tokenHookBody=e},setType:function(t){null!==r.sematicType&&x("redefine of sematic type",r.sematicType,t),r.sematicType=t},setInit:function(t,e){null!==r.initArg&&x("redefine of initializing block",r.initArg,t),r.initArg=t,r.initBody=e},setEpilogue:function(t){r.epilogue=t},incPr:function(){v++},prepareRule:w,addRuleUseVar:function(t){var e=b();void 0!==e.usedVars[t.val]?E('re-use of sematic variable "'+t.val+'"',t):e.usedVars[t.val]={pos:t,val:0}},addRuleSematicVar:function(t){var e=b();void 0!==e.usedVars[t.val]?E('variable "'+t.val+'" conflicts with another imported variable',t):void 0!==e.vars[t.val]?E('sematic variable "'+t.val+'" is already defined',t):l=t},addRuleItem:I,addAction:O,defineRulePr:function(e,n){if(n===it.STRING||n===it.TOKEN){var r=n===it.STRING?y(e):R(e);if(null!==r){if(r.assoc===t.Assoc.UNDEFINED)return void E('precedence of token "'+e.val+'" has not been defined',e);b().pr=r.pr}}else{var a=k[e.val];a||E('pseudo token "'+e+'" is not defined',e),b().pr=a.pr}},commitRule:N,addPushStateAction:function(t,e){var r=t.placeHolder();n.requiringState.wait(e.val,function(n,a){n?t.set(r,at(a)):E('state "'+e.val+'" is undefined',e)})},addSwitchToStateAction:function(t,e){var r=t.placeHolder();n.requiringState.wait(e.val,function(n,a){n?t.set(r,(i=a,function(t){t.switchToLexState(i)})):E('state "'+e.val+'" is undefined',e);var i})},addEmitTokenAction:function(t,e){var n=t.placeHolder();f.wait(e.val,function(r,a){r?t.set(n,function(t){t.emitToken(a.index)}):E("use of undefined token <"+e.val+">",e)})},build:function(){a.tokenCount=a.tokens.length,a.tokens[0].used=!0,a.tokens[1].used=!0,a.nts[0].used=!0,e.beginTime("build grammar");for(var t=0,i=a.nts;t<i.length;t++){var o=i[t];o.firstSet=new h(a.tokenCount);for(var s=0,l=o.rules;s<l.length;s++){var u=l[s];u.calcPr();var p=function(t){var e=u.usedVars[t];e.val=u.getVarSp(t,function(n){E('cannot find variable "'+t+'": '+n,e.pos)})};for(var d in u.usedVars)p(d)}}e.endTime(),e.beginTime("build lexical DFAs"),r.lexDFA=n.build(),e.endTime();for(var v=0,g=m;v<g.length;v++){var k=g[v];k()}return f.fail(),c.fail(),r},lexBuilder:n};function b(){return s[s.length-1]}function T(){var t=l;l=null;var e=b(),n="@"+p++;w(q(n));var r=b();O(e.action),N(),e.action=null,I(q(n),it.NAME),l=t;for(var a in e.vars){var i=e.vars[a];r.usedVars[a]={val:i.val,pos:i.pos}}for(var a in e.usedVars)i=e.usedVars[a],r.usedVars[a]={val:i.val,pos:i.pos}}function E(t,n){e.requireLines(function(e,r){e.err(new A(t+" "+$(n,r),"Compilation error"))})}function x(t,n,r){e.requireLines(function(e,a){var i=t+" "+$(r,a)+"\n";i+="previous defination was at "+$(n,a),e.warn(new C(i))})}function S(e,n){var r=i[e.val];return void 0!==r?(r.appears.push(e),r):(r={index:a.tokens.length,sym:e.val,alias:n,pr:0,assoc:t.Assoc.UNDEFINED,used:!1,appears:[e]},null!==n&&(o[n]||(o[n]=[]),o[n].push(r)),i[e.val]=r,a.tokens.push(r),r)}function y(t){var e=o[t.val];if(void 0===e)return E('cannot identify "'+t.val+'" as a token',t),null;if(e.length>1){for(var n="",r=0;r<e.length;r++)r>0&&(n+=","),n+="<"+e[r].sym+">";return E("cannot identify "+t.val+" as a token, since it could be "+n,t),null}return e[0]}function R(t){var e=i[t.val];return void 0===e?(E("cannot identify <"+t.val+"> as a token",t),null):e}function w(t){d&&(d=!1,w(q("(accept)")),I(q(t.val),it.NAME),I(q("EOF"),it.TOKEN),N());var e=u[t.val];void 0===e&&(e=u[t.val]={index:a.nts.length,sym:t.val,firstSet:null,used:!1,rules:[],parents:[]},a.nts.push(e),c.signal(t.val,e));var n=new L(a,e,t);s.push(n)}function I(t,e){var n=b();if(null!==n.action&&T(),null!==l&&(n.vars[l.val]={val:n.rhs.length,pos:l},l=null),e===it.NAME){var r=n.rhs.length;n.rhs.push(0),c.wait(t.val,function(e,a){e?(n.rhs[r]=-a.index-1,a.parents.push({rule:n,pos:r}),a.used=!0):E("use of undefined non terminal "+t.val,t)})}else if(e===it.TOKEN){var a=i[t.val];if(void 0===a)return void E("cannot recognize <"+t.val+"> as a token",t);n.rhs.push(a.index),a.used=!0}else if(e===it.STRING){var o=y(t);null!==o&&(n.rhs.push(o.index),o.used=!0)}}function O(t){var e=b();null!==e.action&&T(),e.action=t,null!==l&&(T(),e.vars[l.val]={val:e.rhs.length-1,pos:l},l=null)}function N(){var t=s.pop();t.index=a.rules.length,t.lhs.rules.push(t),a.rules.push(t);for(var e=0,n=g;e<n.length;e++)(0,n[e])();g.length=0}}(e);r.init(e,i),e.beginTime("parse grammar file"),r.parse(n),e.endTime();var o=r.getLineTerminator(),s="\n";if(o!==Dt.NONE&&o!==Dt.AUTO&&(s=o===Dt.CR?"\r":o===Dt.LF?"\n":o===Dt.CRLF?"\r\n":null,i.setLineTerminator(s)),a){var l=new D;return l.eol=s,l}return i.build()}var Mt=function(t,e){d("/*"),d("    generated by jscc, an LALR(1) parser generator made by hadroncfy."),d("    template for typescript, written by hadroncfy, aussi."),f("*/");for(var n=0,r=t.file.header;n<r.length;n++){var a=r[n];d(""),f(a.val)}var i=t.file.prefix,o=h("tab","    "),s="typescript"===t.output;function u(t,e){return s?t:e||""}function c(t,e){return void 0===e&&(e=""),null===t?e:t.val}function h(e,n){var r=t.file.opt[e];return void 0===r?n:r.val.val}function f(t){e.write(t)}function d(t){e.writeln(t)}function v(t,e){return(t.length<e?function(t,e){for(var n="";e-- >0;)n+=t;return n}(" ",e-t.length):"")+t}function g(e,n,r,a,s,l){var c=1;d(""),f("var "),f(i+e+u(": "+n+"[]")),d(" = [ "),f(o);for(var h=0,p=r;h<p.length;h++){f(v(l(p[h]),a)),f(","),c++>=s&&(c=1,f(t.endl+o))}d(""),f("]; ")}function m(t,e){if(s)return t+" => "+e;return"function"+("("===t.charAt(0)?t:"("+t+")")+"{ return "+e+"; }"}d(""),d("/*"),d("    constants"),d("*/"),f("var "),f(i),d("lf = '\\n'.charCodeAt(0);"),f("var "),f(i),f("cr = '\\r'.charCodeAt(0);"),s&&(d(""),d("interface DFATable{"),d("    pnext: number[];"),d("    disnext: number[];"),d("    checknext: number[];"),d("    maxAsicii: number;"),d("    classTable: number[];"),d("    unicodeClassTable: number[];"),d("    isEnd: number[];"),d("    hasArc: number[];"),f("};"));var k=t.file.dfaTables;function b(t,e){function n(t){return i+t+String(e)}g("lexpnext"+e,"number",t.pnext,6,10,function(t){return null===t?"-1":String(t.to.index)}),g("lexdisnext"+e,"number",t.disnext,6,10,function(t){return String(t)}),g("lexchecknext"+e,"number",t.checknext,6,10,function(t){return String(t)}),g("lexclassTable"+e,"number",t.classTable,6,10,function(t){return String(t)}),g("lexunicodeClassTable"+e,"number",t.unicodeClassTable,6,10,function(t){return String(t)}),g("lexisEnd"+e,"number",t.states,1,15,function(t){return null===t.endAction?"0":"1"}),g("lexhasArc"+e,"number",t.states,1,15,function(t){return 0===t.arcs.length?"0":"1"}),d(""),f("var "),f(i),f("lextable"),f(String(e)+u(": DFATable")),d(" = {"),f("    pnext: "),f(n("lexpnext")),d(","),f("    disnext: "),f(n("lexdisnext")),d(","),f("    checknext: "),f(n("lexchecknext")),d(","),f("    maxAsicii: "),f(t.maxAsicii),d(","),f("    classTable: "),f(n("lexclassTable")),d(","),f("    unicodeClassTable: "),f(n("lexunicodeClassTable")),d(","),f("    isEnd: "),f(n("lexisEnd")),d(","),f("    hasArc: "),f(n("lexhasArc")),d(""),f("};")}d(""),d("/*"),d("    dfa table definations"),f("*/");for(var T=0,E=k;T<E.length;T++)b(E[T],T);d(""),d("/*"),d("    dfa tables"),d("*/"),f("var "),f(i),f("dfaTables"),f(u(": DFATable[]")),f(" = [");for(var x=0;x<k.length;x++)d(""),f("    "),f(i),f("lextable"),f(x),f(",");d(""),d("];"),d("/*"),d("    find unicode class"),d("*/"),f("function "),f(i),f("findUnicodeClass(uc"),f(u(": number[]")),f(", c"),f(u(": number")),d("){"),d("    for(var i = 0; i < uc.length; i += 3){"),d("        if(c >= uc[i + 1] && c <= uc[i + 2]){"),d("            return uc[i];"),d("        }"),d("        else if(c < uc[i + 1]){"),d("            return -1;"),d("        }"),d("    }"),d("    return -1;"),d("}"),d("/*"),d("    tokens that a lexical dfa state can return"),f("*/");var S=0;for(E=k;S<E.length;S++)g("lexTokens"+S,"number",E[S].states,6,10,function(t){return null===t.endAction||null===t.endAction.data.token?"-1":String(t.endAction.data.token.index)});d("");var y=t.pt;d(""),f("var "),f(i),f("stateCount = "),f(y.stateCount),d(";"),f("var "),f(i),f("tokenCount = "),f(t.file.grammar.tokens.length),d(";"),f("var "),f(i),f("actERR = "),f(y.stateCount+1),d(";"),d("/*"),f("    compressed action table: action = "),f(i),f("pact["),f(i),d("disact[STATE-NUM] + TOKEN]"),d("    when action > 0, shift the token and goto state (action - 1);"),d("    when action < 0, reduce with rule (1-action);"),d("    when action = 0, do default action."),f("*/"),g("pact","number",y.pact,6,10,function(t){return null===t?"0":t===p.NULL?String(y.stateCount+1):t.actionType===l.SHIFT?(t.shift.stateIndex+1).toString():t.actionType===l.REDUCE?(-t.rule.index-1).toString():void 0}),d(""),d("/*"),d("    displacement of action table."),f("*/"),g("disact","number",y.disact,6,10,function(t){return t.toString()}),d(""),d("/*"),f("    used to check if a position in "),f(i),d("pact is out of bouds."),f("    if "),f(i),f("checkact["),f(i),d("disact[STATE-NUM] + TOKEN] = STATE-NUM, this position is not out of bounds."),f("*/"),g("checkact","number",y.checkact,6,10,function(t){return void 0===t?"0":t.toString()}),d(""),d("/*"),f("    default action table. action = "),f(i),d("defred[STATE-NUM],"),d("    where action is the number of the rule to reduce with."),f("*/"),g("defred","number",y.defred,6,10,function(t){return t.toString()}),d(""),d("/*"),f("    compressed goto table: goto = "),f(i),f("pgoto["),f(i),d("disgoto[STATE-NUM] + NON_TERMINAL]"),f("*/"),g("pgoto","number",y.pgoto,6,10,function(t){return null===t?"-1":t.shift.stateIndex.toString()}),d(""),d("/*"),d("    displacement of the goto table"),f("*/"),g("disgoto","number",y.disgoto,6,10,function(t){return t.toString()}),d(""),d("/*"),f("    length of each rule: rule length = "),f(i),d("ruleLen[RULE-NUM]"),f("*/"),g("ruleLen","number",y.g.rules,6,10,function(t){return t.rhs.length.toString()}),d(""),d("/*"),d("    index of the LHS of each rule"),f("*/"),g("lhs","number",y.g.rules,6,10,function(t){return t.lhs.index.toString()}),d(""),d("/*"),d("    token names"),f("*/"),g("tokenNames","string",y.g.tokens,20,3,function(t){return'"'+t.sym.replace(/"/g,'\\"')+'"'}),d(""),d("/*"),d("    token alias"),f("*/"),g("tokenAlias","string",y.g.tokens,20,3,function(t){return t.alias?'"'+t.alias.replace(/"/g,'\\"')+'"':"null"});var A=h("className","Parser");d("");function C(t,e){var n={raw:function(t){f(t)},beginBlock:function(t,e){!e&&f("if("+i+"enableBlock)"),f("{")},endBlock:function(t){f("}")},pushLexState:function(t){f(i+"lexState.push("+t+")")},switchToLexState:function(t){f(i+"lexState["+i+"lexState.length - 1] = "+t)},popLexState:function(){f(i+"lexState.pop()")},setImg:function(t){f(i+'setImg("'+t+'")')},tokenObj:function(){f(i+"token")},matched:function(){f(i+"matched")},lhs:function(){f(i+"sematicVal")},emitToken:function(t){f(i+"tokenQueue.push(new Token("+t+", null, -1, 0, 0, 0))")}},r=i+"staten";d(""),f("    function "),f(i),f("doLexAction"),f(e),f("("),f(r+u(": number")),d("){"),f("        var "),f(i),f("tk = "),f(i),f("lexTokens"),f(e),f("["),f(r),d("];"),f("        "),f(i),f("tk !== -1 && "),f(i),f("prepareToken("),f(i),d("tk);"),f("        switch("),f(r),f("){");for(var a=0,o=t.states;a<o.length;a++)null!==o[a].endAction&&o[a].endAction.data.actions.length>0&&(d(""),f("            case "),f(a),f(":"),d(""),f("                "),o[a].endAction.data.toCode(n),d(""),f("                break;"));d(""),d("            default:;"),d("        }"),f("    }")}d(""),s?(d(""),d("function tokenToString(tk: number){"),f("    return "),f(i),f("tokenAlias[tk] === null ? `<${"),f(i),f('tokenNames[tk]}>` : `"${'),f(i),d('tokenAlias[tk]}"`;'),f("}")):(d(""),d("function tokenToString(tk){"),f("    return "),f(i),f('tokenAlias[tk] === null ? "<" + '),f(i),f('tokenNames[tk] + ">" : \'"\' + '),f(i),d("tokenAlias[tk] + '\"';"),f("}")),d(""),f("function getExpectedTokens(state"),f(u(": number")),f(")"),f(u(": number[]")),d("{"),f("        var dis = "),f(i),d("disact[state];"),f("        var ret"),f(u(": number[]")),d(" = [];"),f("        function expect(tk"),f(u(": number")),d("){"),d("            var ind = dis + tk;"),f("            if(ind < 0 || ind >= "),f(i),f("pact.length || state !== "),f(i),d("checkact[ind]){"),f("                return "),f(i),d("defred[state] !== -1;"),d("            }"),d("            else {"),d("                return true;"),d("            }"),d("        }"),f("        for(var tk = 0; tk < "),f(i),d("tokenCount; tk++){"),d("            expect(tk) && ret.push(tk);"),d("        }"),d("        return ret;"),d("}"),d("// Token kinds"),f(u("enum TokenKind {","var TokenKind = {"));var R=0;d("");for(var w=0,I=t.file.grammar.tokens;w<I.length;w++){var O=I[w];d("    "+u(O.sym+" = "+R,O.sym+" : "+R)+","),R++}d(""),f("};"),s?(d(""),d("class Token {"),d("    constructor("),d("        public id: number,"),d("        public val: string,"),d("        public startLine: number,"),d("        public startColumn: number,"),d("        public endLine: number,"),d("        public endColumn: number"),d("    ){}"),d("    clone(){"),d("        return new Token("),d("            this.id,"),d("            this.val,"),d("            this.startLine,"),d("            this.startColumn,"),d("            this.endLine,"),d("            this.endColumn"),d("        );"),d("    }"),d("    toString(){"),f("        return ("),f(i),d("tokenAlias[this.id] === null ? "),f("            `<${"),f(i),d("tokenNames[this.id]}>` :"),f('            `"${'),f(i),d('tokenAlias[this.id]}"`) + `("${this.val}")`;'),d("    }"),d("}"),f("interface "),f(A),d("{"),f("    init("),f(c(t.file.initArg)),d(");"),d("    accept(s: string);"),d("    end();"),d("    parse(input: ParserInput | string): boolean;"),d("    load(input: ParserInput | string);"),d("    nextToken(): Token;"),d(""),d("    setLineTerminator(lt: LineTerm);"),d("    getLineTerminator(): LineTerm;"),d("    halt();"),d("    on(ent: 'lexicalerror', cb: (c: string, line: number, col: number) => any);"),d("    on(ent: 'syntaxerror', cb: (t: Token, state: number) => any);"),d("    on(ent: 'accept', cb: () => any);"),d(""),d("    enableBlocks();"),d("    disableBlocks();"),d("    loadParserState(state: ParserState);"),d("    getParserState(): ParserState;"),f("}")):(d(""),d("function Token(id, val, startLine, startColumn, endLine, endColumn){"),d("    this.id = id;"),d("    this.val = val;"),d("    this.startLine = startLine;"),d("    this.startColumn = startColumn;"),d("    this.endLine = endLine;"),d("    this.endColumn = endColumn;"),d("}"),d("Token.prototype.clone = function(){"),d("    return new Token("),d("        this.id,"),d("        this.val,"),d("        this.startLine,"),d("        this.startColumn,"),d("        this.endLine,"),d("        this.endColumn"),d("    );"),d("}"),d("Token.prototype.toString = function(){"),f("    return ("),f(i),d("tokenAlias[this.id] === null ? "),f("        '<' + "),f(i),d("tokenNames[this.id] + '>' :"),f("        '\"' + "),f(i),d('tokenAlias[this.id] + \'"\') + "(" + this.val + ")";'),f("}"));var N=c(t.file.sematicType,"any");s?(d(""),d("interface ParserState {"),d("    lexState: number[];"),d("    lrState: number[];"),f("    sematicS: "),f(N),d("[];"),d("};"),d("interface ParserInput {"),d("    current(): number;"),d("    next();"),d("    isEof(): boolean;"),d("    backup(s: string);"),d("};"),d("enum LineTerm{"),d("    NONE = 1,"),d("    AUTO,"),d("    CR,"),d("    LF,"),d("    CRLF"),f("};")):(d(""),d("var LineTerm = {"),d("    NONE: 1,"),d("    AUTO: 2,"),d("    CR: 3,"),d("    LF: 4,"),d("    CRLF: 5"),f("};")),d(""),d(""),f("function create"),f(A),f("()"),f(u(": "+A)),d(" {"),d("    //#region parser state variables"),f("    var "),f(i),f("lexState"),f(u(": number[]")),d(";"),f("    var "),f(i),f("state"),f(u(": number")),d(";"),f("    var "),f(i),f("lastCR"),f(u(": boolean")),d(";"),f("    var "),f(i),f("matched"),f(u(": string")),d(";"),f("    var "),f(i),f("marker"),f(u(": { state: number, line: number, column: number }")),d(" = { state: -1, line: 0, column: 0 };"),f("    var "),f(i),f("backupCount"),f(u(": number")),d(";"),f("    var "),f(i),f("line"),f(u(": number")),d(";"),f("    var "),f(i),f("column"),f(u(": number")),d(";"),f("    var "),f(i),f("tline"),f(u(": number")),d(";"),f("    var "),f(i),f("tcolumn"),f(u(": number")),d(";"),d(""),f("    var "),f(i),f("lrState"),f(u(": number[]")),d(";"),f("    var "),f(i),f("sematicS"),f(u(": "+N+"[]")),d(";"),d("    //#endregion"),d(""),f("    var "),f(i),f("input"),f(u(": ParserInput")),d(";"),f("    var "),f(i),f("sematicVal"),f(u(": "+N)),d(";"),f("    var "),f(i),f("tokenQueue"),f(u(": Token[]")),d(";"),f("    var "),f(i),f("token"),f(u(": Token")),d(";"),f("    var "),f(i),f("stop"),f(u(": boolean")),d(";"),f("    var "),f(i),f("tokenEmitted"),f(u(": boolean")),d(";"),f("    var "),f(i),f("enableBlock"),f(u(": boolean")),d(" = true;"),f("    var "),f(i),f("lineTerm"),f(u(": LineTerm")),d(";"),d(""),f("    var "),f(i),f("handlers"),f(u(": {[s: string]: ((a1?, a2?, a3?) => any)[]}")),d(" = {};"),d(""),d("    // extra members, defined by %extra_arg"),f("    "),f(c(t.file.extraArgs)),d(""),s?(d(""),d("    return {"),d("        init,"),d("        on,"),d("        setLineTerminator,"),f("        getLineTerminator: () => "),f(i),d("lineTerm,"),d("        accept,"),d("        end,"),d("        load,"),d("        parse,"),d("        nextToken,"),d("        halt,"),d("        enableBlocks,"),d("        disableBlocks,"),d("        loadParserState,"),d("        getParserState"),f("    };")):(d(""),d("    return {"),d("        init: init,"),d("        on: on,"),d("        setLineTerminator: setLineTerminator,"),f("        getLineTerminator: function() { return "),f(i),d("lineTerm; },"),d("        accept: accept,"),d("        end: end,"),d("        load: load,"),d("        nextToken: nextToken,"),d("        halt: halt,"),d("        enableBlocks: enableBlocks,"),d("        disableBlocks: disableBlocks,"),d("        loadParserState: loadParserState,"),d("        getParserState: getParserState,"),d("        parse: parse"),f("    };")),d(""),f("    function init("),f(c(t.file.initArg)),d("){"),f("        "),f(i),d("lexState = [ 0 ];// DEFAULT"),f("        "),f(i),d("state = 0;"),f("        "),f(i),d("matched = '';"),f("        "),f(i),d("token = new Token(-1, null, 0, 0, 0, 0);"),f("        "),f(i),d("marker.state = -1;"),f("        "),f(i),d("backupCount = 0;"),f("        "),f(i),f("line = "),f(i),d("tline = 0;"),f("        "),f(i),f("column = "),f(i),d("tcolumn = 0;"),d("        "),f("        "),f(i),d("lrState = [ 0 ];"),f("        "),f(i),d("sematicS = [];"),f("        "),f(i),d("sematicVal = null;"),f("        "),f(i),d("tokenQueue = [];"),d(""),f("        "),f(i),d("lineTerm = LineTerm.AUTO;"),f("        "),f(i),d("lastCR = false;"),d(""),f("        "),f(c(t.file.initBody)),d(""),d(""),f("        "),f(i),d("tryReduce();"),d("    }"),f("    function load(input"),f(u(": ParserInput | string")),d("){"),d("        if(typeof input === 'string'){"),d("            var i = 0;"),f("            var s"),f(u(": string")),d(" = input;"),f("            "),f(i),d("input = {"),f("                current: "),f(m("()","i < s.length ? s.charCodeAt(i) : null")),d(","),f("                next: "),f(m("()","i++")),d(","),f("                isEof: "),f(m("()","i >= s.length")),d(","),f("                backup: "),f(m("t","i -= t.length")),d(""),d("            }"),d("        }"),d("        else {"),f("            "),f(i),d("input = input;"),d("        }"),d("    }"),f("    function nextToken()"),f(u(": Token")),d("{"),f("        "),f(i),d("tokenEmitted = false;"),f("        while(!"),f(i),f("stop && !"),f(i),d("tokenEmitted){"),f("            var c = "),f(i),d("input.current();"),d("            if(c !== null){"),f("                "),f(i),d("acceptChar(c);"),d("            }"),d("            // null means end of file or no input available at present"),f("            else if("),f(i),d("input.isEof()){"),f("                if("),f(i),d("acceptEOF()){"),d("                    break;"),d("                }"),d("            }"),d("            else {"),d("                return null;"),d("            }"),d("        }"),f("        return "),f(i),d("token;"),d("    }"),f("    function setLineTerminator(lt"),f(u(": LineTerm")),d("){"),f("        "),f(i),d("lineTerm = lt;"),d("    }"),d("    function enableBlocks(){"),f("        "),f(i),d("enableBlock = true;"),d("    }"),d("    function disableBlocks(){"),f("        "),f(i),d("enableBlock = false;"),d("    }"),d("    /**"),d("     *  input a string"),d("     *  @api public"),d("     *  @deprecated"),d("     */"),f("    function accept(s"),f(u(": string")),d("){"),d("        var i = 0;"),d("        load({"),f("            current: "),f(m("()","i < s.length ? s.charCodeAt(i) : null")),d(","),f("            next: "),f(m("()","i++")),d(","),f("            isEof: "),f(m("()","i >= s.length")),d(","),f("            backup: "),f(m("t","i -= t.length")),d(""),d("        });"),f("        while(!"),f(i),d("stop && nextToken().id !== 0);"),d("    }"),d("    /**"),d("     *  tell the compiler that end of file is reached"),d("     *  @api public"),d("     */"),d("    function end(){"),d("        "),d("    }"),d("    function parse(input: ParserInput | string): boolean {"),d("        load(input);"),d("        var t;"),f("        while(!"),f(i),d("stop){"),d("            t = nextToken();"),d("            if(t === null){"),d("                return false;"),d("            }"),d("            else if(t.id === 0){"),d("                return true;"),d("            }"),d("        }"),d("        return true;"),d("    }"),d("    function halt(){"),f("        "),f(i),d("stop = true;"),d("    }"),f("    function loadParserState(state"),f(u(": ParserState")),d("){"),f("        "),f(i),d("lexState = state.lexState;"),f("        "),f(i),d("lrState = state.lrState;"),f("        "),f(i),d("sematicS = state.sematicS;"),d("    }"),f("    function getParserState()"),f(u(": ParserState")),d(" {"),d("        return {"),f("            lexState: "),f(i),d("lexState,"),f("            lrState: "),f(i),d("lrState,"),f("            sematicS: "),f(i),d("sematicS"),d("        };"),f("    }"),t.file.tokenHookArg&&(d(""),f("    function "),f(i),f("tokenHook("),f(t.file.tokenHookArg.val+u(": Token")),f(")"),f(u(": boolean")),d("{"),f("        "),f(t.file.tokenHookBody.val),d(""),f("    }")),d(""),d("    /**"),d("     *  set "),d("     */"),f("    function "),f(i),f("setImg(s"),f(u(": string")),d("){"),f("        "),f(i),d("matched = s;"),f("        "),f(i),f("tline = "),f(i),d("line;"),f("        "),f(i),f("tcolumn = "),f(i),d("column;"),d("    }"),f("    function "),f(i),f("prepareToken(tid"),f(u(": number")),d("){"),f("        "),f(i),d("token.id = tid;"),f("        "),f(i),f("token.val = "),f(i),d("matched;"),f("        "),f(i),f("token.startLine = "),f(i),d("tline;"),f("        "),f(i),f("token.startColumn = "),f(i),d("tcolumn;"),f("        "),f(i),f("token.endLine = "),f(i),d("line;"),f("        "),f(i),f("token.endColumn = "),f(i),d("column - 1;"),t.file.tokenHookArg?(d(""),f("        if(!"),f(i),f("tokenHook("),f(i),d("token)){"),f("            "),f(i),f("tokenQueue.push("),f(i),d("token);"),f("        }")):(d(""),f("        "),f(i),f("tokenQueue.push("),f(i),f("token);")),d(""),d(""),f("        "),f(i),d("tokenEmitted = true;"),f("        "),f(i),d("matched = '';"),f("        "),f(i),f("tline = "),f(i),d("line;"),f("        "),f(i),f("tcolumn = "),f(i),d("column;"),d("    }"),f("    function "),f(i),f("emit(name"),f(u(": string")+u(", a1?, a2?, a3?",", a1, a2, a3")),d("){"),f("        var cbs = "),f(i),d("handlers[name];"),d("        if(cbs){"),d("            for(var i = 0; i < cbs.length; i++){"),d("                cbs[i](a1, a2, a3);"),d("            }"),d("        }"),d("    }"),f("    function on(name"),f(u(": string")),f(", cb"),f(u(": (a1?, a2?, a3?) => any")),d("){"),f("        "),f(i),f("handlers[name] || ("),f(i),d("handlers[name] = []);"),f("        "),f(i),d("handlers[name].push(cb);"),f("    }");var L=0;for(E=k;L<E.length;L++)C(E[L],L);d(""),d("    /**"),d("     *  do a lexical action"),d("     *  @api private"),d("     *  @internal"),d("     */"),f("    function "),f(i),f("doLexAction(lexstate"),f(u(": number")),f(", state"),f(u(": number")),d("){"),f("        switch(lexstate){");for(var _=0;_<k.length;_++)d(""),f("            case "),f(_),d(":"),f("                "),f(i),f("doLexAction"),f(_),d("(state);"),f("                break;");d(""),d("            default:;"),d("        }"),f("        "),f(i),f("tokenQueue.length > 0 && "),f(i),d("acceptToken(null);"),d("    }"),f("    function "),f(i),d("rollback(){"),f("        var ret = "),f(i),f("matched.substr("),f(i),f("matched.length - "),f(i),f("backupCount, "),f(i),d("backupCount);"),f("        "),f(i),d("input.backup(ret);"),f("        "),f(i),f("matched = "),f(i),f("matched.substr(0, "),f(i),f("matched.length - "),f(i),d("backupCount);"),f("        "),f(i),d("backupCount = 0;"),f("        "),f(i),f("line = "),f(i),d("marker.line;"),f("        "),f(i),f("column = "),f(i),d("marker.column;"),f("        "),f(i),f("state = "),f(i),d("marker.state;"),f("        "),f(i),d("marker.state = -1;"),d("    }"),f("    function "),f(i),d("mark(){"),f("        "),f(i),f("marker.state = "),f(i),d("state;"),f("        "),f(i),f("marker.line = "),f(i),d("line;"),f("        "),f(i),f("marker.column = "),f(i),d("column;"),f("        "),f(i),d("backupCount = 0;"),d("    }"),f("    function "),f(i),f("consume(c"),f(u(": number")),d("){"),f("        // c === "),f(i),f("eol ? ("),f(i),f("line++, "),f(i),f("column = 0) : ("),f(i),d("column += c > 0xff ? 2 : 1);"),f("        switch("),f(i),d("lineTerm){"),d("            case LineTerm.NONE:"),f("                "),f(i),d("column += c > 0xff ? 2 : 1;"),d("                break;"),d("            case LineTerm.CR:"),f("                c === "),f(i),f("cr ? ("),f(i),f("line++, "),f(i),f("column = 0) : ("),f(i),d("column += c > 0xff ? 2 : 1);"),d("                break;"),d("            case LineTerm.LF:"),f("                c === "),f(i),f("lf ? ("),f(i),f("line++, "),f(i),f("column = 0) : ("),f(i),d("column += c > 0xff ? 2 : 1);"),d("                break;"),d("            case LineTerm.CRLF:"),f("                if("),f(i),d("lastCR){"),f("                    if(c === "),f(i),d("lf){"),f("                        "),f(i),f("line++, "),f(i),d("column = 0;"),f("                        "),f(i),d("lastCR = false;"),d("                    }"),d("                    else {"),f("                        "),f(i),d("column += c > 0xff ? 2 : 1;"),f("                        "),f(i),f("lastCR = c === "),f(i),d("cr;"),d("                    }"),d("                }"),d("                else {"),f("                    "),f(i),d("column += c > 0xff ? 2 : 1;"),f("                    "),f(i),f("lastCR = c === "),f(i),d("cr;"),d("                }"),d("                break;"),d("            case LineTerm.AUTO:"),f("                if("),f(i),d("lastCR){"),f("                    if(c === "),f(i),d("lf){"),f("                        "),f(i),f("line++, "),f(i),d("column = 0;"),f("                        "),f(i),d("lastCR = false;"),f("                        "),f(i),d("lineTerm = LineTerm.CRLF;"),d("                    }"),d("                    else {"),f("                        "),f(i),f("line++, "),f(i),d("column = 0;"),f("                        "),f(i),d("lineTerm = LineTerm.CR;"),f("                        c === "),f(i),f("cr ? ("),f(i),f("line++, "),f(i),f("column = 0) : ("),f(i),d("column += c > 0xff ? 2 : 1);"),d("                    }"),d("                }"),f("                else if(c === "),f(i),d("lf){"),f("                    "),f(i),f("line++, "),f(i),d("column = 0;"),f("                    "),f(i),d("lineTerm = LineTerm.LF;"),d("                }"),d("                else {"),f("                    "),f(i),d("column += c > 0xff ? 2 : 1;"),f("                    "),f(i),f("lastCR = c === "),f(i),d("cr;"),d("                }"),d("                break;"),d("        }"),f("        "),f(i),d("matched += String.fromCharCode(c);"),f("        "),f(i),f("marker.state !== -1 && ("),f(i),d("backupCount++);"),f("        "),f(i),d("input.next();"),d("    }"),d("    /**"),d("     *  accept a character"),d("     *  @return - true if the character is consumed, false if not consumed"),d("     *  @api private"),d("     *  @internal"),d("     */"),f("    function "),f(i),f("acceptChar(ccode"),f(u(": number")),d("){"),f("        var lexstate = "),f(i),f("lexState["),f(i),d("lexState.length - 1];"),f("        var ltable = "),f(i),d("dfaTables[lexstate];"),f("        var isEnd = ltable.isEnd["),f(i),d("state] === 1;"),f("        var hasArc = ltable.hasArc["),f(i),d("state] === 1;"),d("        // get the class of the given character"),f("        var cl = ccode < ltable.maxAsicii ? ltable.classTable[ccode] : "),f(i),d("findUnicodeClass(ltable.unicodeClassTable, ccode);"),d("        // find the next state to go"),d("        var nstate = -1;"),d("        if(cl !== -1){"),f("            var ind = ltable.disnext["),f(i),d("state] + cl;"),f("            if(ind >= 0 && ind < ltable.pnext.length && ltable.checknext[ind] === "),f(i),d("state){"),d("                nstate = ltable.pnext[ind];"),d("            }"),d("        }"),d("        if(isEnd){"),d("            // if current state is a terminate state, be careful"),d("            if(hasArc){"),d("                if(nstate === -1){"),d("                    // nowhere to go, stay where we are"),f("                    "),f(i),f("doLexAction(lexstate, "),f(i),d("state);"),d("                    // recover"),f("                    "),f(i),d("marker.state = -1;"),f("                    "),f(i),d("backupCount = 0;"),f("                    "),f(i),d("state = 0;                    "),d("                    // character not consumed"),d("                }"),d("                else {"),d("                    // now we can either go to that new state, or stay where we are"),d("                    // it is prefered to move forward, but that could lead to errors,"),d("                    // so we need to memorize this state before move on, in case if "),d("                    // an error occurs later, we could just return to this state."),f("                    "),f(i),d("mark();"),f("                    "),f(i),d("state = nstate;"),f("                    "),f(i),d("consume(ccode);"),d("                    // check for terminate state"),f("                    "),f(i),d("tryLexEnd();"),d("                }"),d("            }"),d("            else {"),d("                // current state doesn't lead to any state, just stay here."),f("                "),f(i),f("doLexAction(lexstate, "),f(i),d("state);"),d("                // recover"),f("                "),f(i),d("marker.state = -1;"),f("                "),f(i),d("backupCount = 0;"),f("                "),f(i),d("state = 0;"),d("                // character not consumed"),d("            }"),d("        }"),d("        else {"),d("            if(nstate === -1){"),d("                // nowhere to go at current state, error may have occured."),d("                // check marker to verify that"),f("                if("),f(i),d("marker.state !== -1){"),d("                    // we have a previously marked state, which is a terminate state."),f("                    "),f(i),d("rollback();"),f("                    "),f(i),f("doLexAction(lexstate, "),f(i),d("state);"),f("                    "),f(i),d("state = 0;"),d("                    // accept(s);"),d("                    // character not consumed"),d("                }"),d("                else {"),d("                    // error occurs"),f("                    "),f(i),f("emit('lexicalerror', String.fromCharCode(ccode), "),f(i),f("line, "),f(i),d("column);"),d("                    // force consume"),f("                    "),f(i),d("consume(ccode);"),d("                    // emit an error token"),f("                    "),f(i),d("prepareToken(1);"),f("                    "),f(i),f("tokenQueue.length > 0 && "),f(i),d("acceptToken(null);"),f("                    "),f(i),d("state = 0;"),d("                }"),d("            }"),d("            else {"),f("                "),f(i),d("state = nstate;"),d("                // character consumed"),f("                "),f(i),d("consume(ccode);"),d("                // check for terminate state"),f("                "),f(i),d("tryLexEnd();"),d("            }"),d("        }"),d("    }"),f("    function "),f(i),d("acceptEOF(){"),f("        if("),f(i),d("state === 0){"),d("            // recover"),f("            "),f(i),d("prepareToken(0);"),f("            "),f(i),d("acceptToken(null);"),d("            return true;"),d("        }"),d("        else {"),f("            var lexstate = "),f(i),f("lexState["),f(i),d("lexState.length - 1];"),f("            var ltable = "),f(i),d("dfaTables[lexstate];"),f("            var isEnd = ltable.isEnd["),f(i),d("state];"),d("            if(isEnd){"),f("                "),f(i),f("doLexAction(lexstate, "),f(i),d("state);"),f("                "),f(i),d("state = 0;"),f("                "),f(i),d("marker.state = -1;"),d("                return false;"),d("            }"),f("            else if("),f(i),d("marker.state !== -1){"),f("                "),f(i),d("rollback();"),f("                "),f(i),f("doLexAction(lexstate, "),f(i),d("state);"),f("                "),f(i),d("state = 0;"),d("                return false;"),d("            }"),d("            else {"),f("                "),f(i),f("emit('lexicalerror', '', "),f(i),f("line, "),f(i),d("column);"),f("                "),f(i),d("prepareToken(1);"),f("                "),f(i),f("tokenQueue.length > 0 && "),f(i),d("acceptToken(null);"),f("                "),f(i),d("state = 0;"),d("                return true;"),d("            }"),d("        }"),d("    }"),f("    function "),f(i),d("tryLexEnd(){"),f("        var lexstate = "),f(i),f("lexState["),f(i),d("lexState.length - 1];"),f("        var ltable = "),f(i),d("dfaTables[lexstate];"),f("        var isEnd = ltable.isEnd["),f(i),d("state] === 1;"),f("        var hasArc = ltable.hasArc["),f(i),d("state] === 1;"),d("        if(isEnd && !hasArc){"),f("            "),f(i),f("doLexAction(lexstate, "),f(i),d("state);"),f("            "),f(i),d("marker.state = -1;"),f("            "),f(i),d("backupCount = 0;"),f("            "),f(i),d("state = 0;"),d("        }"),f("    }");d(""),f("    function "),f(i),f("doReduction("),f(i),f("rulenum"),f(u(": number")),d("){"),f("        var "),f(i),f("nt = "),f(i),f("lhs["),f(i),d("rulenum];"),f("        var "),f(i),f("sp = "),f(i),d("sematicS.length;"),f("        var "),f(i),f("top = "),f(i),f("sematicS["),f(i),f("sp - "),f(i),f("ruleLen["),f(i),d("rulenum]] || null;"),f("        switch("),f(i),f("rulenum){"),function(){for(var e={raw:function(t){f(t)},beginBlock:function(t,e){!e&&f("if("+i+"enableBlock)"),f("{")},endBlock:function(t){f("} ")},pushLexState:function(t){f(i+"lexState.push("+t+")")},switchToLexState:function(t){f(i+"lexState["+i+"lexState.length - 1] = "+t)},popLexState:function(){f(i+"lexState.pop()")},setImg:function(t){f(i+'setImg("'+t+'")')},tokenObj:function(){f(i+"token")},matched:function(){f(i+"matched")},lhs:function(){f(i+"top")},emitToken:function(t){f(i+"tokenQueue.push(new Token("+t+", null, -1, 0, 0, 0))")}},n=0,r=t.file.grammar.rules;n<r.length;n++){var a=r[n];if(null!==a.action){d(""),f("            case "),f(a.index),d(":"),f("                /* "),f(a.toString()),f(" */");for(var o in a.vars)d(""),f("                var "),f(o),f(" = "),f(i),f("sematicS["),f(i),f("sp - "),f(a.rhs.length-a.vars[o].val),f("];");for(var s in a.usedVars)d(""),f("                var "),f(s),f(" = "),f(i),f("sematicS["),f(i),f("sp - "),f(a.usedVars[s].val),f("];");d(""),f("                "),a.action.toCode(e),d(""),f("                break;")}}}(),d(""),d("        }"),f("        "),f(i),f("lrState.length -= "),f(i),f("ruleLen["),f(i),d("rulenum];"),f("        var "),f(i),f("cstate = "),f(i),f("lrState["),f(i),d("lrState.length - 1];"),f("        "),f(i),f("lrState.push("),f(i),f("pgoto["),f(i),f("disgoto["),f(i),f("cstate] + "),f(i),d("nt]);"),d(""),f("        "),f(i),f("sematicS.length -= "),f(i),f("ruleLen["),f(i),d("rulenum];"),f("        "),f(i),f("sematicS.push("),f(i),d("top);"),d("    }"),f("    function "),f(i),f("acceptToken(tk"),f(u(": Token")),d("){"),d("        // look up action table"),d("        var shifted = false;"),f("        tk !== null && "),f(i),d("tokenQueue.push(tk);"),f("        while(!"),f(i),f("stop && "),f(i),d("tokenQueue.length > 0){"),f("            var t = "),f(i),d("tokenQueue[0];"),f("            var cstate = "),f(i),f("lrState["),f(i),d("lrState.length - 1];"),f("            var ind = "),f(i),d("disact[cstate] + t.id;"),d("            var act = 0;"),f("            if(ind < 0 || ind >= "),f(i),f("pact.length || "),f(i),d("checkact[ind] !== cstate){"),f("                act = -"),f(i),d("defred[cstate] - 1;"),d("            }"),d("            else {"),f("                act = "),f(i),d("pact[ind];"),d("            }"),f("            if(act === "),f(i),d("actERR){"),d("                // explicit error"),f("                "),f(i),d("syntaxError(t);"),f("                "),f(i),d("tokenQueue.shift();"),d("            }"),d("            else if(act > 0){"),d("                // shift"),d("                if(t.id === 0){"),d("                    // end of file"),f("                    "),f(i),d("stop = true;"),f("                    "),f(i),d("emit('accept');"),f("                    "),f(i),d("tokenQueue.shift();"),d("                }"),d("                else {"),f("                    "),f(i),d("lrState.push(act - 1);"),f("                    "),f(i),f("sematicS.push("),f(i),d("sematicVal);"),f("                    "),f(i),d("sematicVal = null;"),f("                    "),f(i),d("tryReduce();"),d("                    // token consumed"),f("                    "),f(i),d("tokenQueue.shift();"),d("                }"),d("            }"),d("            else if(act < 0){"),f("                "),f(i),d("doReduction(-act - 1);"),f("                "),f(i),d("tryReduce();"),d("            }"),d("            else {"),d("                // error"),f("                "),f(i),d("syntaxError(t);"),d("                // force consume"),f("                "),f(i),d("tokenQueue.shift();"),d("            }"),d("        }"),d("    }"),f("    function "),f(i),d("tryReduce(){"),f("        var cstate = "),f(i),f("lrState["),f(i),d("lrState.length - 1];"),d("        var act;"),f("        while("),f(i),f("disact[cstate] === -"),f(i),f("tokenCount && (act = "),f(i),d("defred[cstate]) !== -1){"),f("            "),f(i),d("doReduction(act);"),f("            cstate = "),f(i),f("lrState["),f(i),d("lrState.length - 1];"),d("        }"),d("    }"),f("    function "),f(i),f("syntaxError(t"),f(u(": Token")),d("){"),f("        "),f(i),f('emit("syntaxerror", t, '),f(i),f("lrState["),f(i),d("lrState.length - 1]);"),d("    }"),d("}"),f(c(t.file.epilogue))},Ht={};function Kt(t,e){Ht[t]=e}function Gt(t,e,n){if(void 0===Ht[t])throw'template for language "'+t+'" is not implemented yet';Ht[t](e,n)}Kt("typescript",function(t,e){Mt(t,e),e.save(t.file.name+".ts")}),Kt("javascript",function(t,e){Mt(t,e),e.save(t.file.name+".js")});function Vt(){var t=0,e=0,n=[],r=new H({createData:function(){return{id:-1,data:[]}},stringify:function(t){return"("+t.id+")"},union:function(r,a){-1===r.id?r.id=a.id:r.id<e&&(r.id=void 0!==n[r.id]?n[r.id]:n[r.id]=t++);for(var i=0,o=a.data;i<o.length;i++){var s=o[i];r.data.push(s)}}});return{addClass:function(a,i){var o=t;e=t++,n.length=0,a.forEach(function(t,e,n){r.add(t,e,{id:o,data:[i]})})},done:function(){return n.length=0,t=0,r.forEach(function(e,r,a){a.data.id=void 0!==n[a.data.id]?n[a.data.id]:n[a.data.id]=t++}),{classCount:t,classSet:r}}}}var Qt=function(){function t(t,e){void 0===e&&(e=255),this.maxAsicii=e;function n(t,e,n){for(;t<=e;t++)i[t]=n}var r=Vt();t.forEachArc(function(t,e,n){r.addClass(t.chars,t)});var a=r.done();this.classCount=a.classCount,this.states=t.states;var i=this.classTable=O(e+1,function(t){return-1}),o=this.unicodeClassTable=[],s=O(a.classCount*t.states.length,function(t){return null});a.classSet.forEach(function(t,r,i){t>e?o.push(i.data.id,t,r):r<=e?n(t,r,i.data.id):(n(t,e,i.data.id),e<r&&o.push(i.data.id,e+1,r));for(var l=0,u=i.data.data;l<u.length;l++){var c=u[l];s[c.from.index*a.classCount+i.data.id]=c}});var l=I(function(t,e,n){for(var r=[],a=0;a<t;a++){r.push(0);for(var i=0;i<e;i++)null===n[a*e+i]&&r[a]++}return{rows:t,columns:e,isEmpty:function(t,r){return null===n[t*e+r]},emptyCount:function(t){return r[t]}}}(this.states.length,a.classCount,s)),u=l.len,c=l.dps;this.disnext=c,this.pnext=O(u,function(t){return null}),this.checknext=O(u,function(t){return-1});for(var h=0;h<this.states.length;h++)for(var f=0;f<this.classCount;f++){var p=s[h*this.classCount+f];null!==p&&(this.pnext[this.disnext[h]+f]=p,this.checknext[this.disnext[h]+f]=h)}this._trim()}return t.prototype._trim=function(){for(;null===this.pnext[this.pnext.length-1];)this.pnext.pop(),this.checknext.pop()},t.prototype.lookup=function(t,e){var n=this.disnext[t]+e;return n>=0&&n<this.pnext.length&&this.checknext[n]===t?this.pnext[n]:null},t.prototype.print=function(t,e){function n(n){e&&(n=k(n,e)),t.writeln(n)}for(var r=0,a="class table:\n    ",i=0;i<this.classTable.length;i++)-1!==this.classTable[i]&&(a+=(o=i,(o>=32&&o<=126?"'"+String.fromCharCode(o)+"'":"\\x"+o.toString(16))+" -> c"+this.classTable[i]+", "),r++>9&&(a+="\n    ",r=0));var o;n(a+"\n"),a="unicode class table:\n    ",r=0;i=0;for(var s=this.unicodeClassTable;i<s.length;i+=3)a+="\\x"+s[i+1]+"-\\x"+s[i+2]+" -> c"+s[i]+", ",r++>4&&(a+="\n    ",r=0);n(a+"\n");for(var l=0;l<this.states.length;l++){a="state "+l+":\n";var u=this.states[l];null!==u.endAction&&(a+="    end = "+u.endAction.id+"\n");for(i=0;i<this.classCount;i++){var c=this.lookup(l,i);null!==c&&(a+="    c"+i+": state "+c.to.index+"\n")}n(a)}},t}();function jt(){var e=null,n=null,r=0,a=null,i=[],o=[],u=[],c=!1,h=[],f=null,d={warn:x,err:R,requireLines:function(t){return u.push(t)},beginTime:g,endTime:b};return{compile:function(i,o){v();for(var h=Bt(d,i),f=i.split(h.eol),m=0,k=u;m<k.length;m++){var I=k[m];I(d,f)}if(w())return void(c=!0);h.name=o;var O=h.grammar;e=h;for(var L=0,_=O.tokens;L<_.length;L++){var D=_[L];if(!D.used){for(var F="token <"+D.sym+"> is never used, definations are(is):\n",P=0,U=D.appears;P<U.length;P++){var B=U[P];F+=$(B,f)+"\n"}x(new C(F))}}for(var M=0,H=O.nts;M<H.length;M++){var K=H[M];K.used||x(new C('non terminal "'+K.sym+'" is unreachable'))}if(null!==h.output&&(G=h.output.val,void 0===Ht[G])){var F="template for '"+h.output.val+"' is not implemented yet "+$(h.output,f)+"\n";F+="available templates are: "+Object.keys(Ht).join(", "),R(new A(F))}var G;if(w())return void(c=!0);g("generate first sets"),O.genFirstSets(),b(),g("generate item sets");var V=y(O);b(),n=V.result,r=V.iterations,g("generate parse table");var Q=function(e,n){var r=[];function a(n,a,i){var o=e.tokens[a.getShift()];if(o.assoc!==t.Assoc.UNDEFINED){var l=i.rule.pr;if(-1!==l){if(l>o.pr)return i;if(l<o.pr)return a;if(o.assoc===t.Assoc.LEFT)return i;if(o.assoc===t.Assoc.RIGHT)return a;if(o.assoc===t.Assoc.NON)return p.NULL;s.assert(!1)}}var u=new S;return u.type=T.SR,u.set=n,u.token=o,u.used=a,u.discarded=i,r.push(u),a}function i(t,n,a,i){var o=e.tokens[i];if(-1!==n.rule.pr&&-1!==a.rule.pr&&n.rule.pr!==a.rule.pr)return n.rule.pr>a.rule.pr?n:a;var s=n.rule.index>a.rule.index?a:n,l=n.rule.index>a.rule.index?n:a,u=new S;return u.type=T.RR,u.set=t,u.token=o,u.used=s,u.discarded=l,r.push(u),s}var o=new E(e,n.size);return n.forEach(function(t){t.forEach(function(n){if(n.actionType===l.SHIFT){var r=n.getShift();if(e.isToken(r)){var u=t.stateIndex*e.tokenCount+r;null!==(h=o.shift[u])?h.actionType===l.REDUCE?o.shift[u]=a(t,n,h):s.assert(h.shift===n.shift):o.shift[u]=n}else u=t.stateIndex*e.nts.length+(-r-1),o.gotot[u]=n}else if(n.actionType===l.REDUCE){for(var c=0;c<e.tokenCount;c++)if(n.lah.contains(c+1)){var h,f=t.stateIndex*e.tokenCount+c;null!==(h=o.shift[f])?h.actionType===l.REDUCE?o.shift[f]=i(t,h,n,c):h.actionType===l.SHIFT&&(o.shift[f]=a(t,h,n)):o.shift[f]=n}}else s.assert(!1)})}),{result:o,conflicts:r}}(O,n);b(),Q.result.findDefAct(),g("compress parse table"),a=new N(Q.result),b();for(var j=0,W=Q.conflicts;j<W.length;j++){var z=W[j];x(new C(z.toString()))}g("generate lexical DFA tables");for(var Y=0,q=e.lexDFA;Y<q.length;Y++){var X=q[Y];e.dfaTables.push(new Qt(X))}b()},setEscape:function(t){f=f||{};for(var e in t)f[e]=t[e]},reset:v,beginTime:g,endTime:b,printItemSets:function(t){t.writeln(n.size+" state(s) in total,finished in "+r+" iteration(s)."),n.forEach(function(e){t.writeln((n=e.toString({showTrailer:!0}),f?k(n,f):n));var n})},printTable:function(t,e,r){!function(t,e,n,r,a,i){var o=e.g,s=o.tokenCount,u=o.nts.length;n.forEach(function(n){var c=n.stateIndex,h="",f="",d="";if(t.writeln("state "+c),n.forEach(function(e){(a||e.isKernel)&&t.writeln("    "+e.toString({showlah:r}))}),-1!==e.defred[c]){var v=e.defred[c];t.writeln("    default action: reduce with rule "+v+" ("+o.rules[v].lhs.sym+")")}else t.writeln("    no default action");for(var g=0;g<s;g++)null!==(b=e.lookupShift(c,g))&&b!==p.NULL&&(b.actionType===l.SHIFT?h+="    "+m(o.tokens[g])+" : shift, and go to state "+b.shift.stateIndex+"\n":f+="    "+m(o.tokens[g])+" : reduce with rule "+b.rule.index+" ("+b.rule.lhs.sym+")\n");for(g=0;g<u;g++){var b;null!==(b=e.lookupGoto(c,g))&&(d+="    "+o.nts[g].sym+" : go to state "+b.shift.stateIndex+"\n")}var T=h+f+d;i&&(T=k(T,i)),t.writeln(T),t.writeln()})}(t,a,n,e,r,f)},printDFA:function(t){for(var n=0,r=0,a=e.dfaTables;r<a.length;r++){var i=a[r];t.writeln("DFA state "+n),i.print(t,f),t.writeln(),t.writeln(),n++}},testParse:function(t,n){return function(t,e,n,r){for(var a=[],i=0,o=n;i<o.length;i++){var s=o[i],u=void 0;if(/<[^>]+>/.test(s)){if(null===(u=t.findTokenByName(s.substr(1,s.length-2))))return r("cannot recognize "+s+" as a token"),[]}else{var c=t.findTokensByAlias(s);if(0===c.length)return r('cannot recognize "'+s+'" as a token'),[];if(c.length>1){for(var h="",f=0,d=c;f<d.length;f++)h+="<"+d[f].sym+"> ";return r('cannot recognize "'+s+'" as a token, since it can be '+h),[]}u=c[0]}a.push(u)}var v=[0],g=[],k=[];function b(){return v[v.length-1]}function T(t){v.push(t);var e=a.shift();g.push(m(e))}function E(t){v.length-=t.rhs.length,g.length-=t.rhs.length,g.push(t.lhs.sym);var n=e.lookupGoto(b(),t.lhs.index).shift.stateIndex;v.push(n)}function x(){for(var t="",e=0,n=g;e<n.length;e++)t+=n[e]+" ";t+="| ";for(var r=0,i=a;r<i.length;r++)t+=m(i[r]),t+=" ";return t}for(k.push(x());;){var S=e.lookupShift(b(),a[0]?a[0].index:0);if(null!==S){if(S===p.NULL){k.push("syntax error!");break}if(S.actionType===l.SHIFT){if(0===a.length){k.push("accepted!");break}T(S.shift.stateIndex)}else if(S.actionType===l.REDUCE){if(E(S.rule))break}else console.assert(!1)}else{var y=e.defred[b()];if(-1===y){k.push("syntax error!");break}E(t.rules[y])}k.push(x())}return k}(e.grammar,a,t,n)},printError:function(t,e){for(var n=0,r=i;n<r.length;n++){var a=r[n];t.writeln(a.toString(e).toString(f))}t.writeln()},printWarning:function(t,e){for(var n=0,r=o;n<r.length;n++){var a=r[n];t.writeln(a.toString(e).toString(f))}t.writeln()},printDetailedTime:function(t){for(var e=0,n=h;e<n.length;e++){var r=n[e];t.writeln(r.name+": "+(r.end.valueOf()-r.start.valueOf())/1e3+"s")}},hasWarning:function(){return o.length>0},hasError:w,warningSummary:function(){return o.length+" warning(s), "+i.length+" error(s)"},genCode:function(t){var n={endl:e.eol,output:null===e.output?"typescript":e.output.val,pt:a,file:e};Gt(n.output,n,t)},isTerminated:function(){return c}};function v(){e=null,n=null,r=0,a=null,i.length=0,o.length=0,u.length=0,c=!1,h.length=0}function g(t){h.push({name:t,start:new Date,end:null})}function b(){h[h.length-1].end=new Date}function x(t){o.push(t)}function R(t){i.push(t)}function w(){return i.length>0}}var Wt=Object.freeze({compress:I,IntervalSet:H,createClassFinder:Vt});function zt(t){var e=t.lastIndexOf(".");return-1===e?t:t.substr(0,e)}t.io=o,t.createContext=jt,t.generateCode=Gt,t.version="1.0.2",t.debug=Wt,t.main=function(t){var e=t.stdout,n=function(t){return e.writeln(t)},r=jt();do{var i=new Date;if(r.compile(t.input,zt(t.inputFile)),r.hasWarning()&&r.printWarning(e),r.hasError()){r.printError(e),r.isTerminated()&&n("compilation terminated");break}if(t.outputFile){var o=new a;r.beginTime("generate output file"),t.printDFA&&r.printDFA(o),r.printTable(o,t.showlah,t.showFullItemsets),r.endTime(),t.writeFile(t.outputFile,o.s)}var s=new a;if(r.beginTime("generate parser code"),r.genCode({save:function(e){t.writeFile(e,s.s),s=new a},write:function(t){return s.write(t)},writeln:function(t){return s.writeln(t)}}),r.endTime(),t.testInput){n("preparing for test");for(var l=0,u=r.testParse(t.testInput.split(/[ ]+/g),function(t){return n(t)});l<u.length;l++){var c=u[l];n(c)}}n("compilation done in "+((new Date).valueOf()-i.valueOf())/1e3+"s"),t.printDetailedTime&&r.printDetailedTime(e)}while(0);return n(r.warningSummary()),r.hasError()?-1:0},t.setDebugger=function(t){return s.log=t.log},t.defineTemplate=Kt,Object.defineProperty(t,"__esModule",{value:!0})});
