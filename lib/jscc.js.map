{"version":3,"file":"jscc.js","sources":["../src/util/bitset.ts","../src/util/common.ts","../src/util/interval-set.ts","../src/lexer/char-set.ts","../src/util/io.ts","../src/lexer/state.ts","../src/lexer/dfa.ts","../src/util/E.ts","../src/lexer/pattern-exception.ts","../src/lexer/compile.ts","../src/lexer/pattern.ts","../src/grammar/token-entry.ts","../src/grammar/grammar.ts","../src/parser/file.ts","../src/grammar/token-set.ts","../src/util/coroutine.ts","../src/lexer/builder.ts","../src/lexer/action.ts","../src/parser/gbuilder.ts","../src/parser/gparser.ts","../src/grammar/item-set.ts","../src/util/list.ts","../src/grammar/ptable.ts","../src/grammar/ptable-gen.ts","../src/top/parse-test.ts","../src/util/compress.ts","../src/grammar/ptable-compress.ts","../src/top/result.ts","../src/codegen/templates/ts.ts","../src/codegen/template.ts"],"sourcesContent":["\nconst BSIZE = 32;\nexport class BitSet{\n    private _s: number[];\n    constructor(private _size: number){\n        this._s = new Array(Math.ceil(_size / BSIZE));\n        for(var i = 0; i < this._s.length; i++){\n            this._s[i] = 0;\n        }\n    }\n    public add(i: number): boolean{\n        var block = Math.floor(i / BSIZE);\n        var offset = i - block * BSIZE;\n        var orig = this._s[block];\n        this._s[block] |= (1 << offset);\n        return orig !== this._s[block];\n    }\n    public addAll(): void{\n        for(var i = 0;i < this._s.length;i++){\n            this._s[i] = ~0;\n        }\n    }\n    public remove(i: number): boolean{\n        var block = Math.floor(i / BSIZE);\n        var offset = i - block * BSIZE;\n        var orig = this._s[block];\n        this._s[block] &= ~(1 << offset);\n        return orig !== this._s[block];\n    }\n    public removeAll(): void{\n        for(var i = 0;i < this._s.length;i++){\n            this._s[i] = 0;\n        }\n    }\n    public contains(i: number): boolean{\n        var block = Math.floor(i / BSIZE);\n        var offset = i - block * BSIZE;\n        return (this._s[block] & (1 << offset)) !== 0;\n    }\n    public union(set: BitSet): boolean{\n        var changed = false;\n        for(var i = 0;i < this._s.length;i++){\n            var orig = this._s[i];\n            this._s[i] |= set._s[i];\n            changed = changed || (this._s[i] !== orig);\n        }\n        return changed;\n    }\n    public hasIntersection(set: BitSet): boolean{\n        for(var i = 0;i < this._s.length;i++){\n            if((this._s[i] & set._s[i]) !== 0){\n                return true;\n            }\n        }\n        return false;\n    }\n    public equals(set: BitSet): boolean{\n        for(var i = 0;i < this._s.length;i++){\n            if(this._s[i] !== set._s[i]){\n                return false;\n            }\n        }\n        return true;\n    }\n    public forEach(cb: (i: number) => any){\n        for(var i = 0;i < this._size;i++){\n            this.contains(i) && cb(i);\n        }\n    }\n    public hash(): string{\n        var ret = '';\n        for(var i = 0;i < this._s.length;i++){\n            ret += this._s[i].toString(16) + '-';\n        }\n        return ret;\n    }\n}\n\n","\nexport var YYTAB: string = '    ';\nexport var DEBUG: boolean = true;\n\nexport interface Console{\n    assert: (expr: boolean) => any;\n    log: (s: string) => void;\n}\n\nexport var console: Console = {\n    assert: function(expr){\n        if(!expr){\n            throw new Error('Assertion failed');\n        }\n    },\n    log: function(s){},\n};\n\nexport function setDebugger(d: Console){\n    return console.log = d.log;\n}\nexport function setTab(t: string): string{\n    return YYTAB = t;\n}\n\n\n\n","// 区间集合\n\nimport { DEBUG } from './common';\n\nfunction copyArray(a: any[]): any[]{\n    var ret = [];\n    for(var i = 0;i < a.length;i++){\n        ret.push(a[i]);\n    }\n    return ret;\n}\n\nfunction cm(a: Num, b: Num): number{\n    if((a === Inf.oo && b !== Inf.oo) || (a !== Inf._oo && b === Inf._oo) || a > b){\n        return 1;\n    }\n    else if((a === Inf._oo && b !== Inf._oo) || (a !== Inf.oo && b === Inf.oo) || a < b ){\n        return -1;\n    }\n    else {\n        return 0;\n    }\n}\nexport enum Inf{\n    oo = \"oo\",\n    _oo = \"-oo\"\n};\nexport type Num = Inf | number;\n\nexport interface DataSet<T>{\n    union(set: DataSet<T>): void;\n    add(d: T): void;\n    toArray(): T[];\n}\nclass Interval<T>{\n    public a: Num;\n    public b: Num;\n    public prev: Interval<T>;\n    public next: Interval<T>;\n    public parent: IntervalSet<T>;\n    public dataSet: DataSet<T> = null;\n    constructor(a: Num, b: Num){\n        this.a = a;\n        this.b = b;\n    }\n    \n    public insertBefore(a: Num, b: Num, data?: T){\n        if(this.parent.isValid(this) && !this.parent.noMerge && this.a === (b as number) + 1){\n            this.a = a;\n            return this;\n        }\n        else {\n            var it = this.parent.createInterval(a,b,data);\n            it.prev = this.prev;\n            it.next = this;\n            this.prev.next = it;\n            this.prev = it;\n            return it;\n        }\n    }\n    public contains(a: Num): boolean{\n        return cm(this.a,a) <= 0 && cm(this.b,a) >= 0;\n    }\n    public overlaps(a: Num, b: Num): boolean{\n        return !(cm(a,this.b) > 0 || cm(b,this.a) < 0);\n    }\n    public insertAfter(a: Num, b: Num, data?: T): Interval<T>{\n        if(this.parent.isValid(this) && !this.parent.noMerge && this.b === (a as number) - 1){\n            this.b = b;\n            return this;\n        }\n        else {\n            var it = this.parent.createInterval(a,b,data);\n            it.prev = this;\n            it.next = this.next;\n            this.next.prev = it;\n            this.next = it;\n            return it;\n        }\n    }\n    public splitLeft(a: Num): Interval<T>{\n        //DEBUG && console.assert(this.parent.noMerge);\n        if(cm(a, this.a) > 0){\n            var ret = this.insertBefore(this.a,(a as number) - 1);\n            this.parent.noMerge && ret.dataSet.union(this.dataSet);\n            this.a = a;\n            return ret;\n        }\n        return this;\n    }\n    public splitRight(b: Num): Interval<T>{\n        //DEBUG && console.assert(this.parent.noMerge);\n        if(cm(b, this.b) < 0){\n            var ret = this.insertAfter((b as number) + 1,this.b);\n            this.parent.noMerge && ret.dataSet.union(this.dataSet);\n            this.b = b;\n            return ret;\n        }\n        return this;\n    }\n    public remove(): Interval<T>{\n        this.prev.next = this.next;\n        this.next.prev = this.prev;\n        return this;\n    }\n    public checkMerge(): Interval<T>{\n        if(this.a !== Inf._oo && this.prev.a !== null && this.a === (this.prev.b as number) + 1){\n            this.a = this.prev.a;\n            this.prev.remove();\n        }\n        if(this.b !== Inf.oo && this.next.a !== null && this.b === (this.next.a as number) - 1){\n            this.b = this.next.b;\n            this.next.remove();\n        }\n        return this;\n    }\n    public toString(mapper: (a: Num) => string): string{\n        var ret = '';\n        function dfmapper(c: Num): string{\n            return c === Inf.oo ? '+oo' : c === Inf._oo ? '-oo' : c.toString();\n        }\n        var a = (mapper || dfmapper)(this.a);\n        var b = (mapper || dfmapper)(this.b);\n        if(this.a === this.b){\n            ret += a;\n        }\n        else{\n            ret += this.a === Inf._oo ? '(' + a : '[' + a;\n            ret += ',';\n            ret += this.b === Inf.oo ? b + ')' : b + ']';\n        }\n        this.dataSet && (ret += this.dataSet.toString());\n        return ret;\n    }\n}\nfunction checkArg(a: Num, b: Num){\n    if(cm(a,b) > 0){\n        throw new Error(`illegal argument: \"a\"(${a}) must be no more than \"b\"(${b})`);\n    }\n}\nexport class IntervalSet<T>{\n    public head: Interval<T>;\n    public tail: Interval<T>;\n    public noMerge: boolean;\n    public dataSetConstructor: () => DataSet<T>;\n\n    constructor(dataSetConstructor?: () => DataSet<T>){\n        this.head = new Interval(0,0);\n        this.head.parent = this;\n        this.tail = new Interval(null,null);\n        this.tail.parent = this;\n        this.head.next = this.tail;\n        this.tail.prev = this.head;\n    \n        this.noMerge = typeof dataSetConstructor !== 'undefined';\n        this.dataSetConstructor = dataSetConstructor || null;\n    }\n    isValid(it: Interval<T>): boolean{\n        return it !== this.head && it !== this.tail;\n    }\n    createInterval(a: Num, b: Num, data: T = null): Interval<T>{\n        var ret = new Interval<T>(a,b);\n        ret.parent = this;\n        this.dataSetConstructor && (ret.dataSet = this.dataSetConstructor());\n        data && ret.dataSet.add(data);\n        return ret;\n    }\n    fitPoint(a: Num, b: Num): Interval<T>{\n        for(var it = this.head;it !== this.tail;it = it.next){\n            if((it === this.head || cm(a,it.b) > 0) && (it.next === this.tail || cm(b,it.next.a) < 0)){\n                return it;\n            }\n        }\n        return null;\n    }\n    overlaped(a: Num, b: Num): Interval<T>[]{\n        var start = null,end = null;\n        var it = this.head.next;\n        for(;it !== this.tail && !it.overlaps(a,b);it = it.next);\n        if(it === this.tail){\n            return null;\n        }\n        start = end = it;\n        for(;it !== this.tail && it.overlaps(a,b);it = it.next){\n            end = it;\n        }\n        return [start,end];\n    }\n    /**\n     * add an interval into the set\n     * @param data - The extra data associated with the added interval, which is only valid when noMerge = true\n     * \n     */\n    add(a: Num, b: Num = a, data?: T){\n        var noMerge = this.noMerge;\n        // /b = b || a;\n        DEBUG && checkArg(a,b);\n        var overlap = this.overlaped(a,b);\n        if(overlap === null){\n            this.fitPoint(a,b).insertAfter(a,b,data);\n        }\n        else {\n            if(!noMerge){\n                var a1 = cm(a,overlap[0].a) < 0 ? a : overlap[0].a;\n                var b1 = cm(b,overlap[1].b) > 0 ? b : overlap[1].b;\n                overlap[0].a = a1;\n                overlap[0].b = b1;\n                overlap[0].next = overlap[1].next;\n                overlap[1].next.prev = overlap[0];\n                overlap[0].checkMerge();\n            }\n            else {\n                if(overlap[0].contains(a)){\n                    overlap[0].splitLeft(a);\n                }\n                else {\n                    overlap[0].insertBefore(a,(overlap[0].a as number) - 1,data);\n                }\n                if(overlap[1].contains(b)) {\n                    overlap[1].splitRight(b);\n                }\n                else {\n                    overlap[1].insertAfter((overlap[1].b as number) + 1,b,data);\n                }\n                for(var it = overlap[0];it !== overlap[1];it = it.next){\n                    it.dataSet.add(data);\n                    if((it.b as number) + 1 < it.next.a){\n                        it.insertAfter((it.b as number) + 1,(it.next.a as number) - 1,data);\n                    }\n                }\n                overlap[1].dataSet.add(data);\n            }\n        }\n        return this;\n    }\n    remove(a: Num, b: Num): IntervalSet<T>{\n        checkArg(a,b);\n        var overlap = this.overlaped(a,b);\n        if(overlap !== null){\n            overlap[0].contains(a) && overlap[0].splitLeft(a);\n            overlap[1].contains(b) && overlap[1].splitRight(b);\n            overlap[0].prev.next = overlap[1].next;\n            overlap[1].next.prev = overlap[0].prev;\n        }\n        return this;\n    }\n    removeAll(): IntervalSet<T>{\n        this.head.next = this.tail;\n        this.tail.prev = this.head;\n        return this;\n    }\n    forEach(cb: (a: Num, b: Num, it: Interval<T>) => any): IntervalSet<T>{\n        for(var it = this.head.next;it !== this.tail;it = it.next){\n            cb(it.a,it.b,it);\n        }\n        return this;\n    }\n    union(s: IntervalSet<T>): IntervalSet<T>{\n        for(var it = s.head.next;it !== s.tail;it = it.next){\n            this.add(it.a,it.b);\n        }\n        return this;\n    }\n    contains(a: Num): boolean{\n        for(var it = this.head.next;it !== this.tail;it = it.next){\n            if(it.contains(a)){\n                return true;\n            }\n        }\n        return false;\n    }\n    toString(mapper: (a: Num) => string){\n        var ret = '';\n        var t = false;\n        for(var it = this.head.next;it !== this.tail;it = it.next){\n            if(t){\n                ret += ',';\n            }\n            t = true;\n            ret += it.toString(mapper);\n        }\n        return ret === '' ? 'phi' : ret;\n    }\n}","import { Inf, IntervalSet, DataSet } from '../util/interval-set';\n\nvar oo = Inf.oo;\nvar _oo = Inf._oo;\nexport class CharSet<T> extends IntervalSet<T>{\n    constructor(datac?: () => DataSet<T>){\n        super(datac);\n    }\n    addAll(): void{\n        super.add(0, Inf.oo);\n    }\n    toString(): string{\n        return super.toString(function(c){\n            if(c !== oo && c !== _oo){\n                if(c >= 0x20 && c <= 0x7e){\n                    return '\\'' + String.fromCharCode(c as number) + '\\'';\n                }\n                else {\n                    return '\\\\x' + (c as number).toString(16);\n                }\n            }\n            else if(c === oo){\n                return 'oo';\n            }\n            else {\n                return '-oo';\n            }\n        });\n    }\n}\n","\nexport var endl = '\\n';\n\nexport abstract class OutputStream {\n    abstract write(s?: string | number): any;\n    writeln(s?: string | number): any{\n        s && this.write(s);\n        this.write(endl);\n    }\n}\nexport class StringOS extends OutputStream {\n    public s: string = '';\n    write(s: string | number): any{\n        this.s += s;\n    }\n    reset(): any{\n        this.s = '';\n    }\n}\n\n// export function printMany(os: OutputStream, it: () => string, cb: () => any){\n//     function printOne(){\n//         let s = it();\n//         s !== null ? os.write(s, printOne) : cb();\n//     }\n//     printOne();\n// }\n\nexport interface InputStream{\n    peek(): string;\n    next(): string;\n}\nexport interface BackupIs extends InputStream{\n    backup(s: string): void;\n}\nexport function StringIS(s: string): InputStream{\n    var i = 0;\n    return {\n        peek: function(){\n            return s.charAt(i) || null;\n        },\n        next: function(){\n            var ret = this.peek();\n            i++;\n            return ret;\n        }\n    };\n}\nexport function biss(iss: InputStream): BackupIs{\n    var backup: string[] = [];\n    return {\n        peek: function(){\n            return backup.length > 0 ? backup[backup.length - 1] : iss.peek();\n        },\n        next: function(){\n            if(backup.length > 0){\n                return backup.pop();\n            }\n            else {\n                return iss.next();\n            }\n        },\n        backup: function(c: string){\n            backup.push(c);\n        }\n    };\n}","import { BitSet } from '../util/bitset';\nimport { YYTAB } from '../util/common';\nimport { CharSet } from './char-set';\nimport { console } from '../util/common';\nimport { DFA } from './dfa.js';\nimport { DataSet } from '../util/interval-set';\nimport { OutputStream, StringOS, endl } from '../util/io';\n\nexport enum Action{\n    START = 0,\n    END,\n    NONE\n}\nvar maxlen = 0;\nclass StateArray<T> extends Array<State<T>> implements DataSet<State<T>>{\n    constructor(){\n        super(0);\n        // XXX: a better way to fix prototype chain?\n        (Object as any).setPrototypeOf(this, StateArray.prototype);\n    }\n    add(s: State<T>){\n        for(var s2 of this){\n            if(s === s2){\n                // console.log('hit: ' + s.index);\n                return;\n            }\n        }\n        this.length > maxlen && (maxlen = this.length);\n        this.push(s);\n    }\n    union(s: StateArray<T>){\n        for(var state of s){\n            this.add(state);\n        }\n    }\n    toArray(){\n        var ret: State<T>[] = [];\n        for(let s of this){\n            ret.push(s);\n        }\n        return ret;\n    }\n}\nexport class Arc<T>{\n    chars: CharSet<any> = new CharSet<any>();\n    from: State<T>;\n    to: State<T>;\n    constructor(from: State<T>, to: State<T>){\n        this.from = from;\n        this.to = to;\n    }\n}\nexport class EndAction<T>{\n    priority: number = 0;\n    id: number = 0;\n    data: T = null;\n}\nexport class State<T>{\n    valid: boolean = false;\n    arcs: Arc<T>[] = [];\n    epsilons: State<T>[] = [];\n    index: number = 0;\n    isStart: boolean = false;\n    isEnd: boolean = false;\n    marker: boolean = false;\n    endAction: EndAction<T> = null;\n    constructor(endAction?: EndAction<T>){\n        this.endAction = endAction || null;\n    }\n    findArc(to: State<T>): Arc<T>{\n        for(var arc of this.arcs){\n            if(arc.to === to){\n                return arc;\n            }\n        }\n        return null;\n    }\n    /**\n     * create an arc and link the state to another with that arc.\n     * \n     * @param {State} s\n     * @returns {Arc} the created arc.\n     */\n    to(s: State<T>): Arc<T>{\n        var arc = this.findArc(s);\n        if(arc === null){\n            arc = new Arc<T>(this, s);\n            this.arcs.push(arc);\n        }\n        s.valid = true;\n        return arc;\n    }\n    epsilonTo(s: State<T>): void{\n        this.epsilons.push(s);\n    }\n    iterator(epOnly: boolean = false): () => State<T>{\n        var queue: State<T>[] = [this];\n        var states: State<T>[] = [this];\n    \n        this.marker = true;\n        return () => {\n            if(queue.length > 0){\n                var s = queue.pop();\n                if(!epOnly){\n                    for(let arc of s.arcs){\n                        var to = arc.to;\n                        if(!to.marker){\n                            queue.push(to);\n                            states.push(to);\n                            to.marker = true;\n                        }\n                    }\n                }\n                for(let to of s.epsilons){\n                    if(!to.marker){\n                        queue.push(to);\n                        states.push(to);\n                        to.marker = true;\n                    }\n                }\n                return s;\n            }\n            else {\n                for(var state of states){\n                    state.marker = false;\n                }\n                return null;\n            }\n        };\n    }\n    forEach(cb: (s: State<T>) => void, epOnly: boolean = false): void{\n        var queue: State<T>[] = [this];\n        var states: State<T>[] = [this];\n    \n        this.marker = true;\n        while(queue.length > 0){\n            var s = queue.pop();\n            cb(s);\n            if(!epOnly){\n                for(let arc of s.arcs){\n                    var to = arc.to;\n                    if(!to.marker){\n                        queue.push(to);\n                        states.push(to);\n                        to.marker = true;\n                    }\n                }\n            }\n            for(let to of s.epsilons){\n                if(!to.marker){\n                    queue.push(to);\n                    states.push(to);\n                    to.marker = true;\n                }\n            }\n        }\n        for(var state of states){\n            state.marker = false;\n        }\n    }\n    number(): void{\n        var i = 0;\n        this.forEach(function(state){\n            state.index = i++;\n        });\n    }\n    print(os: OutputStream, recursive: boolean = true){\n        function single(cela: State<T>): string{\n            let ret = '';\n            ret += `state ${cela.index}`;\n            if(cela.isStart){\n                ret += '(start)';\n            }\n            if(cela.endAction){\n                ret += `(end ${cela.endAction.id})`;\n                //ret += '(end: ' + cela.endAction.id + ')';\n            }\n            ret += endl;\n            for(var i = 0;i < cela.arcs.length;i++){\n                var arc = cela.arcs[i];\n                ret += (`${YYTAB}${arc.chars.toString()} -> state ${arc.to.index}${endl}`);\n                // ret += YYTAB + arc.chars.toString() + ' -> state ' + arc.to.index + '\\n';\n            }\n            if(cela.epsilons.length > 0){\n                // ret += YYTAB + 'epsilon: ';\n                ret += `${YYTAB}epsilon: `;\n                for(var i = 0;i < cela.epsilons.length;i++){\n                    if(i > 0){\n                        // ret += ',';\n                        ret += ',';\n                    }\n                    // ret += cela.epsilons[i].index;\n                    ret += cela.epsilons[i].index.toString();\n                }\n                // ret += '\\n';\n                ret += endl;\n            }\n            return ret;\n        }\n        if(!recursive){\n            os.write(single(this));\n        }\n        else {\n            var ret = '';\n            this.forEach(state => {\n                os.write(single(state));\n            });\n        }\n    }\n    toString(recursive: boolean = true): string{\n        let ss = new StringOS();\n        this.print(ss, recursive);\n        return ss.s;\n    }\n    /**\n     * @param {State} state\n     */\n    copyEndFrom(state: State<T>): void{\n        if(state.endAction !== null){\n            if(this.endAction !== null){\n                if(this.endAction.priority < state.endAction.priority){\n                    this.endAction = state.endAction;\n                }\n            }\n            else {\n                this.endAction = state.endAction;\n            }\n        }\n    }\n    removeEpsilons(): void{\n        var cela = this;\n        var valid: State<T>[] = [this];\n        this.forEach(function(s){\n            if(s.valid){\n                valid.push(s);\n            }\n        });\n        for(var i = 0;i < valid.length;i++){\n            var s = valid[i];\n            s.forEach(function(state){\n                if(state !== s){\n                    for(var j = 0;j < state.arcs.length;j++){\n                        var arc = state.arcs[j];\n                        s.to(arc.to).chars.union(arc.chars);\n                    }\n                    //s.isEnd = s.isEnd || state.isEnd;\n                    s.copyEndFrom(state);\n                }\n            },true);\n            s.epsilons.length = 0;\n        }\n        for(var i = 0;i < valid.length;i++){\n            valid[i].index = i;\n        }\n    }\n    count(): number{\n        var c = 0;\n        this.forEach(function(){\n            c++;\n        });\n        return c;\n    }\n    \n    size(): number{\n        var i = 0;\n        this.forEach(function(){\n            i++;\n        });\n        return i;\n    }\n    /**\n     * get all the characters that this state can accept\n     * @param {CharSet} set The set that the resulting characters add into\n     */\n    allChars(set: CharSet<State<T>>){\n        var cela = this;\n        for(var i = 0;i < this.arcs.length;i++){\n            //set.union(this.arcs[i].chars);\n            var arc = this.arcs[i];\n            arc.chars.forEach(function(a, b){\n                set.add(a, b, arc.to);\n            });\n        }\n    }\n    /**\n     * @param {string} char\n     * @returns {State}\n     */\n    getState(char: number): State<T>{\n        for(var i = 0;i < this.arcs.length;i++){\n            var arc = this.arcs[i];\n            if(arc.chars.contains(char)){\n                return arc.to;\n            }\n        }\n        return null;\n    }\n    hasArc(): boolean{\n        return this.arcs.length > 0;\n    }\n    clone(){\n\n    }\n    toDFA(): { head: State<T>, states: State<T>[] }{\n\n        var dfaStates: { [s: string]: CompoundState<T> } = {};\n        var states: State<T>[] = [];\n        var dfaCount = 0;\n        var stateCount = this.count();\n    \n        var set = new CharSet<State<T>>(() => new StateArray<T>());\n\n        var cela = this;\n        \n        // initiation,put {start} into the dfaStates.\n        var initState = new CompoundState(stateCount,[this]);\n        initState.index = dfaCount++;\n        states.push(initState);\n        var lastState = initState;\n        dfaStates[initState.hash()] = initState;\n\n        var queue: CompoundState<T>[] = [initState];\n    \n        while(queue.length > 0){\n            var s = queue.shift();\n            // clear set and arc array\n            set.removeAll();\n            // find all the characters that this state can accept\n            s.allChars(set);\n            set.forEach(function(chara,charb,it){\n                var cpState = new CompoundState<T>(stateCount,it.dataSet.toArray());\n                var cphash = cpState.hash();\n                if(dfaStates[cphash]){\n                    // this state est deja connu\n                    cpState = dfaStates[cphash];\n                }\n                else {\n                    dfaStates[cphash] = cpState;\n                    queue.push(cpState);\n                    cpState.index = dfaCount++;\n                    states.push(cpState);\n                }\n                s.to(cpState).chars.add(chara,charb);\n            });\n        }\n        initState.release();\n        return {\n            head: initState,\n            states: states\n        };\n    }\n}\n\nclass CompoundState<T> extends State<T>{\n    stateSet: BitSet;\n    states: State<T>[];\n    constructor(stateCount: number, states: State<T>[]){\n        super();\n        this.isEnd = this.isStart = false;\n        this.valid = true;\n        this.states = states;\n        this.stateSet = new BitSet(stateCount);\n        for(var i = 0;i < states.length;i++){\n            this.stateSet.add(states[i].index);\n            //this.isEnd = this.isEnd || states[i].isEnd;\n            this.copyEndFrom(states[i]);\n            this.isStart = this.isStart || states[i].isStart;\n        }\n    }\n    hash(): string{\n        return this.stateSet.hash();\n    }\n\n    // getStates(char: string, states: BitSet){\n    //     for(var i = 0;i < this.states.length;i++){\n    //         State.prototype.getStates.call(this.states[i],char,states);\n            \n    //     }\n    // }\n\n    allChars(set: CharSet<State<T>>){\n        for(var i = 0;i < this.states.length;i++){\n            // State.prototype.allChars.call(this.states[i],set);\n            this.states[i].allChars(set);\n        }\n    }\n    forEach(cb: (s: CompoundState<T>) => void){\n        super.forEach(cb);\n    }\n    release(){\n        this.forEach(function(state){\n            state.states.length = 0;\n        });\n    }\n}\n","import { InputStream,biss, OutputStream } from '../util/io.js';\nimport { State, EndAction } from './state';\n\nexport class DFA<T>{\n    start: State<T>;\n    constructor(public states: State<T>[]){\n        this.start = states[0];\n    }\n    print(os: OutputStream){\n        for(let s of this.states){\n            s.print(os, false);\n            os.writeln();\n        }\n    }\n    toString(): string{\n        var ret = '';\n        for(var i = 0;i < this.states.length;i++){\n            ret += this.states[i].toString() + '\\n';\n        }\n        return ret;\n    }\n    \n    matcher(stream: InputStream){\n        var bs = biss(stream);\n        var backups = [];\n        var matched = [];\n        var marker = null;\n        var c = bs.peek();\n        var cs;\n        function nc(){\n            if(marker !== null){\n                backups.push(c);\n            }\n            matched.push(c);\n            bs.next();\n            c = bs.peek();\n        }\n        function rollback(){\n            cs = marker;\n            marker = null;\n            while(backups.length > 0){\n                bs.backup(backups.pop());\n                matched.pop();\n            }\n        }\n        var cela = this;\n        return function(){\n            c = bs.peek();\n            cs = cela.start;\n            matched.length = 0;\n            backups.length = 0;\n            marker = null;\n            var ns;\n            while(true){\n                if(cs.endAction !== null){\n                    // this state is an end state,be carefull\n                    if(cs.hasArc()){\n                        ns = c !== null ? cs.getState(c.charCodeAt(0)) : null;\n                        if(ns === null){\n                            return { matched: matched.join(''),action: cs.endAction };\n                        }\n                        else {\n                            backups.length = 0;\n                            marker = cs;\n                            cs = ns;\n                            nc();\n                        }\n                    }\n                    else {\n                        return { matched: matched.join(''),action: cs.endAction };\n                    }\n                }\n                else {\n                    ns = c !== null ? cs.getState(c.charCodeAt(0)) : null;\n                    if(ns === null){\n                        if(marker !== null){\n                            rollback();\n                            return { matched: matched.join(''),action: cs.endAction };\n                        }\n                        else if(c === null){\n                            //eof\n                            return null;\n                        }\n                        else {\n                            throw new Error('unexpected character \"' + c + '\"');\n                        }\n                    }\n                    else {\n                        cs = ns;\n                        nc();\n                    }\n                }\n            }\n            // return null;\n        }\n    }\n}\n","export interface Option{\n    typeClass?: string;\n    escape?: boolean;\n}\nexport class JsccError{\n    constructor(public msg: string, public type: string = 'Error'){}\n    public toString(opt: Option = {}): string{\n        var escape = !!opt.escape;\n        var ret = this.type;\n        if(opt.typeClass){\n            ret = `<span class=\"${opt.typeClass}\">${ret}</span>`;\n        }\n        ret += ': ';\n        ret += escape ? this.msg.replace(/</g,'&lt').replace(/>/g,'&gt') : this.msg;\n        return ret;\n    }    \n}\nexport class CompilationError extends JsccError{\n    constructor(msg: string, public line: number){\n        super(msg, 'CompilationError');\n    }\n    public toString(opt: Option){\n        return `${super.toString(opt)} (at line ${this.line})`;\n    }\n}\nexport class JsccWarning extends JsccError{\n    constructor(msg: string){\n        super(msg, 'Warning');\n    }\n}","import { JsccError } from '../util/E';\nexport class PatternException extends JsccError{\n    constructor(msg: string){\n        super(msg, 'PatternException');\n    }\n}\n","import { PatternException as E } from './pattern-exception.js';\nimport { Action,Arc,EndAction,State } from './state.js';\nimport { CharSet } from './char-set';\n\n\nfunction stackReader(str: string, strs?: {[s: string]: string}){\n    var stack = [{ sptr: 0,s: str,name: '' }];\n    var top = stack[0];\n    function checkNested(name: string){\n        for(var i = 0;i < stack.length;i++){\n            if(stack[i].name === name){\n                throw new E('cannot use pattern \"' + name + '\" which leads to loop reference');\n            }\n        }\n    }\n    return {\n        next: function(){\n            top.sptr++;\n            if(top.sptr >= top.s.length){\n                stack.length > 1 && stack.pop();\n                top = stack[stack.length - 1];\n            }\n        },\n        peek: function(){\n            return top.s[top.sptr] || null;\n        },\n        pushTo: function(name){\n            var nn = strs ? strs[name] : null;\n            if(!nn){\n                throw new E('undefined name \"' + name + '\"');\n            }\n            checkNested(name);\n            stack.push({ sptr: 0,s: '(' + nn + ')',name: name });\n            top = stack[stack.length - 1];\n        }\n    };\n}\n\n/**\n * compile a regular expression into e-NFA\n * @param {string} input\n * @param {number} stateCount\n * @param {Object.<string,string>|undefined} regs\n * @returns {{result: State,stateCount: number,tail: State}}\n */\nexport function compile<T>(input: string, regs: {[s: string]: string} = {}){\n    var reader = stackReader(input,regs);\n    var c = reader.peek();\n\n    function nc(){\n        reader.next();\n        c = reader.peek();\n    }\n    function notEof(reason?: string){\n        if(c === null){\n            throw new E('unexpected end of string' + (reason ? ', ' + reason : ''));\n        }\n    }\n    function ns(){\n        var s = new State<T>();\n        // s.index = stateCount++;\n        return s;\n    }\n    function eof(){\n        return c === null;\n    }\n    function expect(c1){\n        if(c !== c1){\n            throw new E('unexpected character \"' + c + '\",expecting \"' + c1 + '\"');\n        }\n        nc();\n    }\n\n    /**\n     * rexp() -> simpleRE() ('|' simpleRE())*\n     */\n    function rexp(start: State<T>): State<T>{\n        var ret = simpleRE(start);\n        while(!eof() && c === '|'){\n            nc();\n            var es = ns();\n            start.epsilonTo(es);\n            simpleRE(es).epsilonTo(ret);                \n        }\n        return ret;\n    }\n\n    /**\n     * simpleRE() -> ( basicRE() )+\n     */\n    function simpleRE(start: State<T>): State<T>{\n        var ret = start;\n        do{\n            ret = basicRE(ret);\n        }while(!eof() && c !== '|' && c !== ')');\n        return ret;\n    }\n\n    /**\n     * basicRE() -> primitive() ['+'|'*'|'?']\n     */\n    function basicRE(start: State<T>): State<T>{\n        var holder = ns();\n        start.epsilonTo(holder);\n        var ret = primitive(holder);\n        \n        if(c === '*'){\n            nc();\n            ret.epsilonTo(holder);\n            var nn = ns();\n            holder.epsilonTo(nn);\n            return nn;\n        }\n        else if(c === '+'){\n            nc();\n            var count = ns();\n            ret.epsilonTo(count);\n            count.epsilonTo(holder);\n            return count;\n        }\n        else if(c === '?'){\n            nc();\n            var nn2 = ns();\n            holder.epsilonTo(nn2);\n            ret.epsilonTo(nn2);\n            return nn2;\n        }\n        else {\n            return ret;\n        }\n    }\n    /**\n     * primitive() -> \n     *   '(' rexpr() ')'\n     * | '.'\n     * | '[' set() ']'\n     * | '{' NAME '}'\n     * | *\n     */\n    function primitive(start: State<T>): State<T>{\n        notEof();\n        if(c === '('){\n            nc();\n            let ret = rexp(start);\n            expect(')');\n            return ret;\n        }\n        else if(c === '.'){\n            nc();\n            let ret = ns();\n            start.to(ret).chars.addAll();\n            return ret;\n        }\n        else if(c === '['){\n            nc();\n            var neg = c as string === '^';\n            neg && nc();\n            let ret = ns();\n            var set = start.to(ret).chars;\n            neg && set.addAll();\n            while(c as string !== ']' && !eof()){\n                setItem(set,neg);\n            }\n            expect(']');\n            return ret;\n        }\n        else if(c === '{'){\n            nc();\n            var name = '';\n            while(c as string !== '}'){\n                notEof();\n                name += c;\n                nc();\n            }\n            nc();\n            reader.pushTo(name);\n            c = reader.peek();\n            return simpleRE(start);\n        }\n        else {\n            let ret = ns();\n            start.to(ret).chars.add(gchar());\n            return ret;\n        }\n    }\n    function gchar(): number{\n        notEof();\n        if(c === '\\\\'){\n            nc();\n            let ret: number | string = c.charCodeAt(0);\n            switch(c as string){\n                case 't': ret = '\\t';\n                case 'n': ret = '\\n';\n                case 'r': ret = '\\r';\n                case 'x': \n                    nc();\n                    var code = '';\n                    while(c !== null && /[0-9a-fA-F]/.test(c)){\n                        code += c;\n                        nc();\n                    }\n                    return parseInt(code,16);\n                default: ret = c;\n            }\n            nc();\n            return ret.charCodeAt(0);\n        }\n        else {\n            var ret = c.charCodeAt(0);\n            nc();\n            return ret;\n        }\n    }\n    /**\n     * setItem() ->\n     *   gchar() ['-'gchar()]\n     */\n    function setItem(set: CharSet<any>, neg: boolean){\n        var s = gchar();\n        var from = s,to = s;\n        if(c === '-'){\n            nc();\n            to = gchar();\n            if(to < from){\n                throw new E('left hand side must be larger than right hand side in wild card character (got \"' \n                + from.toString(16) + '\" < \"'\n                + to.toString(16) + '\")');\n            }\n        }\n        if(neg){\n            set.remove(from,to);\n        }\n        else {\n            set.add(from,to);\n        }\n    }\n\n    var head = ns();\n    head.isStart = true;\n    var tail = rexp(head);\n    return {\n        result: head,\n        tail: tail,\n    };\n}\n/**\n * compile a string into e-NFA,i.e.,regarde it as a regular \n * expression with all metacharacters escaped.\n * \n * @returns {{result: State,stateCount: number,tail: State}}\n */\nexport function compileRaw<T>(input: string){\n    var sptr = 0;\n    var c = input.charAt(sptr);\n    function ns(){\n        var s = new State<T>();\n        return s;\n    }\n    function nc(){\n        c = input.charAt(++sptr) || null;\n    }\n    function eof(){\n        return c === null;\n    }\n\n    var head = ns();\n    head.isStart = true;\n    var tail = head;\n    while(!eof()){\n        var s = ns();\n        tail.to(s).chars.add(c.charCodeAt(0));\n        tail = s;\n        nc();\n    }\n    return {\n        result: head,\n        tail: tail,\n    };\n}","import { State,EndAction } from './state';\nimport { DFA } from './dfa';\nimport { compile,compileRaw } from './compile';\nimport { console } from '../util/common';\n\n/**\n * create an object that can construct a lexer dfa\n * @api public\n * @param {Object.<string,string>} regs \n */\nfunction lexerBuilder<T>(regs: { [s: string]: string } = {}){\n    var actions = [];\n    var pr = 0;\n    function ns(){\n        var ret = new State<T>();\n        return ret;\n    }\n    var head = ns();\n    return {\n        lexRule: function(reg,id,data,raw){\n            var action = new EndAction<T>();\n            action.priority = pr++;\n            action.id = id;\n            action.data = data || null;\n            var cpd = (!!raw ? compileRaw<T>(reg) : compile<T>(reg,regs));\n            cpd.tail.endAction = action;\n            head.epsilonTo(cpd.result);\n            actions.push(action);\n        },\n        done: function(){\n            head.removeEpsilons();\n            var dhead = head.toDFA();\n            var ret = new DFA<T>(dhead.states);\n            return ret;\n        }\n    };\n}\n\n/**\n * \n * @param {{regexp: string,id: number,data: any,raw: boolean}[]} defs \n * @api public\n * @returns {DFA}\n */\nfunction lexer<T>(defs,regs){\n    var getdef;\n    if(typeof defs !== 'function'){\n        getdef = function(){\n            return defs.shift() || null;\n        }\n    }\n    else {\n        getdef = defs;\n    }\n\n    var bd = lexerBuilder<T>(regs);\n    var def = getdef();\n    while(def !== null){\n        bd.lexRule(def.regexp,def.id,def.data,def.raw);\n        def = getdef();\n    }\n    return bd.done();\n}\n\nexport { lexer,lexerBuilder };","import { Locatable } from \"../util/located\";\n\nexport enum Assoc {\n    UNDEFINED = 0,\n    LEFT,\n    RIGHT,\n    NON\n};\nexport interface TokenDef extends Locatable{\n    index: number,\n    sym: string,\n    alias: string,\n    pr: number,\n    assoc: Assoc,\n    used: boolean,\n}\nexport interface TokenEntry{\n    tokenCount: number;\n    tokens: TokenDef[];\n    isToken(t: number): boolean;\n}\nexport function convertTokenToString(t: TokenDef): string{\n    return t.alias === null ? `<${t.sym}>` : `\"${t.alias}\"`;\n}","import { TokenSet } from './token-set';\nimport { TokenDef, TokenEntry, Assoc, convertTokenToString } from './token-entry'\nimport { LexAction } from '../lexer/action';\nimport { Located, Locatable } from '../util/located';\nimport { Context } from '../util/context';\nimport { CompilationError } from '../util/E';\n\nexport interface NtDef{\n    index: number,\n    sym: string,\n    firstSet: TokenSet,\n    used: boolean,\n    rules: Rule[],\n    parents: { rule: Rule, pos: number }[];\n}\n\nexport class Rule implements Locatable{\n    public pr: number = -1;\n    public rhs: number[] = [];\n    public action: LexAction[] = null;\n    public index = 0;\n    public vars: { [s: string]: Located<number> } = {};\n    public usedVars: { [s: string]: Located<number> } = {};\n    constructor(\n        public g: Grammar, \n        public lhs: NtDef,\n        public line: number \n    ){}\n\n    calcPr(){\n        if(this.pr === -1){\n            for(let i = this.rhs.length - 1; i >= 0; i--){\n                let item = this.rhs[i];\n                if(item >= 0){\n                    this.g.tokens[item].assoc !== Assoc.UNDEFINED && \n                    (this.pr = this.g.tokens[item].pr);\n                }\n            }\n        }\n    }\n    getVarSp(v: string, ecb: (msg: string) => any): number{\n        if(this.lhs.parents.length !== 1){\n            if(this.lhs.parents.length > 1){\n                ecb(\"LHS of the rule is referenced by more than one rule\");\n            }\n            else {\n                ecb(\"this rule is unreachable\");\n            }\n            return null;\n        }\n        let ret = this.rhs.length;\n        let pos = this.lhs.parents[0].pos;\n        let rule: Rule = this.lhs.parents[0].rule;\n        while(true){\n            let vdef = rule.vars[v];\n            if(vdef !== undefined && vdef.val < pos){\n                ret += pos - vdef.val;\n                return ret;\n            }\n            if(rule.lhs.parents.length !== 1){\n                if(rule.lhs.parents.length > 1){\n                    ecb(`\"${rule.lhs.sym}\" is referenced by more than one rule or unreachable`);\n                }\n                else {\n                    ecb(\"variable is undefined\");\n                }\n                return null;\n            }\n            ret += pos;\n            pos = rule.lhs.parents[0].pos;\n            rule = rule.lhs.parents[0].rule;\n        }\n    }\n    public toString(marker?: number){\n        var ret = this.index + ': ' + this.lhs.sym + ' =>';\n        for(var i = 0;i < this.rhs.length;i++){\n            var r = this.rhs[i];\n            if(marker === i){\n                ret += ' .';\n            }\n            if(r >= 0){\n                // ret += ' <' + this.g.tokens[r].sym + '>';\n                ret += ' ' + convertTokenToString(this.g.tokens[r]);\n            }\n            else {\n                ret += ' ' + this.g.nts[-r - 1].sym;\n            }\n        }\n        if(marker === this.rhs.length){\n            ret += ' .';\n        }\n        return ret;\n    }\n}\n\nexport class Grammar implements TokenEntry{\n    public tokens: TokenDef[] = [];\n    public tokenCount: number = 0;\n    public nts: NtDef[] = [];\n    public rules: Rule[] = [];\n\n    isToken(t: number): boolean{\n        return t >= 0;\n    }\n\n    forEachRule(cb: (index: number, rule: Rule) => void): void{\n        for(var i = 0;i < this.nts.length;i++){\n            var rules = this.nts[i].rules;\n            for(var j = 0;j < rules.length;j++){\n                cb(i,rules[j]);\n            }\n        }\n    }\n    forEachRuleOfNt(lhs: number, cb: (rule: Rule) => boolean): void{\n        var rules = this.nts[lhs].rules;\n        for(var j = 0;j < rules.length;j++){\n            if(cb(rules[j])){\n                break;\n            }\n        }\n    }\n    genFirstSets(): void{\n        var changed = true;\n        while(changed){\n            changed = false;\n            // iterate for each non terminal\n            for(var nt = 0;nt < this.nts.length;nt++){\n                var rules = this.nts[nt].rules;\n                var firstSet = this.nts[nt].firstSet;\n                for(var j = 0;j < rules.length;j++){\n                    var rule = rules[j];\n                    for(var k = 0;k < rule.rhs.length;k++){\n                        var ritem = rule.rhs[k];\n                        if(this.isToken(ritem)){\n                            changed = firstSet.add(ritem + 1) || changed;\n                            break;\n                        }\n                        else {\n                            ritem = -ritem - 1;\n                            if(nt !== ritem){\n                                changed = firstSet.union(this.nts[ritem].firstSet) || changed;\n                            }\n                            if(!this.nts[ritem].firstSet.contains(0)){\n                                break;\n                            }\n                        }\n                    }\n                    k === rule.rhs.length && firstSet.add(0);\n                }\n            }\n        }\n    }\n    toString(opt: { endl?: string, escape?: boolean, firstSets?: boolean } = {}){\n        opt = opt || {};\n        var endl = opt.endl || endl;\n        var escape = opt.escape || false;\n        var ret = '';\n        this.forEachRule((lhs, rule) => {\n            var s = rule.toString();\n            ret += s + endl;\n        });\n        if(opt.firstSets){\n            for(var i = 0;i < this.nts.length;i++){\n                var s = this.nts[i];\n                ret += `First(${s.sym}) = { ${s.firstSet.toString(this)} }${endl}`;\n            }\n        }\n        if(escape){\n            ret = ret.replace(/</g,'&lt;').replace(/>/g,'&gt;');\n        }\n        return ret.replace(/\\n/g,endl);\n    }\n    findTokenByName(t: string): TokenDef{\n        for(let tk of this.tokens){\n            if(tk.sym === t){\n                return tk;\n            }\n        }\n        return null;\n    }\n    findTokensByAlias(t: string): TokenDef[]{\n        let ret: TokenDef[] = [];\n        for(let tk of this.tokens){\n            tk.alias === t && ret.push(tk);\n        }\n        return ret;\n    }\n}\n","import { Grammar } from '../grammar/grammar.js';\nimport { LexAction } from '../lexer/action';\nimport { DFA } from '../lexer/dfa';\n\nexport class File{\n    grammar: Grammar = null;\n    lexDFA: DFA<LexAction[]>[] = [];\n    opt: {[s: string]: string} = {};\n    header: string = '';\n    extraArgs: string = '';\n}\n","import { BitSet } from '../util/bitset';\nimport { TokenEntry } from './token-entry'\n\nexport class TokenSet extends BitSet{\n    constructor(tcount: number){\n        super(tcount);\n    }\n    toString(g: TokenEntry): string{\n        var ret = '';\n        var first = true;\n        if(this.contains(0)){\n            ret += '\"\"';\n            first = false;\n        }\n        for(var i = 0;i < g.tokenCount;i++){\n            if(this.contains(i + 1)){\n                if(!first){\n                    ret += ',';\n                }\n                ret += '\"' + g.tokens[i].sym + '\"';\n                first = false;\n            }\n        }\n        return ret;\n    }\n}","// export interface Coroutine<T>{\n//     run(a: T): void;\n//     fail(): void;\n// };\n\nexport type Coroutine<T> = (success: boolean, data: T) => any;\n\nexport class CoroutineMgr<T>{\n    private _blocked: {[s: string]: Coroutine<T>[]} = {};\n\n    constructor(public getRes: (s: string) => T){\n\n    }\n\n    wait(s: string, cr: Coroutine<T>){\n        let r = this.getRes(s);\n        if(r === undefined){\n            this._blocked[s] || (this._blocked[s] = []);\n            this._blocked[s].push(cr);\n        }\n        else {\n            cr(true, r);\n        }\n    }\n    signal(s: string, data: T){\n        let crs = this._blocked[s];\n        if(crs !== undefined){\n            for(let cr of crs){\n                cr(true, data);\n            }\n            delete this._blocked[s];\n        }\n    }\n    fail(){\n        for(let s in this._blocked){\n            for(let cr of this._blocked[s]){\n                cr(false ,null);\n            }\n        }\n    }\n}","import { State, Arc, EndAction } from './state';\nimport { Context } from '../util/context';\nimport { CompilationError } from '../util/E';\nimport { DFA } from './dfa';\nimport { Coroutine, CoroutineMgr } from '../util/coroutine';\nimport { LexAction } from './action';\n\nclass CmdArray{\n    opcodes: ((s: StateBuilder<any>) => void)[] = [];\n    constructor(public label: string){\n    }\n}\n\ninterface varDef{\n    line: number;\n    cmds: CmdArray;\n};\n\nexport class StateBuilder<T>{\n    private _head: State<T> = new State<T>();\n    private _currentState: State<T> = null;\n    private _unionStack: { head: State<T>, tail: State<T> }[] = [];\n    // naive stack    +1s\n    private _simpleStack: State<T>[] = [];\n    private _currentArc: Arc<T> = null;\n    private _isInverse: boolean = false;\n    possibleAlias: string = null;\n    private _first = false;\n\n    private _scount = 0;\n    private _regexpVars: {[s: string]: varDef} = {};\n    private _states: CmdArray[] = [new CmdArray('')];\n\n    private _stateMap: {[s: string]: number} = { DEFAULT: 0 };\n    requiringState: CoroutineMgr<number>;\n    private _selectedStates: CmdArray[] = [];\n    private _selectedVar: CmdArray = null;\n\n    // exec\n    private _ar: { pc: number, cmds: CmdArray }[] = [];\n\n    constructor(public ctx: Context){\n        let cela = this;\n        this.requiringState = new CoroutineMgr<number>(s => {\n            return cela._stateMap[s];\n        });\n    }\n\n    private _emit(func: (s: StateBuilder<T>) => void){\n        if(this._selectedVar !== null){\n            this._selectedVar.opcodes.push(func);\n        }\n        else {\n            for(let sn of this._selectedStates){\n                sn.opcodes.push(func);\n            }\n        }\n    }\n    private _exec(a: CmdArray): DFA<T>{\n        this._head = this._currentState = new State<T>();\n        this._head.isStart = true;\n        this._unionStack.length = 0;\n        this._simpleStack.length = 0;\n        this._currentArc = null;\n        this._isInverse = false;\n\n        this._ar.length = 0;\n        this._ar.push({\n            pc: 0,\n            cmds: a\n        });\n        while(this._ar.length > 0){\n            let top = this._ar[this._ar.length - 1];\n            top.cmds.opcodes[top.pc++](this);\n            top = this._ar[this._ar.length - 1];\n            top.pc >= top.cmds.opcodes.length && this._ar.pop();\n        }\n        this._head.removeEpsilons();\n        var dhead = this._head.toDFA();\n        var ret = new DFA<T>(dhead.states);\n        return ret;\n        //return null;\n    }\n\n    prepareVar(vname: string, line: number){\n        let vdef = this._regexpVars[vname];\n        if(vdef !== undefined){\n            this.ctx.err(new CompilationError(`variable \"${vname}\" was already defined at line ${vdef.line}`, line));\n        }\n        vdef = this._regexpVars[vname] = {\n            line: line,\n            cmds: new CmdArray(vname)\n        };\n        this._selectedVar = vdef.cmds;\n    }\n    endVar(){\n        this._selectedVar = null;\n    }\n\n    prepareLex(){\n        this._selectedStates.length = 0;\n    }\n    selectState(s: string){\n        var sn = this._stateMap[s];\n        if(sn === undefined){\n            sn = this._stateMap[s] = this._states.length;\n            this._states.push(new CmdArray(''));\n            this.requiringState.signal(s, sn);\n        }\n        this._selectedStates.push(this._states[this._stateMap[s]]);\n    }\n\n    newState(){\n        this._first = true;\n        this.possibleAlias = null;\n        this._emit(cela => {\n            cela._currentState = new State<T>();\n            cela._head.epsilonTo(cela._currentState);\n        });\n    }\n    end(action: T, label: string = '(untitled)'){\n        for(let sn of this._selectedStates){\n            sn.label = `<${label}>`;\n        }\n        this._emit(cela => {\n            let ac = new EndAction<T>();\n            ac.id = ac.priority = cela._scount++;\n            ac.data = action;\n            cela._currentState.endAction = ac;\n        });\n    }\n\n    //#region union\n    enterUnion(){\n        this._emit(s => {\n            s._unionStack.push({\n                head: s._currentState,\n                tail: new State<T>()\n            });\n        });\n    }\n    endUnionItem(){\n        this._emit(s => {\n            let top = s._unionStack[s._unionStack.length - 1];\n            s._currentState.epsilonTo(top.tail);\n            s._currentState = top.head;\n        });\n    }\n    leaveUnion(){\n        this._emit(s => {\n            s._currentState = s._unionStack.pop().tail;\n        });\n    }\n    //#endregion\n\n    //#region simple\n    enterSimple(){\n        this._emit(s => {\n            s._simpleStack.push(s._currentState);\n        });\n    }\n    simplePostfix(postfix: '' | '?' | '+' | '*'){\n        postfix === '' || (this.possibleAlias = null, this._first = false);\n        this._emit(s => {\n            let top = s._simpleStack.pop();\n            if(postfix === '?'){\n                top.epsilonTo(s._currentState);\n            }\n            else if(postfix === '+'){\n                s._currentState.epsilonTo(top);\n            }\n            else if(postfix === '*'){\n                s._currentState.epsilonTo(top);\n                s._currentState = top;\n            }\n        });\n    }\n\n    //#region primitive\n    addString(s: string){\n        if(this._first){\n            this.possibleAlias = s;\n            this._first = false;\n        }\n        else {\n            this.possibleAlias = null;\n        }\n        this._emit(cela => {\n            for(let i = 0;i < s.length;i++){\n                let ns = new State<T>();\n                cela._currentState.to(ns).chars.add(s.charCodeAt(i));\n                cela._currentState = ns;\n            }\n        });\n    }\n    addVar(vname: string, line: number){\n        this._first = false;\n        this.possibleAlias = null;\n        this._emit(cela => {\n            let vdef = cela._regexpVars[vname];\n            if(vdef === undefined){\n                cela.ctx.err(new CompilationError(`use of undefined variable \"${vname}\"`, line));\n            }\n            let cmds = vdef.cmds;\n            // check for circular dependence\n            for(let i = 0;i < cela._ar.length;i++){\n                let aitem = cela._ar[i];\n                if(aitem.cmds === cmds){\n                    let msg = `circular dependence in lexical variable detected: ${cmds.label}`;\n                    for(i++;i < cela._ar.length;i++){\n                        msg += ` -> ${cela._ar[i].cmds.label}`;\n                    }\n                    msg += ` -> ${cmds.label}`;\n                    cela.ctx.err(new CompilationError(msg, line));\n                    // Don't stop executing, for detecting furthur errors.\n                    return;\n                }\n            }\n            cela._ar.push({\n                pc: 0,\n                cmds: cmds\n            });\n        });\n    }\n    beginSet(inverse: boolean){\n        this._first = false;\n        this.possibleAlias = null;\n        this._emit(cela => {\n            cela._isInverse = inverse;\n            let ns = new State<T>();\n            cela._currentArc = cela._currentState.to(ns);\n            cela._currentState = ns;\n            inverse && cela._currentArc.chars.addAll();\n        });\n    }\n    addSetItem(from: string, to: string, line1: number, line2: number){\n        if(from.length !== 1){\n            this.ctx.err(new CompilationError(`character expected in union, got \"${from}\"`, line1));\n            return;\n        }\n        if(to.length !== 1){\n            this.ctx.err(new CompilationError(`character expected in union, got \"${to}\"`, line2));\n            return;\n        }\n        if(from.charCodeAt(0) > to.charCodeAt(0)){\n            this.ctx.err(new CompilationError(\n                `left hand side must be larger than right hand side in wild card character (got '${from}' > '${to}')`\n            , line1));\n        }\n        this._emit(cela => {\n            cela._isInverse ? \n            cela._currentArc.chars.remove(from.charCodeAt(0), to.charCodeAt(0)) : \n            cela._currentArc.chars.add   (from.charCodeAt(0), to.charCodeAt(0));\n        });\n    }\n    endSet(){\n        this._emit(cela => {\n            cela._currentArc = null;\n        });\n    }\n\n    build(): DFA<T>[]{\n        let dfas: DFA<T>[] = [];\n        for(let state of this._states){\n            dfas.push(this._exec(state));\n        }\n        this.requiringState.fail();\n        return dfas;\n    }\n\n    //#endregion\n    \n}","import { TokenDef } from \"../grammar/token-entry\";\nimport { CodeGenerator } from '../codegen/code-generator';\n\nexport interface LexAction{\n    toCode(c: CodeGenerator);\n    token: number;\n};\n// export type LexAction = (c: CodeGenerator) => any; \nfunction noToken(){\n    return -1;\n}\nfunction noCode(c: CodeGenerator){\n\n}\n\nexport function returnToken(tk: TokenDef): LexAction{\n    return {\n        toCode: noCode,\n        token: tk.index\n    };\n}\n\nexport function pushState(n: number): LexAction{\n    return {\n        toCode(c){\n            c.pushLexState(n);\n        },\n        token: -1\n    };\n}\n\nexport function popState(): LexAction{\n    return {\n        toCode(c){\n            c.popLexState();\n        },\n        token: -1\n    };\n}\n\nexport function blockAction(b: string, line: number): LexAction{\n    return {\n        toCode(c){\n            c.addBlock(b, line);\n        },\n        token: -1\n    };\n}\n\nexport function setImg(img: string): LexAction{\n    return {\n        toCode(c){\n            c.setImg(img);\n        },\n        token: -1\n    };\n}","import { Grammar,Rule, NtDef } from '../grammar/grammar';\nimport { File } from './file';\nimport { BitSet } from '../util/bitset';\nimport { TokenSet } from '../grammar/token-set';\nimport { Assoc, TokenDef } from '../grammar/token-entry';\nimport { CompilationError as E, JsccError, JsccWarning, CompilationError } from '../util/E';\nimport { Context } from '../util/context';\nimport { StateBuilder } from '../lexer/builder';\nimport { LexAction, pushState } from '../lexer/action';\nimport { Coroutine, CoroutineMgr } from '../util/coroutine';\nimport { Located } from '../util/located';\n\ninterface NtPlaceHolder{\n    nt: number;\n    rItem: number;\n};\n\ninterface RuleLoc{\n    rule: Rule;\n    pos: number;\n    line: number;\n};\n\nexport enum TokenRefType {\n    TOKEN = 0,\n    STRING = 1,\n    NAME = 2\n};\n\ninterface PseudoToken{\n    assoc: Assoc;\n    pr: number;\n    line: number;\n}\n\nexport class GBuilder{\n    private _ctx: Context = null;\n    private _f: File = new File();\n    private _g: Grammar = new Grammar();\n\n    private _tokenNameTable: { [s: string]: TokenDef } = {};\n    private _tokenAliasTable: { [s: string]: TokenDef[] } = {};\n\n    private _ruleStack: Rule[] = [];\n    private _sematicVar: Located<string> = null;\n\n    private _ntTable: {[s: string]: NtDef} = {};\n    // ntPlaceHolders: {[s: string]: RuleLoc[]} = {};\n    private _requiringNt: CoroutineMgr<NtDef> = null;\n\n    private _genIndex = 0;\n    private _first = true;\n    private _pr = 1;\n\n    private _onCommit: (() => any)[] = [];\n    private _onDone: (() => any)[] = [];\n\n    lexBuilder: StateBuilder<LexAction[]>;\n    \n    private _pseudoTokens: { [tname: string]: PseudoToken } = {};\n\n    private _top(){\n        return this._ruleStack[this._ruleStack.length - 1];\n    }\n    private _splitAction(line: number){\n        let saved = this._sematicVar;\n        this._sematicVar = null;\n\n        let t = this._top();\n        let s = '@' + this._genIndex++;\n        this.prepareRule(s, line);\n        let gen = this._top();\n        this.addAction(t.action);\n        this.commitRule();\n        t.action = null;\n        this.addRuleItem(s, TokenRefType.NAME, line);\n        let cela = this;\n\n        this._sematicVar = saved;\n\n        // copy imported variables from parent rule\n        for(let vname in t.vars){\n            let v = t.vars[vname];\n            gen.usedVars[vname] = { val: v.val, line: v.line };\n        }\n        for(let vname in t.usedVars){\n            let v = t.usedVars[vname];\n            gen.usedVars[vname] = { val: v.val, line: v.line };\n        }\n    }\n    err(msg: string, line: number){\n        this._ctx.err(new E(msg, line));\n    }\n    defToken(name: string, alias: string, line: number): TokenDef{\n        var tkdef = this._tokenNameTable[name];\n        if(tkdef !== undefined){\n            // this.err(`token \"${name}\" was already defined at line ${this.g.tokens[tkIndex].line}`, line);\n            return tkdef;\n        }\n        else {\n            tkdef = { \n                index: this._g.tokens.length,\n                sym: name,\n                alias: alias,\n                line: line,\n                pr: 0,\n                assoc: Assoc.UNDEFINED,\n                used: false\n            };\n            if(alias !== null){\n                this._tokenAliasTable[alias] || (this._tokenAliasTable[alias] = []);\n                this._tokenAliasTable[alias].push(tkdef);\n            }\n            this._tokenNameTable[name] = tkdef;\n            this._g.tokens.push(tkdef);\n            return tkdef;\n        }\n    }\n    getTokenByAlias(a: string, line: number): TokenDef{\n        let aa = this._tokenAliasTable[a];\n        if(aa === undefined){\n            this.err(`cannot identify \"${a}\" as a token`, line);\n            return null;\n        }\n        else if(aa.length > 1){\n            let ret = '';\n            for(let i = 0;i < aa.length;i++){\n                i > 0 && (ret += ',');\n                ret += `<${aa[i].sym}>`;\n            }\n            this.err(`cannot identify ${a} as a token, since it could be ${ret}`, line);\n            return null;\n        }\n        return aa[0];\n    }\n    getTokenByName(t: string, line: number): TokenDef{\n        let ret = this._tokenNameTable[t];\n        if(ret === undefined){\n            this.err(`cannot identify <${t}> as a token`, line);\n            return null;\n        }\n        return ret;\n    }\n    defineTokenPrec(tid: string, assoc: Assoc, type: TokenRefType, line: number){\n        if(type === TokenRefType.TOKEN){\n            let tk = this.getTokenByName(tid, line);\n            if(tk !== null){\n                tk.assoc = assoc;\n                tk.pr = this._pr;\n            }\n        }\n        else if(type === TokenRefType.STRING){\n            let tk = this.getTokenByAlias(tid, line);\n            if(tk !== null){\n                tk.assoc = assoc;\n                tk.pr = this._pr;\n            }\n        }\n        else if(type === TokenRefType.NAME){\n            let t2 = this._pseudoTokens[tid] = this._pseudoTokens[tid] || {\n                assoc: assoc,\n                pr: this._pr,\n                line: line\n            };\n        }\n    }\n    setOpt(name: string, value: string): this{\n        this._f.opt[name] = value;\n        return this;\n    }\n    setHeader(h: string){\n        this._f.header = h;\n    }\n    setExtraArg(a: string){\n        this._f.extraArgs = a;\n    }\n    incPr(){\n        this._pr++;\n        return this;\n    }\n    prepareRule(lhs: string, line: number){\n        if(this._first){\n            this._first = false;\n            this.prepareRule('(accept)', line);\n            this.addRuleItem(lhs, TokenRefType.NAME, line);\n            this.addRuleItem('EOF', TokenRefType.TOKEN, line);\n            this.commitRule();\n        }\n        \n        var nt = this._ntTable[lhs];\n        if(nt === undefined){\n            nt = this._ntTable[lhs] = {\n                index: this._g.nts.length,\n                sym: lhs,\n                firstSet: null,\n                used: false,\n                rules: [],\n                parents: []\n            }\n            this._g.nts.push(nt);\n            this._requiringNt.signal(lhs, nt);\n        }\n        let nr = new Rule(this._g, nt, line);\n        this._ruleStack.push(nr);\n\n        return this;\n    }\n    addRuleUseVar(vname: string, line: number){\n        let t = this._top();\n        if(t.usedVars[vname] !== undefined){\n            this.err(`re-use of sematic variable \"${vname}\"`, line);\n        }\n        else {\n            t.usedVars[vname] = { line: line, val: 0 };\n        }\n    }\n    addRuleSematicVar(vname: string, line: number){\n        let t = this._top();\n        if(t.usedVars[vname] !== undefined){\n            this.err(`variable \"${vname}\" conflicts with imported variable defined at line ${t.usedVars[vname].line}`, line);\n        }\n        else if(t.vars[vname] !== undefined){\n            this.err(`sematic variable \"${vname}\" is already defined at line ${t.vars[vname].line}`, line);\n        }\n        else {\n            this._sematicVar = { line: line, val: vname };\n        }\n    }\n    addRuleItem(id: string, type: TokenRefType, line: number){\n        let t = this._top();\n        if(t.action !== null){\n            this._splitAction(line);\n        }\n        if(this._sematicVar !== null){\n            t.vars[this._sematicVar.val] = { val: t.rhs.length, line: this._sematicVar.line };\n            this._sematicVar = null;\n        }\n        if(type === TokenRefType.NAME){\n            let cela = this;\n            let pos = t.rhs.length;\n            t.rhs.push(0);\n            this._requiringNt.wait(id, (su, nt) => {\n                if(su){\n                    t.rhs[pos] = -nt.index - 1;\n                    nt.parents.push({\n                        rule: t,\n                        pos: pos\n                    });\n                    nt.used = true;\n                }\n                else {\n                    cela.err(`use of undefined non terminal ${id}`, line);                    \n                }\n            });\n        }\n        else if(type === TokenRefType.TOKEN){\n            let tl = this._tokenNameTable[id];\n            if(tl === undefined){\n                this.err(`cannot recognize <${id}> as a token`, line);\n                return;\n            }\n            t.rhs.push(tl.index);\n            tl.used = true;\n        }\n        else if(type === TokenRefType.STRING){\n            let td = this.getTokenByAlias(id, line);\n            if(td !== null){\n                t.rhs.push(td.index);\n                td.used = true;\n            }\n        }\n    }\n    addAction(b: LexAction[]){\n        var t = this._top();\n        if(t.action !== null){\n            this._splitAction(t.line);\n        }\n        t.action = b;\n        if(this._sematicVar !== null){\n            t.vars[this._sematicVar.val] = { val: t.rhs.length, line: this._sematicVar.line };\n            this._sematicVar = null;\n            this._splitAction(t.line);\n        }\n        return this;\n    }\n    defineRulePr(token: string, type: TokenRefType, line: number){\n        if(type === TokenRefType.STRING || type === TokenRefType.TOKEN){\n            let tk: TokenDef = type === TokenRefType.STRING ? \n                this.getTokenByAlias(token, line) : \n                this.getTokenByName(token, line);\n            if(tk !== null){\n                if(tk.assoc === Assoc.UNDEFINED){\n                    this.err(`precedence of token \"${token}\" has not been defined`,line);\n                    return;\n                }\n                this._top().pr = tk.pr;\n            }\n        }\n        else {\n            var pt = this._pseudoTokens[token];\n            if(!pt){\n                this.err(`pseudo token \"${token}\" is not defined`,line);\n            }\n            this._top().pr = pt.pr;\n        }\n    }\n    commitRule(){\n        var t = this._ruleStack.pop();\n        t.index = this._g.rules.length;\n        t.lhs.rules.push(t);\n        this._g.rules.push(t);\n        for(let cb of this._onCommit){\n            cb();\n        }\n        this._onCommit.length = 0;\n        return this;\n    }\n    addPushStateAction(acts: LexAction[], vn: string, line: number){\n        this.lexBuilder.requiringState.wait(vn, (su, sn) => {\n            if(su){\n                acts.push(pushState(sn));\n            }\n            else {\n                this._ctx.err(new CompilationError(`state \"${vn}\" is undefined`, line));\n            }\n        });\n    }\n    build(){\n        this._g.tokenCount = this._g.tokens.length;\n        this._g.tokens[0].used = true;// end of file\n        this._g.nts[0].used = true;// (accept)\n        let cela = this;\n\n        for(let nt of this._g.nts){\n            nt.firstSet = new TokenSet(this._g.tokenCount);\n            for(let rule of nt.rules){\n                rule.calcPr();\n                for(let vname in rule.usedVars){\n                    let v = rule.usedVars[vname];\n                    v.val = rule.getVarSp(vname, msg => {\n                        cela.err(`cannot find variable \"${vname}\": ${msg}`, v.line);\n                    });\n                }\n            }\n        }\n        this._f.lexDFA = this.lexBuilder.build();\n\n        for(let cb of this._onDone){\n            cb();\n        }\n        this._requiringNt.fail();\n        return this._f;\n    }\n\n    constructor(ctx: Context){\n        let cela = this;\n        this._f.grammar = this._g;\n        this._ctx = ctx;\n        this.lexBuilder = new StateBuilder<LexAction[]>(ctx);\n        this._requiringNt = new CoroutineMgr<NtDef>(s => {\n            return cela._ntTable[s];\n        });\n\n        this.defToken('EOF', null, 0);\n    }\n}\n","import { GBuilder, TokenRefType } from './gbuilder';\nimport { Assoc } from '../grammar/token-entry';\nimport { CompilationError as E, CompilationError } from '../util/E';\nimport { InputStream } from '../util/io';\nimport { Context } from '../util/context';\nimport { LexAction, returnToken, blockAction, pushState, popState, setImg } from '../lexer/action';\n\nenum T  {\n    EOF = 0,\n    NAME,\n    STRING,\n    // TOKEN_DIR,\n    OPT,\n    BLOCK,\n    ARROW,\n    EOL,\n    OR,\n    //TOKEN,\n    SEPERATOR,\n    LEFT_DIR,\n    RIGHT_DIR,\n    NONASSOC_DIR,\n    LEX_DIR,\n    PREC_DIR,\n    USE_DIR,\n    HEADER_DIR,\n    EXTRA_ARG_DIR,\n    INIT_DIR,\n    // REGEXP,\n    // STATE_DIR,\n    LINE_COMMENT,\n    BLOCK_COMMENT,\n    GT,\n    LT,\n    DASH,\n    BRA,\n    KET,\n    CBRA,\n    CKET,\n    COMMA,\n    PLUS,\n    EQU,\n    STAR,\n    QUESTION,\n    WEDGE,\n    \n    // highlight only\n    OPEN_CURLY_BRA,\n    CLOSE_CURLY_BRA\n};\n\nclass Token {\n    id: T;\n    line: number;\n    val: string = null;\n\n    clone(): Token{\n        var t = new Token();\n        t.id = this.id;\n        t.line = this.line;\n        t.val = this.val;\n        return t;\n    }\n}\n\nfunction scan(opt: { isHighlight?: boolean } = {}){\n    var highlight = !!opt.isHighlight;\n    var line = 1;\n    var stream: InputStream = null;\n    var c: string = null;\n\n    function eof(){\n        return c === null;\n    }\n    function isBlank(c){\n        return c == ' ' || c == '\\n' || c == '\\t';\n    }\n    function nc(){\n\n        if(c === '\\n'){\n            line++;\n        }\n        stream.next();\n        c = stream.peek();\n    }\n    function err(c1?: string){\n        var s1 = '';\n        if(eof()){\n            s1 = 'unexpected end of file';\n        }\n        else {\n            s1 = `unexpected character \"${c}\"`;\n        }\n        if(c1){\n            throw new E(`${s1} after \"${c1}\"`,line);\n        }\n        else{\n            throw new E(s1,line);                \n        }\n    }\n    function iss(s: string){\n        var ii = 0;\n        while(ii < s.length){\n            if(s.charAt(ii++) !== c){\n                return false;\n            }\n            nc();\n        }\n        return true;\n    }\n    var escapes = {\n        'n': '\\n',\n        't': '\\t',\n        'r': '\\r'\n    };\n    function escapeChar(regexp: boolean){\n        var tc = c;\n        if(eof()){\n            return '';\n        }\n        nc();\n        var ret = escapes[tc];\n        if(ret !== undefined){\n            return ret;\n        }\n        else {\n            if(regexp){\n                return '\\\\' + tc;\n            }\n            else {\n                if(tc === '\\\\'){\n                    return '\\\\';\n                }\n                else {\n                    return '\\\\' + tc;\n                }\n            }\n        }\n    }\n    function handleString(){\n        var eos = c;\n        var ret = '';\n        nc();\n        while(c != eos){\n            if(eof()){\n                throw new E('unterminated string literal',line);\n            }\n            else if(c === '\\\\'){\n                nc();\n                ret += escapeChar(false);\n            }\n            else {\n                ret += c;\n                nc();\n            }\n        }\n        nc();\n        return ret;\n    }\n    function handleRegExp(){\n        var ret = '';\n        while(c !== '/'){\n            if(eof()){\n                throw new E('unterminated regular expression literal',line);\n            }\n            else if(c === '\\\\'){\n                nc();\n                ret += escapeChar(true);\n            }\n            else {\n                ret += c;\n                nc();\n            }\n        }\n        nc();\n        return ret;\n    }\n    function next(token: Token){\n        token.val = null;\n        while(isBlank(c) && !eof()){\n            nc();\n        }\n        token.line = line;\n        if(eof()){\n            token.id = T.EOF;\n            return token;\n        }\n        lex:\n        switch(c){\n            case '%':\n                nc();\n                if(iss('opt')){\n                    token.id = T.OPT;\n                    break lex;\n                }\n                else if(iss('le')){\n                    if(iss('ft')){\n                        token.id = T.LEFT_DIR;\n                        break lex;\n                    }\n                    else if(iss('x')){\n                        token.id = T.LEX_DIR;\n                        break lex;\n                    }\n                }\n                else if(iss('right')){\n                    token.id = T.RIGHT_DIR;\n                    break lex;\n                }\n                else if(iss('nonassoc')){\n                    token.id = T.NONASSOC_DIR;\n                    break lex;\n                }\n                else if(iss('prec')){\n                    token.id = T.PREC_DIR;\n                    break lex;\n                }\n                else if(iss('use')){\n                    token.id = T.USE_DIR;\n                    break lex;\n                }\n                else if(iss('header')){\n                    token.id = T.HEADER_DIR\n                    break lex;\n                }\n                else if(iss('extra_arg')){\n                    token.id = T.EXTRA_ARG_DIR;\n                    break lex;\n                }\n                else if(iss('init')){\n                    token.id = T.INIT_DIR;\n                    break lex;\n                }\n                else if(c == '%'){\n                    nc();\n                    token.id = T.SEPERATOR;\n                    break lex;\n                }\n                err('%');\n            case '{':\n                nc();\n                if(highlight){\n                    token.id = T.OPEN_CURLY_BRA;\n                    break lex;\n                }\n                else {\n                    token.id = T.BLOCK;\n                    token.val = '';\n                    var st = 1;\n                    while(st > 0){\n                        if(eof()){\n                            throw new E('unclosed block', line);\n                        }\n                        if(c == '{'){\n                            st++;\n                            token.val += c;\n                        }\n                        // XXX: disable CFA\n                        else if(c == '}' as string){\n                            st--;\n                            st > 0 && (token.val += c);\n                        }\n                        else {\n                            token.val += c;\n                        }\n                        nc();\n                    }\n                    break lex;\n                }\n            case '/':\n                nc();\n                if(c === '/'){\n                    nc();\n                    token.val = '//';\n                    while(c as string !== '\\n' && !eof()){\n                        token.val += c;\n                        nc();\n                    }\n                    token.id = T.LINE_COMMENT;\n                    break lex;\n                }\n                else if(c === '*'){\n                    nc();\n                    token.val = '/*';\n                    while(!eof()){\n                        if(c === '*'){\n                            nc();\n                            if(c === '/'){\n                                nc();\n                                break;\n                            }\n                            else if(eof()){\n                                break;\n                            }\n                            else {\n                                token.val += '*';\n                            }\n                        }\n                        else {\n                            token.val += c;\n                            nc();\n                        }\n                    }\n                    token.id = T.BLOCK_COMMENT;\n                    break lex;\n                }\n                err('/');\n            case '|':\n                nc();\n                token.id = T.OR;\n                break lex;\n            case ';':\n                nc();\n                token.id = T.EOL;\n                break lex;\n            case ':':\n                nc();\n                token.id = T.ARROW;\n                break lex;\n            case '=':\n                nc();\n                token.id = T.EQU;\n                break lex;\n            case '-':\n                nc();\n                if(c as string == '>'){\n                    nc();\n                    token.id = T.ARROW;\n                    break lex;\n                }\n                else {\n                    token.id = T.DASH;\n                    break lex;\n                }\n            case '\\'':\n            case '\"':\n                token.id = T.STRING;\n                token.val = handleString();\n                break lex;\n            case '<':\n                nc();\n                token.id = T.LT;\n                break lex;\n            case '>':\n                nc();\n                token.id = T.GT;\n                break lex;\n            case ',':\n                nc();\n                token.id = T.COMMA;\n                break lex;\n            case '+':\n                nc();\n                token.id = T.PLUS;\n                break lex;\n            case '?':\n                nc();\n                token.id = T.QUESTION;\n                break lex;\n            case '*':\n                nc();\n                token.id = T.STAR;\n                break lex;\n            case '[':\n                nc();\n                token.id = T.CBRA;\n                break lex;\n            case ']':\n                nc();\n                token.id = T.CKET;\n                break lex;\n            case '(':\n                nc();\n                token.id = T.BRA;\n                break lex;\n            case ')':\n                nc();\n                token.id = T.KET;\n                break lex;\n            case '^':\n                nc();\n                token.id = T.WEDGE;\n                break lex;\n            default:\n                if(/[A-Za-z_$]/.test(c)){\n                    token.id = T.NAME;\n                    token.val = c;\n                    nc();\n                    while(/[A-Za-z0-9_$]/.test(c) && !eof()){\n                        token.val += c;\n                        nc();\n                    }\n                    break lex;\n                }\n                nc();\n                err();\n        };\n\n    };\n    return {\n        next: next,\n        init: function(s: InputStream){\n            stream = s;\n            c = s.peek();\n        }\n    };\n}\n\nfunction parse(scanner, ctx: Context){\n    var token = new Token();\n    var gb = new GBuilder(ctx);\n\n    function nt(){\n        scanner.next(token);\n    }\n\n    function expect(id: T){\n        if(token.id !== id){\n            throw new E(`unexpected token \"${T[token.id]}\", expecting \"${T[id]}\"`,token.line);\n        }\n        nt();\n    }\n\n    function expectToken(id: T, cb: (val: string, line: number) => any){\n        let val = token.val;\n        let line = token.line;\n        expect(id);\n        cb(val, line);\n    }\n\n    /**\n     * options() <SEPERATOR> rules() <EOF>\n     */\n    function file(){\n        options();\n        expect(T.SEPERATOR);\n        rules();\n        expect(T.EOF);\n    }\n\n    function prTokens(assoc: Assoc){\n        do{\n            if(token.id === T.STRING){\n                gb.defineTokenPrec(token.val,assoc,TokenRefType.STRING,token.line);\n            }\n            else if(token.id === T.NAME){\n                gb.defineTokenPrec(token.val,assoc,TokenRefType.NAME,token.line);\n            }\n            else if(token.id === T.LT){\n                nt();\n                let tname = token.val;\n                let tline = token.line;\n                expect(T.NAME);\n                expect(T.GT);\n                gb.defineTokenPrec(tname, assoc, TokenRefType.TOKEN, tline);\n            }\n            else {\n                throw new E(`unexpected token \"${T[token.id]}\", expecting string or name or \"<\"`,token.line);\n            }\n            nt();\n        }while(token.id === T.STRING || token.id === T.NAME || token.id === T.LT);\n        gb.incPr();\n    }\n\n    /**\n     * '%token' (tokenDef())+\n     * | ('%left'|'%right'|'%nonassoc') [<TOKEN>]+\n     * | '%opt' <NAME> <STRING>\n     * | '%lex' lexRule()\n     * | '%header' <BLOCK>\n     * | '%extra_arg' <BLOCK>\n     */\n    function options(){\n        while(1){\n            switch(token.id){\n                case T.LEFT_DIR: \n                    nt();\n                    prTokens(Assoc.LEFT);\n                    break;\n                case T.RIGHT_DIR: \n                    nt();\n                    prTokens(Assoc.RIGHT);\n                    break;\n                case T.NONASSOC_DIR: \n                    nt();\n                    prTokens(Assoc.NON);\n                    break;\n                case T.OPT:\n                    nt();\n                    var name = token.val;\n                    expect(T.NAME);\n                    var s = token.val;\n                    expect(T.STRING);\n                    gb.setOpt(name,s);\n                    break;\n                case T.LEX_DIR:\n                    nt();\n                    lexRule();\n                    break;\n                case T.HEADER_DIR:\n                    nt();\n                    expectToken(T.BLOCK, (val, line) => gb.setHeader(val));\n                    break;\n                case T.EXTRA_ARG_DIR:\n                    nt();\n                    expectToken(T.BLOCK, (val, line) => gb.setExtraArg(val));\n                    break;\n                default:return;\n            }\n        }\n    }\n\n    /**\n     * ['<' states() '>'] '[' (lexItem())* ']'\n     */\n    function lexRule(){\n        gb.lexBuilder.prepareLex();        \n        if(token.id === T.LT){\n            nt();\n            states();\n            expect(T.GT);\n        }\n        else {\n            gb.lexBuilder.selectState('DEFAULT');\n        }\n        expect(T.CBRA);\n        while(token.id !== T.CKET){\n            lexItem();\n        }\n        expect(T.CKET);\n    }\n\n    /**\n     * <NAME> '=' '<' regexp() '>'\n     * | '<' <NAME> ':' regexp() '>' [ ':' lexActions() ]\n     * | '<' regexp() '>' [ ':' lexActions() ]\n     */\n    function lexItem(){\n        if(token.id + 0 === T.NAME){\n            let vname = token.val;\n            let line = token.line;\n            nt();\n            expect(T.EQU);\n            expect(T.LT);\n            gb.lexBuilder.prepareVar(vname, line);\n            regexp();\n            gb.lexBuilder.endVar();\n            expect(T.GT);\n        }\n        else if(token.id +0=== T.LT){\n            nt();\n            gb.lexBuilder.newState();\n            let label = 'untitled';\n            let acts: LexAction[] = [];\n            if(token.id === T.NAME){\n                let tname = token.val;\n                let tline = token.line;\n                label = tname;\n                // gb.defToken(tname, '', token.line);\n                nt();\n                expect(T.ARROW);\n                regexp();\n                let tdef = gb.defToken(tname, gb.lexBuilder.possibleAlias, tline);\n                acts.push(returnToken(tdef));\n            }\n            else {\n                regexp();\n            }\n            expect(T.GT);\n            if(token.id === T.ARROW){\n                nt();\n                lexActions(acts);\n            }\n            gb.lexBuilder.end(acts, label);\n        }\n    }\n\n    /**\n     * '[' lexAction() (',' lexAction())* ']'\n     * | <BLOCK>\n     */\n    function lexActions(acts: LexAction[]){\n        if(token.id === T.CBRA){\n            // XXX: disable CFA\n            token.id += 0;\n            nt();\n            lexAction(acts);\n            while(token.id === T.COMMA){\n                nt();\n                lexAction(acts);\n            }\n            expect(T.CKET);\n        }\n        else if(token.id === T.BLOCK){\n            acts.push(blockAction(token.val, token.line));\n            nt();\n        }\n        else {\n            throw new E(`unexpected token \"${T[token.id]}\"`, token.line);\n        }\n    }\n\n    /**\n     * '+' <NAME>\n     * | '-'\n     * | <BLOCK>\n     * | '=' <STRING>\n     */\n    function lexAction(acts: LexAction[]): void{\n        if(token.id === T.PLUS){\n            nt();\n            let vn = token.val;\n            let line = token.line;\n            expect(T.NAME);\n            gb.lexBuilder.requiringState.wait(vn, (su, sn) => {\n                if(su){\n                    acts.push(pushState(sn));\n                }\n                else {\n                    ctx.err(new CompilationError(`state \"${vn}\" is undefined`, line));\n                }\n            });\n        }\n        else if(token.id === T.DASH){\n            nt();\n            acts.push(popState());\n        }\n        else if(token.id === T.BLOCK){\n            let b = token.val;\n            nt();\n            acts.push(blockAction(token.val, token.line));\n        }\n        else if(token.id === T.EQU){\n            nt();\n            let s = token.val;\n            expect(T.STRING);\n            acts.push(setImg(s));\n        }\n        else {\n            throw new E(`unexpected token \"${T[token.id]}\"`, token.line);\n        }\n    }\n\n    /**\n     * <NAME> (',' <NAME>)*\n     */\n    function states(){\n        let tname = token.val;\n        let tline = token.line;\n        expect(T.NAME);\n        gb.lexBuilder.selectState(tname);\n        while(token.id === T.COMMA){\n            nt();\n            tname = token.val;\n            tline = token.line;\n            expect(T.NAME);\n            gb.lexBuilder.selectState(tname);\n        }\n    }\n\n    /**\n     * simpleRE() ('|' simpleRE())*\n     */\n    function regexp(){\n        gb.lexBuilder.enterUnion();\n        simpleRE();\n        gb.lexBuilder.endUnionItem();\n        while(token.id === T.OR){\n            nt();\n            simpleRE();\n            gb.lexBuilder.endUnionItem();\n        }\n        gb.lexBuilder.leaveUnion();\n    }\n\n    /**\n     * (basicRE())+\n     */\n    function simpleRE(){\n        do{\n            basicRE();\n        }while(token.id !== T.GT && token.id !== T.OR && token.id !== T.KET);\n    }\n\n    /**\n     * primitiveRE() ['+'|'*'|'?']\n     */\n    function basicRE(){\n        gb.lexBuilder.enterSimple();\n        primitiveRE();\n        switch(token.id){\n            case T.PLUS:\n                nt();\n                gb.lexBuilder.simplePostfix('+');\n                break;\n            case T.STAR:\n                nt();\n                gb.lexBuilder.simplePostfix('*');\n                break;\n            case T.QUESTION:\n                nt();\n                gb.lexBuilder.simplePostfix('?');\n                break;\n            default:\n                gb.lexBuilder.simplePostfix('');\n        }\n    }\n\n    /**\n     * '(' regexp() ')'\n     * | '[' setRE() ']'\n     * | <STRING>\n     * | '<' <NAME> '>'\n     */\n    function primitiveRE(){\n        if(token.id === T.BRA){\n            nt();\n            regexp();\n            expect(T.KET);\n        }\n        else if(token.id === T.CBRA){\n            nt();\n            setRE();\n            expect(T.CKET);\n        }\n        else if(token.id === T.STRING){\n            let s = token.val;\n            nt();\n            gb.lexBuilder.addString(s);\n        }\n        else if(token.id === T.LT){\n            nt();\n            let vname = token.val;\n            let line = token.line;\n            expect(T.NAME);\n            expect(T.GT);\n            gb.lexBuilder.addVar(vname, line);\n        }\n        else {\n            throw new E(`unexpected token \"${T[token.id]}\"`, token.line);\n        }\n    }\n\n    /**\n     * ['^'] [ setREItem() (',' setREItem())* ]\n     */\n    function setRE(){\n        if(token.id === T.WEDGE){\n            nt();\n            gb.lexBuilder.beginSet(true);\n        }\n        else {\n            gb.lexBuilder.beginSet(false);\n        }\n        if(token.id !== T.CKET){\n            setREItem();\n            while(token.id === T.COMMA){\n                nt();\n                setREItem();\n            }\n        }\n    }\n\n    /**\n     * <STRING> [ '-' <STRING> ] \n     */\n    function setREItem(){\n        let from = token.val;\n        let line1 = token.line;\n        let to = from;\n        let line2 = line1;\n        expect(T.STRING);\n        if(token.id === T.DASH){\n            nt();\n            to = token.val;\n            line2 = token.line;\n            expect(T.STRING);\n        }\n        gb.lexBuilder.addSetItem(from, to, line1, line2);\n    }\n\n    /**\n     * rule() ( rule() )* <SEPERATOR>\n     */\n    function rules(){\n        rule();\n        while(token.id !== T.SEPERATOR){\n            rule();\n        }\n        nt();\n    }\n\n    /**\n     * <NAME> <ARROW> ruleItems() ( <OR> ruleItems() )* <EOL>\n     */\n    function rule(){\n        var lhs = token.clone();\n        expect(T.NAME);\n        expect(T.ARROW);\n        gb.prepareRule(lhs.val,lhs.line);\n        ruleItems();\n        gb.commitRule();\n        while(token.id === T.OR){\n            nt();\n            gb.prepareRule(lhs.val,lhs.line);\n            ruleItems();\n            gb.commitRule();\n        }\n        expect(T.EOL);\n    }\n\n    /**\n     * [ '%use' '(' useList() ')' ] \n     * ( ruleItem() )* [ '%prec' (<STRING>|<NAME>) [ <BLOCK> ] ]\n     */\n    function ruleItems(){\n        if(token.id === T.USE_DIR){\n            nt();\n            expect(T.BRA);\n            useList();\n            expect(T.KET);\n        }\n        while(token.id === T.NAME \n            || token.id === T.LT \n            || token.id === T.STRING \n            || token.id === T.BLOCK \n            || token.id === T.CBRA){\n            ruleItem();\n        }\n        if(token.id === T.PREC_DIR){\n            nt();\n            let t = token.val;\n            let line = token.line;\n            // XXX: disable CFA\n            if(token.id as T === T.STRING){\n                gb.defineRulePr(t,TokenRefType.STRING,line);\n                nt();\n            }\n            // XXX: disable CFA\n            else if(token.id as T === T.LT){\n                nt();\n                t = token.val;\n                line = token.line;\n                expect(T.NAME);\n                expect(T.GT);\n                gb.defineRulePr(t, TokenRefType.TOKEN, line);\n            }\n            // XXX: disable CFA\n            else if(token.id as T === T.NAME){\n                gb.defineRulePr(t,TokenRefType.NAME,line);\n                nt();\n            }\n            else {\n                throw new E(`unexpected token \"${T[token.id]}\",expecting string or name`,token.line);\n            }\n            // XXX: disable CFA\n            if(token.id as T === T.BLOCK || token.id as T === T.CBRA){\n                let acts: LexAction[] = [];\n                lexActions(acts);\n                gb.addAction(acts);\n            }\n        }\n    }\n\n    /**\n     * <NAME> (',' <NAME>)*\n     */\n    function useList(){\n        let tname = token.val;\n        let tline = token.line;\n        expect(T.NAME);\n        gb.addRuleUseVar(tname, tline);\n        while(token.id === T.COMMA){\n            nt();\n            tname = token.val;\n            tline = token.line;\n            expect(T.NAME);\n            gb.addRuleUseVar(tname, tline);\n        }\n    }\n\n    /**\n     * <NAME> '=' (<NAME> | <STRING> | \"<\" <NAME> \">\" | lexAction())\n     */\n    function ruleItem(){\n        let t = token.clone();\n        if(token.id === T.NAME){\n            nt();\n            // XXX: disable CFA\n            if(token.id as T === T.EQU){\n                nt();\n                gb.addRuleSematicVar(t.val, t.line);\n                t = token.clone();\n            }\n            else {\n                gb.addRuleItem(t.val,TokenRefType.NAME,t.line);\n                return;\n            }\n        }\n        if(token.id === T.NAME){\n            nt();\n            gb.addRuleItem(t.val,TokenRefType.NAME,t.line);\n        }\n        else if(token.id === T.STRING){\n            nt();\n            gb.addRuleItem(t.val,TokenRefType.STRING,t.line);\n        }\n        else if(token.id === T.LT){\n            nt();\n            t = token.clone();\n            expect(T.NAME);\n            expect(T.GT);\n            gb.addRuleItem(t.val,TokenRefType.TOKEN,t.line);\n        }\n        if(token.id === T.BLOCK || token.id === T.CBRA){\n            let acts: LexAction[] = [];\n            lexActions(acts);\n            gb.addAction(acts);\n            // nt();\n        }\n    }\n\n    /**\n     * [ <NAME> '=' ]\n     */\n    function sematicVar(){\n        if(token.id = T.NAME){\n            \n        }\n    }\n\n    nt();\n    file();\n\n    return gb.build();\n}\n\nfunction commentFilter(scanner){\n    return {\n        next: function(token: Token){\n            do{\n                scanner.next(token);\n            }while(token.id === T.BLOCK_COMMENT || token.id === T.LINE_COMMENT);\n        },\n        init: function(s){\n            scanner.init(s);\n        }\n    };\n}\n\nvar highlightUtil = {\n    T: T,\n    Token: Token,\n    scanner: scan\n};\n\nfunction parseSource(source: InputStream, ctx: Context){\n    var scanner = scan();\n    scanner.init(source);\n    // need to filter comments.\n    return parse(commentFilter(scanner), ctx);\n}\n\nexport { highlightUtil,parseSource };","import { TokenSet } from './token-set';\nimport { Rule, Grammar } from './grammar';\nimport { ListNode } from '../util/list';\nimport { endl } from '../util/io';\n\nexport enum Action {\n    NONE = 1,\n    SHIFT,\n    REDUCE\n}\n\nexport class Item{\n    public marker: number = 0;\n    public lah: TokenSet;\n    public rule: Rule;\n    public isKernel: boolean;\n    public shift: ItemSet = null;\n    public actionType = Action.NONE;\n    public changed: boolean = true;\n    static NULL: Item = {} as Item;\n    constructor(rule: Rule, ik: boolean){\n        this.rule = rule;\n        this.isKernel = ik;\n        this.lah = new TokenSet(rule.g.tokenCount);\n    }\n    canShift(): boolean{\n        return this.rule.rhs.length > this.marker;\n    }\n    getShift(): number{\n        return this.rule.rhs[this.marker];\n    }\n    toString(opt: { showlah?: boolean, showTrailer?: boolean } = {}): string{\n        var showlah = (opt && opt.showlah) || false;\n        var showTrailer = (opt && opt.showTrailer) || false;\n        var r = this.rule;\n        var ret = '[ ' + this.rule.toString(this.marker) + (showlah ? ',{ ' + this.lah.toString(this.rule.g) + ' }' : '') + ' ]';\n    \n        this.isKernel && (ret += '*');\n        if(showTrailer){\n            switch(this.actionType){\n                case Action.NONE: ret += '(-)';break;\n                case Action.SHIFT: ret += '(s' + this.shift.stateIndex + ')';break;\n                case Action.REDUCE: ret += '(r)';break;\n            }\n        }\n        return ret;\n    }\n    hash(): string{\n        return this.rule.index + '-' + this.marker;\n    }\n    hasRRConflictWith(i: Item): boolean{\n        return this.actionType === Action.REDUCE && i.actionType === Action.REDUCE && this.rule.index !== i.rule.index && this.lah.hasIntersection(i.lah);\n    }\n    getFollowSet(set: TokenSet): void{\n        var g = this.rule.g;\n        var i;\n        for(i = this.marker + 1;i < this.rule.rhs.length;i++){\n            var mItem = this.rule.rhs[i];\n            if(g.isToken(mItem)){\n                set.add(mItem + 1);\n                break;\n            }\n            else {\n                //var set1 = g.sym[mItem].firstSet\n                var set1 = g.nts[-mItem - 1].firstSet\n                set.union(set1);\n                set.remove(0);\n                if(!set1.contains(0)){\n                    break;\n                }\n            }\n        }\n        if(i === this.rule.rhs.length){\n            set.union(this.lah);\n        }\n    }\n}\n\nexport class ItemSet implements ListNode<ItemSet>{\n    g: Grammar;\n    it: { [s: string]: Item } = {};\n    complete: boolean = false;\n\n    index: number = -1;\n    stateIndex: number = 0;\n\n    prev: ItemSet = null;\n    next: ItemSet = null;\n    data: ItemSet;\n    merges: number[] = [];\n\n    constructor(g: Grammar){\n        this.g = g;\n        this.data = this;\n    }\n\n    add(rule: Rule, marker: number, ik: boolean, lah: TokenSet, reset: boolean): boolean{\n        var h = rule.index + '-' + marker;\n        var it = this.it[h];\n        if(it === undefined){\n            var n = new Item(rule,ik);\n            n.marker = marker;\n            if(lah){\n                n.lah.union(lah);\n            }\n            this.it[h] = n;\n            return true;\n        }\n        else if(lah){\n            var ret = it.lah.union(lah);\n            if(reset && ret && it.canShift()){\n                it.actionType = Action.NONE;\n            }\n            ret && (it.changed = true);\n            return ret;\n        }\n    }\n    contains(){\n        \n    }\n    closure(): void{\n        var changed = true;\n        var tSet = new TokenSet(this.g.tokenCount);\n        var cela = this;\n        while(changed){\n            changed = false;\n            for(var hash in this.it){\n                var item = this.it[hash];\n                if(item.changed && item.canShift()){\n                    var ritem = item.getShift();\n                    if(ritem < 0){\n                        tSet.removeAll();\n                        item.getFollowSet(tSet);\n                        this.g.forEachRuleOfNt(-ritem - 1,function(rule){\n                            changed = cela.add(rule,0,false,tSet,false) || changed;\n                            return false;\n                        });\n                    }\n                }\n                item.changed = false;\n            }\n        }\n    }\n    toString(opt: { showlah?: boolean, showTrailer?: boolean }): string{\n        var showlah = (opt && opt.showlah) || false;\n        var showTrailer = (opt && opt.showTrailer) || false;\n        var opt2 = { showTrailer: showTrailer };\n        var ret = 's' + this.stateIndex + '';\n        if(this.index !== null){\n            ret += '(i' + this.index;\n        }\n        else {\n            ret += '(i?';\n        }\n        if(this.merges.length > 0){\n            ret += ',merged from ';\n            for(var i = 0;i < this.merges.length;i++){\n                if(i > 0){\n                    ret += ',';\n                }\n                ret += 'i' + this.merges[i];\n            }\n        }\n        ret += ')' + endl;\n        for(var hash in this.it){\n            ret += this.it[hash].toString(opt2) + endl;\n        }\n        return ret;\n    }\n    kernelHash(): string{\n        var ret = 0;\n        for(var hash in this.it){\n            var item = this.it[hash];\n            if(item.isKernel){\n                ret += item.rule.index << 5 + item.rule.index + item.marker;\n            }\n        }\n        return String(ret);\n    }\n    forEach(cb: (it: Item) => void){\n        for(var h in this.it){\n            cb(this.it[h]);\n        }\n    }\n    canMergeTo(s: ItemSet): boolean{\n        for(var h1 in this.it){\n            var it1 = this.it[h1];\n            var found = false,hasConflict = false,hasIdentical = false;\n            for(var h2 in s.it){\n                var it2 = s.it[h2];\n                if(it1.rule.index === it2.rule.index && it1.marker === it2.marker){\n                    hasIdentical = it1.lah.equals(it2.lah);\n                    found = it1.isKernel && it2.isKernel;\n                }\n                hasConflict = hasConflict || it1.hasRRConflictWith(it2);\n                if(it2.isKernel && this.it[h2] === undefined){\n                    return false;\n                }\n            }\n            if(it1.isKernel && !found || hasConflict && !hasIdentical){\n                return false;\n            }\n        }\n        return true;\n    }\n    mergeTo(s: ItemSet): boolean{\n        var ret = false;\n        for(var h in s.it){\n            var it = s.it[h];\n            ret = this.add(it.rule,it.marker,it.isKernel,it.lah,true) || ret;\n        }\n        this.merges.push(s.index);\n        return ret;\n    }\n}\n","\nexport interface ListNode<T>{\n    prev: ListNode<T>;\n    next: ListNode<T>;\n    data: T;\n}\n\nexport class List<T>{\n    public head: ListNode<T>;\n    public tail: ListNode<T>;\n    public size: number = 0;\n    constructor(){\n        this.head = { prev: null, next: null, data: null};\n        this.tail = { prev: null, next: null, data: null};\n        this.head.next = this.tail;\n        this.tail.prev = this.head;\n    }\n    append(n: ListNode<T>): void{\n        n.prev = this.tail.prev;\n        n.next = this.tail;\n        this.tail.prev.next = n;\n        this.tail.prev = n;\n        this.size++;\n    }\n    pull(): T{\n        var n = this.head.next;\n        this.head.next = n.next;\n        n.next.prev = this.head;\n        n.prev = n.next = null;\n        this.size--;\n        return n.data;\n    }\n    isEmpty(): boolean{\n        return this.size === 0;\n    }\n    forEach(cb: (a: T) => void): void{\n        for(var a = this.head.next;a !== this.tail;a = a.next){\n            cb(a.data);\n        }\n    }\n    remove(n: ListNode<T>): void{\n        n.next.prev = n.prev;\n        n.prev.next = n.next;\n        this.size--;\n    }\n    iterator(){\n        let p = this.head;\n        let cela = this;\n        return (): T => {\n            return p !== cela.tail ? (p = p.next, p.data) : null;\n        }\n    }\n}","import { Grammar } from './grammar';\nimport { YYTAB } from '../util/common';\nimport { endl, OutputStream } from '../util/io';\nimport { Action, Item, ItemSet } from './item-set';\nimport { List } from '../util/list';\nimport { convertTokenToString } from './token-entry';\n\nexport interface IParseTable{\n    readonly g: Grammar;\n    readonly stateCount: number;\n    defred: number[];\n    lookupShift(state: number, token: number): Item;\n    lookupGoto(state: number, nt: number): Item;\n};\n\nexport function printParseTable(os: OutputStream, cela: IParseTable, doneList: List<ItemSet>){\n    var g = cela.g;\n    var tokenCount = g.tokenCount;\n    var ntCount = g.nts.length;\n    // function printSet(set: ItemSet, lines: string[]){\n    //     var i = set.stateIndex;\n\n    //     lines.push(`state ${i}`);        \n    //     set.forEach(function(item){\n    //         lines.push(YYTAB + item.toString({ showTrailer: false }));\n    //     });\n    //     if(cela.defred[i] !== -1){\n    //         lines.push(`${YYTAB}default action: reduce with rule ${cela.defred[i]}`);\n    //     }\n    //     else {\n    //         lines.push(YYTAB + 'no default action');\n    //     }\n    //     for(var j = 0;j < tokenCount;j++){\n    //         var item = cela.lookupShift(i,j);\n    //         if(item !== null && item !== Item.NULL){\n    //             if(item.actionType === Action.SHIFT){\n    //                 lines.push(`${YYTAB}${convertTokenToString(g.tokens[j])} : shift, and goto state ${item.shift.stateIndex}`);\n    //             }\n    //             else {\n    //                 lines.push(`${YYTAB}${convertTokenToString(g.tokens[j])} : reduce with rule ${item.rule.index}`);\n    //             }\n    //         }\n    //     }\n    //     for(var j = 0;j < ntCount;j++){\n    //         var item = cela.lookupGoto(i,j);\n    //         if(item !== null){\n    //             lines.push(`${YYTAB}${g.nts[j].sym} : goto state ${item.shift.stateIndex}`);\n    //         }\n    //     }\n    //     lines.push('');\n    // }\n    // let it = doneList.iterator();\n    // let lines: string[] = [];\n    // function writeOne(){\n    //     let set = it();\n    //     if(set !== null){\n    //         lines.length = 0;\n    //         printSet(set, lines);\n    //         os.write(lines.join(endl), writeOne);\n    //     }\n    //     else {\n    //         done && done\n    //     }\n    // }\n    doneList.forEach(function(set){\n        var i = set.stateIndex;\n        var shift = '';\n        var reduce = '';\n        var gotot = '';\n        var defred = '';\n        os.writeln(`state ${i}`);        \n        set.forEach(function(item){\n            os.writeln(YYTAB + item.toString({ showTrailer: false }));\n        });\n        if(cela.defred[i] !== -1){\n            os.writeln(`${YYTAB}default action: reduce with rule ${cela.defred[i]}`);\n        }\n        else {\n            os.writeln(YYTAB + 'no default action');\n        }\n        for(var j = 0;j < tokenCount;j++){\n            var item = cela.lookupShift(i,j);\n            if(item !== null && item !== Item.NULL){\n                if(item.actionType === Action.SHIFT){\n                    shift += `${YYTAB}${convertTokenToString(g.tokens[j])} : shift, and goto state ${item.shift.stateIndex}${endl}`;\n                }\n                else {\n                    reduce += `${YYTAB}${convertTokenToString(g.tokens[j])} : reduce with rule ${item.rule.index}${endl}`;\n                }\n            }\n        }\n        for(var j = 0;j < ntCount;j++){\n            var item = cela.lookupGoto(i,j);\n            if(item !== null){\n                gotot += `${YYTAB}${g.nts[j].sym} : goto state ${item.shift.stateIndex}${endl}`;\n            }\n        }\n        os.writeln(shift + reduce + gotot);\n        os.writeln('');\n    });\n}\n\nexport class ParseTable implements IParseTable{\n    g: Grammar;\n    stateCount: number;\n    shift: Item[];\n    gotot: Item[];\n\n    defred: number[] = null;\n    constructor(g: Grammar, stateCount: number){\n        this.g = g;\n        var tokenCount = g.tokenCount;\n        var ntCount = g.nts.length;\n        this.stateCount = stateCount;\n        this.shift = new Array(tokenCount * stateCount);\n        this.gotot = new Array(ntCount * stateCount);\n        for(var i = 0;i < this.shift.length;i++){\n            this.shift[i] = null;\n        }\n        for(var i = 0;i < this.gotot.length;i++){\n            this.gotot[i] = null;\n        }\n    }\n    forEachShift(cb: (it: Item, state: number, token: number) => any){\n        for(let state = 0; state < this.stateCount; state++){\n            for(let tk = 0; tk < this.g.tokens.length; tk++){\n                let item = this.lookupShift(state, tk);\n                item && cb(item, state, tk);\n            }\n        }\n    }\n    forEachGoto(cb: (it: Item, state: number, nt: number) => any){\n        for(let state = 0; state < this.stateCount; state++){\n            for(let nt = 0; nt < this.g.nts.length; nt++){\n                let item = this.lookupGoto(state, nt);\n                item && cb(item, state, nt);\n            }\n        }\n    }\n    lookupShift(state: number, token: number): Item{\n        return this.shift[this.g.tokenCount * state + token];\n    }\n    lookupGoto(state: number, nt: number): Item{\n        return this.gotot[this.g.nts.length * state + nt];\n    }\n    private _getDefRed(state: number, apool: number[]): number{\n        for(let i = 0; i < apool.length; i++){\n            apool[i] = 0;\n        }\n        for(let tk = 0; tk < this.g.tokenCount; tk++){\n            let item = this.lookupShift(state, tk);\n            item && item.actionType === Action.REDUCE && apool[item.rule.index]++;\n        }\n        let ret = 0;\n        for(let i = 0;i < apool.length;i++){\n            apool[i] > apool[ret] && (ret = i);\n        }\n        return apool[ret] > 0 ? ret : -1;\n    }\n    findDefAct(){\n        this.defred = new Array(this.stateCount);\n        let apool = new Array(this.g.rules.length);\n        for(let i = 0;i < this.stateCount; i++){\n            let def = this._getDefRed(i, apool);\n            this.defred[i] = def;\n            if(def !== -1){\n                for(let tk = 0;tk < this.g.tokens.length;tk++){\n                    let item = this.lookupShift(i, tk);\n                    item && item.actionType === Action.REDUCE && item.rule.index === def &&\n                    (this.shift[this.g.tokenCount * i + tk] = null);\n                }\n            }\n        }\n    }\n}\n","import { BitSet } from '../util/bitset';\nimport { Grammar } from './grammar';\nimport { console,YYTAB } from '../util/common';\nimport { OutputStream,endl } from '../util/io';\nimport { Item,Action,ItemSet } from './item-set';\nimport { List } from '../util/list';\nimport { ParseTable } from './ptable';\nimport { TokenDef, Assoc, convertTokenToString } from './token-entry';\nimport { TokenSet } from './token-set';\n\nenum ConflictType {\n    RR = 0, SR = 1\n};\nexport class Conflict{\n    type: ConflictType;\n    set: ItemSet;\n    token: TokenDef;\n    used: Item;\n    discarded: Item;\n    static cNames: string[] = ['reduce/reduce','shift/reduce'];\n    toString(): string{\n        return `state ${this.set.stateIndex}, ${Conflict.cNames[this.type]} conflict:${endl}` +\n        `${YYTAB}token: ${convertTokenToString(this.token)}${endl}` +\n        `${YYTAB}used rule: ${this.used.toString()}${endl}` +\n        `${YYTAB}discarded rule: ${this.discarded.toString()}`;\n    }\n}\n\nexport function genInitialSet(g: Grammar): ItemSet{\n    var start = g.nts[0].rules[0];\n    var iset = new ItemSet(g);\n    iset.index = 0;\n    var set1 = new TokenSet(g.tokenCount);\n    set1.add(1);// eof\n    iset.add(start,0,true,set1,false);\n    return iset;\n}\n/**\n * implementation of the Hanolee algorithm\n * @param g \n */\nexport function genItemSets(g: Grammar): { result: List<ItemSet>, iterations: number }{\n    var htable = {}; \n    var iterations = 0;\n    function addToTable(iset){\n        var h = iset.kernelHash();\n        if(htable[h] === undefined){\n            htable[h] = [];\n        }\n        htable[h].push(iset);\n    }\n    function forEachInBucket(set,cb){\n        var b = htable[set.kernelHash()];\n        if(b !== undefined){\n            for(var i = 0;i < b.length;i++){\n                if(cb(b[i])) break;\n            }\n        }\n    }\n    var index = 1;\n    var todoList = new List<ItemSet>();\n    var incList = new List<ItemSet>();\n    var doneList = new List<ItemSet>();\n    todoList.append(genInitialSet(g));\n\n    while(!todoList.isEmpty() || !incList.isEmpty()){\n        var comeFrom = null;\n        //phase 1,generate transition item set from incomplete list.\n        if(!incList.isEmpty()){\n            var set = comeFrom = incList.pull();\n            set.forEach(function(item){\n                if(item.actionType === Action.NONE){\n                    console.assert(item.canShift());\n                    var shift = item.getShift();\n                    var newSet = new ItemSet(g);\n                    newSet.index = index++;\n                    todoList.append(newSet);\n                    //mark all the symbols in 'set'\n                    set.forEach(function(item1){\n                        if(item1.canShift()){\n                            var rItem = item1.getShift();\n                            if(rItem === shift){\n                                item1.actionType = Action.SHIFT;\n                                item1.shift = newSet;\n                                newSet.add(item1.rule,item1.marker + 1,true,item1.lah,false);\n                            }\n                        }\n                    });\n                }\n            });\n            set.complete = true;\n            doneList.append(set);\n        }\n\n        //phase 2,find possible merges,and do them.\n        while(!todoList.isEmpty()){\n            var set = todoList.pull();\n            set.closure();\n            set.forEach(function(item){\n                if(!item.canShift()){\n                    item.actionType = Action.REDUCE;\n                }\n            });\n            var merged = null;\n\n            forEachInBucket(set,function(gSet){\n                if(gSet.canMergeTo(set)){\n                    if(gSet.mergeTo(set)){\n                        if(gSet.complete){\n                            merged = gSet;\n                        }\n                    }\n                    //fix previous transition actions to merged set\n                    if(comeFrom !== null){\n                        comeFrom.forEach(function(sItem){\n                            if(sItem.actionType === Action.SHIFT && sItem.shift === set){\n                                sItem.shift = gSet;\n                            }\n                        });\n                    }\n                    set = null;\n                    return true;\n                }\n                return false;\n            });\n            //if set is merged with another complete set,\n            if(merged !== null){\n                doneList.remove(merged);\n                incList.append(merged);\n                merged.complete = false;\n            }\n            //not merged\n            else if(set !== null){\n                incList.append(set);\n                addToTable(set);\n            }\n        }\n        iterations++;\n    }\n    var i = 0;\n    doneList.forEach(function(set){\n        set.stateIndex = i++;\n    });\n\n    return {\n        result: doneList,\n        iterations: iterations,\n    };\n}\n\nexport function genParseTable(g: Grammar, doneList: List<ItemSet>): { result: ParseTable, conflicts: Conflict[] }{\n    var conflicts = [];\n    function resolveSRConflict(set: ItemSet, shift: Item, reduce: Item){\n        var token = g.tokens[shift.getShift()];\n        if(token.assoc !== Assoc.UNDEFINED){\n            var ruleP = reduce.rule.pr;\n            if(ruleP !== -1){\n                if(ruleP > token.pr){\n                    return reduce;\n                }\n                else if(ruleP < token.pr){\n                    return shift;\n                }\n                else {\n                    if(token.assoc === Assoc.LEFT){\n                        return reduce;\n                    }\n                    else if(token.assoc === Assoc.RIGHT){\n                        return shift;\n                    }\n                    else if(token.assoc === Assoc.NON){\n                        return Item.NULL;\n                    }\n                    else {\n                        console.assert(false);\n                    }\n                }\n            }\n        }\n        var cf = new Conflict();\n        cf.type = ConflictType.SR;\n        cf.set = set;\n        cf.token = token;\n        cf.used = shift;\n        cf.discarded = reduce;\n        conflicts.push(cf);\n        return shift;\n    }\n    function resolveRRConflict(set: ItemSet, r1: Item, r2: Item, token: number){\n        let tdef = g.tokens[token];\n        if(r1.rule.pr !== -1 && r2.rule.pr !== -1 && r1.rule.pr !== r2.rule.pr){\n            return r1.rule.pr > r2.rule.pr ? r1 : r2;\n        }\n        else {\n            var used = r1.rule.index > r2.rule.index ? r2 : r1;\n            var discarded = r1.rule.index > r2.rule.index ? r1 : r2;\n            var cf = new Conflict();\n            cf.type = ConflictType.RR;\n            cf.set = set;\n            cf.token = tdef;\n            cf.used = used;\n            cf.discarded = discarded;\n            conflicts.push(cf);\n            return used;\n        }\n    }\n    var ptable = new ParseTable(g,doneList.size);\n    doneList.forEach(function(set){\n        set.forEach(function(item){\n            if(item.actionType === Action.SHIFT){\n                var sItem = item.getShift();\n                if(g.isToken(sItem)){\n                    // do shift\n                    var tindex = set.stateIndex * g.tokenCount + sItem;\n                    var cItem = ptable.shift[tindex];\n                    if(cItem !== null){\n                        // shift-reduce conflict\n                        if(cItem.actionType === Action.REDUCE){\n                            ptable.shift[tindex] = resolveSRConflict(set,item,cItem);\n                        }\n                        else {\n                            // shift-shift conflicts shouldnt occur\n                            console.assert(cItem.shift === item.shift);\n                        }\n                    }\n                    else {\n                        ptable.shift[tindex] = item;\n                    }\n                }\n                else {\n                    // do goto\n                    var tindex = set.stateIndex * g.nts.length + (-sItem - 1);\n                    ptable.gotot[tindex] = item;\n                }\n            }\n            else if(item.actionType === Action.REDUCE){\n                for(var i = 0;i < g.tokenCount;i++){\n                    if(item.lah.contains(i + 1)){\n                        var index = set.stateIndex * g.tokenCount + i;\n                        var cItem = ptable.shift[index];\n                        if(cItem !== null){\n                            if(cItem.actionType === Action.REDUCE){\n                                ptable.shift[index] = resolveRRConflict(set,cItem,item,i);\n                            }\n                            else if(cItem.actionType === Action.SHIFT){\n                                ptable.shift[index] = resolveSRConflict(set,cItem,item);\n                            }\n                        }\n                        else {\n                            ptable.shift[index] = item;\n                        }\n                    }\n                }\n            }\n            else {\n                console.assert(false);\n            }\n        });\n    });\n\n    return {\n        result: ptable,\n        conflicts: conflicts\n    };\n}","import { JsccError as E } from '../util/E';\nimport { Action, Item } from '../grammar/item-set';\nimport { Grammar, Rule } from '../grammar/grammar';\nimport { ParseTable, IParseTable } from '../grammar/ptable';\nimport { TokenDef, convertTokenToString } from '../grammar/token-entry';\n\nfunction testParse(g: Grammar, pt: IParseTable, tokens: string[]): string[]{\n    var tk: TokenDef[] = [];\n    for(let tname of tokens){\n        let tdef: TokenDef;\n        if(/<[^>]+>/.test(tname)){\n            tdef = g.findTokenByName(tname.substr(1, tname.length - 2));\n            if(tdef === null){\n                throw new E(`cannot recognize ${tname} as a token`);\n            }\n        }\n        else {\n            let defs = g.findTokensByAlias(tname);\n            if(defs.length === 0){\n                throw new E(`cannot recognize \"${tname}\" as a token`);\n            }\n            if(defs.length > 1){\n                let msg = '';\n                for(let def of defs){\n                    msg += `<${def.sym}> `;\n                }\n                throw new E(`cannot recognize \"${tname}\" as a token, since it can be ${msg}`);\n            }\n            tdef = defs[0];\n        }\n        tk.push(tdef);\n    }\n    var state = [ 0 ];\n    var stack: string[] = [];\n    var ret: string[] = [];\n    function s(){\n        return state[state.length - 1];\n    }\n    function shift(ns: number){\n        state.push(ns);\n        let tdef = tk.shift();\n        // tdef.alias === null ? stack.push(`<${tdef.sym}>`) : stack.push(tdef.alias);\n        stack.push(convertTokenToString(tdef));\n        // stack.push(g.tokens[tk.shift()].sym);\n    }\n    function reduce(rule: Rule){\n        state.length -= rule.rhs.length;\n        stack.length -= rule.rhs.length;\n        stack.push(rule.lhs.sym);\n        var gotot = pt.lookupGoto(s(),rule.lhs.index).shift.stateIndex;\n        state.push(gotot);\n    }\n    function dump(){\n        var ret = '';\n        for(let s of stack){\n            ret += s + ' ';\n        }\n        ret += '| ';\n        for(let tdef of tk){\n            ret += convertTokenToString(tdef);\n            ret += ' ';\n        }\n        return ret;\n    }\n    ret.push(dump());\n    do{\n        let item = pt.lookupShift(s(),tk[0] ? tk[0].index : 0);\n        if(item !== null){\n            if(item === Item.NULL){\n                ret.push('syntax error!');\n                break;\n            }\n            else if(item.actionType === Action.SHIFT){\n                if(tk.length === 0){\n                    ret.push('accepted!');\n                    break;\n                }\n                shift(item.shift.stateIndex);\n            }\n            else if(item.actionType === Action.REDUCE){\n                if(reduce(item.rule)){\n                    break;\n                }\n            }\n            else {\n                console.assert(false);\n            }\n        }\n        else {\n            let ri = pt.defred[s()];\n            if(ri !== -1){\n                reduce(g.rules[ri]);\n            }\n            else {\n                ret.push('syntax error!');\n                break;\n            }\n        }\n        ret.push(dump());\n    }while(true);\n    return ret;\n}\n\nexport { testParse }","\nexport interface Table{\n    readonly rows: number;\n    readonly columns: number;\n    isEmpty(i: number,j: number): boolean;\n    emptyCount(row: number): number;\n}\nfunction sorter(cmp: (a: RowEntry, b: RowEntry) => number){\n    var a: RowEntry[] = [];\n    function insert(i,obj){\n        a.push(null);\n        for(var j = a.length - 1;j > i;j--){\n            a[j] = a[j - 1];\n        }\n        a[i] = obj;\n    }\n    return {\n        add(b: RowEntry): void{\n            var i: number;\n            for(i = 0;i < a.length;i++){\n                if((i === 0 || cmp(b,a[i - 1]) >= 0) && cmp(b,a[i]) <= 0){\n                    break;\n                }\n            }\n            insert(i,b);\n        },\n        done(): RowEntry[]{\n            return a;\n        }\n    };\n}\nclass RowEntry{\n    public dp: number | null = 0;\n    constructor(public emptyCount: number, public row: number){}\n}\n\n/**\n * implementation of double displacement first-fit-decreasing method\n */\nexport function compress(source: Table): { dps: number[], len: number }{\n    function empty(i: number, j: number): boolean{\n        j = j - sorted[i].dp;\n        return j < 0 || j >= source.columns || source.isEmpty(sorted[i].row,j);\n    }\n    function fit(i: number, dp: number): boolean{\n        for(var j = 0;j < source.columns;j++){\n            if(!empty(i,j)){\n                for(var k = 0;k < i;k++){\n                    if(!empty(k,j + dp)){\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n    function getFitdp(i: number): number{\n        var dp = 0;\n        while(-dp < source.columns && source.isEmpty(sorted[i].row,-dp)){ dp--; }\n        while(!fit(i,dp)){ dp++; }\n        return dp;\n    }\n    var tmpsorted = sorter((a, b) => {\n        return a.emptyCount < b.emptyCount ? -1 :\n            a.emptyCount > b.emptyCount ? 1 : 0;\n    });\n    for(var i = 0;i < source.rows;i++){\n        tmpsorted.add(new RowEntry(source.emptyCount(i),i));\n    }\n\n    var sorted = tmpsorted.done();\n    //the row with least empty entries has displacement 0\n    var maxdp = 0, mindp = 0;\n    var dps = new Array(source.rows);\n    let initDp = 0;\n    while(-initDp < source.columns && source.isEmpty(sorted[0].row, -initDp)){ initDp--; }\n    dps[sorted[0].row] = sorted[0].dp = initDp;\n    \n    for(var i = 1;i < sorted.length;i++){\n        let row = sorted[i].row;\n        let dp = getFitdp(i);\n        dps[row] = sorted[i].dp = dp;\n        dp > maxdp && (maxdp = dp);\n        dp < mindp && (mindp = dp);\n    }\n\n    // for(var i = 0;i < dps.length;i++){\n    //     dps[i] -= mindp;\n    // }\n\n    return {\n        dps: dps,\n        len: maxdp + source.columns// - mindp\n    };\n}\n","import { ParseTable, IParseTable } from './ptable';\nimport { compress, Table } from '../util/compress';\nimport { Item } from './item-set';\nimport { Grammar } from './grammar';\nimport { console } from '../util/common';\n\nfunction action(pt: ParseTable): Table{\n    let emCount: number[] = [];\n    for(let state = 0;state < pt.stateCount;state++){\n        emCount.push(0);\n        for(let tk = 0;tk < pt.g.tokens.length;tk++){\n            pt.lookupShift(state, tk) === null && (emCount[state]++);\n        }\n    }\n    return {\n        rows: pt.stateCount,\n        columns: pt.g.tokens.length,\n        isEmpty(state, token){\n            return pt.lookupShift(state, token) === null;\n        },\n        emptyCount(state){\n            return emCount[state];\n        }\n    };\n}\n\nfunction gotot(pt: ParseTable): Table{\n    let emCount: number[] = [];\n    for(let state = 0;state < pt.stateCount;state++){\n        emCount.push(0);\n        for(let nt = 0;nt < pt.g.nts.length;nt++){\n            pt.lookupShift(state, nt) === null && (emCount[state]++);\n        }\n    }\n    return {\n        rows: pt.stateCount,\n        columns: pt.g.nts.length,\n        isEmpty(state, nt){\n            return pt.lookupGoto(state, nt) === null;\n        },\n        emptyCount(nt){\n            return emCount[nt];\n        }\n    };\n}\n\nfunction initArray<T>(len: number, cb: (i: number) => T){\n    let ret: T[] = new Array(len);\n    for(let i = 0; i < len; i++){\n        ret[i] = cb(i);\n    }\n    return ret;\n}\n\nexport class CompressedPTable implements IParseTable{\n    g: Grammar;\n    stateCount: number;\n    // action table\n    pact: Item[];\n    // displacement of action table\n    disact: number[];\n    // check \n    checkact: number[];\n    // default reduction\n    defred: number[];\n\n    pgoto: Item[];\n    disgoto: number[];\n    checkgoto: number[];\n\n    constructor(ptable: ParseTable){\n        this.g = ptable.g;\n        this.defred = ptable.defred;\n        this.stateCount = ptable.stateCount;\n\n        let actionCResult = compress(action(ptable));\n        let gotoCResult = compress(gotot(ptable));\n        this.disact = actionCResult.dps;\n        this.disgoto = gotoCResult.dps;\n\n        this.pact = initArray<Item>(actionCResult.len, () => null);\n        this.checkact = initArray<number>(actionCResult.len, () => 0);\n        let cela = this;\n        ptable.forEachShift((it, state, token) => {\n            console.assert(cela.pact[cela.disact[state] + token] === null);\n            cela.pact[cela.disact[state] + token] = it;\n            cela.checkact[cela.disact[state] + token] = state;\n        });\n\n        this.pgoto = initArray<Item>(gotoCResult.len, () => null);\n        this.checkgoto = initArray<number>(gotoCResult.len, () => 0);\n        ptable.forEachGoto((it, state, nt) => {\n            console.assert(cela.pgoto[cela.disgoto[state] + nt] === null);\n            cela.pgoto[cela.disgoto[state] + nt] = it;\n            cela.checkgoto[cela.disgoto[state] + nt] = state;\n        });\n    }\n    lookupShift(state: number, token: number){\n        let index = this.disact[state] + token;\n        if(index >= 0 && index < this.pact.length && this.checkact[index] === state){\n            return this.pact[this.disact[state] + token];\n        }\n        else {\n            return null;\n        }\n    }\n    lookupGoto(state: number, nt: number){\n        let index = this.disgoto[state] + nt;\n        if(index >= 0 && index < this.pgoto.length && this.checkgoto[index] === state){\n            return this.pgoto[this.disgoto[state] + nt];\n        }\n        else {\n            return null;\n        }\n    }\n}\n","import { genItemSets,genParseTable, Conflict } from '../grammar/ptable-gen';\nimport { parseSource } from '../parser/gparser';\nimport { lexer } from '../lexer/pattern';\nimport { testParse } from './parse-test';\nimport { YYTAB } from '../util/common';\nimport { File } from '../parser/file';\nimport { ItemSet } from '../grammar/item-set';\nimport { ParseTable, IParseTable, printParseTable } from '../grammar/ptable';\nimport { TokenDef } from '../grammar/token-entry';\nimport { NtDef } from '../grammar/grammar';\nimport { List } from '../util/list';\nimport { OutputStream, InputStream } from '../util/io';\nimport { Context } from '../util/context';\nimport { JsccError, JsccWarning, Option } from '../util/E';\nimport { CompressedPTable } from '../grammar/ptable-compress';\nimport { TemplateInput } from '../codegen/def';\n\nclass Result implements Context{\n    file: File;\n    itemSets: List<ItemSet>;\n    iterationCount: number;\n    parseTable: CompressedPTable;\n    // conflicts: Conflict[];\n    // unusedTokens: TokenDef[] = [];\n    // unusedNts: NtDef[] = [];\n\n    errors: JsccError[] = [];\n    warnings: JsccError[] = [];\n    terminated = false;\n\n    warn(w: JsccWarning){\n        this.warnings.push(w);\n    }\n    err(e: JsccError){\n        this.errors.push(e);\n    }\n    printItemSets(stream: OutputStream){\n        stream.writeln(this.itemSets.size + ' state(s) in total,finished in ' + this.iterationCount + ' iteration(s).');\n        this.itemSets.forEach(function(s){\n            stream.writeln(s.toString({ showTrailer: true }));\n        });\n    }\n    printTable (os: OutputStream){\n        // this.parseTable.summary(this.itemSets,stream);\n        printParseTable(os, this.parseTable, this.itemSets);\n    }\n    printDFA(os: OutputStream){\n        for(let s of this.file.lexDFA){\n            s.print(os);\n            os.writeln();\n            os.writeln();\n        }\n    }\n    testParse(tokens: string[]){\n        return testParse(this.file.grammar,this.parseTable,tokens);\n    }\n    printError(os: OutputStream, opt: Option){\n        for(let e of this.errors){\n            os.writeln(e.toString(opt));\n        }\n        os.writeln();\n    }\n    printWarning(os: OutputStream, opt: Option){\n        for(let w of this.warnings){\n            os.writeln(w.toString(opt));\n        }\n        os.writeln();\n    }\n    hasWarning(){\n        return this.warnings.length > 0;\n    }\n    hasError(){\n        return this.errors.length > 0;\n    }\n    warningSummary(){\n        return `${this.warnings.length} warning(s), ${this.errors.length} error(s)`;\n    }\n    getTemplateInput(): TemplateInput{\n        return {\n            prefix: 'jj',\n            endl: '\\n',\n            opt: this.file.opt,\n            header: this.file.header,\n            extraArg: this.file.extraArgs,\n\n            g: this.file.grammar,\n            pt: this.parseTable,\n            sematicType: 'any',\n            dfas: this.file.lexDFA\n        };\n    }\n}\n\nfunction genResult(stream: InputStream){\n    var result = new Result();\n    try{\n        var f = parseSource(stream, result);\n    }\n    catch(e){\n        result.terminated = true;\n        result.err(e as JsccError);\n        return result;\n    }\n    var g = f.grammar;\n    result.file = f;\n    // we still could have error here\n    for(var s of g.tokens){\n        if(!s.used){\n            result.warn(new JsccWarning(`token <${s.sym}> is never used (defined at line ${s.line})`));\n        }\n    }\n    for(var s2 of g.nts){\n        if(!s2.used){\n            result.warn(new JsccWarning(`non terminal \"${s2.sym}\" is unreachable`));\n        }\n    }\n\n    if(result.hasError()){\n        result.terminated = true;\n        return result;\n    }\n    // don't proceed if any error has been detected\n    g.genFirstSets();\n\n    var temp = genItemSets(g);\n    result.itemSets = temp.result;\n    result.iterationCount = temp.iterations;\n    var temp2 = genParseTable(g,result.itemSets);\n    temp2.result.findDefAct();\n    // result.parseTable = temp2.result;\n    result.parseTable = new CompressedPTable(temp2.result);\n\n    for(let cf of temp2.conflicts){\n        result.warn(new JsccWarning(cf.toString()));\n    }\n    \n    return result;\n}\n\nexport { genResult };","import { TemplateInput, TemplateOutput } from '../def';\nimport { Item, Action } from '../../grammar/item-set';\nimport { Rule } from '../../grammar/grammar';\nimport { TokenDef } from '../../grammar/token-entry';\nimport { CodeGenerator } from '../code-generator';\nimport { DFA } from '../../lexer/dfa';\nimport { LexAction } from '../../lexer/action';\nimport { State, Arc } from '../../lexer/state';\nimport { Inf } from '../../util/interval-set';\n\nexport default function(input: TemplateInput, output: TemplateOutput){\n    echoLine(\"/*\");\n    echoLine(\"    generated by jscc, an LALR(1) parser generator made by hadroncfy.\");\n    echoLine(\"    template for typescript, written by hadroncfy, aussi.\");\n    echoLine(\"*/\");\n    echo(input.header );\n    let prefix = input.prefix;\nlet tab = input.opt.tab || '    ';\nfunction echo(s: string | number){\n    output.write(s);\n}\nfunction echoLine(s: string | number){\n    output.writeln(s);\n}\nfunction leftAlign(s: string, al: number): string{\n    function repeat(s: string, t: number){\n        let ret = '';\n        while(t --> 0) ret += s;\n        return ret;\n    }\n    return (s.length < al ? repeat(' ', al - s.length) : '') + s;\n}\nfunction printTable<T>(tname: string, t: T[], align: number, lc: number, mapper: (d: T) => string){\n    let count = 1; \n    echoLine(\"\");\n    echo(\"let \");\n    echo(prefix + tname );\n    echoLine(\" = [ \");\n    echo(tab); \n    for(let i of t){\n        echo(leftAlign(mapper(i), align));\n        echo(',');\n        count++ >= lc && (count = 1, echo(input.endl + tab));\n    } \n    echoLine(\"\");\n    echo(\"]; \");\n    } \nfunction printState(state: State<LexAction[]>){ \n    function arcToString(arc: Arc<LexAction[]>): string{\n        let ret: string[] = [];\n        arc.chars.forEach((from, to) => {\n            if(from === to){\n                ret.push(`c === ${from}`);\n            }\n            else if(from === 0 && to !== Inf.oo){\n                ret.push(`c <= ${to}`);\n            }\n            else if(from !== 0 && to === Inf.oo){\n                ret.push(`c >= ${from}`);\n            }\n            else if(from !== 0 && to !== Inf.oo){\n                ret.push(`(c >= ${from} && c <= ${to})`);\n            }\n            else {\n                // this merely happens\n                ret.push('true');\n            }\n        });\n        return ret.join(' || ');\n    } \n    let first = true; \n    echoLine(\"\");\n    echo(\"        case \");\n    echo(state.index );\n    echoLine(\":\");\n    echo(\"            ret.hasArc = \");\n    echo(state.arcs.length > 0 ? 'true' : 'false' );\n    echoLine(\";\");\n    echo(\"            ret.isEnd = \");\n    echo(state.endAction === null ? 'false' : 'true' );\n    echo(\";\");\n    for(let arc of state.arcs){\n        if(first) { \n    echoLine(\"\");\n    echo(\"            if(\");\n    echo(arcToString(arc) );\n    echoLine(\"){\");\n    echo(\"                ret.state = \");\n    echo(arc.to.index );\n    echoLine(\";\");\n    echo(\"            }\");\n    first = false;\n        } else { \n    echoLine(\"\");\n    echo(\"            else if(\");\n    echo(arcToString(arc) );\n    echoLine(\"){\");\n    echo(\"                ret.state = \");\n    echo(arc.to.index );\n    echoLine(\";\");\n    echo(\"            }\");\n    }\n    } \n    if(state.arcs.length === 0) { \n    echoLine(\"\");\n    echo(\"            ret.state = -1;\");\n    } else { \n    echoLine(\"\");\n    echoLine(\"            else {\");\n    echoLine(\"                ret.state = -1;\");\n    echo(\"            }\");\n    } \n    echoLine(\"\");\n    echo(\"            break;\");\n    } \nfunction printDFA(dfa: DFA<LexAction[]>, n: number){ \n    echoLine(\"\");\n    echo(\"function moveDFA\");\n    echo(n );\n    echoLine(\"(c: number, ret: { state: number, hasArc: boolean, isEnd: boolean }){\");\n    echo(\"    switch(ret.state){\");\n    for(let state of dfa.states){\n        printState(state);\n    } \n    echoLine(\"\");\n    echoLine(\"        default:\");\n    echoLine(\"            ret.state = -1;\");\n    echoLine(\"            ret.hasArc = false;\");\n    echoLine(\"    }\");\n    echo(\"}\");\n    }\nfunction printLexTokens(dfa: DFA<LexAction[]>, n: number){\n    function getAction(act: LexAction[]): number{\n        for(let a of act){\n            if(a.token !== -1){\n                return a.token;\n            }\n        }\n        return -1;\n    }\n    printTable<State<LexAction[]>>('lexTokens' + n, dfa.states, 6, 10, (state) => {\n        return state.endAction ? getAction(state.endAction.data).toString() : '-1';\n    });\n} \n    echoLine(\"\");\n    echoLine(\"\");\n    echoLine(\"/*\");\n    echoLine(\"    find the next state to go in the dfa\");\n    echo(\"*/\");\n    for(let i = 0, _a = input.dfas; i < _a.length; i++){\n    printDFA(_a[i], i);\n} \n    echoLine(\"\");\n    echoLine(\"\");\n    echoLine(\"/*\");\n    echoLine(\"    all the lexer data goes here.\");\n    echoLine(\"*/\");\n    echo(\"let \");\n    echo(prefix );\n    echo(\"lexers = [\");\n    for(let i = 0;i < input.dfas.length;i++){ \n    echoLine(\"\");\n    echo(\"    moveDFA\");\n    echo(i );\n    echo(\",\");\n    } \n    echoLine(\"\");\n    echoLine(\"];\");\n    echoLine(\"\");\n    echoLine(\"/*\");\n    echoLine(\"    tokens that a lexical dfa state can return\");\n    echo(\"*/\");\n    for(let i = 0, _a = input.dfas; i < _a.length; i++){\n    printLexTokens(_a[i], i);\n} \n    echoLine(\"\");\n    let pt = input.pt; \n    echoLine(\"\");\n    echo(\"let \");\n    echo(prefix );\n    echo(\"stateCount = \");\n    echo(pt.stateCount );\n    echoLine(\";\");\n    echo(\"let \");\n    echo(prefix );\n    echo(\"tokenCount = \");\n    echo(input.g.tokens.length );\n    echoLine(\";\");\n    echo(\"let \");\n    echo(prefix );\n    echo(\"actERR = \");\n    echo(pt.stateCount + 1 );\n    echoLine(\";\");\n    echoLine(\"/*\");\n    echo(\"    compressed action table: action = \");\n    echo(prefix );\n    echo(\"pact[\");\n    echo(prefix );\n    echoLine(\"disact[STATE-NUM] + TOKEN]\");\n    echoLine(\"    when action > 0, shift the token and goto state (action - 1);\");\n    echoLine(\"    when action < 0, reduce with rule (1-action);\");\n    echoLine(\"    when action = 0, do default action.\");\n    echo(\"*/\");\n    printTable<Item>('pact', pt.pact, 6, 10, t => {\n    if(t === null){\n        return '0';\n    }\n    else if(t === Item.NULL){\n        return String(pt.stateCount + 1);\n    }\n    else if(t.actionType === Action.SHIFT){\n        return (t.shift.stateIndex + 1).toString();\n    }\n    else if(t.actionType === Action.REDUCE){\n        return (-t.rule.index - 1).toString();\n    }\n}); \n    echoLine(\"\");\n    echoLine(\"/*\");\n    echoLine(\"    displacement of action table.\");\n    echo(\"*/\");\n    printTable<number>('disact', pt.disact, 6, 10, t => t.toString()); \n    echoLine(\"\");\n    echoLine(\"/*\");\n    echo(\"    used to check if a position in \");\n    echo(prefix  );\n    echoLine(\"pact is out of bouds.\");\n    echo(\"    if \");\n    echo(prefix  );\n    echo(\"checkact[\");\n    echo(prefix );\n    echoLine(\"disact[STATE-NUM] + TOKEN] = STATE-NUM, this position is not out of bounds.\");\n    echo(\"*/\");\n    printTable<number>('checkact', pt.checkact, 6, 10, t => t === undefined ? '0' : t.toString()); \n    echoLine(\"\");\n    echoLine(\"/*\");\n    echo(\"    default action table. action = \");\n    echo(prefix );\n    echoLine(\"defred[STATE-NUM],\");\n    echoLine(\"    where action is the number of the rule to reduce with.\");\n    echo(\"*/\");\n    printTable<number>('defred', pt.defred, 6, 10, t => t.toString()); \n    echoLine(\"\");\n    echoLine(\"/*\");\n    echo(\"    compressed goto table: goto = \");\n    echo(prefix  );\n    echo(\"pgoto[\");\n    echo(prefix );\n    echoLine(\"disgoto[STATE-NUM] + NON_TERMINAL]\");\n    echo(\"*/\");\n    printTable<Item>('pgoto', pt.pgoto, 6, 10, t => {\n    if(t === null){\n        return '-1';\n    }\n    else {\n        return t.shift.stateIndex.toString();\n    }\n}); \n    echoLine(\"\");\n    echoLine(\"/*\");\n    echoLine(\"    displacement of the goto table\");\n    echo(\"*/\");\n    printTable<number>('disgoto', pt.disgoto, 6, 10, t => t.toString()); \n    echoLine(\"\");\n    echoLine(\"/*\");\n    echo(\"    length of each rule: rule length = \");\n    echo(prefix );\n    echoLine(\"ruleLen[RULE-NUM]\");\n    echo(\"*/\");\n    printTable<Rule>('ruleLen', pt.g.rules, 6, 10, r => r.rhs.length.toString()); \n    echoLine(\"\");\n    echoLine(\"/*\");\n    echoLine(\"    index of the LHS of each rule\");\n    echo(\"*/\");\n    printTable<Rule>('lhs', pt.g.rules, 6, 10, r => r.lhs.index.toString()); \n    echoLine(\"\");\n    echoLine(\"/*\");\n    echoLine(\"    token names\");\n    echo(\"*/\");\n    printTable<TokenDef>('tokenNames', pt.g.tokens, 20, 3, t => `\"${t.sym}\"`); \n    echoLine(\"\");\n    echoLine(\"/*\");\n    echoLine(\"    token alias\");\n    echo(\"*/\");\n    printTable<TokenDef>('tokenAlias', pt.g.tokens, 20, 3, t => t.alias ? `\"${t.alias}\"` : \"null\"); \n    let className = input.opt.className || 'Parser'; \n    echoLine(\"\");\n    function printLexActionsFunc(dfa: DFA<LexAction[]>, n: number){\n    let codegen = {\n        addBlock(b: string, line: number){ \n    echoLine(\"\");\n    echo(\"                \");\n    echo(b );\n    },\n        pushLexState(n: number){ \n    echoLine(\"\");\n    echo(\"                this._lexState.push(\");\n    echo(n );\n    echo(\");\");\n    },\n        popLexState(){ \n    echoLine(\"\");\n    echo(\"                this._lexState.pop();\");\n    },\n        setImg(n: string){ \n    echoLine(\"\");\n    echo(\"                this._setImg(\\\"\");\n    echo(n );\n    echo(\"\\\");\");\n    },\n        returnToken(t: TokenDef){ \n    echoLine(\"\");\n    echoLine(\"                this._token = {\");\n    echo(\"                    id: \");\n    echo(t.index );\n    echoLine(\",\");\n    echoLine(\"                    val: this._matched.join('')\");\n    echo(\"                };\");\n    }\n    }; \n    function hasNormalAction(a: LexAction[]){\n        for(let act of a){\n            if(act.token === -1){\n                return true;\n            }\n        }\n        return false;\n    }\n    let statevn = prefix + 'staten'; \n    echoLine(\"\");\n    echo(\"    private _doLexAction\");\n    echo(n );\n    echo(\"(\");\n    echo(statevn );\n    echoLine(\": number){\");\n    echo(\"        let \");\n    echo(prefix );\n    echo(\"tk = \");\n    echo(prefix );\n    echo(\"lexTokens\");\n    echo(n );\n    echo(\"[\");\n    echo(statevn );\n    echoLine(\"];\");\n    echo(\"        switch(\");\n    echo(statevn );\n    echo(\"){\");\n    for(let i = 0, _a = dfa.states; i < _a.length; i++){ \n        if(_a[i].endAction !== null && hasNormalAction(_a[i].endAction.data)){ \n    echoLine(\"\");\n    echo(\"            case \");\n    echo(i );\n    echo(\":\");\n    for(let act of _a[i].endAction.data){\n                act.token === -1 && act.toCode(codegen);\n            } \n    echoLine(\"\");\n    echo(\"                break;\");\n    }\n    } \n    echoLine(\"\");\n    echoLine(\"            default:;\");\n    echoLine(\"        }\");\n    echo(\"        \");\n    echo(prefix );\n    echo(\"tk !== -1 && this._returnToken(\");\n    echo(prefix );\n    echoLine(\"tk);\");\n    echo(\"    }\");\n    } \n    echoLine(\"\");\n    echoLine(\"\");\n    echoLine(\"export function tokenToString(tk: number){\");\n    echo(\"    return \");\n    echo(prefix );\n    echo(\"tokenAlias[tk] === null ? `<${\");\n    echo(prefix );\n    echo(\"tokenNames[tk]}>` : `\\\"${\");\n    echo(prefix );\n    echoLine(\"tokenAlias[tk]}\\\"`;\");\n    echoLine(\"}\");\n    echoLine(\"\");\n    echoLine(\"export class Token {\");\n    echoLine(\"    constructor(\");\n    echoLine(\"        public id: number,\");\n    echoLine(\"        public val: string,\");\n    echoLine(\"        public startLine: number,\");\n    echoLine(\"        public startColumn: number,\");\n    echoLine(\"        public endLine: number,\");\n    echoLine(\"        public endColumn: number\");\n    echoLine(\"    ){}\");\n    echoLine(\"    toString(){\");\n    echo(\"        return (\");\n    echo(prefix );\n    echoLine(\"tokenAlias[this.id] === null ? \");\n    echo(\"            `<${\");\n    echo(prefix );\n    echoLine(\"tokenNames[this.id]}>` :\");\n    echo(\"            `\\\"${\");\n    echo(prefix );\n    echoLine(\"tokenAlias[this.id]}\\\"`) + `(\\\"${this.val}\\\")`;\");\n    echoLine(\"    }\");\n    echoLine(\"}\");\n    echoLine(\"\");\n    echo(\"export class \");\n    echo(className );\n    echoLine(\" {\");\n    echoLine(\"    // members for lexer\");\n    echoLine(\"    private _lexState: number[];\");\n    echoLine(\"    private _state: number;\");\n    echoLine(\"    private _matched: string[];\");\n    echoLine(\"    private _token: Token;\");\n    echoLine(\"    private _marker: number;\");\n    echoLine(\"    private _markerLine;\");\n    echoLine(\"    private _markerColumn;\");\n    echoLine(\"    private _backupCount: number;\");\n    echoLine(\"    private _inputBuf: string[] = [];\");\n    echoLine(\"    private _line: number;\");\n    echoLine(\"    private _column: number;\");\n    echoLine(\"    private _tline: number;\");\n    echoLine(\"    private _tcolumn: number;\");\n    echoLine(\"\");\n    echoLine(\"    // members for parser\");\n    echoLine(\"    private _lrState: number[] = [];\");\n    echoLine(\"    private _sematicS: any[] = [];\");\n    echoLine(\"\");\n    echoLine(\"    private _stop = false;\");\n    echoLine(\"\");\n    echoLine(\"    private _handlers: {[s: string]: ((a1?, a2?, a3?) => any)[]} = {};\");\n    echoLine(\"\");\n    echoLine(\"    // extra members, defined by %extra_arg\");\n    echo(\"    \");\n    echo(input.extraArg );\n    echoLine(\"\");\n    echoLine(\"\");\n    echoLine(\"    constructor(){\");\n    echoLine(\"        this.init();\");\n    echoLine(\"    }\");\n    echoLine(\"    init(){\");\n    echoLine(\"        this._lexState = [ 0 ];// DEFAULT\");\n    echoLine(\"        this._state = 0;\");\n    echoLine(\"        this._matched = [];\");\n    echoLine(\"        this._token = null;\");\n    echoLine(\"        this._marker = -1;\");\n    echoLine(\"        this._markerLine = this._markerColumn = 0;\");\n    echoLine(\"        this._backupCount = 0;\");\n    echoLine(\"        this._inputBuf = [];\");\n    echoLine(\"        this._line = this._tline = 0;\");\n    echoLine(\"        this._column = this._tcolumn = 0;\");\n    echoLine(\"        \");\n    echoLine(\"        this._lrState = [ 0 ];\");\n    echoLine(\"        this._sematicS = [];\");\n    echoLine(\"\");\n    echoLine(\"        this._stop = false;\");\n    echoLine(\"    }\");\n    echoLine(\"    /**\");\n    echoLine(\"     *  set \");\n    echoLine(\"     */\");\n    echoLine(\"    private _setImg(s: string){\");\n    echoLine(\"        this._matched.length = 0;\");\n    echoLine(\"        for(let i = 0;i < s.length;i++){\");\n    echoLine(\"            this._matched.push(s.charAt(i));\");\n    echoLine(\"        }\");\n    echoLine(\"        this._tline = this._line;\");\n    echoLine(\"        this._tcolumn = this._column;\");\n    echoLine(\"    }\");\n    echoLine(\"    private _returnToken(tid: number){\");\n    echoLine(\"        this._token = new Token(\");\n    echoLine(\"            tid,\");\n    echoLine(\"            this._matched.join(''),\");\n    echoLine(\"            this._tline,\");\n    echoLine(\"            this._tcolumn,\");\n    echoLine(\"            this._line,\");\n    echoLine(\"            this._column\");\n    echoLine(\"        );\");\n    echoLine(\"        this._matched.length = 0;\");\n    echoLine(\"        this._tline = this._line;\");\n    echoLine(\"        this._tcolumn = this._column;\");\n    echo(\"        this._emit('token', \");\n    echo(prefix );\n    echoLine(\"tokenNames[this._token.id], this._token.val);\");\n    echoLine(\"        while(!this._stop && !this._acceptToken(this._token));\");\n    echoLine(\"        this._token = null;\");\n    echoLine(\"    }\");\n    echoLine(\"    private _emit(name: string, a1?, a2?, a3?){\");\n    echoLine(\"        let cbs = this._handlers[name];\");\n    echoLine(\"        if(cbs){\");\n    echoLine(\"            for(let cb of cbs){\");\n    echoLine(\"                cb(a1, a2, a3);\");\n    echoLine(\"            }\");\n    echoLine(\"        }\");\n    echoLine(\"    }\");\n    echoLine(\"    on(name: string, cb: (a1?, a2?, a3?) => any){\");\n    echoLine(\"        this._handlers[name] || (this._handlers[name] = []);\");\n    echoLine(\"        this._handlers[name].push(cb);\");\n    echo(\"    }\");\n    for(let i = 0, _a = input.dfas; i < _a.length; i++){\n    printLexActionsFunc(_a[i], i);\n} \n    echoLine(\"\");\n    echoLine(\"    /**\");\n    echoLine(\"     *  do a lexical action\");\n    echoLine(\"     *  @api private\");\n    echoLine(\"     *  @internal\");\n    echoLine(\"     */\");\n    echoLine(\"    private _doLexAction(lexstate: number, state: number){\");\n    echo(\"        switch(lexstate){\");\n    for(let i = 0;i < input.dfas.length;i++){ \n    echoLine(\"\");\n    echo(\"            case \");\n    echo(i );\n    echoLine(\":\");\n    echo(\"                this._doLexAction\");\n    echo(i );\n    echoLine(\"(state);\");\n    echo(\"                break;\");\n    } \n    echoLine(\"\");\n    echoLine(\"            default:;\");\n    echoLine(\"        }\");\n    echoLine(\"        this._token !== null && (this._acceptToken(this._token), (this._token = null));\");\n    echoLine(\"    }\");\n    echoLine(\"    /**\");\n    echoLine(\"     *  accept a character\");\n    echoLine(\"     *  @return - true if the character is consumed, false if not consumed\");\n    echoLine(\"     *  @api private\");\n    echoLine(\"     *  @internal\");\n    echoLine(\"     */\");\n    echoLine(\"    private _acceptChar(c: string){\");\n    echoLine(\"        let lexstate = this._lexState[this._lexState.length - 1];\");\n    echoLine(\"        let retn = { state: this._state, hasArc: false, isEnd: false };\");\n    echo(\"        \");\n    echo(prefix );\n    echoLine(\"lexers[lexstate](c.charCodeAt(0), retn);\");\n    echoLine(\"        if(retn.isEnd){\");\n    echoLine(\"            // if current state is a terminate state, be careful\");\n    echoLine(\"            if(retn.hasArc){\");\n    echoLine(\"                if(retn.state === -1){\");\n    echoLine(\"                    // nowhere to go, stay where we are\");\n    echoLine(\"                    this._doLexAction(lexstate, this._state);\");\n    echoLine(\"                    // recover\");\n    echoLine(\"                    this._marker = -1;\");\n    echoLine(\"                    this._backupCount = 0;\");\n    echoLine(\"                    this._state = 0;                    \");\n    echoLine(\"                    // character not consumed\");\n    echoLine(\"                    return false;\");\n    echoLine(\"                }\");\n    echoLine(\"                else {\");\n    echoLine(\"                    // now we can either go to that new state, or stay where we are\");\n    echoLine(\"                    // it is prefered to move forward, but that could lead to errors,\");\n    echoLine(\"                    // so we need to memorize this state before move on, in case if \");\n    echoLine(\"                    // an error occurs later, we could just return to this state.\");\n    echoLine(\"                    this._marker = this._state;\");\n    echoLine(\"                    this._markerLine = this._line;\");\n    echoLine(\"                    this._markerColumn = this._column;\");\n    echoLine(\"                    this._state = retn.state;\");\n    echoLine(\"                    this._backupCount = 1;\");\n    echoLine(\"                    c === '\\\\n' ? (this._line++, this._column = 0) : (this._column++);\");\n    echoLine(\"                    this._matched.push(c);\");\n    echoLine(\"                    // character consumed\");\n    echoLine(\"                    return true;\");\n    echoLine(\"                }\");\n    echoLine(\"            }\");\n    echoLine(\"            else {\");\n    echoLine(\"                // current state doesn't lead to any state, just stay here.\");\n    echoLine(\"                this._doLexAction(lexstate, this._state);\");\n    echoLine(\"                // recover\");\n    echoLine(\"                this._marker = -1;\");\n    echoLine(\"                this._backupCount = 0;\");\n    echoLine(\"                this._state = 0;\");\n    echoLine(\"                // character not consumed\");\n    echoLine(\"                return false;\");\n    echoLine(\"            }\");\n    echoLine(\"        }\");\n    echoLine(\"        else {\");\n    echoLine(\"            if(retn.state === -1){\");\n    echoLine(\"                // nowhere to go at current state, error may have occured.\");\n    echoLine(\"                // check marker to verify that\");\n    echoLine(\"                if(this._marker !== -1){\");\n    echoLine(\"                    // we have a previously marked state, which is a terminate state.\");\n    echoLine(\"                    // rollback\");\n    echoLine(\"                    this._state = this._marker;\");\n    echoLine(\"                    this._marker = -1;\");\n    echoLine(\"                    this._line = this._markerLine;\");\n    echoLine(\"                    this._column = this._markerColumn;\");\n    echoLine(\"                    while(this._backupCount --> 0){\");\n    echoLine(\"                        this._inputBuf.push(this._matched.pop());\");\n    echoLine(\"                    }\");\n    echoLine(\"                    this._doLexAction(lexstate, this._state);\");\n    echoLine(\"                    this._state = 0;\");\n    echoLine(\"                    // character not consumed\");\n    echoLine(\"                    return false;\");\n    echoLine(\"                }\");\n    echoLine(\"                else {\");\n    echoLine(\"                    // error occurs\");\n    echoLine(\"                    this._emit('lexicalerror', `unexpected character \\\"${c}\\\"`);\");\n    echoLine(\"                    // force consume\");\n    echoLine(\"                    return true;\");\n    echoLine(\"                }\");\n    echoLine(\"            }\");\n    echoLine(\"            else {\");\n    echoLine(\"                this._state = retn.state;\");\n    echoLine(\"                c === '\\\\n' ? (this._line++, this._column = 0) : (this._column++);\");\n    echoLine(\"                this._matched.push(c);\");\n    echoLine(\"                // character consumed\");\n    echoLine(\"                return true;\");\n    echoLine(\"            }\");\n    echoLine(\"        }\");\n    echoLine(\"    }\");\n    echoLine(\"    private _acceptEOF(){\");\n    echoLine(\"        if(this._state === 0){\");\n    echoLine(\"            // recover\");\n    echoLine(\"            this._returnToken(0);\");\n    echoLine(\"            return true;\");\n    echoLine(\"        }\");\n    echoLine(\"        else {\");\n    echoLine(\"            let lexstate = this._lexState[this._lexState.length - 1];\");\n    echoLine(\"            let retn = { state: this._state, hasArc: false, isEnd: false };\");\n    echo(\"            \");\n    echo(prefix );\n    echoLine(\"lexers[lexstate](-1, retn);\");\n    echoLine(\"            if(retn.isEnd){\");\n    echoLine(\"                this._doLexAction(lexstate, this._state);\");\n    echoLine(\"                this._state = 0;\");\n    echoLine(\"                this._marker = -1;\");\n    echoLine(\"                return false;\");\n    echoLine(\"            }\");\n    echoLine(\"            else if(this._marker !== -1){\");\n    echoLine(\"                this._state = this._marker;\");\n    echoLine(\"                this._marker = -1;\");\n    echoLine(\"                this._line = this._markerLine;\");\n    echoLine(\"                this._column = this._markerColumn;\");\n    echoLine(\"                while(this._backupCount --> 0){\");\n    echoLine(\"                    this._inputBuf.push(this._matched.pop());\");\n    echoLine(\"                }\");\n    echoLine(\"                this._doLexAction(lexstate, this._state);\");\n    echoLine(\"                this._state = 0;\");\n    echoLine(\"                return false;\");\n    echoLine(\"            }\");\n    echoLine(\"            else {\");\n    echoLine(\"                this._emit('lexicalerror', 'unexpected end of file');\");\n    echoLine(\"                return true;\");\n    echoLine(\"            }\");\n    echoLine(\"        }\");\n    echoLine(\"    }\");\n    echoLine(\"    /**\");\n    echoLine(\"     *  input a string\");\n    echoLine(\"     *  @api public\");\n    echoLine(\"     */\");\n    echoLine(\"    accept(s: string){\");\n    echoLine(\"        if(!this._stop){\");\n    echoLine(\"            for(let i = s.length - 1; i >= 0; i--){\");\n    echoLine(\"                this._inputBuf.push(s.charAt(i));\");\n    echoLine(\"            }\");\n    echoLine(\"            while(!this._stop && this._inputBuf.length > 0){\");\n    echoLine(\"                this._acceptChar(this._inputBuf[this._inputBuf.length - 1]) && this._inputBuf.pop();\");\n    echoLine(\"            }\");\n    echoLine(\"        }\");\n    echoLine(\"    }\");\n    echoLine(\"    /**\");\n    echoLine(\"     *  tell the compiler that end of file is reached\");\n    echoLine(\"     *  @api public\");\n    echoLine(\"     */\");\n    echoLine(\"    end(){\");\n    echoLine(\"        while(!this._stop){\");\n    echoLine(\"            if(this._inputBuf.length > 0){\");\n    echoLine(\"                this._acceptChar(this._inputBuf[this._inputBuf.length - 1]) && this._inputBuf.pop();\");\n    echoLine(\"            }\");\n    echoLine(\"            else if(this._acceptEOF()){\");\n    echoLine(\"                break;\");\n    echoLine(\"            }\");\n    echoLine(\"        }\");\n    echoLine(\"        this._stop = true;\");\n    echoLine(\"    }\");\n    echoLine(\"    halt(){\");\n    echoLine(\"        this._stop = true;\");\n    echo(\"    }\");\n    function printReduceActions(){\n    let codegen = {\n        addBlock(b: string, line: number){ \n    echoLine(\"\");\n    echo(\"                {\");\n    echo(b.replace(/\\$\\$/g, prefix + 'top') );\n    echo(\"}\");\n    },\n        pushLexState(n: number){ \n    echoLine(\"\");\n    echo(\"                this._lexState.push(\");\n    echo(n );\n    echo(\");\");\n    },\n        popLexState(){ \n    echoLine(\"\");\n    echo(\"                this._lexState.pop();\");\n    },\n        setImg(n: string){ \n    echoLine(\"\");\n    echo(\"                this._setImg(\\\"\");\n    echo(n );\n    echo(\"\\\");\");\n    },\n        returnToken(t: TokenDef){ \n    echoLine(\"\");\n    echoLine(\"                this._token = {\");\n    echo(\"                    id: \");\n    echo(t.index );\n    echoLine(\",\");\n    echoLine(\"                    val: this._matched.join('')\");\n    echo(\"                };\");\n    }\n    };\n    for(let rule of input.g.rules){\n        if(rule.action !== null){ \n    echoLine(\"\");\n    echo(\"            case \");\n    echo(rule.index );\n    echoLine(\":\");\n    echo(\"                /* \");\n    echo(rule.toString() );\n    echo(\" */\");\n    for(let uvar in rule.vars){ \n    echoLine(\"\");\n    echo(\"                var \");\n    echo(uvar );\n    echo(\" = this._sematicS[\");\n    echo(prefix );\n    echo(\"sp - \");\n    echo(rule.rhs.length - rule.vars[uvar].val );\n    echo(\"];\");\n    }\n            for(let uvar2 in rule.usedVars){ \n    echoLine(\"\");\n    echo(\"                var \");\n    echo(uvar2 );\n    echo(\" = this._sematicS[\");\n    echo(prefix );\n    echo(\"sp - \");\n    echo(rule.usedVars[uvar2].val );\n    echo(\"];\");\n    }\n            for(let act of rule.action){\n                act.toCode(codegen);\n            } \n    echoLine(\"\");\n    echo(\"                break;\");\n    }\n    }\n} \n    echoLine(\"\");\n    echo(\"    private _doReduction(\");\n    echo(prefix );\n    echoLine(\"rulenum: number){\");\n    echo(\"        let \");\n    echo(prefix );\n    echo(\"nt = \");\n    echo(prefix );\n    echo(\"lhs[\");\n    echo(prefix );\n    echoLine(\"rulenum];\");\n    echo(\"        let \");\n    echo(prefix );\n    echoLine(\"sp = this._sematicS.length;\");\n    echo(\"        let \");\n    echo(prefix );\n    echo(\"top = this._sematicS[\");\n    echo(prefix );\n    echo(\"sp - \");\n    echo(prefix );\n    echo(\"ruleLen[\");\n    echo(prefix );\n    echoLine(\"rulenum]] || {};\");\n    echo(\"        switch(\");\n    echo(prefix );\n    echo(\"rulenum){\");\n    printReduceActions(); \n    echoLine(\"\");\n    echoLine(\"        }\");\n    echo(\"        this._lrState.length -= \");\n    echo(prefix );\n    echo(\"ruleLen[\");\n    echo(prefix );\n    echoLine(\"rulenum];\");\n    echo(\"        let \");\n    echo(prefix );\n    echoLine(\"cstate = this._lrState[this._lrState.length - 1];\");\n    echo(\"        this._lrState.push(\");\n    echo(prefix );\n    echo(\"pgoto[\");\n    echo(prefix );\n    echo(\"disgoto[\");\n    echo(prefix );\n    echo(\"cstate] + \");\n    echo(prefix );\n    echoLine(\"nt]);\");\n    echoLine(\"\");\n    echo(\"        this._sematicS.length -= \");\n    echo(prefix );\n    echo(\"ruleLen[\");\n    echo(prefix );\n    echoLine(\"rulenum];\");\n    echo(\"        this._sematicS.push(\");\n    echo(prefix );\n    echoLine(\"top);\");\n    echoLine(\"    }\");\n    echoLine(\"\");\n    echoLine(\"    private _acceptToken(t: Token){\");\n    echoLine(\"        // look up action table\");\n    echoLine(\"        let cstate = this._lrState[this._lrState.length - 1];\");\n    echo(\"        let ind = \");\n    echo(prefix );\n    echoLine(\"disact[cstate] + t.id;\");\n    echoLine(\"        let act = 0;\");\n    echo(\"        if(ind < 0 || ind >= \");\n    echo(prefix );\n    echo(\"pact.length || \");\n    echo(prefix );\n    echoLine(\"checkact[ind] !== cstate){\");\n    echo(\"            act = -\");\n    echo(prefix );\n    echoLine(\"defred[cstate] - 1;\");\n    echoLine(\"        }\");\n    echoLine(\"        else {\");\n    echo(\"            act = \");\n    echo(prefix );\n    echoLine(\"pact[ind];\");\n    echoLine(\"        }\");\n    echo(\"        if(act === \");\n    echo(prefix );\n    echoLine(\"actERR){\");\n    echoLine(\"            // explicit error\");\n    echoLine(\"            this._syntaxError(t);\");\n    echoLine(\"            return true;\");\n    echoLine(\"        }\");\n    echoLine(\"        else if(act > 0){\");\n    echoLine(\"            // shift\");\n    echoLine(\"            if(t.id === 0){\");\n    echoLine(\"                // end of file\");\n    echoLine(\"                this._stop = true;\");\n    echoLine(\"                this._emit('accept');\");\n    echoLine(\"                return true;\");\n    echoLine(\"            }\");\n    echoLine(\"            else {\");\n    echoLine(\"                this._lrState.push(act - 1);\");\n    echoLine(\"                this._sematicS.push(t);\");\n    echoLine(\"                // token consumed\");\n    echoLine(\"                return true;\");\n    echoLine(\"            }\");\n    echoLine(\"        }\");\n    echoLine(\"        else if(act < 0){\");\n    echoLine(\"            this._doReduction(-act - 1);\");\n    echoLine(\"            return false;\");\n    echoLine(\"        }\");\n    echoLine(\"        else {\");\n    echoLine(\"            // error\");\n    echoLine(\"            this._syntaxError(t);\");\n    echoLine(\"            // force consume\");\n    echoLine(\"            return true;\");\n    echoLine(\"        }\");\n    echoLine(\"    }\");\n    echoLine(\"    private _syntaxError(t: Token){\");\n    echoLine(\"        let msg = `unexpected token ${t.toString()}, expecting one of the following token(s):\\\\n`\");\n    echoLine(\"        msg += this._expected(this._lrState[this._lrState.length - 1]);\");\n    echoLine(\"        this._emit(\\\"syntaxerror\\\", msg);\");\n    echoLine(\"    }\");\n    echoLine(\"    private _expected(state: number){\");\n    echo(\"        let dis = \");\n    echo(prefix );\n    echoLine(\"disact[state];\");\n    echoLine(\"        let ret = '';\");\n    echoLine(\"        function expect(tk: number){\");\n    echoLine(\"            let ind = dis + tk;\");\n    echo(\"            if(ind < 0 || ind >= \");\n    echo(prefix );\n    echo(\"pact.length || state !== \");\n    echo(prefix );\n    echoLine(\"checkact[ind]){\");\n    echo(\"                return \");\n    echo(prefix );\n    echoLine(\"defred[state] !== -1;\");\n    echoLine(\"            }\");\n    echoLine(\"            else {\");\n    echoLine(\"                return true;\");\n    echoLine(\"            }\");\n    echoLine(\"        }\");\n    echo(\"        for(let tk = 0; tk < \");\n    echo(prefix );\n    echoLine(\"tokenCount; tk++){\");\n    echoLine(\"            expect(tk) && (ret += `    ${tokenToString(tk)} ...` + '\\\\n');\");\n    echoLine(\"        }\");\n    echoLine(\"        return ret;\");\n    echoLine(\"    }\");\n    echo(\"}\");\n    \n\n}","import { TemplateInput, TemplateOutput } from './def';\nimport { OutputStream } from '../util/io';\n\nimport tsRenderer from './templates/ts';\n\ninterface FileCreator extends TemplateOutput{\n    save(ext: string);\n    write(s: string);\n    writeln(s: string);\n};\n\nvar templates: {[s: string]: (input: TemplateInput, fc: FileCreator) => any} = {};\n\nexport function defineTemplate(name: string, render: (input: TemplateInput, fc: FileCreator) => any){\n    templates[name] = render;\n}\n\nexport function generateCode(lang: string, input: TemplateInput, fc: FileCreator, cb: (err: string) => any){\n    let g = templates[lang];\n    if(g === undefined){\n        throw (`template for language \"${lang}\" is not implemented yet`);\n    }\n    else {\n        templates[lang](input, fc);\n    }\n}\n\ndefineTemplate('typescript', (input, fc) => {\n    tsRenderer(input, fc);\n    fc.save('.ts');\n});"],"names":["console","tslib_1.__extends","E","Action"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,IAAM,KAAK,GAAG,EAAE,CAAC;AACjB;IAEI,gBAAoB,KAAa;QAAb,UAAK,GAAL,KAAK,CAAQ;QAC7B,IAAI,CAAC,EAAE,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC;QAC9C,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;YACnC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;SAClB;KACJ;IACM,oBAAG,GAAV,UAAW,CAAS;QAChB,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;QAClC,IAAI,MAAM,GAAG,CAAC,GAAG,KAAK,GAAG,KAAK,CAAC;QAC/B,IAAI,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;QAC1B,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC,CAAC;QAChC,OAAO,IAAI,KAAK,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;KAClC;IACM,uBAAM,GAAb;QACI,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;YACjC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;SACnB;KACJ;IACM,uBAAM,GAAb,UAAc,CAAS;QACnB,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;QAClC,IAAI,MAAM,GAAG,CAAC,GAAG,KAAK,GAAG,KAAK,CAAC;QAC/B,IAAI,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;QAC1B,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,IAAI,MAAM,CAAC,CAAC;QACjC,OAAO,IAAI,KAAK,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;KAClC;IACM,0BAAS,GAAhB;QACI,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;YACjC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;SAClB;KACJ;IACM,yBAAQ,GAAf,UAAgB,CAAS;QACrB,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;QAClC,IAAI,MAAM,GAAG,CAAC,GAAG,KAAK,GAAG,KAAK,CAAC;QAC/B,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC;KACjD;IACM,sBAAK,GAAZ,UAAa,GAAW;QACpB,IAAI,OAAO,GAAG,KAAK,CAAC;QACpB,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;YACjC,IAAI,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACtB,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACxB,OAAO,GAAG,OAAO,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC;SAC9C;QACD,OAAO,OAAO,CAAC;KAClB;IACM,gCAAe,GAAtB,UAAuB,GAAW;QAC9B,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;YACjC,IAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,EAAC;gBAC9B,OAAO,IAAI,CAAC;aACf;SACJ;QACD,OAAO,KAAK,CAAC;KAChB;IACM,uBAAM,GAAb,UAAc,GAAW;QACrB,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;YACjC,IAAG,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAC;gBACxB,OAAO,KAAK,CAAC;aAChB;SACJ;QACD,OAAO,IAAI,CAAC;KACf;IACM,wBAAO,GAAd,UAAe,EAAsB;QACjC,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,IAAI,CAAC,KAAK,EAAC,CAAC,EAAE,EAAC;YAC7B,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;SAC7B;KACJ;IACM,qBAAI,GAAX;QACI,IAAI,GAAG,GAAG,EAAE,CAAC;QACb,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;YACjC,GAAG,IAAI,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;SACxC;QACD,OAAO,GAAG,CAAC;KACd;IACL,aAAC;CAAA;;AC3EM,IAAI,KAAK,GAAW,MAAM,CAAC;AAClC,AAAO,IAAI,KAAK,GAAY,IAAI,CAAC;AAOjC,AAAO,IAAIA,SAAO,GAAY;IAC1B,MAAM,EAAE,UAAS,IAAI;QACjB,IAAG,CAAC,IAAI,EAAC;YACL,MAAM,IAAI,KAAK,CAAC,kBAAkB,CAAC,CAAC;SACvC;KACJ;IACD,GAAG,EAAE,UAAS,CAAC,KAAG;CACrB,CAAC;AAEF,qBAA4B,CAAU;IAClC,OAAOA,SAAO,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC;CAC9B;AACD,gBAAuB,CAAS;IAC5B,OAAO,KAAK,GAAG,CAAC,CAAC;CACpB;;ACXD,YAAY,CAAM,EAAE,CAAM;IACtB,IAAG,CAAC,CAAC,KAAK,GAAG,CAAC,EAAE,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,MAAM,CAAC,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,EAAC;QAC3E,OAAO,CAAC,CAAC;KACZ;SACI,IAAG,CAAC,CAAC,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,GAAG,MAAM,CAAC,KAAK,GAAG,CAAC,EAAE,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAE,EAAC;QACjF,OAAO,CAAC,CAAC,CAAC;KACb;SACI;QACD,OAAO,CAAC,CAAC;KACZ;CACJ;AACD,AAAA,IAAY,GAGX;AAHD,WAAY,GAAG;IACX,gBAAS,CAAA;IACT,kBAAW,CAAA;CACd,EAHW,GAAG,KAAH,GAAG,QAGd;AAAA,AAAC;AAQF;IAOI,kBAAY,CAAM,EAAE,CAAM;QADnB,YAAO,GAAe,IAAI,CAAC;QAE9B,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;KACd;IAEM,+BAAY,GAAnB,UAAoB,CAAM,EAAE,CAAM,EAAE,IAAQ;QACxC,IAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,IAAI,IAAI,CAAC,CAAC,KAAM,CAAY,GAAG,CAAC,EAAC;YACjF,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;YACX,OAAO,IAAI,CAAC;SACf;aACI;YACD,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,EAAC,CAAC,EAAC,IAAI,CAAC,CAAC;YAC9C,EAAE,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;YACpB,EAAE,CAAC,IAAI,GAAG,IAAI,CAAC;YACf,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;YACpB,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;YACf,OAAO,EAAE,CAAC;SACb;KACJ;IACM,2BAAQ,GAAf,UAAgB,CAAM;QAClB,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC,EAAC,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,EAAC,CAAC,CAAC,IAAI,CAAC,CAAC;KACjD;IACM,2BAAQ,GAAf,UAAgB,CAAM,EAAE,CAAM;QAC1B,OAAO,EAAE,EAAE,CAAC,CAAC,EAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,EAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;KAClD;IACM,8BAAW,GAAlB,UAAmB,CAAM,EAAE,CAAM,EAAE,IAAQ;QACvC,IAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,IAAI,IAAI,CAAC,CAAC,KAAM,CAAY,GAAG,CAAC,EAAC;YACjF,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;YACX,OAAO,IAAI,CAAC;SACf;aACI;YACD,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,EAAC,CAAC,EAAC,IAAI,CAAC,CAAC;YAC9C,EAAE,CAAC,IAAI,GAAG,IAAI,CAAC;YACf,EAAE,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;YACpB,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;YACpB,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;YACf,OAAO,EAAE,CAAC;SACb;KACJ;IACM,4BAAS,GAAhB,UAAiB,CAAM;QAEnB,IAAG,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,EAAC;YACjB,IAAI,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,EAAE,CAAY,GAAG,CAAC,CAAC,CAAC;YACtD,IAAI,CAAC,MAAM,CAAC,OAAO,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACvD,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;YACX,OAAO,GAAG,CAAC;SACd;QACD,OAAO,IAAI,CAAC;KACf;IACM,6BAAU,GAAjB,UAAkB,CAAM;QAEpB,IAAG,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,EAAC;YACjB,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAE,CAAY,GAAG,CAAC,EAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACrD,IAAI,CAAC,MAAM,CAAC,OAAO,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACvD,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;YACX,OAAO,GAAG,CAAC;SACd;QACD,OAAO,IAAI,CAAC;KACf;IACM,yBAAM,GAAb;QACI,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAC3B,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAC3B,OAAO,IAAI,CAAC;KACf;IACM,6BAAU,GAAjB;QACI,IAAG,IAAI,CAAC,CAAC,KAAK,GAAG,CAAC,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,IAAI,IAAI,IAAI,CAAC,CAAC,KAAM,IAAI,CAAC,IAAI,CAAC,CAAY,GAAG,CAAC,EAAC;YACpF,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;SACtB;QACD,IAAG,IAAI,CAAC,CAAC,KAAK,GAAG,CAAC,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,IAAI,IAAI,IAAI,CAAC,CAAC,KAAM,IAAI,CAAC,IAAI,CAAC,CAAY,GAAG,CAAC,EAAC;YACnF,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;SACtB;QACD,OAAO,IAAI,CAAC;KACf;IACM,2BAAQ,GAAf,UAAgB,MAA0B;QACtC,IAAI,GAAG,GAAG,EAAE,CAAC;QACb,kBAAkB,CAAM;YACpB,OAAO,CAAC,KAAK,GAAG,CAAC,EAAE,GAAG,KAAK,GAAG,CAAC,KAAK,GAAG,CAAC,GAAG,GAAG,KAAK,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC;SACtE;QACD,IAAI,CAAC,GAAG,CAAC,MAAM,IAAI,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;QACrC,IAAI,CAAC,GAAG,CAAC,MAAM,IAAI,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;QACrC,IAAG,IAAI,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,EAAC;YACjB,GAAG,IAAI,CAAC,CAAC;SACZ;aACG;YACA,GAAG,IAAI,IAAI,CAAC,CAAC,KAAK,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;YAC9C,GAAG,IAAI,GAAG,CAAC;YACX,GAAG,IAAI,IAAI,CAAC,CAAC,KAAK,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;SAChD;QACD,IAAI,CAAC,OAAO,KAAK,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC;QACjD,OAAO,GAAG,CAAC;KACd;IACL,eAAC;CAAA,IAAA;AACD,kBAAkB,CAAM,EAAE,CAAM;IAC5B,IAAG,EAAE,CAAC,CAAC,EAAC,CAAC,CAAC,GAAG,CAAC,EAAC;QACX,MAAM,IAAI,KAAK,CAAC,6BAAyB,CAAC,qCAA8B,CAAC,MAAG,CAAC,CAAC;KACjF;CACJ;AACD;IAMI,qBAAY,kBAAqC;QAC7C,IAAI,CAAC,IAAI,GAAG,IAAI,QAAQ,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;QAC9B,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,IAAI,GAAG,IAAI,QAAQ,CAAC,IAAI,EAAC,IAAI,CAAC,CAAC;QACpC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAC3B,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAE3B,IAAI,CAAC,OAAO,GAAG,OAAO,kBAAkB,KAAK,WAAW,CAAC;QACzD,IAAI,CAAC,kBAAkB,GAAG,kBAAkB,IAAI,IAAI,CAAC;KACxD;IACD,6BAAO,GAAP,UAAQ,EAAe;QACnB,OAAO,EAAE,KAAK,IAAI,CAAC,IAAI,IAAI,EAAE,KAAK,IAAI,CAAC,IAAI,CAAC;KAC/C;IACD,oCAAc,GAAd,UAAe,CAAM,EAAE,CAAM,EAAE,IAAc;QAAd,qBAAA,EAAA,WAAc;QACzC,IAAI,GAAG,GAAG,IAAI,QAAQ,CAAI,CAAC,EAAC,CAAC,CAAC,CAAC;QAC/B,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,kBAAkB,KAAK,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAC;QACrE,IAAI,IAAI,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAC9B,OAAO,GAAG,CAAC;KACd;IACD,8BAAQ,GAAR,UAAS,CAAM,EAAE,CAAM;QACnB,KAAI,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,EAAC,EAAE,KAAK,IAAI,CAAC,IAAI,EAAC,EAAE,GAAG,EAAE,CAAC,IAAI,EAAC;YACjD,IAAG,CAAC,EAAE,KAAK,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAC;gBACtF,OAAO,EAAE,CAAC;aACb;SACJ;QACD,OAAO,IAAI,CAAC;KACf;IACD,+BAAS,GAAT,UAAU,CAAM,EAAE,CAAM;QACpB,IAAI,KAAK,GAAG,IAAI,EAAC,GAAG,GAAG,IAAI,CAAC;QAC5B,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;QACxB,OAAK,EAAE,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,EAAE,GAAG,EAAE,CAAC,IAAI;YAAC,CAAC;QACzD,IAAG,EAAE,KAAK,IAAI,CAAC,IAAI,EAAC;YAChB,OAAO,IAAI,CAAC;SACf;QACD,KAAK,GAAG,GAAG,GAAG,EAAE,CAAC;QACjB,OAAK,EAAE,KAAK,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,EAAE,GAAG,EAAE,CAAC,IAAI,EAAC;YACnD,GAAG,GAAG,EAAE,CAAC;SACZ;QACD,OAAO,CAAC,KAAK,EAAC,GAAG,CAAC,CAAC;KACtB;IAMD,yBAAG,GAAH,UAAI,CAAM,EAAE,CAAU,EAAE,IAAQ;QAApB,kBAAA,EAAA,KAAU;QAClB,IAAI,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAE3B,KAAK,IAAI,QAAQ,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;QACvB,IAAI,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;QAClC,IAAG,OAAO,KAAK,IAAI,EAAC;YAChB,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,EAAC,CAAC,EAAC,IAAI,CAAC,CAAC;SAC5C;aACI;YACD,IAAG,CAAC,OAAO,EAAC;gBACR,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC,EAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACnD,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC,EAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACnD,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;gBAClB,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;gBAClB,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;gBAClC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;gBAClC,OAAO,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE,CAAC;aAC3B;iBACI;gBACD,IAAG,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAC;oBACtB,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;iBAC3B;qBACI;oBACD,OAAO,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAY,GAAG,CAAC,EAAC,IAAI,CAAC,CAAC;iBAChE;gBACD,IAAG,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;oBACvB,OAAO,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;iBAC5B;qBACI;oBACD,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAY,GAAG,CAAC,EAAC,CAAC,EAAC,IAAI,CAAC,CAAC;iBAC/D;gBACD,KAAI,IAAI,EAAE,GAAG,OAAO,CAAC,CAAC,CAAC,EAAC,EAAE,KAAK,OAAO,CAAC,CAAC,CAAC,EAAC,EAAE,GAAG,EAAE,CAAC,IAAI,EAAC;oBACnD,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;oBACrB,IAAI,EAAE,CAAC,CAAY,GAAG,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,EAAC;wBAChC,EAAE,CAAC,WAAW,CAAE,EAAE,CAAC,CAAY,GAAG,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,CAAY,GAAG,CAAC,EAAC,IAAI,CAAC,CAAC;qBACvE;iBACJ;gBACD,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;aAChC;SACJ;QACD,OAAO,IAAI,CAAC;KACf;IACD,4BAAM,GAAN,UAAO,CAAM,EAAE,CAAM;QACjB,QAAQ,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;QACd,IAAI,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;QAClC,IAAG,OAAO,KAAK,IAAI,EAAC;YAChB,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YAClD,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YACnD,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YACvC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;SAC1C;QACD,OAAO,IAAI,CAAC;KACf;IACD,+BAAS,GAAT;QACI,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAC3B,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAC3B,OAAO,IAAI,CAAC;KACf;IACD,6BAAO,GAAP,UAAQ,EAA4C;QAChD,KAAI,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,EAAC,EAAE,KAAK,IAAI,CAAC,IAAI,EAAC,EAAE,GAAG,EAAE,CAAC,IAAI,EAAC;YACtD,EAAE,CAAC,EAAE,CAAC,CAAC,EAAC,EAAE,CAAC,CAAC,EAAC,EAAE,CAAC,CAAC;SACpB;QACD,OAAO,IAAI,CAAC;KACf;IACD,2BAAK,GAAL,UAAM,CAAiB;QACnB,KAAI,IAAI,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,EAAC,EAAE,KAAK,CAAC,CAAC,IAAI,EAAC,EAAE,GAAG,EAAE,CAAC,IAAI,EAAC;YAChD,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAC,EAAE,CAAC,CAAC,CAAC,CAAC;SACvB;QACD,OAAO,IAAI,CAAC;KACf;IACD,8BAAQ,GAAR,UAAS,CAAM;QACX,KAAI,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,EAAC,EAAE,KAAK,IAAI,CAAC,IAAI,EAAC,EAAE,GAAG,EAAE,CAAC,IAAI,EAAC;YACtD,IAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAC;gBACd,OAAO,IAAI,CAAC;aACf;SACJ;QACD,OAAO,KAAK,CAAC;KAChB;IACD,8BAAQ,GAAR,UAAS,MAA0B;QAC/B,IAAI,GAAG,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,GAAG,KAAK,CAAC;QACd,KAAI,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,EAAC,EAAE,KAAK,IAAI,CAAC,IAAI,EAAC,EAAE,GAAG,EAAE,CAAC,IAAI,EAAC;YACtD,IAAG,CAAC,EAAC;gBACD,GAAG,IAAI,GAAG,CAAC;aACd;YACD,CAAC,GAAG,IAAI,CAAC;YACT,GAAG,IAAI,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;SAC9B;QACD,OAAO,GAAG,KAAK,EAAE,GAAG,KAAK,GAAG,GAAG,CAAC;KACnC;IACL,kBAAC;CAAA;;ACzRD,IAAI,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC;AAChB,IAAI,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC;AAClB;IAAgCC,2BAAc;IAC1C,iBAAY,KAAwB;eAChC,kBAAM,KAAK,CAAC;KACf;IACD,wBAAM,GAAN;QACI,iBAAM,GAAG,YAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC;KACxB;IACD,0BAAQ,GAAR;QACI,OAAO,iBAAM,QAAQ,YAAC,UAAS,CAAC;YAC5B,IAAG,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,GAAG,EAAC;gBACrB,IAAG,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,EAAC;oBACtB,OAAO,IAAI,GAAG,MAAM,CAAC,YAAY,CAAC,CAAW,CAAC,GAAG,IAAI,CAAC;iBACzD;qBACI;oBACD,OAAO,KAAK,GAAI,CAAY,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;iBAC7C;aACJ;iBACI,IAAG,CAAC,KAAK,EAAE,EAAC;gBACb,OAAO,IAAI,CAAC;aACf;iBACI;gBACD,OAAO,KAAK,CAAC;aAChB;SACJ,CAAC,CAAC;KACN;IACL,cAAC;CAAA,CAzB+B,WAAW;;ACHpC,IAAI,IAAI,GAAG,IAAI,CAAC;AAEvB;IAAA;KAMC;IAJG,8BAAO,GAAP,UAAQ,CAAmB;QACvB,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACnB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;KACpB;IACL,mBAAC;CAAA,IAAA;AACD;IAA8BA,4BAAY;IAA1C;QAAA,qEAQC;QAPU,OAAC,GAAW,EAAE,CAAC;;KAOzB;IANG,wBAAK,GAAL,UAAM,CAAkB;QACpB,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;KACf;IACD,wBAAK,GAAL;QACI,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC;KACf;IACL,eAAC;CAAA,CAR6B,YAAY,GAQzC;kBAiBwB,CAAS;IAC9B,IAAI,CAAC,GAAG,CAAC,CAAC;IACV,OAAO;QACH,IAAI,EAAE;YACF,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC;SAC9B;QACD,IAAI,EAAE;YACF,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;YACtB,CAAC,EAAE,CAAC;YACJ,OAAO,GAAG,CAAC;SACd;KACJ,CAAC;CACL;AACD,cAAqB,GAAgB;IACjC,IAAI,MAAM,GAAa,EAAE,CAAC;IAC1B,OAAO;QACH,IAAI,EAAE;YACF,OAAO,MAAM,CAAC,MAAM,GAAG,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;SACrE;QACD,IAAI,EAAE;YACF,IAAG,MAAM,CAAC,MAAM,GAAG,CAAC,EAAC;gBACjB,OAAO,MAAM,CAAC,GAAG,EAAE,CAAC;aACvB;iBACI;gBACD,OAAO,GAAG,CAAC,IAAI,EAAE,CAAC;aACrB;SACJ;QACD,MAAM,EAAE,UAAS,CAAS;YACtB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SAClB;KACJ,CAAC;CACL;;;;;;;;;;;AC1DD,IAAY,MAIX;AAJD,WAAY,MAAM;IACd,qCAAS,CAAA;IACT,iCAAG,CAAA;IACH,mCAAI,CAAA;CACP,EAJW,MAAM,KAAN,MAAM,QAIjB;AACD,IAAI,MAAM,GAAG,CAAC,CAAC;AACf;IAA4BA,8BAAe;IACvC;QAAA,YACI,kBAAM,CAAC,CAAC,SAGX;QADI,MAAc,CAAC,cAAc,CAAC,KAAI,EAAE,UAAU,CAAC,SAAS,CAAC,CAAC;;KAC9D;IACD,wBAAG,GAAH,UAAI,CAAW;QACX,KAAc,UAAI,EAAJ,SAAI,EAAJ,cAAI,EAAJ,IAAI;YAAd,IAAI,EAAE,SAAA;YACN,IAAG,CAAC,KAAK,EAAE,EAAC;gBAER,OAAO;aACV;SACJ;QACD,IAAI,CAAC,MAAM,GAAG,MAAM,KAAK,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;QAC/C,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;KAChB;IACD,0BAAK,GAAL,UAAM,CAAgB;QAClB,KAAiB,UAAC,EAAD,OAAC,EAAD,eAAC,EAAD,IAAC;YAAd,IAAI,KAAK,UAAA;YACT,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;SACnB;KACJ;IACD,4BAAO,GAAP;QACI,IAAI,GAAG,GAAe,EAAE,CAAC;QACzB,KAAa,UAAI,EAAJ,SAAI,EAAJ,cAAI,EAAJ,IAAI;YAAb,IAAI,CAAC,SAAA;YACL,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SACf;QACD,OAAO,GAAG,CAAC;KACd;IACL,iBAAC;CAAA,CA5B2B,KAAK,GA4BhC;AACD;IAII,aAAY,IAAc,EAAE,EAAY;QAHxC,UAAK,GAAiB,IAAI,OAAO,EAAO,CAAC;QAIrC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;KAChB;IACL,UAAC;CAAA,IAAA;AACD;IAAA;QACI,aAAQ,GAAW,CAAC,CAAC;QACrB,OAAE,GAAW,CAAC,CAAC;QACf,SAAI,GAAM,IAAI,CAAC;KAClB;IAAD,gBAAC;CAAA,IAAA;AACD;IASI,eAAY,SAAwB;QARpC,UAAK,GAAY,KAAK,CAAC;QACvB,SAAI,GAAa,EAAE,CAAC;QACpB,aAAQ,GAAe,EAAE,CAAC;QAC1B,UAAK,GAAW,CAAC,CAAC;QAClB,YAAO,GAAY,KAAK,CAAC;QACzB,UAAK,GAAY,KAAK,CAAC;QACvB,WAAM,GAAY,KAAK,CAAC;QACxB,cAAS,GAAiB,IAAI,CAAC;QAE3B,IAAI,CAAC,SAAS,GAAG,SAAS,IAAI,IAAI,CAAC;KACtC;IACD,uBAAO,GAAP,UAAQ,EAAY;QAChB,KAAe,UAAS,EAAT,KAAA,IAAI,CAAC,IAAI,EAAT,cAAS,EAAT,IAAS;YAApB,IAAI,GAAG,SAAA;YACP,IAAG,GAAG,CAAC,EAAE,KAAK,EAAE,EAAC;gBACb,OAAO,GAAG,CAAC;aACd;SACJ;QACD,OAAO,IAAI,CAAC;KACf;IAOD,kBAAE,GAAF,UAAG,CAAW;QACV,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAC1B,IAAG,GAAG,KAAK,IAAI,EAAC;YACZ,GAAG,GAAG,IAAI,GAAG,CAAI,IAAI,EAAE,CAAC,CAAC,CAAC;YAC1B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACvB;QACD,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC;QACf,OAAO,GAAG,CAAC;KACd;IACD,yBAAS,GAAT,UAAU,CAAW;QACjB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;KACzB;IACD,wBAAQ,GAAR,UAAS,MAAuB;QAAvB,uBAAA,EAAA,cAAuB;QAC5B,IAAI,KAAK,GAAe,CAAC,IAAI,CAAC,CAAC;QAC/B,IAAI,MAAM,GAAe,CAAC,IAAI,CAAC,CAAC;QAEhC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,OAAO;YACH,IAAG,KAAK,CAAC,MAAM,GAAG,CAAC,EAAC;gBAChB,IAAI,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;gBACpB,IAAG,CAAC,MAAM,EAAC;oBACP,KAAe,UAAM,EAAN,KAAA,CAAC,CAAC,IAAI,EAAN,cAAM,EAAN,IAAM;wBAAjB,IAAI,GAAG,SAAA;wBACP,IAAI,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC;wBAChB,IAAG,CAAC,EAAE,CAAC,MAAM,EAAC;4BACV,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;4BACf,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;4BAChB,EAAE,CAAC,MAAM,GAAG,IAAI,CAAC;yBACpB;qBACJ;iBACJ;gBACD,KAAc,UAAU,EAAV,KAAA,CAAC,CAAC,QAAQ,EAAV,cAAU,EAAV,IAAU;oBAApB,IAAI,IAAE,SAAA;oBACN,IAAG,CAAC,IAAE,CAAC,MAAM,EAAC;wBACV,KAAK,CAAC,IAAI,CAAC,IAAE,CAAC,CAAC;wBACf,MAAM,CAAC,IAAI,CAAC,IAAE,CAAC,CAAC;wBAChB,IAAE,CAAC,MAAM,GAAG,IAAI,CAAC;qBACpB;iBACJ;gBACD,OAAO,CAAC,CAAC;aACZ;iBACI;gBACD,KAAiB,UAAM,EAAN,iBAAM,EAAN,oBAAM,EAAN,IAAM;oBAAnB,IAAI,KAAK,eAAA;oBACT,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC;iBACxB;gBACD,OAAO,IAAI,CAAC;aACf;SACJ,CAAC;KACL;IACD,uBAAO,GAAP,UAAQ,EAAyB,EAAE,MAAuB;QAAvB,uBAAA,EAAA,cAAuB;QACtD,IAAI,KAAK,GAAe,CAAC,IAAI,CAAC,CAAC;QAC/B,IAAI,MAAM,GAAe,CAAC,IAAI,CAAC,CAAC;QAEhC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,OAAM,KAAK,CAAC,MAAM,GAAG,CAAC,EAAC;YACnB,IAAI,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;YACpB,EAAE,CAAC,CAAC,CAAC,CAAC;YACN,IAAG,CAAC,MAAM,EAAC;gBACP,KAAe,UAAM,EAAN,KAAA,CAAC,CAAC,IAAI,EAAN,cAAM,EAAN,IAAM;oBAAjB,IAAI,GAAG,SAAA;oBACP,IAAI,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC;oBAChB,IAAG,CAAC,EAAE,CAAC,MAAM,EAAC;wBACV,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;wBACf,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;wBAChB,EAAE,CAAC,MAAM,GAAG,IAAI,CAAC;qBACpB;iBACJ;aACJ;YACD,KAAc,UAAU,EAAV,KAAA,CAAC,CAAC,QAAQ,EAAV,cAAU,EAAV,IAAU;gBAApB,IAAI,IAAE,SAAA;gBACN,IAAG,CAAC,IAAE,CAAC,MAAM,EAAC;oBACV,KAAK,CAAC,IAAI,CAAC,IAAE,CAAC,CAAC;oBACf,MAAM,CAAC,IAAI,CAAC,IAAE,CAAC,CAAC;oBAChB,IAAE,CAAC,MAAM,GAAG,IAAI,CAAC;iBACpB;aACJ;SACJ;QACD,KAAiB,UAAM,EAAN,iBAAM,EAAN,oBAAM,EAAN,IAAM;YAAnB,IAAI,KAAK,eAAA;YACT,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC;SACxB;KACJ;IACD,sBAAM,GAAN;QACI,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,IAAI,CAAC,OAAO,CAAC,UAAS,KAAK;YACvB,KAAK,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC;SACrB,CAAC,CAAC;KACN;IACD,qBAAK,GAAL,UAAM,EAAgB,EAAE,SAAyB;QAAzB,0BAAA,EAAA,gBAAyB;QAC7C,gBAAgB,IAAc;YAC1B,IAAI,GAAG,GAAG,EAAE,CAAC;YACb,GAAG,IAAI,WAAS,IAAI,CAAC,KAAO,CAAC;YAC7B,IAAG,IAAI,CAAC,OAAO,EAAC;gBACZ,GAAG,IAAI,SAAS,CAAC;aACpB;YACD,IAAG,IAAI,CAAC,SAAS,EAAC;gBACd,GAAG,IAAI,UAAQ,IAAI,CAAC,SAAS,CAAC,EAAE,MAAG,CAAC;aAEvC;YACD,GAAG,IAAI,IAAI,CAAC;YACZ,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;gBACnC,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACvB,GAAG,KAAK,KAAG,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,QAAQ,EAAE,kBAAa,GAAG,CAAC,EAAE,CAAC,KAAK,GAAG,IAAM,CAAC,CAAC;aAE9E;YACD,IAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAC;gBAExB,GAAG,IAAO,KAAK,cAAW,CAAC;gBAC3B,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;oBACvC,IAAG,CAAC,GAAG,CAAC,EAAC;wBAEL,GAAG,IAAI,GAAG,CAAC;qBACd;oBAED,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;iBAC5C;gBAED,GAAG,IAAI,IAAI,CAAC;aACf;YACD,OAAO,GAAG,CAAC;SACd;QACD,IAAG,CAAC,SAAS,EAAC;YACV,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;SAC1B;aACI;YACD,AACA,IAAI,CAAC,OAAO,CAAC,UAAA,KAAK;gBACd,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;aAC3B,CAAC,CAAC;SACN;KACJ;IACD,wBAAQ,GAAR,UAAS,SAAyB;QAAzB,0BAAA,EAAA,gBAAyB;QAC9B,IAAI,EAAE,GAAG,IAAI,QAAQ,EAAE,CAAC;QACxB,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC;QAC1B,OAAO,EAAE,CAAC,CAAC,CAAC;KACf;IAID,2BAAW,GAAX,UAAY,KAAe;QACvB,IAAG,KAAK,CAAC,SAAS,KAAK,IAAI,EAAC;YACxB,IAAG,IAAI,CAAC,SAAS,KAAK,IAAI,EAAC;gBACvB,IAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,KAAK,CAAC,SAAS,CAAC,QAAQ,EAAC;oBAClD,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;iBACpC;aACJ;iBACI;gBACD,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;aACpC;SACJ;KACJ;IACD,8BAAc,GAAd;QACI,AACA,IAAI,KAAK,GAAe,CAAC,IAAI,CAAC,CAAC;QAC/B,IAAI,CAAC,OAAO,CAAC,UAAS,CAAC;YACnB,IAAG,CAAC,CAAC,KAAK,EAAC;gBACP,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACjB;SACJ,CAAC,CAAC;QACH,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,KAAK,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;YAC/B,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YACjB,CAAC,CAAC,OAAO,CAAC,UAAS,KAAK;gBACpB,IAAG,KAAK,KAAK,CAAC,EAAC;oBACX,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;wBACpC,IAAI,GAAG,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;wBACxB,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;qBACvC;oBAED,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;iBACxB;aACJ,EAAC,IAAI,CAAC,CAAC;YACR,CAAC,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;SACzB;QACD,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,KAAK,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;YAC/B,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC;SACtB;KACJ;IACD,qBAAK,GAAL;QACI,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,IAAI,CAAC,OAAO,CAAC;YACT,CAAC,EAAE,CAAC;SACP,CAAC,CAAC;QACH,OAAO,CAAC,CAAC;KACZ;IAED,oBAAI,GAAJ;QACI,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,IAAI,CAAC,OAAO,CAAC;YACT,CAAC,EAAE,CAAC;SACP,CAAC,CAAC;QACH,OAAO,CAAC,CAAC;KACZ;IAKD,wBAAQ,GAAR,UAAS,GAAsB;QAC3B,AACA,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;YAEnC,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACvB,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,UAAS,CAAC,EAAE,CAAC;gBAC3B,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC;aACzB,CAAC,CAAC;SACN;KACJ;IAKD,wBAAQ,GAAR,UAAS,IAAY;QACjB,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;YACnC,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACvB,IAAG,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAC;gBACxB,OAAO,GAAG,CAAC,EAAE,CAAC;aACjB;SACJ;QACD,OAAO,IAAI,CAAC;KACf;IACD,sBAAM,GAAN;QACI,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;KAC/B;IACD,qBAAK,GAAL;KAEC;IACD,qBAAK,GAAL;QAEI,IAAI,SAAS,GAAsC,EAAE,CAAC;QACtD,IAAI,MAAM,GAAe,EAAE,CAAC;QAC5B,IAAI,QAAQ,GAAG,CAAC,CAAC;QACjB,IAAI,UAAU,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;QAE9B,IAAI,GAAG,GAAG,IAAI,OAAO,CAAW,cAAM,OAAA,IAAI,UAAU,EAAK,GAAA,CAAC,CAAC;QAE3D,AAGA,IAAI,SAAS,GAAG,IAAI,aAAa,CAAC,UAAU,EAAC,CAAC,IAAI,CAAC,CAAC,CAAC;QACrD,SAAS,CAAC,KAAK,GAAG,QAAQ,EAAE,CAAC;QAC7B,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACvB,AACA,SAAS,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,GAAG,SAAS,CAAC;QAExC,IAAI,KAAK,GAAuB,CAAC,SAAS,CAAC,CAAC;QAE5C,OAAM,KAAK,CAAC,MAAM,GAAG,CAAC,EAAC;YACnB,IAAI,CAAC,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC;YAEtB,GAAG,CAAC,SAAS,EAAE,CAAC;YAEhB,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;YAChB,GAAG,CAAC,OAAO,CAAC,UAAS,KAAK,EAAC,KAAK,EAAC,EAAE;gBAC/B,IAAI,OAAO,GAAG,IAAI,aAAa,CAAI,UAAU,EAAC,EAAE,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC;gBACpE,IAAI,MAAM,GAAG,OAAO,CAAC,IAAI,EAAE,CAAC;gBAC5B,IAAG,SAAS,CAAC,MAAM,CAAC,EAAC;oBAEjB,OAAO,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC;iBAC/B;qBACI;oBACD,SAAS,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC;oBAC5B,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBACpB,OAAO,CAAC,KAAK,GAAG,QAAQ,EAAE,CAAC;oBAC3B,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;iBACxB;gBACD,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,EAAC,KAAK,CAAC,CAAC;aACxC,CAAC,CAAC;SACN;QACD,SAAS,CAAC,OAAO,EAAE,CAAC;QACpB,OAAO;YACH,IAAI,EAAE,SAAS;YACf,MAAM,EAAE,MAAM;SACjB,CAAC;KACL;IACL,YAAC;CAAA,IAAA;AAED;IAA+BA,iCAAQ;IAGnC,uBAAY,UAAkB,EAAE,MAAkB;QAAlD,YACI,iBAAO,SAWV;QAVG,KAAI,CAAC,KAAK,GAAG,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QAClC,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,KAAI,CAAC,QAAQ,GAAG,IAAI,MAAM,CAAC,UAAU,CAAC,CAAC;QACvC,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,MAAM,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;YAChC,KAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;YAEnC,KAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;YAC5B,KAAI,CAAC,OAAO,GAAG,KAAI,CAAC,OAAO,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;SACpD;;KACJ;IACD,4BAAI,GAAJ;QACI,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;KAC/B;IASD,gCAAQ,GAAR,UAAS,GAAsB;QAC3B,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;YAErC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;SAChC;KACJ;IACD,+BAAO,GAAP,UAAQ,EAAiC;QACrC,iBAAM,OAAO,YAAC,EAAE,CAAC,CAAC;KACrB;IACD,+BAAO,GAAP;QACI,IAAI,CAAC,OAAO,CAAC,UAAS,KAAK;YACvB,KAAK,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;SAC3B,CAAC,CAAC;KACN;IACL,oBAAC;CAAA,CAzC8B,KAAK;;AC9VpC;IAEI,aAAmB,MAAkB;QAAlB,WAAM,GAAN,MAAM,CAAY;QACjC,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;KAC1B;IACD,mBAAK,GAAL,UAAM,EAAgB;QAClB,KAAa,UAAW,EAAX,KAAA,IAAI,CAAC,MAAM,EAAX,cAAW,EAAX,IAAW;YAApB,IAAI,CAAC,SAAA;YACL,CAAC,CAAC,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;YACnB,EAAE,CAAC,OAAO,EAAE,CAAC;SAChB;KACJ;IACD,sBAAQ,GAAR;QACI,IAAI,GAAG,GAAG,EAAE,CAAC;QACb,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;YACrC,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,GAAG,IAAI,CAAC;SAC3C;QACD,OAAO,GAAG,CAAC;KACd;IAED,qBAAO,GAAP,UAAQ,MAAmB;QACvB,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;QACtB,IAAI,OAAO,GAAG,EAAE,CAAC;QACjB,IAAI,OAAO,GAAG,EAAE,CAAC;QACjB,IAAI,MAAM,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,EAAE,CAAC;QAClB,IAAI,EAAE,CAAC;QACP;YACI,IAAG,MAAM,KAAK,IAAI,EAAC;gBACf,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACnB;YACD,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAChB,EAAE,CAAC,IAAI,EAAE,CAAC;YACV,CAAC,GAAG,EAAE,CAAC,IAAI,EAAE,CAAC;SACjB;QACD;YACI,EAAE,GAAG,MAAM,CAAC;YACZ,MAAM,GAAG,IAAI,CAAC;YACd,OAAM,OAAO,CAAC,MAAM,GAAG,CAAC,EAAC;gBACrB,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC;gBACzB,OAAO,CAAC,GAAG,EAAE,CAAC;aACjB;SACJ;QACD,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,OAAO;YACH,CAAC,GAAG,EAAE,CAAC,IAAI,EAAE,CAAC;YACd,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;YAChB,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;YACnB,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;YACnB,MAAM,GAAG,IAAI,CAAC;YACd,IAAI,EAAE,CAAC;YACP,OAAM,IAAI,EAAC;gBACP,IAAG,EAAE,CAAC,SAAS,KAAK,IAAI,EAAC;oBAErB,IAAG,EAAE,CAAC,MAAM,EAAE,EAAC;wBACX,EAAE,GAAG,CAAC,KAAK,IAAI,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;wBACtD,IAAG,EAAE,KAAK,IAAI,EAAC;4BACX,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,EAAC,MAAM,EAAE,EAAE,CAAC,SAAS,EAAE,CAAC;yBAC7D;6BACI;4BACD,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;4BACnB,MAAM,GAAG,EAAE,CAAC;4BACZ,EAAE,GAAG,EAAE,CAAC;4BACR,EAAE,EAAE,CAAC;yBACR;qBACJ;yBACI;wBACD,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,EAAC,MAAM,EAAE,EAAE,CAAC,SAAS,EAAE,CAAC;qBAC7D;iBACJ;qBACI;oBACD,EAAE,GAAG,CAAC,KAAK,IAAI,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;oBACtD,IAAG,EAAE,KAAK,IAAI,EAAC;wBACX,IAAG,MAAM,KAAK,IAAI,EAAC;4BACf,QAAQ,EAAE,CAAC;4BACX,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,EAAC,MAAM,EAAE,EAAE,CAAC,SAAS,EAAE,CAAC;yBAC7D;6BACI,IAAG,CAAC,KAAK,IAAI,EAAC;4BAEf,OAAO,IAAI,CAAC;yBACf;6BACI;4BACD,MAAM,IAAI,KAAK,CAAC,wBAAwB,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;yBACvD;qBACJ;yBACI;wBACD,EAAE,GAAG,EAAE,CAAC;wBACR,EAAE,EAAE,CAAC;qBACR;iBACJ;aACJ;SAEJ,CAAA;KACJ;IACL,UAAC;CAAA;;AC5FD;IACI,mBAAmB,GAAW,EAAS,IAAsB;QAAtB,qBAAA,EAAA,cAAsB;QAA1C,QAAG,GAAH,GAAG,CAAQ;QAAS,SAAI,GAAJ,IAAI,CAAkB;KAAG;IACzD,4BAAQ,GAAf,UAAgB,GAAgB;QAAhB,oBAAA,EAAA,QAAgB;QAC5B,IAAI,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC;QAC1B,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC;QACpB,IAAG,GAAG,CAAC,SAAS,EAAC;YACb,GAAG,GAAG,mBAAgB,GAAG,CAAC,SAAS,WAAK,GAAG,YAAS,CAAC;SACxD;QACD,GAAG,IAAI,IAAI,CAAC;QACZ,GAAG,IAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,EAAC,KAAK,CAAC,CAAC,OAAO,CAAC,IAAI,EAAC,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC;QAC5E,OAAO,GAAG,CAAC;KACd;IACL,gBAAC;CAAA,IAAA;AACD;IAAsCA,oCAAS;IAC3C,0BAAY,GAAW,EAAS,IAAY;QAA5C,YACI,kBAAM,GAAG,EAAE,kBAAkB,CAAC,SACjC;QAF+B,UAAI,GAAJ,IAAI,CAAQ;;KAE3C;IACM,mCAAQ,GAAf,UAAgB,GAAW;QACvB,OAAU,iBAAM,QAAQ,YAAC,GAAG,CAAC,kBAAa,IAAI,CAAC,IAAI,MAAG,CAAC;KAC1D;IACL,uBAAC;CAAA,CAPqC,SAAS,GAO9C;AACD;IAAiCA,+BAAS;IACtC,qBAAY,GAAW;eACnB,kBAAM,GAAG,EAAE,SAAS,CAAC;KACxB;IACL,kBAAC;CAAA,CAJgC,SAAS;;ACxB1C;IAAsCA,oCAAS;IAC3C,0BAAY,GAAW;eACnB,kBAAM,GAAG,EAAE,kBAAkB,CAAC;KACjC;IACL,uBAAC;CAAA,CAJqC,SAAS;;ACI/C,qBAAqB,GAAW,EAAE,IAA4B;IAC1D,IAAI,KAAK,GAAG,CAAC,EAAE,IAAI,EAAE,CAAC,EAAC,CAAC,EAAE,GAAG,EAAC,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC;IAC1C,IAAI,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IACnB,qBAAqB,IAAY;QAC7B,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,KAAK,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;YAC/B,IAAG,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,IAAI,EAAC;gBACtB,MAAM,IAAIC,gBAAC,CAAC,sBAAsB,GAAG,IAAI,GAAG,iCAAiC,CAAC,CAAC;aAClF;SACJ;KACJ;IACD,OAAO;QACH,IAAI,EAAE;YACF,GAAG,CAAC,IAAI,EAAE,CAAC;YACX,IAAG,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,CAAC,CAAC,MAAM,EAAC;gBACxB,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,KAAK,CAAC,GAAG,EAAE,CAAC;gBAChC,GAAG,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;aACjC;SACJ;QACD,IAAI,EAAE;YACF,OAAO,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC;SAClC;QACD,MAAM,EAAE,UAAS,IAAI;YACjB,IAAI,EAAE,GAAG,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;YAClC,IAAG,CAAC,EAAE,EAAC;gBACH,MAAM,IAAIA,gBAAC,CAAC,kBAAkB,GAAG,IAAI,GAAG,GAAG,CAAC,CAAC;aAChD;YACD,WAAW,CAAC,IAAI,CAAC,CAAC;YAClB,KAAK,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC,EAAC,CAAC,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAC,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;YACrD,GAAG,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;SACjC;KACJ,CAAC;CACL;AASD,iBAA2B,KAAa,EAAE,IAAgC;IAAhC,qBAAA,EAAA,SAAgC;IACtE,IAAI,MAAM,GAAG,WAAW,CAAC,KAAK,EAAC,IAAI,CAAC,CAAC;IACrC,IAAI,CAAC,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;IAEtB;QACI,MAAM,CAAC,IAAI,EAAE,CAAC;QACd,CAAC,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;KACrB;IACD,gBAAgB,MAAe;QAC3B,IAAG,CAAC,KAAK,IAAI,EAAC;YACV,MAAM,IAAIA,gBAAC,CAAC,0BAA0B,IAAI,MAAM,GAAG,IAAI,GAAG,MAAM,GAAG,EAAE,CAAC,CAAC,CAAC;SAC3E;KACJ;IACD;QACI,IAAI,CAAC,GAAG,IAAI,KAAK,EAAK,CAAC;QAEvB,OAAO,CAAC,CAAC;KACZ;IACD;QACI,OAAO,CAAC,KAAK,IAAI,CAAC;KACrB;IACD,gBAAgB,EAAE;QACd,IAAG,CAAC,KAAK,EAAE,EAAC;YACR,MAAM,IAAIA,gBAAC,CAAC,wBAAwB,GAAG,CAAC,GAAG,eAAe,GAAG,EAAE,GAAG,GAAG,CAAC,CAAC;SAC1E;QACD,EAAE,EAAE,CAAC;KACR;IAKD,cAAc,KAAe;QACzB,IAAI,GAAG,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;QAC1B,OAAM,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,GAAG,EAAC;YACtB,EAAE,EAAE,CAAC;YACL,IAAI,EAAE,GAAG,EAAE,EAAE,CAAC;YACd,KAAK,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;YACpB,QAAQ,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;SAC/B;QACD,OAAO,GAAG,CAAC;KACd;IAKD,kBAAkB,KAAe;QAC7B,IAAI,GAAG,GAAG,KAAK,CAAC;QAChB,GAAE;YACE,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;SACtB,QAAM,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,EAAE;QACzC,OAAO,GAAG,CAAC;KACd;IAKD,iBAAiB,KAAe;QAC5B,IAAI,MAAM,GAAG,EAAE,EAAE,CAAC;QAClB,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QACxB,IAAI,GAAG,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC;QAE5B,IAAG,CAAC,KAAK,GAAG,EAAC;YACT,EAAE,EAAE,CAAC;YACL,GAAG,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;YACtB,IAAI,EAAE,GAAG,EAAE,EAAE,CAAC;YACd,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;YACrB,OAAO,EAAE,CAAC;SACb;aACI,IAAG,CAAC,KAAK,GAAG,EAAC;YACd,EAAE,EAAE,CAAC;YACL,IAAI,KAAK,GAAG,EAAE,EAAE,CAAC;YACjB,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YACrB,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;YACxB,OAAO,KAAK,CAAC;SAChB;aACI,IAAG,CAAC,KAAK,GAAG,EAAC;YACd,EAAE,EAAE,CAAC;YACL,IAAI,GAAG,GAAG,EAAE,EAAE,CAAC;YACf,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;YACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;YACnB,OAAO,GAAG,CAAC;SACd;aACI;YACD,OAAO,GAAG,CAAC;SACd;KACJ;IASD,mBAAmB,KAAe;QAC9B,MAAM,EAAE,CAAC;QACT,IAAG,CAAC,KAAK,GAAG,EAAC;YACT,EAAE,EAAE,CAAC;YACL,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;YACtB,MAAM,CAAC,GAAG,CAAC,CAAC;YACZ,OAAO,GAAG,CAAC;SACd;aACI,IAAG,CAAC,KAAK,GAAG,EAAC;YACd,EAAE,EAAE,CAAC;YACL,IAAI,GAAG,GAAG,EAAE,EAAE,CAAC;YACf,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;YAC7B,OAAO,GAAG,CAAC;SACd;aACI,IAAG,CAAC,KAAK,GAAG,EAAC;YACd,EAAE,EAAE,CAAC;YACL,IAAI,GAAG,GAAG,CAAW,KAAK,GAAG,CAAC;YAC9B,GAAG,IAAI,EAAE,EAAE,CAAC;YACZ,IAAI,GAAG,GAAG,EAAE,EAAE,CAAC;YACf,IAAI,GAAG,GAAG,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC;YAC9B,GAAG,IAAI,GAAG,CAAC,MAAM,EAAE,CAAC;YACpB,OAAM,CAAW,KAAK,GAAG,IAAI,CAAC,GAAG,EAAE,EAAC;gBAChC,OAAO,CAAC,GAAG,EAAC,GAAG,CAAC,CAAC;aACpB;YACD,MAAM,CAAC,GAAG,CAAC,CAAC;YACZ,OAAO,GAAG,CAAC;SACd;aACI,IAAG,CAAC,KAAK,GAAG,EAAC;YACd,EAAE,EAAE,CAAC;YACL,IAAI,IAAI,GAAG,EAAE,CAAC;YACd,OAAM,CAAW,KAAK,GAAG,EAAC;gBACtB,MAAM,EAAE,CAAC;gBACT,IAAI,IAAI,CAAC,CAAC;gBACV,EAAE,EAAE,CAAC;aACR;YACD,EAAE,EAAE,CAAC;YACL,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YACpB,CAAC,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;YAClB,OAAO,QAAQ,CAAC,KAAK,CAAC,CAAC;SAC1B;aACI;YACD,IAAI,GAAG,GAAG,EAAE,EAAE,CAAC;YACf,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC;YACjC,OAAO,GAAG,CAAC;SACd;KACJ;IACD;QACI,MAAM,EAAE,CAAC;QACT,IAAG,CAAC,KAAK,IAAI,EAAC;YACV,EAAE,EAAE,CAAC;YACL,IAAI,KAAG,GAAoB,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YAC3C,QAAO,CAAW;gBACd,KAAK,GAAG,EAAE,KAAG,GAAG,IAAI,CAAC;gBACrB,KAAK,GAAG,EAAE,KAAG,GAAG,IAAI,CAAC;gBACrB,KAAK,GAAG,EAAE,KAAG,GAAG,IAAI,CAAC;gBACrB,KAAK,GAAG;oBACJ,EAAE,EAAE,CAAC;oBACL,IAAI,IAAI,GAAG,EAAE,CAAC;oBACd,OAAM,CAAC,KAAK,IAAI,IAAI,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,EAAC;wBACtC,IAAI,IAAI,CAAC,CAAC;wBACV,EAAE,EAAE,CAAC;qBACR;oBACD,OAAO,QAAQ,CAAC,IAAI,EAAC,EAAE,CAAC,CAAC;gBAC7B,SAAS,KAAG,GAAG,CAAC,CAAC;aACpB;YACD,EAAE,EAAE,CAAC;YACL,OAAO,KAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;SAC5B;aACI;YACD,IAAI,GAAG,GAAG,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YAC1B,EAAE,EAAE,CAAC;YACL,OAAO,GAAG,CAAC;SACd;KACJ;IAKD,iBAAiB,GAAiB,EAAE,GAAY;QAC5C,IAAI,CAAC,GAAG,KAAK,EAAE,CAAC;QAChB,IAAI,IAAI,GAAG,CAAC,EAAC,EAAE,GAAG,CAAC,CAAC;QACpB,IAAG,CAAC,KAAK,GAAG,EAAC;YACT,EAAE,EAAE,CAAC;YACL,EAAE,GAAG,KAAK,EAAE,CAAC;YACb,IAAG,EAAE,GAAG,IAAI,EAAC;gBACT,MAAM,IAAIA,gBAAC,CAAC,kFAAkF;sBAC5F,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,OAAO;sBAC3B,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC;aAC7B;SACJ;QACD,IAAG,GAAG,EAAC;YACH,GAAG,CAAC,MAAM,CAAC,IAAI,EAAC,EAAE,CAAC,CAAC;SACvB;aACI;YACD,GAAG,CAAC,GAAG,CAAC,IAAI,EAAC,EAAE,CAAC,CAAC;SACpB;KACJ;IAED,IAAI,IAAI,GAAG,EAAE,EAAE,CAAC;IAChB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IACpB,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;IACtB,OAAO;QACH,MAAM,EAAE,IAAI;QACZ,IAAI,EAAE,IAAI;KACb,CAAC;CACL;AAOD,oBAA8B,KAAa;IACvC,IAAI,IAAI,GAAG,CAAC,CAAC;IACb,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAC3B;QACI,IAAI,CAAC,GAAG,IAAI,KAAK,EAAK,CAAC;QACvB,OAAO,CAAC,CAAC;KACZ;IACD;QACI,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,IAAI,IAAI,CAAC;KACpC;IACD;QACI,OAAO,CAAC,KAAK,IAAI,CAAC;KACrB;IAED,IAAI,IAAI,GAAG,EAAE,EAAE,CAAC;IAChB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IACpB,IAAI,IAAI,GAAG,IAAI,CAAC;IAChB,OAAM,CAAC,GAAG,EAAE,EAAC;QACT,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC;QACb,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;QACtC,IAAI,GAAG,CAAC,CAAC;QACT,EAAE,EAAE,CAAC;KACR;IACD,OAAO;QACH,MAAM,EAAE,IAAI;QACZ,IAAI,EAAE,IAAI;KACb,CAAC;CACL;;AC5QD,sBAAyB,IAAkC;IAAlC,qBAAA,EAAA,SAAkC;IACvD,IAAI,OAAO,GAAG,EAAE,CAAC;IACjB,IAAI,EAAE,GAAG,CAAC,CAAC;IACX;QACI,IAAI,GAAG,GAAG,IAAI,KAAK,EAAK,CAAC;QACzB,OAAO,GAAG,CAAC;KACd;IACD,IAAI,IAAI,GAAG,EAAE,EAAE,CAAC;IAChB,OAAO;QACH,OAAO,EAAE,UAAS,GAAG,EAAC,EAAE,EAAC,IAAI,EAAC,GAAG;YAC7B,IAAI,MAAM,GAAG,IAAI,SAAS,EAAK,CAAC;YAChC,MAAM,CAAC,QAAQ,GAAG,EAAE,EAAE,CAAC;YACvB,MAAM,CAAC,EAAE,GAAG,EAAE,CAAC;YACf,MAAM,CAAC,IAAI,GAAG,IAAI,IAAI,IAAI,CAAC;YAC3B,IAAI,GAAG,IAAI,CAAC,CAAC,GAAG,GAAG,UAAU,CAAI,GAAG,CAAC,GAAG,OAAO,CAAI,GAAG,EAAC,IAAI,CAAC,CAAC,CAAC;YAC9D,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC;YAC5B,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YAC3B,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACxB;QACD,IAAI,EAAE;YACF,IAAI,CAAC,cAAc,EAAE,CAAC;YACtB,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;YACzB,IAAI,GAAG,GAAG,IAAI,GAAG,CAAI,KAAK,CAAC,MAAM,CAAC,CAAC;YACnC,OAAO,GAAG,CAAC;SACd;KACJ,CAAC;CACL;AAQD,eAAkB,IAAI,EAAC,IAAI;IACvB,IAAI,MAAM,CAAC;IACX,IAAG,OAAO,IAAI,KAAK,UAAU,EAAC;QAC1B,MAAM,GAAG;YACL,OAAO,IAAI,CAAC,KAAK,EAAE,IAAI,IAAI,CAAC;SAC/B,CAAA;KACJ;SACI;QACD,MAAM,GAAG,IAAI,CAAC;KACjB;IAED,IAAI,EAAE,GAAG,YAAY,CAAI,IAAI,CAAC,CAAC;IAC/B,IAAI,GAAG,GAAG,MAAM,EAAE,CAAC;IACnB,OAAM,GAAG,KAAK,IAAI,EAAC;QACf,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,EAAC,GAAG,CAAC,EAAE,EAAC,GAAG,CAAC,IAAI,EAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAC/C,GAAG,GAAG,MAAM,EAAE,CAAC;KAClB;IACD,OAAO,EAAE,CAAC,IAAI,EAAE,CAAC;CACpB;AAED,AAA8B;;;;;;;;AC9D9B,IAAY,KAKX;AALD,WAAY,KAAK;IACb,2CAAa,CAAA;IACb,iCAAI,CAAA;IACJ,mCAAK,CAAA;IACL,+BAAG,CAAA;CACN,EALW,KAAK,KAAL,KAAK,QAKhB;AAAA,AAAC;AAcF,8BAAqC,CAAW;IAC5C,OAAO,CAAC,CAAC,KAAK,KAAK,IAAI,GAAG,MAAI,CAAC,CAAC,GAAG,MAAG,GAAG,OAAI,CAAC,CAAC,KAAK,OAAG,CAAC;CAC3D;;ACPD;IAOI,cACW,CAAU,EACV,GAAU,EACV,IAAY;QAFZ,MAAC,GAAD,CAAC,CAAS;QACV,QAAG,GAAH,GAAG,CAAO;QACV,SAAI,GAAJ,IAAI,CAAQ;QAThB,OAAE,GAAW,CAAC,CAAC,CAAC;QAChB,QAAG,GAAa,EAAE,CAAC;QACnB,WAAM,GAAgB,IAAI,CAAC;QAC3B,UAAK,GAAG,CAAC,CAAC;QACV,SAAI,GAAqC,EAAE,CAAC;QAC5C,aAAQ,GAAqC,EAAE,CAAC;KAKpD;IAEH,qBAAM,GAAN;QACI,IAAG,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC,EAAC;YACd,KAAI,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAC;gBACzC,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBACvB,IAAG,IAAI,IAAI,CAAC,EAAC;oBACT,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,KAAK,KAAK,KAAK,CAAC,SAAS;yBAC5C,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;iBACtC;aACJ;SACJ;KACJ;IACD,uBAAQ,GAAR,UAAS,CAAS,EAAE,GAAyB;QACzC,IAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,EAAC;YAC7B,IAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAC;gBAC3B,GAAG,CAAC,qDAAqD,CAAC,CAAC;aAC9D;iBACI;gBACD,GAAG,CAAC,0BAA0B,CAAC,CAAC;aACnC;YACD,OAAO,IAAI,CAAC;SACf;QACD,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC;QAC1B,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;QAClC,IAAI,IAAI,GAAS,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAC1C,OAAM,IAAI,EAAC;YACP,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACxB,IAAG,IAAI,KAAK,SAAS,IAAI,IAAI,CAAC,GAAG,GAAG,GAAG,EAAC;gBACpC,GAAG,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;gBACtB,OAAO,GAAG,CAAC;aACd;YACD,IAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,EAAC;gBAC7B,IAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAC;oBAC3B,GAAG,CAAC,OAAI,IAAI,CAAC,GAAG,CAAC,GAAG,0DAAsD,CAAC,CAAC;iBAC/E;qBACI;oBACD,GAAG,CAAC,uBAAuB,CAAC,CAAC;iBAChC;gBACD,OAAO,IAAI,CAAC;aACf;YACD,GAAG,IAAI,GAAG,CAAC;YACX,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;YAC9B,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;SACnC;KACJ;IACM,uBAAQ,GAAf,UAAgB,MAAe;QAC3B,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,KAAK,CAAC;QACnD,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;YAClC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACpB,IAAG,MAAM,KAAK,CAAC,EAAC;gBACZ,GAAG,IAAI,IAAI,CAAC;aACf;YACD,IAAG,CAAC,IAAI,CAAC,EAAC;gBAEN,GAAG,IAAI,GAAG,GAAG,oBAAoB,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;aACvD;iBACI;gBACD,GAAG,IAAI,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;aACvC;SACJ;QACD,IAAG,MAAM,KAAK,IAAI,CAAC,GAAG,CAAC,MAAM,EAAC;YAC1B,GAAG,IAAI,IAAI,CAAC;SACf;QACD,OAAO,GAAG,CAAC;KACd;IACL,WAAC;CAAA,IAAA;AAED;IAAA;QACW,WAAM,GAAe,EAAE,CAAC;QACxB,eAAU,GAAW,CAAC,CAAC;QACvB,QAAG,GAAY,EAAE,CAAC;QAClB,UAAK,GAAW,EAAE,CAAC;KAwF7B;IAtFG,yBAAO,GAAP,UAAQ,CAAS;QACb,OAAO,CAAC,IAAI,CAAC,CAAC;KACjB;IAED,6BAAW,GAAX,UAAY,EAAuC;QAC/C,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;YAClC,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;YAC9B,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,KAAK,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;gBAC/B,EAAE,CAAC,CAAC,EAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;aAClB;SACJ;KACJ;IACD,iCAAe,GAAf,UAAgB,GAAW,EAAE,EAA2B;QACpD,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC;QAChC,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,KAAK,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;YAC/B,IAAG,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAC;gBACZ,MAAM;aACT;SACJ;KACJ;IACD,8BAAY,GAAZ;QACI,IAAI,OAAO,GAAG,IAAI,CAAC;QACnB,OAAM,OAAO,EAAC;YACV,OAAO,GAAG,KAAK,CAAC;YAEhB,KAAI,IAAI,EAAE,GAAG,CAAC,EAAC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAC,EAAE,EAAE,EAAC;gBACrC,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC;gBAC/B,IAAI,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC;gBACrC,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,KAAK,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;oBAC/B,IAAI,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;oBACpB,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;wBAClC,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;wBACxB,IAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,EAAC;4BACnB,OAAO,GAAG,QAAQ,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,IAAI,OAAO,CAAC;4BAC7C,MAAM;yBACT;6BACI;4BACD,KAAK,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC;4BACnB,IAAG,EAAE,KAAK,KAAK,EAAC;gCACZ,OAAO,GAAG,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,IAAI,OAAO,CAAC;6BACjE;4BACD,IAAG,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAC;gCACrC,MAAM;6BACT;yBACJ;qBACJ;oBACD,CAAC,KAAK,IAAI,CAAC,GAAG,CAAC,MAAM,IAAI,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;iBAC5C;aACJ;SACJ;KACJ;IACD,0BAAQ,GAAR,UAAS,GAAkE;QAAlE,oBAAA,EAAA,QAAkE;QACvE,GAAG,GAAG,GAAG,IAAI,EAAE,CAAC;QAChB,IAAI,IAAI,GAAG,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC;QAC5B,IAAI,MAAM,GAAG,GAAG,CAAC,MAAM,IAAI,KAAK,CAAC;QACjC,IAAI,GAAG,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,WAAW,CAAC,UAAC,GAAG,EAAE,IAAI;YACvB,IAAI,CAAC,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;YACxB,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;SACnB,CAAC,CAAC;QACH,IAAG,GAAG,CAAC,SAAS,EAAC;YACb,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;gBAClC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBACpB,GAAG,IAAI,WAAS,CAAC,CAAC,GAAG,cAAS,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAK,IAAM,CAAC;aACtE;SACJ;QACD,IAAG,MAAM,EAAC;YACN,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,IAAI,EAAC,MAAM,CAAC,CAAC,OAAO,CAAC,IAAI,EAAC,MAAM,CAAC,CAAC;SACvD;QACD,OAAO,GAAG,CAAC,OAAO,CAAC,KAAK,EAAC,IAAI,CAAC,CAAC;KAClC;IACD,iCAAe,GAAf,UAAgB,CAAS;QACrB,KAAc,UAAW,EAAX,KAAA,IAAI,CAAC,MAAM,EAAX,cAAW,EAAX,IAAW;YAArB,IAAI,EAAE,SAAA;YACN,IAAG,EAAE,CAAC,GAAG,KAAK,CAAC,EAAC;gBACZ,OAAO,EAAE,CAAC;aACb;SACJ;QACD,OAAO,IAAI,CAAC;KACf;IACD,mCAAiB,GAAjB,UAAkB,CAAS;QACvB,IAAI,GAAG,GAAe,EAAE,CAAC;QACzB,KAAc,UAAW,EAAX,KAAA,IAAI,CAAC,MAAM,EAAX,cAAW,EAAX,IAAW;YAArB,IAAI,EAAE,SAAA;YACN,EAAE,CAAC,KAAK,KAAK,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SAClC;QACD,OAAO,GAAG,CAAC;KACd;IACL,cAAC;CAAA;;ACvLD;IAAA;QACI,YAAO,GAAY,IAAI,CAAC;QACxB,WAAM,GAAuB,EAAE,CAAC;QAChC,QAAG,GAA0B,EAAE,CAAC;QAChC,WAAM,GAAW,EAAE,CAAC;QACpB,cAAS,GAAW,EAAE,CAAC;KAC1B;IAAD,WAAC;CAAA;;ACPD;IAA8BD,4BAAM;IAChC,kBAAY,MAAc;eACtB,kBAAM,MAAM,CAAC;KAChB;IACD,2BAAQ,GAAR,UAAS,CAAa;QAClB,IAAI,GAAG,GAAG,EAAE,CAAC;QACb,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,IAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAC;YAChB,GAAG,IAAI,IAAI,CAAC;YACZ,KAAK,GAAG,KAAK,CAAC;SACjB;QACD,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,CAAC,CAAC,UAAU,EAAC,CAAC,EAAE,EAAC;YAC/B,IAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,EAAC;gBACpB,IAAG,CAAC,KAAK,EAAC;oBACN,GAAG,IAAI,GAAG,CAAC;iBACd;gBACD,GAAG,IAAI,GAAG,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC;gBACnC,KAAK,GAAG,KAAK,CAAC;aACjB;SACJ;QACD,OAAO,GAAG,CAAC;KACd;IACL,eAAC;CAAA,CAtB6B,MAAM;;ACIpC;IAGI,sBAAmB,MAAwB;QAAxB,WAAM,GAAN,MAAM,CAAkB;QAFnC,aAAQ,GAAkC,EAAE,CAAC;KAIpD;IAED,2BAAI,GAAJ,UAAK,CAAS,EAAE,EAAgB;QAC5B,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACvB,IAAG,CAAC,KAAK,SAAS,EAAC;YACf,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;YAC5C,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SAC7B;aACI;YACD,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;SACf;KACJ;IACD,6BAAM,GAAN,UAAO,CAAS,EAAE,IAAO;QACrB,IAAI,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QAC3B,IAAG,GAAG,KAAK,SAAS,EAAC;YACjB,KAAc,UAAG,EAAH,WAAG,EAAH,iBAAG,EAAH,IAAG;gBAAb,IAAI,EAAE,YAAA;gBACN,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aAClB;YACD,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;SAC3B;KACJ;IACD,2BAAI,GAAJ;QACI,KAAI,IAAI,CAAC,IAAI,IAAI,CAAC,QAAQ,EAAC;YACvB,KAAc,UAAgB,EAAhB,KAAA,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAhB,cAAgB,EAAhB,IAAgB;gBAA1B,IAAI,EAAE,SAAA;gBACN,EAAE,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;aACnB;SACJ;KACJ;IACL,mBAAC;CAAA;;ACjCD;IAEI,kBAAmB,KAAa;QAAb,UAAK,GAAL,KAAK,CAAQ;QADhC,YAAO,GAAuC,EAAE,CAAC;KAEhD;IACL,eAAC;CAAA,IAAA;AAKA,AAAC;AAEF;IAuBI,sBAAmB,GAAY;QAAZ,QAAG,GAAH,GAAG,CAAS;QAtBvB,UAAK,GAAa,IAAI,KAAK,EAAK,CAAC;QACjC,kBAAa,GAAa,IAAI,CAAC;QAC/B,gBAAW,GAAyC,EAAE,CAAC;QAEvD,iBAAY,GAAe,EAAE,CAAC;QAC9B,gBAAW,GAAW,IAAI,CAAC;QAC3B,eAAU,GAAY,KAAK,CAAC;QACpC,kBAAa,GAAW,IAAI,CAAC;QACrB,WAAM,GAAG,KAAK,CAAC;QAEf,YAAO,GAAG,CAAC,CAAC;QACZ,gBAAW,GAA0B,EAAE,CAAC;QACxC,YAAO,GAAe,CAAC,IAAI,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;QAEzC,cAAS,GAA0B,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC;QAElD,oBAAe,GAAe,EAAE,CAAC;QACjC,iBAAY,GAAa,IAAI,CAAC;QAG9B,QAAG,GAAqC,EAAE,CAAC;QAG/C,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,cAAc,GAAG,IAAI,YAAY,CAAS,UAAA,CAAC;YAC5C,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;SAC5B,CAAC,CAAC;KACN;IAEO,4BAAK,GAAb,UAAc,IAAkC;QAC5C,IAAG,IAAI,CAAC,YAAY,KAAK,IAAI,EAAC;YAC1B,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACxC;aACI;YACD,KAAc,UAAoB,EAApB,KAAA,IAAI,CAAC,eAAe,EAApB,cAAoB,EAApB,IAAoB;gBAA9B,IAAI,EAAE,SAAA;gBACN,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACzB;SACJ;KACJ;IACO,4BAAK,GAAb,UAAc,CAAW;QACrB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,aAAa,GAAG,IAAI,KAAK,EAAK,CAAC;QACjD,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC;QAC5B,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC;QAC7B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAExB,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC;YACV,EAAE,EAAE,CAAC;YACL,IAAI,EAAE,CAAC;SACV,CAAC,CAAC;QACH,OAAM,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,EAAC;YACtB,IAAI,KAAG,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YACxC,KAAG,CAAC,IAAI,CAAC,OAAO,CAAC,KAAG,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC;YACjC,KAAG,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YACpC,KAAG,CAAC,EAAE,IAAI,KAAG,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;SACvD;QACD,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,CAAC;QAC5B,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;QAC/B,IAAI,GAAG,GAAG,IAAI,GAAG,CAAI,KAAK,CAAC,MAAM,CAAC,CAAC;QACnC,OAAO,GAAG,CAAC;KAEd;IAED,iCAAU,GAAV,UAAW,KAAa,EAAE,IAAY;QAClC,IAAI,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QACnC,IAAG,IAAI,KAAK,SAAS,EAAC;YAClB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,gBAAgB,CAAC,gBAAa,KAAK,uCAAiC,IAAI,CAAC,IAAM,EAAE,IAAI,CAAC,CAAC,CAAC;SAC5G;QACD,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG;YAC7B,IAAI,EAAE,IAAI;YACV,IAAI,EAAE,IAAI,QAAQ,CAAC,KAAK,CAAC;SAC5B,CAAC;QACF,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC;KACjC;IACD,6BAAM,GAAN;QACI,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;KAC5B;IAED,iCAAU,GAAV;QACI,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,CAAC,CAAC;KACnC;IACD,kCAAW,GAAX,UAAY,CAAS;QACjB,IAAI,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;QAC3B,IAAG,EAAE,KAAK,SAAS,EAAC;YAChB,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;YAC7C,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;YACpC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;SACrC;QACD,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;KAC9D;IAED,+BAAQ,GAAR;QACI,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,KAAK,CAAC,UAAA,IAAI;YACX,IAAI,CAAC,aAAa,GAAG,IAAI,KAAK,EAAK,CAAC;YACpC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;SAC5C,CAAC,CAAC;KACN;IACD,0BAAG,GAAH,UAAI,MAAS,EAAE,KAA4B;QAA5B,sBAAA,EAAA,oBAA4B;QACvC,KAAc,UAAoB,EAApB,KAAA,IAAI,CAAC,eAAe,EAApB,cAAoB,EAApB,IAAoB;YAA9B,IAAI,EAAE,SAAA;YACN,EAAE,CAAC,KAAK,GAAG,MAAI,KAAK,MAAG,CAAC;SAC3B;QACD,IAAI,CAAC,KAAK,CAAC,UAAA,IAAI;YACX,IAAI,EAAE,GAAG,IAAI,SAAS,EAAK,CAAC;YAC5B,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;YACrC,EAAE,CAAC,IAAI,GAAG,MAAM,CAAC;YACjB,IAAI,CAAC,aAAa,CAAC,SAAS,GAAG,EAAE,CAAC;SACrC,CAAC,CAAC;KACN;IAGD,iCAAU,GAAV;QACI,IAAI,CAAC,KAAK,CAAC,UAAA,CAAC;YACR,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC;gBACf,IAAI,EAAE,CAAC,CAAC,aAAa;gBACrB,IAAI,EAAE,IAAI,KAAK,EAAK;aACvB,CAAC,CAAC;SACN,CAAC,CAAC;KACN;IACD,mCAAY,GAAZ;QACI,IAAI,CAAC,KAAK,CAAC,UAAA,CAAC;YACR,IAAI,GAAG,GAAG,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YAClD,CAAC,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACpC,CAAC,CAAC,aAAa,GAAG,GAAG,CAAC,IAAI,CAAC;SAC9B,CAAC,CAAC;KACN;IACD,iCAAU,GAAV;QACI,IAAI,CAAC,KAAK,CAAC,UAAA,CAAC;YACR,CAAC,CAAC,aAAa,GAAG,CAAC,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC;SAC9C,CAAC,CAAC;KACN;IAID,kCAAW,GAAX;QACI,IAAI,CAAC,KAAK,CAAC,UAAA,CAAC;YACR,CAAC,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC;SACxC,CAAC,CAAC;KACN;IACD,oCAAa,GAAb,UAAc,OAA6B;QACvC,OAAO,KAAK,EAAE,KAAK,IAAI,CAAC,aAAa,GAAG,IAAI,EAAE,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC;QACnE,IAAI,CAAC,KAAK,CAAC,UAAA,CAAC;YACR,IAAI,GAAG,GAAG,CAAC,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC;YAC/B,IAAG,OAAO,KAAK,GAAG,EAAC;gBACf,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC;aAClC;iBACI,IAAG,OAAO,KAAK,GAAG,EAAC;gBACpB,CAAC,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;aAClC;iBACI,IAAG,OAAO,KAAK,GAAG,EAAC;gBACpB,CAAC,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;gBAC/B,CAAC,CAAC,aAAa,GAAG,GAAG,CAAC;aACzB;SACJ,CAAC,CAAC;KACN;IAGD,gCAAS,GAAT,UAAU,CAAS;QACf,IAAG,IAAI,CAAC,MAAM,EAAC;YACX,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;YACvB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;SACvB;aACI;YACD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;SAC7B;QACD,IAAI,CAAC,KAAK,CAAC,UAAA,IAAI;YACX,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,CAAC,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;gBAC3B,IAAI,EAAE,GAAG,IAAI,KAAK,EAAK,CAAC;gBACxB,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;gBACrD,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;aAC3B;SACJ,CAAC,CAAC;KACN;IACD,6BAAM,GAAN,UAAO,KAAa,EAAE,IAAY;QAC9B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,KAAK,CAAC,UAAA,IAAI;YACX,IAAI,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YACnC,IAAG,IAAI,KAAK,SAAS,EAAC;gBAClB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,gBAAgB,CAAC,iCAA8B,KAAK,OAAG,EAAE,IAAI,CAAC,CAAC,CAAC;aACpF;YACD,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;YAErB,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;gBAClC,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBACxB,IAAG,KAAK,CAAC,IAAI,KAAK,IAAI,EAAC;oBACnB,IAAI,GAAG,GAAG,uDAAqD,IAAI,CAAC,KAAO,CAAC;oBAC5E,KAAI,CAAC,EAAE,EAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;wBAC5B,GAAG,IAAI,SAAO,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAO,CAAC;qBAC1C;oBACD,GAAG,IAAI,SAAO,IAAI,CAAC,KAAO,CAAC;oBAC3B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,gBAAgB,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC;oBAE9C,OAAO;iBACV;aACJ;YACD,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC;gBACV,EAAE,EAAE,CAAC;gBACL,IAAI,EAAE,IAAI;aACb,CAAC,CAAC;SACN,CAAC,CAAC;KACN;IACD,+BAAQ,GAAR,UAAS,OAAgB;QACrB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,KAAK,CAAC,UAAA,IAAI;YACX,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC;YAC1B,IAAI,EAAE,GAAG,IAAI,KAAK,EAAK,CAAC;YACxB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YAC7C,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;YACxB,OAAO,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;SAC9C,CAAC,CAAC;KACN;IACD,iCAAU,GAAV,UAAW,IAAY,EAAE,EAAU,EAAE,KAAa,EAAE,KAAa;QAC7D,IAAG,IAAI,CAAC,MAAM,KAAK,CAAC,EAAC;YACjB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,gBAAgB,CAAC,wCAAqC,IAAI,OAAG,EAAE,KAAK,CAAC,CAAC,CAAC;YACxF,OAAO;SACV;QACD,IAAG,EAAE,CAAC,MAAM,KAAK,CAAC,EAAC;YACf,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,gBAAgB,CAAC,wCAAqC,EAAE,OAAG,EAAE,KAAK,CAAC,CAAC,CAAC;YACtF,OAAO;SACV;QACD,IAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,EAAC;YACrC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,gBAAgB,CAC7B,qFAAmF,IAAI,aAAQ,EAAE,OAAI,EACvG,KAAK,CAAC,CAAC,CAAC;SACb;QACD,IAAI,CAAC,KAAK,CAAC,UAAA,IAAI;YACX,IAAI,CAAC,UAAU;gBACf,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;gBACnE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;SACvE,CAAC,CAAC;KACN;IACD,6BAAM,GAAN;QACI,IAAI,CAAC,KAAK,CAAC,UAAA,IAAI;YACX,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;SAC3B,CAAC,CAAC;KACN;IAED,4BAAK,GAAL;QACI,IAAI,IAAI,GAAa,EAAE,CAAC;QACxB,KAAiB,UAAY,EAAZ,KAAA,IAAI,CAAC,OAAO,EAAZ,cAAY,EAAZ,IAAY;YAAzB,IAAI,KAAK,SAAA;YACT,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;SAChC;QACD,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;QAC3B,OAAO,IAAI,CAAC;KACf;IAIL,mBAAC;CAAA;;ACrQD,gBAAgB,CAAgB;CAE/B;AAED,qBAA4B,EAAY;IACpC,OAAO;QACH,MAAM,EAAE,MAAM;QACd,KAAK,EAAE,EAAE,CAAC,KAAK;KAClB,CAAC;CACL;AAED,mBAA0B,CAAS;IAC/B,OAAO;QACH,MAAM,YAAC,CAAC;YACJ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;SACrB;QACD,KAAK,EAAE,CAAC,CAAC;KACZ,CAAC;CACL;AAED;IACI,OAAO;QACH,MAAM,YAAC,CAAC;YACJ,CAAC,CAAC,WAAW,EAAE,CAAC;SACnB;QACD,KAAK,EAAE,CAAC,CAAC;KACZ,CAAC;CACL;AAED,qBAA4B,CAAS,EAAE,IAAY;IAC/C,OAAO;QACH,MAAM,YAAC,CAAC;YACJ,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;SACvB;QACD,KAAK,EAAE,CAAC,CAAC;KACZ,CAAC;CACL;AAED,gBAAuB,GAAW;IAC9B,OAAO;QACH,MAAM,YAAC,CAAC;YACJ,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;SACjB;QACD,KAAK,EAAE,CAAC,CAAC;KACZ,CAAC;CACL;;ACjCD,IAAY,YAIX;AAJD,WAAY,YAAY;IACpB,iDAAS,CAAA;IACT,mDAAU,CAAA;IACV,+CAAQ,CAAA;CACX,EAJW,YAAY,KAAZ,YAAY,QAIvB;AAAA,AAAC;AAQF;IA+TI,kBAAY,GAAY;QA9ThB,SAAI,GAAY,IAAI,CAAC;QACrB,OAAE,GAAS,IAAI,IAAI,EAAE,CAAC;QACtB,OAAE,GAAY,IAAI,OAAO,EAAE,CAAC;QAE5B,oBAAe,GAA8B,EAAE,CAAC;QAChD,qBAAgB,GAAgC,EAAE,CAAC;QAEnD,eAAU,GAAW,EAAE,CAAC;QACxB,gBAAW,GAAoB,IAAI,CAAC;QAEpC,aAAQ,GAAyB,EAAE,CAAC;QAEpC,iBAAY,GAAwB,IAAI,CAAC;QAEzC,cAAS,GAAG,CAAC,CAAC;QACd,WAAM,GAAG,IAAI,CAAC;QACd,QAAG,GAAG,CAAC,CAAC;QAER,cAAS,GAAkB,EAAE,CAAC;QAC9B,YAAO,GAAkB,EAAE,CAAC;QAI5B,kBAAa,GAAqC,EAAE,CAAC;QAwSzD,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,EAAE,CAAC,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC;QAC1B,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;QAChB,IAAI,CAAC,UAAU,GAAG,IAAI,YAAY,CAAc,GAAG,CAAC,CAAC;QACrD,IAAI,CAAC,YAAY,GAAG,IAAI,YAAY,CAAQ,UAAA,CAAC;YACzC,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;SAC3B,CAAC,CAAC;QAEH,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;KACjC;IA/SO,uBAAI,GAAZ;QACI,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;KACtD;IACO,+BAAY,GAApB,UAAqB,IAAY;QAC7B,IAAI,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC;QAC7B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAExB,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QAC/B,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;QAC1B,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;QACtB,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;QACzB,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QAC7C,AAEA,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QAGzB,KAAI,IAAI,KAAK,IAAI,CAAC,CAAC,IAAI,EAAC;YACpB,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACtB,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;SACtD;QACD,KAAI,IAAI,KAAK,IAAI,CAAC,CAAC,QAAQ,EAAC;YACxB,IAAI,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YAC1B,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;SACtD;KACJ;IACD,sBAAG,GAAH,UAAI,GAAW,EAAE,IAAY;QACzB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAIC,gBAAC,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC;KACnC;IACD,2BAAQ,GAAR,UAAS,IAAY,EAAE,KAAa,EAAE,IAAY;QAC9C,IAAI,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QACvC,IAAG,KAAK,KAAK,SAAS,EAAC;YAEnB,OAAO,KAAK,CAAC;SAChB;aACI;YACD,KAAK,GAAG;gBACJ,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM;gBAC5B,GAAG,EAAE,IAAI;gBACT,KAAK,EAAE,KAAK;gBACZ,IAAI,EAAE,IAAI;gBACV,EAAE,EAAE,CAAC;gBACL,KAAK,EAAE,KAAK,CAAC,SAAS;gBACtB,IAAI,EAAE,KAAK;aACd,CAAC;YACF,IAAG,KAAK,KAAK,IAAI,EAAC;gBACd,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC;gBACpE,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAC5C;YACD,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;YACnC,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC3B,OAAO,KAAK,CAAC;SAChB;KACJ;IACD,kCAAe,GAAf,UAAgB,CAAS,EAAE,IAAY;QACnC,IAAI,EAAE,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;QAClC,IAAG,EAAE,KAAK,SAAS,EAAC;YAChB,IAAI,CAAC,GAAG,CAAC,uBAAoB,CAAC,kBAAc,EAAE,IAAI,CAAC,CAAC;YACpD,OAAO,IAAI,CAAC;SACf;aACI,IAAG,EAAE,CAAC,MAAM,GAAG,CAAC,EAAC;YAClB,IAAI,GAAG,GAAG,EAAE,CAAC;YACb,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,EAAE,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;gBAC5B,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,GAAG,CAAC,CAAC;gBACtB,GAAG,IAAI,MAAI,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,MAAG,CAAC;aAC3B;YACD,IAAI,CAAC,GAAG,CAAC,qBAAmB,CAAC,uCAAkC,GAAK,EAAE,IAAI,CAAC,CAAC;YAC5E,OAAO,IAAI,CAAC;SACf;QACD,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC;KAChB;IACD,iCAAc,GAAd,UAAe,CAAS,EAAE,IAAY;QAClC,IAAI,GAAG,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;QAClC,IAAG,GAAG,KAAK,SAAS,EAAC;YACjB,IAAI,CAAC,GAAG,CAAC,sBAAoB,CAAC,iBAAc,EAAE,IAAI,CAAC,CAAC;YACpD,OAAO,IAAI,CAAC;SACf;QACD,OAAO,GAAG,CAAC;KACd;IACD,kCAAe,GAAf,UAAgB,GAAW,EAAE,KAAY,EAAE,IAAkB,EAAE,IAAY;QACvE,IAAG,IAAI,KAAK,YAAY,CAAC,KAAK,EAAC;YAC3B,IAAI,EAAE,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;YACxC,IAAG,EAAE,KAAK,IAAI,EAAC;gBACX,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;gBACjB,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC;aACpB;SACJ;aACI,IAAG,IAAI,KAAK,YAAY,CAAC,MAAM,EAAC;YACjC,IAAI,EAAE,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;YACzC,IAAG,EAAE,KAAK,IAAI,EAAC;gBACX,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;gBACjB,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC;aACpB;SACJ;aACI,IAAG,IAAI,KAAK,YAAY,CAAC,IAAI,EAAC;YAC/B,IAAI,EAAE,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI;gBAC1D,KAAK,EAAE,KAAK;gBACZ,EAAE,EAAE,IAAI,CAAC,GAAG;gBACZ,IAAI,EAAE,IAAI;aACb,CAAC;SACL;KACJ;IACD,yBAAM,GAAN,UAAO,IAAY,EAAE,KAAa;QAC9B,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;QAC1B,OAAO,IAAI,CAAC;KACf;IACD,4BAAS,GAAT,UAAU,CAAS;QACf,IAAI,CAAC,EAAE,CAAC,MAAM,GAAG,CAAC,CAAC;KACtB;IACD,8BAAW,GAAX,UAAY,CAAS;QACjB,IAAI,CAAC,EAAE,CAAC,SAAS,GAAG,CAAC,CAAC;KACzB;IACD,wBAAK,GAAL;QACI,IAAI,CAAC,GAAG,EAAE,CAAC;QACX,OAAO,IAAI,CAAC;KACf;IACD,8BAAW,GAAX,UAAY,GAAW,EAAE,IAAY;QACjC,IAAG,IAAI,CAAC,MAAM,EAAC;YACX,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;YACnC,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;YAC/C,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,YAAY,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;YAClD,IAAI,CAAC,UAAU,EAAE,CAAC;SACrB;QAED,IAAI,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;QAC5B,IAAG,EAAE,KAAK,SAAS,EAAC;YAChB,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG;gBACtB,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM;gBACzB,GAAG,EAAE,GAAG;gBACR,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE,KAAK;gBACX,KAAK,EAAE,EAAE;gBACT,OAAO,EAAE,EAAE;aACd,CAAA;YACD,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YACrB,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;SACrC;QACD,IAAI,EAAE,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;QACrC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAEzB,OAAO,IAAI,CAAC;KACf;IACD,gCAAa,GAAb,UAAc,KAAa,EAAE,IAAY;QACrC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;QACpB,IAAG,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,SAAS,EAAC;YAC/B,IAAI,CAAC,GAAG,CAAC,kCAA+B,KAAK,OAAG,EAAE,IAAI,CAAC,CAAC;SAC3D;aACI;YACD,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC;SAC9C;KACJ;IACD,oCAAiB,GAAjB,UAAkB,KAAa,EAAE,IAAY;QACzC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;QACpB,IAAG,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,SAAS,EAAC;YAC/B,IAAI,CAAC,GAAG,CAAC,gBAAa,KAAK,4DAAsD,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,IAAM,EAAE,IAAI,CAAC,CAAC;SACpH;aACI,IAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,SAAS,EAAC;YAChC,IAAI,CAAC,GAAG,CAAC,wBAAqB,KAAK,sCAAgC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAM,EAAE,IAAI,CAAC,CAAC;SAClG;aACI;YACD,IAAI,CAAC,WAAW,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC;SACjD;KACJ;IACD,8BAAW,GAAX,UAAY,EAAU,EAAE,IAAkB,EAAE,IAAY;QACpD,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;QACpB,IAAG,CAAC,CAAC,MAAM,KAAK,IAAI,EAAC;YACjB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;SAC3B;QACD,IAAG,IAAI,CAAC,WAAW,KAAK,IAAI,EAAC;YACzB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;YAClF,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;SAC3B;QACD,IAAG,IAAI,KAAK,YAAY,CAAC,IAAI,EAAC;YAC1B,IAAI,MAAI,GAAG,IAAI,CAAC;YAChB,IAAI,KAAG,GAAG,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC;YACvB,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACd,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,EAAE,UAAC,EAAE,EAAE,EAAE;gBAC9B,IAAG,EAAE,EAAC;oBACF,CAAC,CAAC,GAAG,CAAC,KAAG,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,GAAG,CAAC,CAAC;oBAC3B,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC;wBACZ,IAAI,EAAE,CAAC;wBACP,GAAG,EAAE,KAAG;qBACX,CAAC,CAAC;oBACH,EAAE,CAAC,IAAI,GAAG,IAAI,CAAC;iBAClB;qBACI;oBACD,MAAI,CAAC,GAAG,CAAC,mCAAiC,EAAI,EAAE,IAAI,CAAC,CAAC;iBACzD;aACJ,CAAC,CAAC;SACN;aACI,IAAG,IAAI,KAAK,YAAY,CAAC,KAAK,EAAC;YAChC,IAAI,EAAE,GAAG,IAAI,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;YAClC,IAAG,EAAE,KAAK,SAAS,EAAC;gBAChB,IAAI,CAAC,GAAG,CAAC,uBAAqB,EAAE,iBAAc,EAAE,IAAI,CAAC,CAAC;gBACtD,OAAO;aACV;YACD,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;YACrB,EAAE,CAAC,IAAI,GAAG,IAAI,CAAC;SAClB;aACI,IAAG,IAAI,KAAK,YAAY,CAAC,MAAM,EAAC;YACjC,IAAI,EAAE,GAAG,IAAI,CAAC,eAAe,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;YACxC,IAAG,EAAE,KAAK,IAAI,EAAC;gBACX,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;gBACrB,EAAE,CAAC,IAAI,GAAG,IAAI,CAAC;aAClB;SACJ;KACJ;IACD,4BAAS,GAAT,UAAU,CAAc;QACpB,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;QACpB,IAAG,CAAC,CAAC,MAAM,KAAK,IAAI,EAAC;YACjB,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;SAC7B;QACD,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;QACb,IAAG,IAAI,CAAC,WAAW,KAAK,IAAI,EAAC;YACzB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;YAClF,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;SAC7B;QACD,OAAO,IAAI,CAAC;KACf;IACD,+BAAY,GAAZ,UAAa,KAAa,EAAE,IAAkB,EAAE,IAAY;QACxD,IAAG,IAAI,KAAK,YAAY,CAAC,MAAM,IAAI,IAAI,KAAK,YAAY,CAAC,KAAK,EAAC;YAC3D,IAAI,EAAE,GAAa,IAAI,KAAK,YAAY,CAAC,MAAM;gBAC3C,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,IAAI,CAAC;gBACjC,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;YACrC,IAAG,EAAE,KAAK,IAAI,EAAC;gBACX,IAAG,EAAE,CAAC,KAAK,KAAK,KAAK,CAAC,SAAS,EAAC;oBAC5B,IAAI,CAAC,GAAG,CAAC,2BAAwB,KAAK,4BAAwB,EAAC,IAAI,CAAC,CAAC;oBACrE,OAAO;iBACV;gBACD,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC;aAC1B;SACJ;aACI;YACD,IAAI,EAAE,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YACnC,IAAG,CAAC,EAAE,EAAC;gBACH,IAAI,CAAC,GAAG,CAAC,oBAAiB,KAAK,sBAAkB,EAAC,IAAI,CAAC,CAAC;aAC3D;YACD,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC;SAC1B;KACJ;IACD,6BAAU,GAAV;QACI,IAAI,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC;QAC9B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC;QAC/B,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACpB,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACtB,KAAc,UAAc,EAAd,KAAA,IAAI,CAAC,SAAS,EAAd,cAAc,EAAd,IAAc;YAAxB,IAAI,EAAE,SAAA;YACN,EAAE,EAAE,CAAC;SACR;QACD,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;QAC1B,OAAO,IAAI,CAAC;KACf;IACD,qCAAkB,GAAlB,UAAmB,IAAiB,EAAE,EAAU,EAAE,IAAY;QAA9D,iBASC;QARG,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,EAAE,UAAC,EAAE,EAAE,EAAE;YAC3C,IAAG,EAAE,EAAC;gBACF,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;aAC5B;iBACI;gBACD,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,gBAAgB,CAAC,aAAU,EAAE,oBAAgB,EAAE,IAAI,CAAC,CAAC,CAAC;aAC3E;SACJ,CAAC,CAAC;KACN;IACD,wBAAK,GAAL;QACI,IAAI,CAAC,EAAE,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC;QAC3C,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC;QAC9B,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC;QAC3B,IAAI,IAAI,GAAG,IAAI,CAAC;QAEhB,KAAc,UAAW,EAAX,KAAA,IAAI,CAAC,EAAE,CAAC,GAAG,EAAX,cAAW,EAAX,IAAW;YAArB,IAAI,EAAE,SAAA;YACN,EAAE,CAAC,QAAQ,GAAG,IAAI,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC;YAC/C,KAAgB,UAAQ,EAAR,KAAA,EAAE,CAAC,KAAK,EAAR,cAAQ,EAAR,IAAQ;gBAApB,IAAI,IAAI,SAAA;gBACR,IAAI,CAAC,MAAM,EAAE,CAAC;wCACN,KAAK;oBACT,IAAI,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;oBAC7B,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,UAAA,GAAG;wBAC5B,IAAI,CAAC,GAAG,CAAC,4BAAyB,KAAK,YAAM,GAAK,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC;qBAC/D,CAAC,CAAC;iBACN;gBALD,KAAI,IAAI,KAAK,IAAI,IAAI,CAAC,QAAQ;4BAAtB,KAAK;iBAKZ;aACJ;SACJ;QACD,IAAI,CAAC,EAAE,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;QAEzC,KAAc,UAAY,EAAZ,KAAA,IAAI,CAAC,OAAO,EAAZ,cAAY,EAAZ,IAAY;YAAtB,IAAI,EAAE,SAAA;YACN,EAAE,EAAE,CAAC;SACR;QACD,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;QACzB,OAAO,IAAI,CAAC,EAAE,CAAC;KAClB;IAaL,eAAC;CAAA;;ACtWD,IAAK,CA0CJ;AA1CD,WAAK,CAAC;IACF,uBAAO,CAAA;IACP,yBAAI,CAAA;IACJ,6BAAM,CAAA;IAEN,uBAAG,CAAA;IACH,2BAAK,CAAA;IACL,2BAAK,CAAA;IACL,uBAAG,CAAA;IACH,qBAAE,CAAA;IAEF,mCAAS,CAAA;IACT,iCAAQ,CAAA;IACR,oCAAS,CAAA;IACT,0CAAY,CAAA;IACZ,gCAAO,CAAA;IACP,kCAAQ,CAAA;IACR,gCAAO,CAAA;IACP,sCAAU,CAAA;IACV,4CAAa,CAAA;IACb,kCAAQ,CAAA;IAGR,0CAAY,CAAA;IACZ,4CAAa,CAAA;IACb,sBAAE,CAAA;IACF,sBAAE,CAAA;IACF,0BAAI,CAAA;IACJ,wBAAG,CAAA;IACH,wBAAG,CAAA;IACH,0BAAI,CAAA;IACJ,0BAAI,CAAA;IACJ,4BAAK,CAAA;IACL,0BAAI,CAAA;IACJ,wBAAG,CAAA;IACH,0BAAI,CAAA;IACJ,kCAAQ,CAAA;IACR,4BAAK,CAAA;IAGL,8CAAc,CAAA;IACd,gDAAe,CAAA;CAClB,EA1CI,CAAC,KAAD,CAAC,QA0CL;AAAA,AAAC;AAEF;IAAA;QAGI,QAAG,GAAW,IAAI,CAAC;KAStB;IAPG,qBAAK,GAAL;QACI,IAAI,CAAC,GAAG,IAAI,KAAK,EAAE,CAAC;QACpB,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;QACf,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACnB,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;QACjB,OAAO,CAAC,CAAC;KACZ;IACL,YAAC;CAAA,IAAA;AAED,cAAc,GAAmC;IAAnC,oBAAA,EAAA,QAAmC;IAC7C,IAAI,SAAS,GAAG,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC;IAClC,IAAI,IAAI,GAAG,CAAC,CAAC;IACb,IAAI,MAAM,GAAgB,IAAI,CAAC;IAC/B,IAAI,CAAC,GAAW,IAAI,CAAC;IAErB;QACI,OAAO,CAAC,KAAK,IAAI,CAAC;KACrB;IACD,iBAAiB,CAAC;QACd,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC;KAC7C;IACD;QAEI,IAAG,CAAC,KAAK,IAAI,EAAC;YACV,IAAI,EAAE,CAAC;SACV;QACD,MAAM,CAAC,IAAI,EAAE,CAAC;QACd,CAAC,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;KACrB;IACD,aAAa,EAAW;QACpB,IAAI,EAAE,GAAG,EAAE,CAAC;QACZ,IAAG,GAAG,EAAE,EAAC;YACL,EAAE,GAAG,wBAAwB,CAAC;SACjC;aACI;YACD,EAAE,GAAG,4BAAyB,CAAC,OAAG,CAAC;SACtC;QACD,IAAG,EAAE,EAAC;YACF,MAAM,IAAIA,gBAAC,CAAI,EAAE,iBAAW,EAAE,OAAG,EAAC,IAAI,CAAC,CAAC;SAC3C;aACG;YACA,MAAM,IAAIA,gBAAC,CAAC,EAAE,EAAC,IAAI,CAAC,CAAC;SACxB;KACJ;IACD,aAAa,CAAS;QAClB,IAAI,EAAE,GAAG,CAAC,CAAC;QACX,OAAM,EAAE,GAAG,CAAC,CAAC,MAAM,EAAC;YAChB,IAAG,CAAC,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,KAAK,CAAC,EAAC;gBACpB,OAAO,KAAK,CAAC;aAChB;YACD,EAAE,EAAE,CAAC;SACR;QACD,OAAO,IAAI,CAAC;KACf;IACD,IAAI,OAAO,GAAG;QACV,GAAG,EAAE,IAAI;QACT,GAAG,EAAE,IAAI;QACT,GAAG,EAAE,IAAI;KACZ,CAAC;IACF,oBAAoB,MAAe;QAC/B,IAAI,EAAE,GAAG,CAAC,CAAC;QACX,IAAG,GAAG,EAAE,EAAC;YACL,OAAO,EAAE,CAAC;SACb;QACD,EAAE,EAAE,CAAC;QACL,IAAI,GAAG,GAAG,OAAO,CAAC,EAAE,CAAC,CAAC;QACtB,IAAG,GAAG,KAAK,SAAS,EAAC;YACjB,OAAO,GAAG,CAAC;SACd;aACI;YACD,IAAG,MAAM,EAAC;gBACN,OAAO,IAAI,GAAG,EAAE,CAAC;aACpB;iBACI;gBACD,IAAG,EAAE,KAAK,IAAI,EAAC;oBACX,OAAO,IAAI,CAAC;iBACf;qBACI;oBACD,OAAO,IAAI,GAAG,EAAE,CAAC;iBACpB;aACJ;SACJ;KACJ;IACD;QACI,IAAI,GAAG,GAAG,CAAC,CAAC;QACZ,IAAI,GAAG,GAAG,EAAE,CAAC;QACb,EAAE,EAAE,CAAC;QACL,OAAM,CAAC,IAAI,GAAG,EAAC;YACX,IAAG,GAAG,EAAE,EAAC;gBACL,MAAM,IAAIA,gBAAC,CAAC,6BAA6B,EAAC,IAAI,CAAC,CAAC;aACnD;iBACI,IAAG,CAAC,KAAK,IAAI,EAAC;gBACf,EAAE,EAAE,CAAC;gBACL,GAAG,IAAI,UAAU,CAAC,KAAK,CAAC,CAAC;aAC5B;iBACI;gBACD,GAAG,IAAI,CAAC,CAAC;gBACT,EAAE,EAAE,CAAC;aACR;SACJ;QACD,EAAE,EAAE,CAAC;QACL,OAAO,GAAG,CAAC;KACd;IACD,AAkBA,cAAc,KAAY;QACtB,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC;QACjB,OAAM,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,EAAC;YACvB,EAAE,EAAE,CAAC;SACR;QACD,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC;QAClB,IAAG,GAAG,EAAE,EAAC;YACL,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC;YACjB,OAAO,KAAK,CAAC;SAChB;QACD,GAAG,EACH,QAAO,CAAC;YACJ,KAAK,GAAG;gBACJ,EAAE,EAAE,CAAC;gBACL,IAAG,GAAG,CAAC,KAAK,CAAC,EAAC;oBACV,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC;oBACjB,MAAM,GAAG,CAAC;iBACb;qBACI,IAAG,GAAG,CAAC,IAAI,CAAC,EAAC;oBACd,IAAG,GAAG,CAAC,IAAI,CAAC,EAAC;wBACT,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC,QAAQ,CAAC;wBACtB,MAAM,GAAG,CAAC;qBACb;yBACI,IAAG,GAAG,CAAC,GAAG,CAAC,EAAC;wBACb,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC;wBACrB,MAAM,GAAG,CAAC;qBACb;iBACJ;qBACI,IAAG,GAAG,CAAC,OAAO,CAAC,EAAC;oBACjB,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC,SAAS,CAAC;oBACvB,MAAM,GAAG,CAAC;iBACb;qBACI,IAAG,GAAG,CAAC,UAAU,CAAC,EAAC;oBACpB,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC,YAAY,CAAC;oBAC1B,MAAM,GAAG,CAAC;iBACb;qBACI,IAAG,GAAG,CAAC,MAAM,CAAC,EAAC;oBAChB,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC,QAAQ,CAAC;oBACtB,MAAM,GAAG,CAAC;iBACb;qBACI,IAAG,GAAG,CAAC,KAAK,CAAC,EAAC;oBACf,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC;oBACrB,MAAM,GAAG,CAAC;iBACb;qBACI,IAAG,GAAG,CAAC,QAAQ,CAAC,EAAC;oBAClB,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC,UAAU,CAAA;oBACvB,MAAM,GAAG,CAAC;iBACb;qBACI,IAAG,GAAG,CAAC,WAAW,CAAC,EAAC;oBACrB,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC,aAAa,CAAC;oBAC3B,MAAM,GAAG,CAAC;iBACb;qBACI,IAAG,GAAG,CAAC,MAAM,CAAC,EAAC;oBAChB,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC,QAAQ,CAAC;oBACtB,MAAM,GAAG,CAAC;iBACb;qBACI,IAAG,CAAC,IAAI,GAAG,EAAC;oBACb,EAAE,EAAE,CAAC;oBACL,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC,SAAS,CAAC;oBACvB,MAAM,GAAG,CAAC;iBACb;gBACD,GAAG,CAAC,GAAG,CAAC,CAAC;YACb,KAAK,GAAG;gBACJ,EAAE,EAAE,CAAC;gBACL,IAAG,SAAS,EAAC;oBACT,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC,cAAc,CAAC;oBAC5B,MAAM,GAAG,CAAC;iBACb;qBACI;oBACD,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC;oBACnB,KAAK,CAAC,GAAG,GAAG,EAAE,CAAC;oBACf,IAAI,EAAE,GAAG,CAAC,CAAC;oBACX,OAAM,EAAE,GAAG,CAAC,EAAC;wBACT,IAAG,GAAG,EAAE,EAAC;4BACL,MAAM,IAAIA,gBAAC,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;yBACvC;wBACD,IAAG,CAAC,IAAI,GAAG,EAAC;4BACR,EAAE,EAAE,CAAC;4BACL,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC;yBAClB;6BAEI,IAAG,CAAC,IAAI,GAAa,EAAC;4BACvB,EAAE,EAAE,CAAC;4BACL,EAAE,GAAG,CAAC,KAAK,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;yBAC9B;6BACI;4BACD,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC;yBAClB;wBACD,EAAE,EAAE,CAAC;qBACR;oBACD,MAAM,GAAG,CAAC;iBACb;YACL,KAAK,GAAG;gBACJ,EAAE,EAAE,CAAC;gBACL,IAAG,CAAC,KAAK,GAAG,EAAC;oBACT,EAAE,EAAE,CAAC;oBACL,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC;oBACjB,OAAM,CAAW,KAAK,IAAI,IAAI,CAAC,GAAG,EAAE,EAAC;wBACjC,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC;wBACf,EAAE,EAAE,CAAC;qBACR;oBACD,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC,YAAY,CAAC;oBAC1B,MAAM,GAAG,CAAC;iBACb;qBACI,IAAG,CAAC,KAAK,GAAG,EAAC;oBACd,EAAE,EAAE,CAAC;oBACL,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC;oBACjB,OAAM,CAAC,GAAG,EAAE,EAAC;wBACT,IAAG,CAAC,KAAK,GAAG,EAAC;4BACT,EAAE,EAAE,CAAC;4BACL,IAAG,CAAC,KAAK,GAAG,EAAC;gCACT,EAAE,EAAE,CAAC;gCACL,MAAM;6BACT;iCACI,IAAG,GAAG,EAAE,EAAC;gCACV,MAAM;6BACT;iCACI;gCACD,KAAK,CAAC,GAAG,IAAI,GAAG,CAAC;6BACpB;yBACJ;6BACI;4BACD,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC;4BACf,EAAE,EAAE,CAAC;yBACR;qBACJ;oBACD,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC,aAAa,CAAC;oBAC3B,MAAM,GAAG,CAAC;iBACb;gBACD,GAAG,CAAC,GAAG,CAAC,CAAC;YACb,KAAK,GAAG;gBACJ,EAAE,EAAE,CAAC;gBACL,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC;gBAChB,MAAM,GAAG,CAAC;YACd,KAAK,GAAG;gBACJ,EAAE,EAAE,CAAC;gBACL,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC;gBACjB,MAAM,GAAG,CAAC;YACd,KAAK,GAAG;gBACJ,EAAE,EAAE,CAAC;gBACL,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC;gBACnB,MAAM,GAAG,CAAC;YACd,KAAK,GAAG;gBACJ,EAAE,EAAE,CAAC;gBACL,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC;gBACjB,MAAM,GAAG,CAAC;YACd,KAAK,GAAG;gBACJ,EAAE,EAAE,CAAC;gBACL,IAAG,CAAW,IAAI,GAAG,EAAC;oBAClB,EAAE,EAAE,CAAC;oBACL,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC;oBACnB,MAAM,GAAG,CAAC;iBACb;qBACI;oBACD,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC;oBAClB,MAAM,GAAG,CAAC;iBACb;YACL,KAAK,IAAI,CAAC;YACV,KAAK,GAAG;gBACJ,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC;gBACpB,KAAK,CAAC,GAAG,GAAG,YAAY,EAAE,CAAC;gBAC3B,MAAM,GAAG,CAAC;YACd,KAAK,GAAG;gBACJ,EAAE,EAAE,CAAC;gBACL,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC;gBAChB,MAAM,GAAG,CAAC;YACd,KAAK,GAAG;gBACJ,EAAE,EAAE,CAAC;gBACL,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC;gBAChB,MAAM,GAAG,CAAC;YACd,KAAK,GAAG;gBACJ,EAAE,EAAE,CAAC;gBACL,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC;gBACnB,MAAM,GAAG,CAAC;YACd,KAAK,GAAG;gBACJ,EAAE,EAAE,CAAC;gBACL,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC;gBAClB,MAAM,GAAG,CAAC;YACd,KAAK,GAAG;gBACJ,EAAE,EAAE,CAAC;gBACL,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC,QAAQ,CAAC;gBACtB,MAAM,GAAG,CAAC;YACd,KAAK,GAAG;gBACJ,EAAE,EAAE,CAAC;gBACL,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC;gBAClB,MAAM,GAAG,CAAC;YACd,KAAK,GAAG;gBACJ,EAAE,EAAE,CAAC;gBACL,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC;gBAClB,MAAM,GAAG,CAAC;YACd,KAAK,GAAG;gBACJ,EAAE,EAAE,CAAC;gBACL,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC;gBAClB,MAAM,GAAG,CAAC;YACd,KAAK,GAAG;gBACJ,EAAE,EAAE,CAAC;gBACL,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC;gBACjB,MAAM,GAAG,CAAC;YACd,KAAK,GAAG;gBACJ,EAAE,EAAE,CAAC;gBACL,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC;gBACjB,MAAM,GAAG,CAAC;YACd,KAAK,GAAG;gBACJ,EAAE,EAAE,CAAC;gBACL,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC;gBACnB,MAAM,GAAG,CAAC;YACd;gBACI,IAAG,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,EAAC;oBACpB,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC;oBAClB,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC;oBACd,EAAE,EAAE,CAAC;oBACL,OAAM,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,EAAC;wBACpC,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC;wBACf,EAAE,EAAE,CAAC;qBACR;oBACD,MAAM,GAAG,CAAC;iBACb;gBACD,EAAE,EAAE,CAAC;gBACL,GAAG,EAAE,CAAC;SACb;QAAA,AAAC;KAEL;IAAA,AAAC;IACF,OAAO;QACH,IAAI,EAAE,IAAI;QACV,IAAI,EAAE,UAAS,CAAc;YACzB,MAAM,GAAG,CAAC,CAAC;YACX,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC;SAChB;KACJ,CAAC;CACL;AAED,eAAe,OAAO,EAAE,GAAY;IAChC,IAAI,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC;IACxB,IAAI,EAAE,GAAG,IAAI,QAAQ,CAAC,GAAG,CAAC,CAAC;IAE3B;QACI,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACvB;IAED,gBAAgB,EAAK;QACjB,IAAG,KAAK,CAAC,EAAE,KAAK,EAAE,EAAC;YACf,MAAM,IAAIA,gBAAC,CAAC,wBAAqB,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,wBAAiB,CAAC,CAAC,EAAE,CAAC,OAAG,EAAC,KAAK,CAAC,IAAI,CAAC,CAAC;SACrF;QACD,EAAE,EAAE,CAAC;KACR;IAED,qBAAqB,EAAK,EAAE,EAAsC;QAC9D,IAAI,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC;QACpB,IAAI,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;QACtB,MAAM,CAAC,EAAE,CAAC,CAAC;QACX,EAAE,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;KACjB;IAKD;QACI,OAAO,EAAE,CAAC;QACV,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;QACpB,KAAK,EAAE,CAAC;QACR,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;KACjB;IAED,kBAAkB,KAAY;QAC1B,GAAE;YACE,IAAG,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC,MAAM,EAAC;gBACrB,EAAE,CAAC,eAAe,CAAC,KAAK,CAAC,GAAG,EAAC,KAAK,EAAC,YAAY,CAAC,MAAM,EAAC,KAAK,CAAC,IAAI,CAAC,CAAC;aACtE;iBACI,IAAG,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC,IAAI,EAAC;gBACxB,EAAE,CAAC,eAAe,CAAC,KAAK,CAAC,GAAG,EAAC,KAAK,EAAC,YAAY,CAAC,IAAI,EAAC,KAAK,CAAC,IAAI,CAAC,CAAC;aACpE;iBACI,IAAG,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,EAAC;gBACtB,EAAE,EAAE,CAAC;gBACL,IAAI,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC;gBACtB,IAAI,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC;gBACvB,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;gBACf,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;gBACb,EAAE,CAAC,eAAe,CAAC,KAAK,EAAE,KAAK,EAAE,YAAY,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;aAC/D;iBACI;gBACD,MAAM,IAAIA,gBAAC,CAAC,wBAAqB,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,0CAAoC,EAAC,KAAK,CAAC,IAAI,CAAC,CAAC;aAChG;YACD,EAAE,EAAE,CAAC;SACR,QAAM,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC,MAAM,IAAI,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC,IAAI,IAAI,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,EAAE;QAC1E,EAAE,CAAC,KAAK,EAAE,CAAC;KACd;IAUD;QACI,OAAM,CAAC,EAAC;YACJ,QAAO,KAAK,CAAC,EAAE;gBACX,KAAK,CAAC,CAAC,QAAQ;oBACX,EAAE,EAAE,CAAC;oBACL,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;oBACrB,MAAM;gBACV,KAAK,CAAC,CAAC,SAAS;oBACZ,EAAE,EAAE,CAAC;oBACL,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;oBACtB,MAAM;gBACV,KAAK,CAAC,CAAC,YAAY;oBACf,EAAE,EAAE,CAAC;oBACL,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;oBACpB,MAAM;gBACV,KAAK,CAAC,CAAC,GAAG;oBACN,EAAE,EAAE,CAAC;oBACL,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,CAAC;oBACrB,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;oBACf,IAAI,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC;oBAClB,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;oBACjB,EAAE,CAAC,MAAM,CAAC,IAAI,EAAC,CAAC,CAAC,CAAC;oBAClB,MAAM;gBACV,KAAK,CAAC,CAAC,OAAO;oBACV,EAAE,EAAE,CAAC;oBACL,OAAO,EAAE,CAAC;oBACV,MAAM;gBACV,KAAK,CAAC,CAAC,UAAU;oBACb,EAAE,EAAE,CAAC;oBACL,WAAW,CAAC,CAAC,CAAC,KAAK,EAAE,UAAC,GAAG,EAAE,IAAI,IAAK,OAAA,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,GAAA,CAAC,CAAC;oBACvD,MAAM;gBACV,KAAK,CAAC,CAAC,aAAa;oBAChB,EAAE,EAAE,CAAC;oBACL,WAAW,CAAC,CAAC,CAAC,KAAK,EAAE,UAAC,GAAG,EAAE,IAAI,IAAK,OAAA,EAAE,CAAC,WAAW,CAAC,GAAG,CAAC,GAAA,CAAC,CAAC;oBACzD,MAAM;gBACV,SAAQ,OAAO;aAClB;SACJ;KACJ;IAKD;QACI,EAAE,CAAC,UAAU,CAAC,UAAU,EAAE,CAAC;QAC3B,IAAG,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,EAAC;YACjB,EAAE,EAAE,CAAC;YACL,MAAM,EAAE,CAAC;YACT,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;SAChB;aACI;YACD,EAAE,CAAC,UAAU,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;SACxC;QACD,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QACf,OAAM,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC,IAAI,EAAC;YACtB,OAAO,EAAE,CAAC;SACb;QACD,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;KAClB;IAOD;QACI,IAAG,KAAK,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,IAAI,EAAC;YACvB,IAAI,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC;YACtB,IAAI,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;YACtB,EAAE,EAAE,CAAC;YACL,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YACd,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;YACb,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;YACtC,MAAM,EAAE,CAAC;YACT,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC;YACvB,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;SAChB;aACI,IAAG,KAAK,CAAC,EAAE,GAAE,CAAC,KAAI,CAAC,CAAC,EAAE,EAAC;YACxB,EAAE,EAAE,CAAC;YACL,EAAE,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;YACzB,IAAI,KAAK,GAAG,UAAU,CAAC;YACvB,IAAI,IAAI,GAAgB,EAAE,CAAC;YAC3B,IAAG,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC,IAAI,EAAC;gBACnB,IAAI,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC;gBACtB,IAAI,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC;gBACvB,KAAK,GAAG,KAAK,CAAC;gBAEd,EAAE,EAAE,CAAC;gBACL,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;gBAChB,MAAM,EAAE,CAAC;gBACT,IAAI,IAAI,GAAG,EAAE,CAAC,QAAQ,CAAC,KAAK,EAAE,EAAE,CAAC,UAAU,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;gBAClE,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;aAChC;iBACI;gBACD,MAAM,EAAE,CAAC;aACZ;YACD,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;YACb,IAAG,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC,KAAK,EAAC;gBACpB,EAAE,EAAE,CAAC;gBACL,UAAU,CAAC,IAAI,CAAC,CAAC;aACpB;YACD,EAAE,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;SAClC;KACJ;IAMD,oBAAoB,IAAiB;QACjC,IAAG,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC,IAAI,EAAC;YAEnB,KAAK,CAAC,EAAE,IAAI,CAAC,CAAC;YACd,EAAE,EAAE,CAAC;YACL,SAAS,CAAC,IAAI,CAAC,CAAC;YAChB,OAAM,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC,KAAK,EAAC;gBACvB,EAAE,EAAE,CAAC;gBACL,SAAS,CAAC,IAAI,CAAC,CAAC;aACnB;YACD,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;SAClB;aACI,IAAG,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC,KAAK,EAAC;YACzB,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;YAC9C,EAAE,EAAE,CAAC;SACR;aACI;YACD,MAAM,IAAIA,gBAAC,CAAC,wBAAqB,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,OAAG,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;SAChE;KACJ;IAQD,mBAAmB,IAAiB;QAChC,IAAG,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC,IAAI,EAAC;YACnB,EAAE,EAAE,CAAC;YACL,IAAI,IAAE,GAAG,KAAK,CAAC,GAAG,CAAC;YACnB,IAAI,MAAI,GAAG,KAAK,CAAC,IAAI,CAAC;YACtB,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YACf,EAAE,CAAC,UAAU,CAAC,cAAc,CAAC,IAAI,CAAC,IAAE,EAAE,UAAC,EAAE,EAAE,EAAE;gBACzC,IAAG,EAAE,EAAC;oBACF,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;iBAC5B;qBACI;oBACD,GAAG,CAAC,GAAG,CAAC,IAAI,gBAAgB,CAAC,aAAU,IAAE,oBAAgB,EAAE,MAAI,CAAC,CAAC,CAAC;iBACrE;aACJ,CAAC,CAAC;SACN;aACI,IAAG,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC,IAAI,EAAC;YACxB,EAAE,EAAE,CAAC;YACL,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;SACzB;aACI,IAAG,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC,KAAK,EAAC;YACzB,AACA,EAAE,EAAE,CAAC;YACL,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;SACjD;aACI,IAAG,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC,GAAG,EAAC;YACvB,EAAE,EAAE,CAAC;YACL,IAAI,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC;YAClB,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;YACjB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;SACxB;aACI;YACD,MAAM,IAAIA,gBAAC,CAAC,wBAAqB,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,OAAG,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;SAChE;KACJ;IAKD;QACI,IAAI,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC;QACtB,AACA,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QACf,EAAE,CAAC,UAAU,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QACjC,OAAM,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC,KAAK,EAAC;YACvB,EAAE,EAAE,CAAC;YACL,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC;YAClB,AACA,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YACf,EAAE,CAAC,UAAU,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;SACpC;KACJ;IAKD;QACI,EAAE,CAAC,UAAU,CAAC,UAAU,EAAE,CAAC;QAC3B,QAAQ,EAAE,CAAC;QACX,EAAE,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC;QAC7B,OAAM,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,EAAC;YACpB,EAAE,EAAE,CAAC;YACL,QAAQ,EAAE,CAAC;YACX,EAAE,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC;SAChC;QACD,EAAE,CAAC,UAAU,CAAC,UAAU,EAAE,CAAC;KAC9B;IAKD;QACI,GAAE;YACE,OAAO,EAAE,CAAC;SACb,QAAM,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,IAAI,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,IAAI,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC,GAAG,EAAE;KACxE;IAKD;QACI,EAAE,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;QAC5B,WAAW,EAAE,CAAC;QACd,QAAO,KAAK,CAAC,EAAE;YACX,KAAK,CAAC,CAAC,IAAI;gBACP,EAAE,EAAE,CAAC;gBACL,EAAE,CAAC,UAAU,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;gBACjC,MAAM;YACV,KAAK,CAAC,CAAC,IAAI;gBACP,EAAE,EAAE,CAAC;gBACL,EAAE,CAAC,UAAU,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;gBACjC,MAAM;YACV,KAAK,CAAC,CAAC,QAAQ;gBACX,EAAE,EAAE,CAAC;gBACL,EAAE,CAAC,UAAU,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;gBACjC,MAAM;YACV;gBACI,EAAE,CAAC,UAAU,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;SACvC;KACJ;IAQD;QACI,IAAG,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC,GAAG,EAAC;YAClB,EAAE,EAAE,CAAC;YACL,MAAM,EAAE,CAAC;YACT,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;SACjB;aACI,IAAG,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC,IAAI,EAAC;YACxB,EAAE,EAAE,CAAC;YACL,KAAK,EAAE,CAAC;YACR,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;SAClB;aACI,IAAG,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC,MAAM,EAAC;YAC1B,IAAI,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC;YAClB,EAAE,EAAE,CAAC;YACL,EAAE,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;SAC9B;aACI,IAAG,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,EAAC;YACtB,EAAE,EAAE,CAAC;YACL,IAAI,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC;YACtB,IAAI,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;YACtB,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YACf,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;YACb,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;SACrC;aACI;YACD,MAAM,IAAIA,gBAAC,CAAC,wBAAqB,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,OAAG,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;SAChE;KACJ;IAKD;QACI,IAAG,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC,KAAK,EAAC;YACpB,EAAE,EAAE,CAAC;YACL,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;SAChC;aACI;YACD,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;SACjC;QACD,IAAG,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC,IAAI,EAAC;YACnB,SAAS,EAAE,CAAC;YACZ,OAAM,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC,KAAK,EAAC;gBACvB,EAAE,EAAE,CAAC;gBACL,SAAS,EAAE,CAAC;aACf;SACJ;KACJ;IAKD;QACI,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,CAAC;QACrB,IAAI,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC;QACvB,IAAI,EAAE,GAAG,IAAI,CAAC;QACd,IAAI,KAAK,GAAG,KAAK,CAAC;QAClB,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;QACjB,IAAG,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC,IAAI,EAAC;YACnB,EAAE,EAAE,CAAC;YACL,EAAE,GAAG,KAAK,CAAC,GAAG,CAAC;YACf,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC;YACnB,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;SACpB;QACD,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;KACpD;IAKD;QACI,IAAI,EAAE,CAAC;QACP,OAAM,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC,SAAS,EAAC;YAC3B,IAAI,EAAE,CAAC;SACV;QACD,EAAE,EAAE,CAAC;KACR;IAKD;QACI,IAAI,GAAG,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC;QACxB,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QACf,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;QAChB,EAAE,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,EAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACjC,SAAS,EAAE,CAAC;QACZ,EAAE,CAAC,UAAU,EAAE,CAAC;QAChB,OAAM,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,EAAC;YACpB,EAAE,EAAE,CAAC;YACL,EAAE,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,EAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACjC,SAAS,EAAE,CAAC;YACZ,EAAE,CAAC,UAAU,EAAE,CAAC;SACnB;QACD,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;KACjB;IAMD;QACI,IAAG,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC,OAAO,EAAC;YACtB,EAAE,EAAE,CAAC;YACL,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YACd,OAAO,EAAE,CAAC;YACV,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;SACjB;QACD,OAAM,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC,IAAI;eAClB,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE;eACjB,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC,MAAM;eACrB,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC,KAAK;eACpB,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC,IAAI,EAAC;YACvB,QAAQ,EAAE,CAAC;SACd;QACD,IAAG,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC,QAAQ,EAAC;YACvB,EAAE,EAAE,CAAC;YACL,IAAI,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC;YAClB,IAAI,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;YAEtB,IAAG,KAAK,CAAC,EAAO,KAAK,CAAC,CAAC,MAAM,EAAC;gBAC1B,EAAE,CAAC,YAAY,CAAC,CAAC,EAAC,YAAY,CAAC,MAAM,EAAC,IAAI,CAAC,CAAC;gBAC5C,EAAE,EAAE,CAAC;aACR;iBAEI,IAAG,KAAK,CAAC,EAAO,KAAK,CAAC,CAAC,EAAE,EAAC;gBAC3B,EAAE,EAAE,CAAC;gBACL,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC;gBACd,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;gBAClB,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;gBACf,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;gBACb,EAAE,CAAC,YAAY,CAAC,CAAC,EAAE,YAAY,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;aAChD;iBAEI,IAAG,KAAK,CAAC,EAAO,KAAK,CAAC,CAAC,IAAI,EAAC;gBAC7B,EAAE,CAAC,YAAY,CAAC,CAAC,EAAC,YAAY,CAAC,IAAI,EAAC,IAAI,CAAC,CAAC;gBAC1C,EAAE,EAAE,CAAC;aACR;iBACI;gBACD,MAAM,IAAIA,gBAAC,CAAC,wBAAqB,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,gCAA4B,EAAC,KAAK,CAAC,IAAI,CAAC,CAAC;aACxF;YAED,IAAG,KAAK,CAAC,EAAO,KAAK,CAAC,CAAC,KAAK,IAAI,KAAK,CAAC,EAAO,KAAK,CAAC,CAAC,IAAI,EAAC;gBACrD,IAAI,IAAI,GAAgB,EAAE,CAAC;gBAC3B,UAAU,CAAC,IAAI,CAAC,CAAC;gBACjB,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;aACtB;SACJ;KACJ;IAKD;QACI,IAAI,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC;QACtB,IAAI,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC;QACvB,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QACf,EAAE,CAAC,aAAa,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QAC/B,OAAM,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC,KAAK,EAAC;YACvB,EAAE,EAAE,CAAC;YACL,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC;YAClB,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC;YACnB,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YACf,EAAE,CAAC,aAAa,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;SAClC;KACJ;IAKD;QACI,IAAI,CAAC,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC;QACtB,IAAG,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC,IAAI,EAAC;YACnB,EAAE,EAAE,CAAC;YAEL,IAAG,KAAK,CAAC,EAAO,KAAK,CAAC,CAAC,GAAG,EAAC;gBACvB,EAAE,EAAE,CAAC;gBACL,EAAE,CAAC,iBAAiB,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC;gBACpC,CAAC,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC;aACrB;iBACI;gBACD,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,EAAC,YAAY,CAAC,IAAI,EAAC,CAAC,CAAC,IAAI,CAAC,CAAC;gBAC/C,OAAO;aACV;SACJ;QACD,IAAG,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC,IAAI,EAAC;YACnB,EAAE,EAAE,CAAC;YACL,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,EAAC,YAAY,CAAC,IAAI,EAAC,CAAC,CAAC,IAAI,CAAC,CAAC;SAClD;aACI,IAAG,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC,MAAM,EAAC;YAC1B,EAAE,EAAE,CAAC;YACL,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,EAAC,YAAY,CAAC,MAAM,EAAC,CAAC,CAAC,IAAI,CAAC,CAAC;SACpD;aACI,IAAG,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,EAAC;YACtB,EAAE,EAAE,CAAC;YACL,CAAC,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC;YAClB,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YACf,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;YACb,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,EAAC,YAAY,CAAC,KAAK,EAAC,CAAC,CAAC,IAAI,CAAC,CAAC;SACnD;QACD,IAAG,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC,KAAK,IAAI,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC,IAAI,EAAC;YAC3C,IAAI,IAAI,GAAgB,EAAE,CAAC;YAC3B,UAAU,CAAC,IAAI,CAAC,CAAC;YACjB,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;SAEtB;KACJ;IAKD,AAMA,EAAE,EAAE,CAAC;IACL,IAAI,EAAE,CAAC;IAEP,OAAO,EAAE,CAAC,KAAK,EAAE,CAAC;CACrB;AAED,uBAAuB,OAAO;IAC1B,OAAO;QACH,IAAI,EAAE,UAAS,KAAY;YACvB,GAAE;gBACE,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACvB,QAAM,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC,aAAa,IAAI,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC,YAAY,EAAE;SACvE;QACD,IAAI,EAAE,UAAS,CAAC;YACZ,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SACnB;KACJ,CAAC;CACL;AAED,IAAI,aAAa,GAAG;IAChB,CAAC,EAAE,CAAC;IACJ,KAAK,EAAE,KAAK;IACZ,OAAO,EAAE,IAAI;CAChB,CAAC;AAEF,qBAAqB,MAAmB,EAAE,GAAY;IAClD,IAAI,OAAO,GAAG,IAAI,EAAE,CAAC;IACrB,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAErB,OAAO,KAAK,CAAC,aAAa,CAAC,OAAO,CAAC,EAAE,GAAG,CAAC,CAAC;CAC7C;;AC57BD,IAAYC,QAIX;AAJD,WAAY,MAAM;IACd,mCAAQ,CAAA;IACR,qCAAK,CAAA;IACL,uCAAM,CAAA;CACT,EAJWA,QAAM,KAANA,QAAM,QAIjB;AAED;IASI,cAAY,IAAU,EAAE,EAAW;QAR5B,WAAM,GAAW,CAAC,CAAC;QAInB,UAAK,GAAY,IAAI,CAAC;QACtB,eAAU,GAAGA,QAAM,CAAC,IAAI,CAAC;QACzB,YAAO,GAAY,IAAI,CAAC;QAG3B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,GAAG,GAAG,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;KAC9C;IACD,uBAAQ,GAAR;QACI,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;KAC7C;IACD,uBAAQ,GAAR;QACI,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KACrC;IACD,uBAAQ,GAAR,UAAS,GAAsD;QAAtD,oBAAA,EAAA,QAAsD;QAC3D,IAAI,OAAO,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,OAAO,KAAK,KAAK,CAAC;QAC5C,IAAI,WAAW,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,WAAW,KAAK,KAAK,CAAC;QACpD,AACA,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,OAAO,GAAG,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC;QAEzH,IAAI,CAAC,QAAQ,KAAK,GAAG,IAAI,GAAG,CAAC,CAAC;QAC9B,IAAG,WAAW,EAAC;YACX,QAAO,IAAI,CAAC,UAAU;gBAClB,KAAKA,QAAM,CAAC,IAAI;oBAAE,GAAG,IAAI,KAAK,CAAC;oBAAA,MAAM;gBACrC,KAAKA,QAAM,CAAC,KAAK;oBAAE,GAAG,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,GAAG,CAAC;oBAAA,MAAM;gBACnE,KAAKA,QAAM,CAAC,MAAM;oBAAE,GAAG,IAAI,KAAK,CAAC;oBAAA,MAAM;aAC1C;SACJ;QACD,OAAO,GAAG,CAAC;KACd;IACD,mBAAI,GAAJ;QACI,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC;KAC9C;IACD,gCAAiB,GAAjB,UAAkB,CAAO;QACrB,OAAO,IAAI,CAAC,UAAU,KAAKA,QAAM,CAAC,MAAM,IAAI,CAAC,CAAC,UAAU,KAAKA,QAAM,CAAC,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;KACrJ;IACD,2BAAY,GAAZ,UAAa,GAAa;QACtB,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACpB,IAAI,CAAC,CAAC;QACN,KAAI,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;YACjD,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAC7B,IAAG,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,EAAC;gBAChB,GAAG,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;gBACnB,MAAM;aACT;iBACI;gBAED,IAAI,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAA;gBACrC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;gBAChB,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBACd,IAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAC;oBACjB,MAAM;iBACT;aACJ;SACJ;QACD,IAAG,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,EAAC;YAC1B,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACvB;KACJ;IAxDM,SAAI,GAAS,EAAU,CAAC;IAyDnC,WAAC;CAAA,IAAA;AAED;IAaI,iBAAY,CAAU;QAXtB,OAAE,GAA0B,EAAE,CAAC;QAC/B,aAAQ,GAAY,KAAK,CAAC;QAE1B,UAAK,GAAW,CAAC,CAAC,CAAC;QACnB,eAAU,GAAW,CAAC,CAAC;QAEvB,SAAI,GAAY,IAAI,CAAC;QACrB,SAAI,GAAY,IAAI,CAAC;QAErB,WAAM,GAAa,EAAE,CAAC;QAGlB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;KACpB;IAED,qBAAG,GAAH,UAAI,IAAU,EAAE,MAAc,EAAE,EAAW,EAAE,GAAa,EAAE,KAAc;QACtE,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,MAAM,CAAC;QAClC,IAAI,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACpB,IAAG,EAAE,KAAK,SAAS,EAAC;YAChB,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,IAAI,EAAC,EAAE,CAAC,CAAC;YAC1B,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC;YAClB,IAAG,GAAG,EAAC;gBACH,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;aACpB;YACD,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YACf,OAAO,IAAI,CAAC;SACf;aACI,IAAG,GAAG,EAAC;YACR,IAAI,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAC5B,IAAG,KAAK,IAAI,GAAG,IAAI,EAAE,CAAC,QAAQ,EAAE,EAAC;gBAC7B,EAAE,CAAC,UAAU,GAAGA,QAAM,CAAC,IAAI,CAAC;aAC/B;YACD,GAAG,KAAK,EAAE,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC;YAC3B,OAAO,GAAG,CAAC;SACd;KACJ;IACD,0BAAQ,GAAR;KAEC;IACD,yBAAO,GAAP;QACI,IAAI,OAAO,GAAG,IAAI,CAAC;QACnB,IAAI,IAAI,GAAG,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;QAC3C,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,OAAM,OAAO,EAAC;YACV,OAAO,GAAG,KAAK,CAAC;YAChB,KAAI,IAAI,IAAI,IAAI,IAAI,CAAC,EAAE,EAAC;gBACpB,IAAI,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;gBACzB,IAAG,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,QAAQ,EAAE,EAAC;oBAC/B,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;oBAC5B,IAAG,KAAK,GAAG,CAAC,EAAC;wBACT,IAAI,CAAC,SAAS,EAAE,CAAC;wBACjB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;wBACxB,IAAI,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,KAAK,GAAG,CAAC,EAAC,UAAS,IAAI;4BAC3C,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAC,CAAC,EAAC,KAAK,EAAC,IAAI,EAAC,KAAK,CAAC,IAAI,OAAO,CAAC;4BACvD,OAAO,KAAK,CAAC;yBAChB,CAAC,CAAC;qBACN;iBACJ;gBACD,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;aACxB;SACJ;KACJ;IACD,0BAAQ,GAAR,UAAS,GAAiD;QACtD,AACA,IAAI,WAAW,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,WAAW,KAAK,KAAK,CAAC;QACpD,IAAI,IAAI,GAAG,EAAE,WAAW,EAAE,WAAW,EAAE,CAAC;QACxC,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrC,IAAG,IAAI,CAAC,KAAK,KAAK,IAAI,EAAC;YACnB,GAAG,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC;SAC5B;aACI;YACD,GAAG,IAAI,KAAK,CAAC;SAChB;QACD,IAAG,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAC;YACtB,GAAG,IAAI,eAAe,CAAC;YACvB,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;gBACrC,IAAG,CAAC,GAAG,CAAC,EAAC;oBACL,GAAG,IAAI,GAAG,CAAC;iBACd;gBACD,GAAG,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;aAC/B;SACJ;QACD,GAAG,IAAI,GAAG,GAAG,IAAI,CAAC;QAClB,KAAI,IAAI,IAAI,IAAI,IAAI,CAAC,EAAE,EAAC;YACpB,GAAG,IAAI,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;SAC9C;QACD,OAAO,GAAG,CAAC;KACd;IACD,4BAAU,GAAV;QACI,IAAI,GAAG,GAAG,CAAC,CAAC;QACZ,KAAI,IAAI,IAAI,IAAI,IAAI,CAAC,EAAE,EAAC;YACpB,IAAI,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;YACzB,IAAG,IAAI,CAAC,QAAQ,EAAC;gBACb,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;aAC/D;SACJ;QACD,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC;KACtB;IACD,yBAAO,GAAP,UAAQ,EAAsB;QAC1B,KAAI,IAAI,CAAC,IAAI,IAAI,CAAC,EAAE,EAAC;YACjB,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;SAClB;KACJ;IACD,4BAAU,GAAV,UAAW,CAAU;QACjB,KAAI,IAAI,EAAE,IAAI,IAAI,CAAC,EAAE,EAAC;YAClB,IAAI,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YACtB,IAAI,KAAK,GAAG,KAAK,EAAC,WAAW,GAAG,KAAK,EAAC,YAAY,GAAG,KAAK,CAAC;YAC3D,KAAI,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE,EAAC;gBACf,IAAI,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;gBACnB,IAAG,GAAG,CAAC,IAAI,CAAC,KAAK,KAAK,GAAG,CAAC,IAAI,CAAC,KAAK,IAAI,GAAG,CAAC,MAAM,KAAK,GAAG,CAAC,MAAM,EAAC;oBAC9D,YAAY,GAAG,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;oBACvC,KAAK,GAAG,GAAG,CAAC,QAAQ,IAAI,GAAG,CAAC,QAAQ,CAAC;iBACxC;gBACD,WAAW,GAAG,WAAW,IAAI,GAAG,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC;gBACxD,IAAG,GAAG,CAAC,QAAQ,IAAI,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,SAAS,EAAC;oBACzC,OAAO,KAAK,CAAC;iBAChB;aACJ;YACD,IAAG,GAAG,CAAC,QAAQ,IAAI,CAAC,KAAK,IAAI,WAAW,IAAI,CAAC,YAAY,EAAC;gBACtD,OAAO,KAAK,CAAC;aAChB;SACJ;QACD,OAAO,IAAI,CAAC;KACf;IACD,yBAAO,GAAP,UAAQ,CAAU;QACd,IAAI,GAAG,GAAG,KAAK,CAAC;QAChB,KAAI,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,EAAC;YACd,IAAI,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACjB,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,EAAC,EAAE,CAAC,MAAM,EAAC,EAAE,CAAC,QAAQ,EAAC,EAAE,CAAC,GAAG,EAAC,IAAI,CAAC,IAAI,GAAG,CAAC;SACpE;QACD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;QAC1B,OAAO,GAAG,CAAC;KACd;IACL,cAAC;CAAA;;AC/MD;IAII;QADO,SAAI,GAAW,CAAC,CAAC;QAEpB,IAAI,CAAC,IAAI,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAC,CAAC;QAClD,IAAI,CAAC,IAAI,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAC,CAAC;QAClD,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAC3B,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;KAC9B;IACD,qBAAM,GAAN,UAAO,CAAc;QACjB,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;QACxB,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACnB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACxB,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,IAAI,EAAE,CAAC;KACf;IACD,mBAAI,GAAJ;QACI,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;QACvB,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC;QACxB,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACxB,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,IAAI,EAAE,CAAC;QACZ,OAAO,CAAC,CAAC,IAAI,CAAC;KACjB;IACD,sBAAO,GAAP;QACI,OAAO,IAAI,CAAC,IAAI,KAAK,CAAC,CAAC;KAC1B;IACD,sBAAO,GAAP,UAAQ,EAAkB;QACtB,KAAI,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,EAAC,CAAC,KAAK,IAAI,CAAC,IAAI,EAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAC;YAClD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;SACd;KACJ;IACD,qBAAM,GAAN,UAAO,CAAc;QACjB,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC;QACrB,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC;QACrB,IAAI,CAAC,IAAI,EAAE,CAAC;KACf;IACD,uBAAQ,GAAR;QACI,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC;QAClB,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,OAAO;YACH,OAAO,CAAC,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC;SACxD,CAAA;KACJ;IACL,WAAC;CAAA;;yBCrC+B,EAAgB,EAAE,IAAiB,EAAE,QAAuB;IACxF,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;IACf,IAAI,UAAU,GAAG,CAAC,CAAC,UAAU,CAAC;IAC9B,IAAI,OAAO,GAAG,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC;IA8C3B,QAAQ,CAAC,OAAO,CAAC,UAAS,GAAG;QACzB,IAAI,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC;QACvB,IAAI,KAAK,GAAG,EAAE,CAAC;QACf,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,IAAI,KAAK,GAAG,EAAE,CAAC;QACf,AACA,EAAE,CAAC,OAAO,CAAC,WAAS,CAAG,CAAC,CAAC;QACzB,GAAG,CAAC,OAAO,CAAC,UAAS,IAAI;YACrB,EAAE,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,EAAE,WAAW,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;SAC7D,CAAC,CAAC;QACH,IAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAC;YACrB,EAAE,CAAC,OAAO,CAAI,KAAK,yCAAoC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAG,CAAC,CAAC;SAC5E;aACI;YACD,EAAE,CAAC,OAAO,CAAC,KAAK,GAAG,mBAAmB,CAAC,CAAC;SAC3C;QACD,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,UAAU,EAAC,CAAC,EAAE,EAAC;YAC7B,IAAI,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;YACjC,IAAG,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,CAAC,IAAI,EAAC;gBACnC,IAAG,IAAI,CAAC,UAAU,KAAKA,QAAM,CAAC,KAAK,EAAC;oBAChC,KAAK,IAAI,KAAG,KAAK,GAAG,oBAAoB,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,iCAA4B,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,IAAM,CAAC;iBACnH;qBACI;oBACD,MAAM,IAAI,KAAG,KAAK,GAAG,oBAAoB,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,4BAAuB,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAM,CAAC;iBACzG;aACJ;SACJ;QACD,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,OAAO,EAAC,CAAC,EAAE,EAAC;YAC1B,IAAI,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;YAChC,IAAG,IAAI,KAAK,IAAI,EAAC;gBACb,KAAK,IAAI,KAAG,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,sBAAiB,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,IAAM,CAAC;aACnF;SACJ;QACD,EAAE,CAAC,OAAO,CAAC,KAAK,GAAG,MAAM,GAAG,KAAK,CAAC,CAAC;QACnC,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;KAClB,CAAC,CAAC;CACN;AAED;IAOI,oBAAY,CAAU,EAAE,UAAkB;QAD1C,WAAM,GAAa,IAAI,CAAC;QAEpB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,UAAU,GAAG,CAAC,CAAC,UAAU,CAAC;QAC9B,IAAI,OAAO,GAAG,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC;QAC3B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,UAAU,GAAG,UAAU,CAAC,CAAC;QAChD,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,OAAO,GAAG,UAAU,CAAC,CAAC;QAC7C,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;YACpC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;SACxB;QACD,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;YACpC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;SACxB;KACJ;IACD,iCAAY,GAAZ,UAAa,EAAmD;QAC5D,KAAI,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,IAAI,CAAC,UAAU,EAAE,KAAK,EAAE,EAAC;YAChD,KAAI,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,EAAE,EAAC;gBAC5C,IAAI,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;gBACvC,IAAI,IAAI,EAAE,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;aAC/B;SACJ;KACJ;IACD,gCAAW,GAAX,UAAY,EAAgD;QACxD,KAAI,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,IAAI,CAAC,UAAU,EAAE,KAAK,EAAE,EAAC;YAChD,KAAI,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,EAAE,EAAE,EAAE,EAAC;gBACzC,IAAI,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;gBACtC,IAAI,IAAI,EAAE,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;aAC/B;SACJ;KACJ;IACD,gCAAW,GAAX,UAAY,KAAa,EAAE,KAAa;QACpC,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,UAAU,GAAG,KAAK,GAAG,KAAK,CAAC,CAAC;KACxD;IACD,+BAAU,GAAV,UAAW,KAAa,EAAE,EAAU;QAChC,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,GAAG,KAAK,GAAG,EAAE,CAAC,CAAC;KACrD;IACO,+BAAU,GAAlB,UAAmB,KAAa,EAAE,KAAe;QAC7C,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;YACjC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;SAChB;QACD,KAAI,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,UAAU,EAAE,EAAE,EAAE,EAAC;YACzC,IAAI,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YACvC,IAAI,IAAI,IAAI,CAAC,UAAU,KAAKA,QAAM,CAAC,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC;SACzE;QACD,IAAI,GAAG,GAAG,CAAC,CAAC;QACZ,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,KAAK,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;YAC/B,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC,CAAC;SACtC;QACD,OAAO,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;KACpC;IACD,+BAAU,GAAV;QACI,IAAI,CAAC,MAAM,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,KAAK,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QAC3C,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC,EAAE,EAAC;YACnC,IAAI,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;YACpC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;YACrB,IAAG,GAAG,KAAK,CAAC,CAAC,EAAC;gBACV,KAAI,IAAI,EAAE,GAAG,CAAC,EAAC,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,EAAC,EAAE,EAAE,EAAC;oBAC1C,IAAI,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;oBACnC,IAAI,IAAI,IAAI,CAAC,UAAU,KAAKA,QAAM,CAAC,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,KAAK,GAAG;yBACnE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,UAAU,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC;iBACnD;aACJ;SACJ;KACJ;IACL,iBAAC;CAAA;;ACpKD,IAAK,YAEJ;AAFD,WAAK,YAAY;IACb,2CAAM,CAAA;IAAE,2CAAM,CAAA;CACjB,EAFI,YAAY,KAAZ,YAAY,QAEhB;AAAA,AAAC;AACF;IAAA;KAaC;IANG,2BAAQ,GAAR;QACI,OAAO,WAAS,IAAI,CAAC,GAAG,CAAC,UAAU,UAAK,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAa,IAAM;aAClF,KAAK,eAAU,oBAAoB,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,IAAM,CAAA;aACxD,KAAK,mBAAc,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,IAAM,CAAA;aAChD,KAAK,wBAAmB,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAI,CAAA,CAAC;KAC1D;IANM,eAAM,GAAa,CAAC,eAAe,EAAC,cAAc,CAAC,CAAC;IAO/D,eAAC;CAAA,IAAA;uBAE6B,CAAU;IACpC,IAAI,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAC9B,IAAI,IAAI,GAAG,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC;IAC1B,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IACf,IAAI,IAAI,GAAG,IAAI,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;IACtC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACZ,IAAI,CAAC,GAAG,CAAC,KAAK,EAAC,CAAC,EAAC,IAAI,EAAC,IAAI,EAAC,KAAK,CAAC,CAAC;IAClC,OAAO,IAAI,CAAC;CACf;AAKD,qBAA4B,CAAU;IAClC,IAAI,MAAM,GAAG,EAAE,CAAC;IAChB,IAAI,UAAU,GAAG,CAAC,CAAC;IACnB,oBAAoB,IAAI;QACpB,IAAI,CAAC,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QAC1B,IAAG,MAAM,CAAC,CAAC,CAAC,KAAK,SAAS,EAAC;YACvB,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;SAClB;QACD,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACxB;IACD,yBAAyB,GAAG,EAAC,EAAE;QAC3B,IAAI,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC,CAAC;QACjC,IAAG,CAAC,KAAK,SAAS,EAAC;YACf,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,CAAC,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;gBAC3B,IAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAAE,MAAM;aACtB;SACJ;KACJ;IACD,IAAI,KAAK,GAAG,CAAC,CAAC;IACd,IAAI,QAAQ,GAAG,IAAI,IAAI,EAAW,CAAC;IACnC,IAAI,OAAO,GAAG,IAAI,IAAI,EAAW,CAAC;IAClC,IAAI,QAAQ,GAAG,IAAI,IAAI,EAAW,CAAC;IACnC,QAAQ,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;IAElC,OAAM,CAAC,QAAQ,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,EAAC;QAC5C,IAAI,QAAQ,GAAG,IAAI,CAAC;QAEpB,IAAG,CAAC,OAAO,CAAC,OAAO,EAAE,EAAC;YAClB,IAAI,GAAG,GAAG,QAAQ,GAAG,OAAO,CAAC,IAAI,EAAE,CAAC;YACpC,GAAG,CAAC,OAAO,CAAC,UAAS,IAAI;gBACrB,IAAG,IAAI,CAAC,UAAU,KAAKA,QAAM,CAAC,IAAI,EAAC;oBAC/BH,SAAO,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;oBAChC,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;oBAC5B,IAAI,MAAM,GAAG,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC;oBAC5B,MAAM,CAAC,KAAK,GAAG,KAAK,EAAE,CAAC;oBACvB,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;oBAExB,GAAG,CAAC,OAAO,CAAC,UAAS,KAAK;wBACtB,IAAG,KAAK,CAAC,QAAQ,EAAE,EAAC;4BAChB,IAAI,KAAK,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;4BAC7B,IAAG,KAAK,KAAK,KAAK,EAAC;gCACf,KAAK,CAAC,UAAU,GAAGG,QAAM,CAAC,KAAK,CAAC;gCAChC,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC;gCACrB,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAC,IAAI,EAAC,KAAK,CAAC,GAAG,EAAC,KAAK,CAAC,CAAC;6BAChE;yBACJ;qBACJ,CAAC,CAAC;iBACN;aACJ,CAAC,CAAC;YACH,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC;YACpB,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;SACxB;QAGD,OAAM,CAAC,QAAQ,CAAC,OAAO,EAAE,EAAC;YACtB,IAAI,GAAG,GAAG,QAAQ,CAAC,IAAI,EAAE,CAAC;YAC1B,GAAG,CAAC,OAAO,EAAE,CAAC;YACd,GAAG,CAAC,OAAO,CAAC,UAAS,IAAI;gBACrB,IAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAC;oBAChB,IAAI,CAAC,UAAU,GAAGA,QAAM,CAAC,MAAM,CAAC;iBACnC;aACJ,CAAC,CAAC;YACH,IAAI,MAAM,GAAG,IAAI,CAAC;YAElB,eAAe,CAAC,GAAG,EAAC,UAAS,IAAI;gBAC7B,IAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,EAAC;oBACpB,IAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAC;wBACjB,IAAG,IAAI,CAAC,QAAQ,EAAC;4BACb,MAAM,GAAG,IAAI,CAAC;yBACjB;qBACJ;oBAED,IAAG,QAAQ,KAAK,IAAI,EAAC;wBACjB,QAAQ,CAAC,OAAO,CAAC,UAAS,KAAK;4BAC3B,IAAG,KAAK,CAAC,UAAU,KAAKA,QAAM,CAAC,KAAK,IAAI,KAAK,CAAC,KAAK,KAAK,GAAG,EAAC;gCACxD,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC;6BACtB;yBACJ,CAAC,CAAC;qBACN;oBACD,GAAG,GAAG,IAAI,CAAC;oBACX,OAAO,IAAI,CAAC;iBACf;gBACD,OAAO,KAAK,CAAC;aAChB,CAAC,CAAC;YAEH,IAAG,MAAM,KAAK,IAAI,EAAC;gBACf,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;gBACxB,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;gBACvB,MAAM,CAAC,QAAQ,GAAG,KAAK,CAAC;aAC3B;iBAEI,IAAG,GAAG,KAAK,IAAI,EAAC;gBACjB,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;gBACpB,UAAU,CAAC,GAAG,CAAC,CAAC;aACnB;SACJ;QACD,UAAU,EAAE,CAAC;KAChB;IACD,IAAI,CAAC,GAAG,CAAC,CAAC;IACV,QAAQ,CAAC,OAAO,CAAC,UAAS,GAAG;QACzB,GAAG,CAAC,UAAU,GAAG,CAAC,EAAE,CAAC;KACxB,CAAC,CAAC;IAEH,OAAO;QACH,MAAM,EAAE,QAAQ;QAChB,UAAU,EAAE,UAAU;KACzB,CAAC;CACL;AAED,uBAA8B,CAAU,EAAE,QAAuB;IAC7D,IAAI,SAAS,GAAG,EAAE,CAAC;IACnB,2BAA2B,GAAY,EAAE,KAAW,EAAE,MAAY;QAC9D,IAAI,KAAK,GAAG,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;QACvC,IAAG,KAAK,CAAC,KAAK,KAAK,KAAK,CAAC,SAAS,EAAC;YAC/B,IAAI,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC;YAC3B,IAAG,KAAK,KAAK,CAAC,CAAC,EAAC;gBACZ,IAAG,KAAK,GAAG,KAAK,CAAC,EAAE,EAAC;oBAChB,OAAO,MAAM,CAAC;iBACjB;qBACI,IAAG,KAAK,GAAG,KAAK,CAAC,EAAE,EAAC;oBACrB,OAAO,KAAK,CAAC;iBAChB;qBACI;oBACD,IAAG,KAAK,CAAC,KAAK,KAAK,KAAK,CAAC,IAAI,EAAC;wBAC1B,OAAO,MAAM,CAAC;qBACjB;yBACI,IAAG,KAAK,CAAC,KAAK,KAAK,KAAK,CAAC,KAAK,EAAC;wBAChC,OAAO,KAAK,CAAC;qBAChB;yBACI,IAAG,KAAK,CAAC,KAAK,KAAK,KAAK,CAAC,GAAG,EAAC;wBAC9B,OAAO,IAAI,CAAC,IAAI,CAAC;qBACpB;yBACI;wBACDH,SAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;qBACzB;iBACJ;aACJ;SACJ;QACD,IAAI,EAAE,GAAG,IAAI,QAAQ,EAAE,CAAC;QACxB,EAAE,CAAC,IAAI,GAAG,YAAY,CAAC,EAAE,CAAC;QAC1B,EAAE,CAAC,GAAG,GAAG,GAAG,CAAC;QACb,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;QACjB,EAAE,CAAC,IAAI,GAAG,KAAK,CAAC;QAChB,EAAE,CAAC,SAAS,GAAG,MAAM,CAAC;QACtB,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACnB,OAAO,KAAK,CAAC;KAChB;IACD,2BAA2B,GAAY,EAAE,EAAQ,EAAE,EAAQ,EAAE,KAAa;QACtE,IAAI,IAAI,GAAG,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC3B,IAAG,EAAE,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,EAAE,EAAC;YACnE,OAAO,EAAE,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;SAC5C;aACI;YACD,IAAI,IAAI,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE,GAAG,EAAE,CAAC;YACnD,IAAI,SAAS,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE,GAAG,EAAE,CAAC;YACxD,IAAI,EAAE,GAAG,IAAI,QAAQ,EAAE,CAAC;YACxB,EAAE,CAAC,IAAI,GAAG,YAAY,CAAC,EAAE,CAAC;YAC1B,EAAE,CAAC,GAAG,GAAG,GAAG,CAAC;YACb,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC;YAChB,EAAE,CAAC,IAAI,GAAG,IAAI,CAAC;YACf,EAAE,CAAC,SAAS,GAAG,SAAS,CAAC;YACzB,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YACnB,OAAO,IAAI,CAAC;SACf;KACJ;IACD,IAAI,MAAM,GAAG,IAAI,UAAU,CAAC,CAAC,EAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAC7C,QAAQ,CAAC,OAAO,CAAC,UAAS,GAAG;QACzB,GAAG,CAAC,OAAO,CAAC,UAAS,IAAI;YACrB,IAAG,IAAI,CAAC,UAAU,KAAKG,QAAM,CAAC,KAAK,EAAC;gBAChC,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;gBAC5B,IAAG,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,EAAC;oBAEhB,IAAI,MAAM,GAAG,GAAG,CAAC,UAAU,GAAG,CAAC,CAAC,UAAU,GAAG,KAAK,CAAC;oBACnD,IAAI,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;oBACjC,IAAG,KAAK,KAAK,IAAI,EAAC;wBAEd,IAAG,KAAK,CAAC,UAAU,KAAKA,QAAM,CAAC,MAAM,EAAC;4BAClC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,iBAAiB,CAAC,GAAG,EAAC,IAAI,EAAC,KAAK,CAAC,CAAC;yBAC5D;6BACI;4BAEDH,SAAO,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,KAAK,IAAI,CAAC,KAAK,CAAC,CAAC;yBAC9C;qBACJ;yBACI;wBACD,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;qBAC/B;iBACJ;qBACI;oBAED,IAAI,MAAM,GAAG,GAAG,CAAC,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC,MAAM,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;oBAC1D,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;iBAC/B;aACJ;iBACI,IAAG,IAAI,CAAC,UAAU,KAAKG,QAAM,CAAC,MAAM,EAAC;gBACtC,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,CAAC,CAAC,UAAU,EAAC,CAAC,EAAE,EAAC;oBAC/B,IAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,EAAC;wBACxB,IAAI,KAAK,GAAG,GAAG,CAAC,UAAU,GAAG,CAAC,CAAC,UAAU,GAAG,CAAC,CAAC;wBAC9C,IAAI,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;wBAChC,IAAG,KAAK,KAAK,IAAI,EAAC;4BACd,IAAG,KAAK,CAAC,UAAU,KAAKA,QAAM,CAAC,MAAM,EAAC;gCAClC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,iBAAiB,CAAC,GAAG,EAAC,KAAK,EAAC,IAAI,EAAC,CAAC,CAAC,CAAC;6BAC7D;iCACI,IAAG,KAAK,CAAC,UAAU,KAAKA,QAAM,CAAC,KAAK,EAAC;gCACtC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,iBAAiB,CAAC,GAAG,EAAC,KAAK,EAAC,IAAI,CAAC,CAAC;6BAC3D;yBACJ;6BACI;4BACD,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC;yBAC9B;qBACJ;iBACJ;aACJ;iBACI;gBACDH,SAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;aACzB;SACJ,CAAC,CAAC;KACN,CAAC,CAAC;IAEH,OAAO;QACH,MAAM,EAAE,MAAM;QACd,SAAS,EAAE,SAAS;KACvB,CAAC;CACL;;AClQD,mBAAmB,CAAU,EAAE,EAAe,EAAE,MAAgB;IAC5D,IAAI,EAAE,GAAe,EAAE,CAAC;IACxB,KAAiB,UAAM,EAAN,iBAAM,EAAN,oBAAM,EAAN,IAAM;QAAnB,IAAI,KAAK,eAAA;QACT,IAAI,IAAI,SAAU,CAAC;QACnB,IAAG,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,EAAC;YACrB,IAAI,GAAG,CAAC,CAAC,eAAe,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YAC5D,IAAG,IAAI,KAAK,IAAI,EAAC;gBACb,MAAM,IAAIE,SAAC,CAAC,sBAAoB,KAAK,gBAAa,CAAC,CAAC;aACvD;SACJ;aACI;YACD,IAAI,IAAI,GAAG,CAAC,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;YACtC,IAAG,IAAI,CAAC,MAAM,KAAK,CAAC,EAAC;gBACjB,MAAM,IAAIA,SAAC,CAAC,wBAAqB,KAAK,kBAAc,CAAC,CAAC;aACzD;YACD,IAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAC;gBACf,IAAI,GAAG,GAAG,EAAE,CAAC;gBACb,KAAe,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI;oBAAf,IAAI,GAAG,aAAA;oBACP,GAAG,IAAI,MAAI,GAAG,CAAC,GAAG,OAAI,CAAC;iBAC1B;gBACD,MAAM,IAAIA,SAAC,CAAC,wBAAqB,KAAK,uCAAiC,GAAK,CAAC,CAAC;aACjF;YACD,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;SAClB;QACD,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACjB;IACD,IAAI,KAAK,GAAG,CAAE,CAAC,CAAE,CAAC;IAClB,IAAI,KAAK,GAAa,EAAE,CAAC;IACzB,IAAI,GAAG,GAAa,EAAE,CAAC;IACvB;QACI,OAAO,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;KAClC;IACD,eAAe,EAAU;QACrB,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACf,IAAI,IAAI,GAAG,EAAE,CAAC,KAAK,EAAE,CAAC;QAEtB,KAAK,CAAC,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,CAAC;KAE1C;IACD,gBAAgB,IAAU;QACtB,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC;QAChC,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC;QAChC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACzB,IAAI,KAAK,GAAG,EAAE,CAAC,UAAU,CAAC,CAAC,EAAE,EAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,UAAU,CAAC;QAC/D,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACrB;IACD;QACI,IAAI,GAAG,GAAG,EAAE,CAAC;QACb,KAAa,UAAK,EAAL,eAAK,EAAL,mBAAK,EAAL,IAAK;YAAd,IAAI,GAAC,cAAA;YACL,GAAG,IAAI,GAAC,GAAG,GAAG,CAAC;SAClB;QACD,GAAG,IAAI,IAAI,CAAC;QACZ,KAAgB,UAAE,EAAF,SAAE,EAAF,gBAAE,EAAF,IAAE;YAAd,IAAI,IAAI,WAAA;YACR,GAAG,IAAI,oBAAoB,CAAC,IAAI,CAAC,CAAC;YAClC,GAAG,IAAI,GAAG,CAAC;SACd;QACD,OAAO,GAAG,CAAC;KACd;IACD,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;IACjB,GAAE;QACE,IAAI,IAAI,GAAG,EAAE,CAAC,WAAW,CAAC,CAAC,EAAE,EAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;QACvD,IAAG,IAAI,KAAK,IAAI,EAAC;YACb,IAAG,IAAI,KAAK,IAAI,CAAC,IAAI,EAAC;gBAClB,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;gBAC1B,MAAM;aACT;iBACI,IAAG,IAAI,CAAC,UAAU,KAAKC,QAAM,CAAC,KAAK,EAAC;gBACrC,IAAG,EAAE,CAAC,MAAM,KAAK,CAAC,EAAC;oBACf,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;oBACtB,MAAM;iBACT;gBACD,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;aAChC;iBACI,IAAG,IAAI,CAAC,UAAU,KAAKA,QAAM,CAAC,MAAM,EAAC;gBACtC,IAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAC;oBACjB,MAAM;iBACT;aACJ;iBACI;gBACD,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;aACzB;SACJ;aACI;YACD,IAAI,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;YACxB,IAAG,EAAE,KAAK,CAAC,CAAC,EAAC;gBACT,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;aACvB;iBACI;gBACD,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;gBAC1B,MAAM;aACT;SACJ;QACD,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;KACpB,QAAM,IAAI,EAAE;IACb,OAAO,GAAG,CAAC;CACd;;AC9FD,gBAAgB,GAAyC;IACrD,IAAI,CAAC,GAAe,EAAE,CAAC;IACvB,gBAAgB,CAAC,EAAC,GAAG;QACjB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACb,KAAI,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,EAAC,CAAC,GAAG,CAAC,EAAC,CAAC,EAAE,EAAC;YAC/B,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;SACnB;QACD,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;KACd;IACD,OAAO;QACH,GAAG,EAAH,UAAI,CAAW;YACX,IAAI,CAAS,CAAC;YACd,KAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,CAAC,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;gBACvB,IAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAC;oBACrD,MAAM;iBACT;aACJ;YACD,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;SACf;QACD,IAAI,EAAJ;YACI,OAAO,CAAC,CAAC;SACZ;KACJ,CAAC;CACL;AACD;IAEI,kBAAmB,UAAkB,EAAS,GAAW;QAAtC,eAAU,GAAV,UAAU,CAAQ;QAAS,QAAG,GAAH,GAAG,CAAQ;QADlD,OAAE,GAAkB,CAAC,CAAC;KAC+B;IAChE,eAAC;CAAA,IAAA;AAKD,kBAAyB,MAAa;IAClC,eAAe,CAAS,EAAE,CAAS;QAC/B,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QACrB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,EAAC,CAAC,CAAC,CAAC;KAC1E;IACD,aAAa,CAAS,EAAE,EAAU;QAC9B,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,MAAM,CAAC,OAAO,EAAC,CAAC,EAAE,EAAC;YACjC,IAAG,CAAC,KAAK,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC;gBACX,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,CAAC,EAAC,CAAC,EAAE,EAAC;oBACpB,IAAG,CAAC,KAAK,CAAC,CAAC,EAAC,CAAC,GAAG,EAAE,CAAC,EAAC;wBAChB,OAAO,KAAK,CAAC;qBAChB;iBACJ;aACJ;SACJ;QACD,OAAO,IAAI,CAAC;KACf;IACD,kBAAkB,CAAS;QACvB,IAAI,EAAE,GAAG,CAAC,CAAC;QACX,OAAM,CAAC,EAAE,GAAG,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,EAAC,CAAC,EAAE,CAAC,EAAC;YAAE,EAAE,EAAE,CAAC;SAAE;QACzE,OAAM,CAAC,GAAG,CAAC,CAAC,EAAC,EAAE,CAAC,EAAC;YAAE,EAAE,EAAE,CAAC;SAAE;QAC1B,OAAO,EAAE,CAAC;KACb;IACD,IAAI,SAAS,GAAG,MAAM,CAAC,UAAC,CAAC,EAAE,CAAC;QACxB,OAAO,CAAC,CAAC,UAAU,GAAG,CAAC,CAAC,UAAU,GAAG,CAAC,CAAC;YACnC,CAAC,CAAC,UAAU,GAAG,CAAC,CAAC,UAAU,GAAG,CAAC,GAAG,CAAC,CAAC;KAC3C,CAAC,CAAC;IACH,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,MAAM,CAAC,IAAI,EAAC,CAAC,EAAE,EAAC;QAC9B,SAAS,CAAC,GAAG,CAAC,IAAI,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC;KACvD;IAED,IAAI,MAAM,GAAG,SAAS,CAAC,IAAI,EAAE,CAAC;IAE9B,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,CAAC,CAAC;IACzB,IAAI,GAAG,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IACjC,IAAI,MAAM,GAAG,CAAC,CAAC;IACf,OAAM,CAAC,MAAM,GAAG,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,EAAC;QAAE,MAAM,EAAE,CAAC;KAAE;IACtF,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,MAAM,CAAC;IAE3C,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,MAAM,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;QAChC,IAAI,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;QACxB,IAAI,EAAE,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;QACrB,GAAG,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC;QAC7B,EAAE,GAAG,KAAK,KAAK,KAAK,GAAG,EAAE,CAAC,CAAC;QAC3B,EAAE,GAAG,KAAK,KAAK,KAAK,GAAG,EAAE,CAAC,CAAC;KAC9B;IAMD,OAAO;QACH,GAAG,EAAE,GAAG;QACR,GAAG,EAAE,KAAK,GAAG,MAAM,CAAC,OAAO;KAC9B,CAAC;CACL;;ACxFD,gBAAgB,EAAc;IAC1B,IAAI,OAAO,GAAa,EAAE,CAAC;IAC3B,KAAI,IAAI,KAAK,GAAG,CAAC,EAAC,KAAK,GAAG,EAAE,CAAC,UAAU,EAAC,KAAK,EAAE,EAAC;QAC5C,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAChB,KAAI,IAAI,EAAE,GAAG,CAAC,EAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,EAAC,EAAE,EAAE,EAAC;YACxC,EAAE,CAAC,WAAW,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,IAAI,KAAK,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;SAC5D;KACJ;IACD,OAAO;QACH,IAAI,EAAE,EAAE,CAAC,UAAU;QACnB,OAAO,EAAE,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM;QAC3B,OAAO,YAAC,KAAK,EAAE,KAAK;YAChB,OAAO,EAAE,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK,IAAI,CAAC;SAChD;QACD,UAAU,YAAC,KAAK;YACZ,OAAO,OAAO,CAAC,KAAK,CAAC,CAAC;SACzB;KACJ,CAAC;CACL;AAED,eAAe,EAAc;IACzB,IAAI,OAAO,GAAa,EAAE,CAAC;IAC3B,KAAI,IAAI,KAAK,GAAG,CAAC,EAAC,KAAK,GAAG,EAAE,CAAC,UAAU,EAAC,KAAK,EAAE,EAAC;QAC5C,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAChB,KAAI,IAAI,EAAE,GAAG,CAAC,EAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,EAAC,EAAE,EAAE,EAAC;YACrC,EAAE,CAAC,WAAW,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,IAAI,KAAK,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;SAC5D;KACJ;IACD,OAAO;QACH,IAAI,EAAE,EAAE,CAAC,UAAU;QACnB,OAAO,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM;QACxB,OAAO,YAAC,KAAK,EAAE,EAAE;YACb,OAAO,EAAE,CAAC,UAAU,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,IAAI,CAAC;SAC5C;QACD,UAAU,YAAC,EAAE;YACT,OAAO,OAAO,CAAC,EAAE,CAAC,CAAC;SACtB;KACJ,CAAC;CACL;AAED,mBAAsB,GAAW,EAAE,EAAoB;IACnD,IAAI,GAAG,GAAQ,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;IAC9B,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAC;QACxB,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;KAClB;IACD,OAAO,GAAG,CAAC;CACd;AAED;IAgBI,0BAAY,MAAkB;QAC1B,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;QAClB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;QAC5B,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;QAEpC,IAAI,aAAa,GAAG,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;QAC7C,IAAI,WAAW,GAAG,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;QAC1C,IAAI,CAAC,MAAM,GAAG,aAAa,CAAC,GAAG,CAAC;QAChC,IAAI,CAAC,OAAO,GAAG,WAAW,CAAC,GAAG,CAAC;QAE/B,IAAI,CAAC,IAAI,GAAG,SAAS,CAAO,aAAa,CAAC,GAAG,EAAE,cAAM,OAAA,IAAI,GAAA,CAAC,CAAC;QAC3D,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAS,aAAa,CAAC,GAAG,EAAE,cAAM,OAAA,CAAC,GAAA,CAAC,CAAC;QAC9D,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,MAAM,CAAC,YAAY,CAAC,UAAC,EAAE,EAAE,KAAK,EAAE,KAAK;YACjCH,SAAO,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,KAAK,IAAI,CAAC,CAAC;YAC/D,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;YAC3C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,KAAK,CAAC;SACrD,CAAC,CAAC;QAEH,IAAI,CAAC,KAAK,GAAG,SAAS,CAAO,WAAW,CAAC,GAAG,EAAE,cAAM,OAAA,IAAI,GAAA,CAAC,CAAC;QAC1D,IAAI,CAAC,SAAS,GAAG,SAAS,CAAS,WAAW,CAAC,GAAG,EAAE,cAAM,OAAA,CAAC,GAAA,CAAC,CAAC;QAC7D,MAAM,CAAC,WAAW,CAAC,UAAC,EAAE,EAAE,KAAK,EAAE,EAAE;YAC7BA,SAAO,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,KAAK,IAAI,CAAC,CAAC;YAC9D,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC;YAC1C,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,KAAK,CAAC;SACpD,CAAC,CAAC;KACN;IACD,sCAAW,GAAX,UAAY,KAAa,EAAE,KAAa;QACpC,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC;QACvC,IAAG,KAAK,IAAI,CAAC,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,KAAK,EAAC;YACxE,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC;SAChD;aACI;YACD,OAAO,IAAI,CAAC;SACf;KACJ;IACD,qCAAU,GAAV,UAAW,KAAa,EAAE,EAAU;QAChC,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;QACrC,IAAG,KAAK,IAAI,CAAC,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,KAAK,EAAC;YAC1E,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC;SAC/C;aACI;YACD,OAAO,IAAI,CAAC;SACf;KACJ;IACL,uBAAC;CAAA;;AClGD;IAAA;QASI,WAAM,GAAgB,EAAE,CAAC;QACzB,aAAQ,GAAgB,EAAE,CAAC;QAC3B,eAAU,GAAG,KAAK,CAAC;KA+DtB;IA7DG,qBAAI,GAAJ,UAAK,CAAc;QACf,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;KACzB;IACD,oBAAG,GAAH,UAAI,CAAY;QACZ,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;KACvB;IACD,8BAAa,GAAb,UAAc,MAAoB;QAC9B,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,iCAAiC,GAAG,IAAI,CAAC,cAAc,GAAG,gBAAgB,CAAC,CAAC;QAChH,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAS,CAAC;YAC5B,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;SACrD,CAAC,CAAC;KACN;IACD,2BAAU,GAAV,UAAY,EAAgB;QAExB,eAAe,CAAC,EAAE,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;KACvD;IACD,yBAAQ,GAAR,UAAS,EAAgB;QACrB,KAAa,UAAgB,EAAhB,KAAA,IAAI,CAAC,IAAI,CAAC,MAAM,EAAhB,cAAgB,EAAhB,IAAgB;YAAzB,IAAI,CAAC,SAAA;YACL,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;YACZ,EAAE,CAAC,OAAO,EAAE,CAAC;YACb,EAAE,CAAC,OAAO,EAAE,CAAC;SAChB;KACJ;IACD,0BAAS,GAAT,UAAU,MAAgB;QACtB,OAAO,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAC,IAAI,CAAC,UAAU,EAAC,MAAM,CAAC,CAAC;KAC9D;IACD,2BAAU,GAAV,UAAW,EAAgB,EAAE,GAAW;QACpC,KAAa,UAAW,EAAX,KAAA,IAAI,CAAC,MAAM,EAAX,cAAW,EAAX,IAAW;YAApB,IAAI,CAAC,SAAA;YACL,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;SAC/B;QACD,EAAE,CAAC,OAAO,EAAE,CAAC;KAChB;IACD,6BAAY,GAAZ,UAAa,EAAgB,EAAE,GAAW;QACtC,KAAa,UAAa,EAAb,KAAA,IAAI,CAAC,QAAQ,EAAb,cAAa,EAAb,IAAa;YAAtB,IAAI,CAAC,SAAA;YACL,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;SAC/B;QACD,EAAE,CAAC,OAAO,EAAE,CAAC;KAChB;IACD,2BAAU,GAAV;QACI,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;KACnC;IACD,yBAAQ,GAAR;QACI,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;KACjC;IACD,+BAAc,GAAd;QACI,OAAU,IAAI,CAAC,QAAQ,CAAC,MAAM,qBAAgB,IAAI,CAAC,MAAM,CAAC,MAAM,cAAW,CAAC;KAC/E;IACD,iCAAgB,GAAhB;QACI,OAAO;YACH,MAAM,EAAE,IAAI;YACZ,IAAI,EAAE,IAAI;YACV,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG;YAClB,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM;YACxB,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS;YAE7B,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO;YACpB,EAAE,EAAE,IAAI,CAAC,UAAU;YACnB,WAAW,EAAE,KAAK;YAClB,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM;SACzB,CAAC;KACL;IACL,aAAC;CAAA,IAAA;AAED,mBAAmB,MAAmB;IAClC,IAAI,MAAM,GAAG,IAAI,MAAM,EAAE,CAAC;IAC1B,IAAG;QACC,IAAI,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;KACvC;IACD,OAAM,CAAC,EAAC;QACJ,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC;QACzB,MAAM,CAAC,GAAG,CAAC,CAAc,CAAC,CAAC;QAC3B,OAAO,MAAM,CAAC;KACjB;IACD,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC;IAClB,MAAM,CAAC,IAAI,GAAG,CAAC,CAAC;IAEhB,KAAa,UAAQ,EAAR,KAAA,CAAC,CAAC,MAAM,EAAR,cAAQ,EAAR,IAAQ;QAAjB,IAAI,CAAC,SAAA;QACL,IAAG,CAAC,CAAC,CAAC,IAAI,EAAC;YACP,MAAM,CAAC,IAAI,CAAC,IAAI,WAAW,CAAC,YAAU,CAAC,CAAC,GAAG,yCAAoC,CAAC,CAAC,IAAI,MAAG,CAAC,CAAC,CAAC;SAC9F;KACJ;IACD,KAAc,UAAK,EAAL,KAAA,CAAC,CAAC,GAAG,EAAL,cAAK,EAAL,IAAK;QAAf,IAAI,EAAE,SAAA;QACN,IAAG,CAAC,EAAE,CAAC,IAAI,EAAC;YACR,MAAM,CAAC,IAAI,CAAC,IAAI,WAAW,CAAC,oBAAiB,EAAE,CAAC,GAAG,sBAAkB,CAAC,CAAC,CAAC;SAC3E;KACJ;IAED,IAAG,MAAM,CAAC,QAAQ,EAAE,EAAC;QACjB,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC;QACzB,OAAO,MAAM,CAAC;KACjB;IAED,CAAC,CAAC,YAAY,EAAE,CAAC;IAEjB,IAAI,IAAI,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;IAC1B,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC;IAC9B,MAAM,CAAC,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC;IACxC,IAAI,KAAK,GAAG,aAAa,CAAC,CAAC,EAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;IAC7C,KAAK,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC;IAE1B,MAAM,CAAC,UAAU,GAAG,IAAI,gBAAgB,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IAEvD,KAAc,UAAe,EAAf,KAAA,KAAK,CAAC,SAAS,EAAf,cAAe,EAAf,IAAe;QAAzB,IAAI,EAAE,SAAA;QACN,MAAM,CAAC,IAAI,CAAC,IAAI,WAAW,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;KAC/C;IAED,OAAO,MAAM,CAAC;CACjB;;AC/HD,2BAAwB,KAAoB,EAAE,MAAsB;IAChE,QAAQ,CAAC,IAAI,CAAC,CAAC;IACf,QAAQ,CAAC,uEAAuE,CAAC,CAAC;IAClF,QAAQ,CAAC,2DAA2D,CAAC,CAAC;IACtE,QAAQ,CAAC,IAAI,CAAC,CAAC;IACf,IAAI,CAAC,KAAK,CAAC,MAAM,CAAE,CAAC;IACpB,IAAI,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;IAC9B,IAAI,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,IAAI,MAAM,CAAC;IAClC,cAAc,CAAkB;QAC5B,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;KACnB;IACD,kBAAkB,CAAkB;QAChC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;KACrB;IACD,mBAAmB,CAAS,EAAE,EAAU;QACpC,gBAAgB,CAAS,EAAE,CAAS;YAChC,IAAI,GAAG,GAAG,EAAE,CAAC;YACb,OAAM,CAAC,EAAG,GAAE,CAAC;gBAAE,GAAG,IAAI,CAAC,CAAC;YACxB,OAAO,GAAG,CAAC;SACd;QACD,OAAO,CAAC,CAAC,CAAC,MAAM,GAAG,EAAE,GAAG,MAAM,CAAC,GAAG,EAAE,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;KAChE;IACD,oBAAuB,KAAa,EAAE,CAAM,EAAE,KAAa,EAAE,EAAU,EAAE,MAAwB;QAC7F,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,QAAQ,CAAC,EAAE,CAAC,CAAC;QACb,IAAI,CAAC,MAAM,CAAC,CAAC;QACb,IAAI,CAAC,MAAM,GAAG,KAAK,CAAE,CAAC;QACtB,QAAQ,CAAC,OAAO,CAAC,CAAC;QAClB,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,KAAa,UAAC,EAAD,OAAC,EAAD,eAAC,EAAD,IAAC;YAAV,IAAI,CAAC,UAAA;YACL,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;YAClC,IAAI,CAAC,GAAG,CAAC,CAAC;YACV,KAAK,EAAE,IAAI,EAAE,KAAK,KAAK,GAAG,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC;SACxD;QACD,QAAQ,CAAC,EAAE,CAAC,CAAC;QACb,IAAI,CAAC,KAAK,CAAC,CAAC;KACX;IACL,oBAAoB,KAAyB;QACzC,qBAAqB,GAAqB;YACtC,IAAI,GAAG,GAAa,EAAE,CAAC;YACvB,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,UAAC,IAAI,EAAE,EAAE;gBACvB,IAAG,IAAI,KAAK,EAAE,EAAC;oBACX,GAAG,CAAC,IAAI,CAAC,WAAS,IAAM,CAAC,CAAC;iBAC7B;qBACI,IAAG,IAAI,KAAK,CAAC,IAAI,EAAE,KAAK,GAAG,CAAC,EAAE,EAAC;oBAChC,GAAG,CAAC,IAAI,CAAC,UAAQ,EAAI,CAAC,CAAC;iBAC1B;qBACI,IAAG,IAAI,KAAK,CAAC,IAAI,EAAE,KAAK,GAAG,CAAC,EAAE,EAAC;oBAChC,GAAG,CAAC,IAAI,CAAC,UAAQ,IAAM,CAAC,CAAC;iBAC5B;qBACI,IAAG,IAAI,KAAK,CAAC,IAAI,EAAE,KAAK,GAAG,CAAC,EAAE,EAAC;oBAChC,GAAG,CAAC,IAAI,CAAC,WAAS,IAAI,iBAAY,EAAE,MAAG,CAAC,CAAC;iBAC5C;qBACI;oBAED,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;iBACpB;aACJ,CAAC,CAAC;YACH,OAAO,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SAC3B;QACD,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,QAAQ,CAAC,EAAE,CAAC,CAAC;QACb,IAAI,CAAC,eAAe,CAAC,CAAC;QACtB,IAAI,CAAC,KAAK,CAAC,KAAK,CAAE,CAAC;QACnB,QAAQ,CAAC,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,2BAA2B,CAAC,CAAC;QAClC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,MAAM,GAAG,OAAO,CAAE,CAAC;QAChD,QAAQ,CAAC,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,0BAA0B,CAAC,CAAC;QACjC,IAAI,CAAC,KAAK,CAAC,SAAS,KAAK,IAAI,GAAG,OAAO,GAAG,MAAM,CAAE,CAAC;QACnD,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,KAAe,UAAU,EAAV,KAAA,KAAK,CAAC,IAAI,EAAV,cAAU,EAAV,IAAU;YAArB,IAAI,GAAG,SAAA;YACP,IAAG,KAAK,EAAE;gBACd,QAAQ,CAAC,EAAE,CAAC,CAAC;gBACb,IAAI,CAAC,iBAAiB,CAAC,CAAC;gBACxB,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAE,CAAC;gBACxB,QAAQ,CAAC,IAAI,CAAC,CAAC;gBACf,IAAI,CAAC,8BAA8B,CAAC,CAAC;gBACrC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,CAAE,CAAC;gBACpB,QAAQ,CAAC,GAAG,CAAC,CAAC;gBACd,IAAI,CAAC,eAAe,CAAC,CAAC;gBACtB,KAAK,GAAG,KAAK,CAAC;aACT;iBAAM;gBACX,QAAQ,CAAC,EAAE,CAAC,CAAC;gBACb,IAAI,CAAC,sBAAsB,CAAC,CAAC;gBAC7B,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAE,CAAC;gBACxB,QAAQ,CAAC,IAAI,CAAC,CAAC;gBACf,IAAI,CAAC,8BAA8B,CAAC,CAAC;gBACrC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,CAAE,CAAC;gBACpB,QAAQ,CAAC,GAAG,CAAC,CAAC;gBACd,IAAI,CAAC,eAAe,CAAC,CAAC;aACrB;SACA;QACD,IAAG,KAAK,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;YAC5B,QAAQ,CAAC,EAAE,CAAC,CAAC;YACb,IAAI,CAAC,6BAA6B,CAAC,CAAC;SACnC;aAAM;YACP,QAAQ,CAAC,EAAE,CAAC,CAAC;YACb,QAAQ,CAAC,oBAAoB,CAAC,CAAC;YAC/B,QAAQ,CAAC,iCAAiC,CAAC,CAAC;YAC5C,IAAI,CAAC,eAAe,CAAC,CAAC;SACrB;QACD,QAAQ,CAAC,EAAE,CAAC,CAAC;QACb,IAAI,CAAC,oBAAoB,CAAC,CAAC;KAC1B;IACL,kBAAkB,GAAqB,EAAE,CAAS;QAC9C,QAAQ,CAAC,EAAE,CAAC,CAAC;QACb,IAAI,CAAC,kBAAkB,CAAC,CAAC;QACzB,IAAI,CAAC,CAAC,CAAE,CAAC;QACT,QAAQ,CAAC,uEAAuE,CAAC,CAAC;QAClF,IAAI,CAAC,wBAAwB,CAAC,CAAC;QAC/B,KAAiB,UAAU,EAAV,KAAA,GAAG,CAAC,MAAM,EAAV,cAAU,EAAV,IAAU;YAAvB,IAAI,KAAK,SAAA;YACT,UAAU,CAAC,KAAK,CAAC,CAAC;SACrB;QACD,QAAQ,CAAC,EAAE,CAAC,CAAC;QACb,QAAQ,CAAC,kBAAkB,CAAC,CAAC;QAC7B,QAAQ,CAAC,6BAA6B,CAAC,CAAC;QACxC,QAAQ,CAAC,iCAAiC,CAAC,CAAC;QAC5C,QAAQ,CAAC,OAAO,CAAC,CAAC;QAClB,IAAI,CAAC,GAAG,CAAC,CAAC;KACT;IACL,wBAAwB,GAAqB,EAAE,CAAS;QACpD,mBAAmB,GAAgB;YAC/B,KAAa,UAAG,EAAH,WAAG,EAAH,iBAAG,EAAH,IAAG;gBAAZ,IAAI,CAAC,YAAA;gBACL,IAAG,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,EAAC;oBACd,OAAO,CAAC,CAAC,KAAK,CAAC;iBAClB;aACJ;YACD,OAAO,CAAC,CAAC,CAAC;SACb;QACD,UAAU,CAAqB,WAAW,GAAG,CAAC,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,UAAC,KAAK;YACrE,OAAO,KAAK,CAAC,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,GAAG,IAAI,CAAC;SAC9E,CAAC,CAAC;KACN;IACG,QAAQ,CAAC,EAAE,CAAC,CAAC;IACb,QAAQ,CAAC,EAAE,CAAC,CAAC;IACb,QAAQ,CAAC,IAAI,CAAC,CAAC;IACf,QAAQ,CAAC,0CAA0C,CAAC,CAAC;IACrD,IAAI,CAAC,IAAI,CAAC,CAAC;IACX,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;QACnD,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;KACtB;IACG,QAAQ,CAAC,EAAE,CAAC,CAAC;IACb,QAAQ,CAAC,EAAE,CAAC,CAAC;IACb,QAAQ,CAAC,IAAI,CAAC,CAAC;IACf,QAAQ,CAAC,mCAAmC,CAAC,CAAC;IAC9C,QAAQ,CAAC,IAAI,CAAC,CAAC;IACf,IAAI,CAAC,MAAM,CAAC,CAAC;IACb,IAAI,CAAC,MAAM,CAAE,CAAC;IACd,IAAI,CAAC,YAAY,CAAC,CAAC;IACnB,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;QACxC,QAAQ,CAAC,EAAE,CAAC,CAAC;QACb,IAAI,CAAC,aAAa,CAAC,CAAC;QACpB,IAAI,CAAC,CAAC,CAAE,CAAC;QACT,IAAI,CAAC,GAAG,CAAC,CAAC;KACT;IACD,QAAQ,CAAC,EAAE,CAAC,CAAC;IACb,QAAQ,CAAC,IAAI,CAAC,CAAC;IACf,QAAQ,CAAC,EAAE,CAAC,CAAC;IACb,QAAQ,CAAC,IAAI,CAAC,CAAC;IACf,QAAQ,CAAC,gDAAgD,CAAC,CAAC;IAC3D,IAAI,CAAC,IAAI,CAAC,CAAC;IACX,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;QACnD,cAAc,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;KAC5B;IACG,QAAQ,CAAC,EAAE,CAAC,CAAC;IACb,IAAI,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC;IAClB,QAAQ,CAAC,EAAE,CAAC,CAAC;IACb,IAAI,CAAC,MAAM,CAAC,CAAC;IACb,IAAI,CAAC,MAAM,CAAE,CAAC;IACd,IAAI,CAAC,eAAe,CAAC,CAAC;IACtB,IAAI,CAAC,EAAE,CAAC,UAAU,CAAE,CAAC;IACrB,QAAQ,CAAC,GAAG,CAAC,CAAC;IACd,IAAI,CAAC,MAAM,CAAC,CAAC;IACb,IAAI,CAAC,MAAM,CAAE,CAAC;IACd,IAAI,CAAC,eAAe,CAAC,CAAC;IACtB,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAE,CAAC;IAC7B,QAAQ,CAAC,GAAG,CAAC,CAAC;IACd,IAAI,CAAC,MAAM,CAAC,CAAC;IACb,IAAI,CAAC,MAAM,CAAE,CAAC;IACd,IAAI,CAAC,WAAW,CAAC,CAAC;IAClB,IAAI,CAAC,EAAE,CAAC,UAAU,GAAG,CAAC,CAAE,CAAC;IACzB,QAAQ,CAAC,GAAG,CAAC,CAAC;IACd,QAAQ,CAAC,IAAI,CAAC,CAAC;IACf,IAAI,CAAC,wCAAwC,CAAC,CAAC;IAC/C,IAAI,CAAC,MAAM,CAAE,CAAC;IACd,IAAI,CAAC,OAAO,CAAC,CAAC;IACd,IAAI,CAAC,MAAM,CAAE,CAAC;IACd,QAAQ,CAAC,4BAA4B,CAAC,CAAC;IACvC,QAAQ,CAAC,mEAAmE,CAAC,CAAC;IAC9E,QAAQ,CAAC,mDAAmD,CAAC,CAAC;IAC9D,QAAQ,CAAC,yCAAyC,CAAC,CAAC;IACpD,IAAI,CAAC,IAAI,CAAC,CAAC;IACX,UAAU,CAAO,MAAM,EAAE,EAAE,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,UAAA,CAAC;QAC1C,IAAG,CAAC,KAAK,IAAI,EAAC;YACV,OAAO,GAAG,CAAC;SACd;aACI,IAAG,CAAC,KAAK,IAAI,CAAC,IAAI,EAAC;YACpB,OAAO,MAAM,CAAC,EAAE,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;SACpC;aACI,IAAG,CAAC,CAAC,UAAU,KAAKG,QAAM,CAAC,KAAK,EAAC;YAClC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,UAAU,GAAG,CAAC,EAAE,QAAQ,EAAE,CAAC;SAC9C;aACI,IAAG,CAAC,CAAC,UAAU,KAAKA,QAAM,CAAC,MAAM,EAAC;YACnC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,QAAQ,EAAE,CAAC;SACzC;KACJ,CAAC,CAAC;IACC,QAAQ,CAAC,EAAE,CAAC,CAAC;IACb,QAAQ,CAAC,IAAI,CAAC,CAAC;IACf,QAAQ,CAAC,mCAAmC,CAAC,CAAC;IAC9C,IAAI,CAAC,IAAI,CAAC,CAAC;IACX,UAAU,CAAS,QAAQ,EAAE,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,QAAQ,EAAE,GAAA,CAAC,CAAC;IAClE,QAAQ,CAAC,EAAE,CAAC,CAAC;IACb,QAAQ,CAAC,IAAI,CAAC,CAAC;IACf,IAAI,CAAC,qCAAqC,CAAC,CAAC;IAC5C,IAAI,CAAC,MAAM,CAAG,CAAC;IACf,QAAQ,CAAC,uBAAuB,CAAC,CAAC;IAClC,IAAI,CAAC,SAAS,CAAC,CAAC;IAChB,IAAI,CAAC,MAAM,CAAG,CAAC;IACf,IAAI,CAAC,WAAW,CAAC,CAAC;IAClB,IAAI,CAAC,MAAM,CAAE,CAAC;IACd,QAAQ,CAAC,6EAA6E,CAAC,CAAC;IACxF,IAAI,CAAC,IAAI,CAAC,CAAC;IACX,UAAU,CAAS,UAAU,EAAE,EAAE,CAAC,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,UAAA,CAAC,IAAI,OAAA,CAAC,KAAK,SAAS,GAAG,GAAG,GAAG,CAAC,CAAC,QAAQ,EAAE,GAAA,CAAC,CAAC;IAC9F,QAAQ,CAAC,EAAE,CAAC,CAAC;IACb,QAAQ,CAAC,IAAI,CAAC,CAAC;IACf,IAAI,CAAC,qCAAqC,CAAC,CAAC;IAC5C,IAAI,CAAC,MAAM,CAAE,CAAC;IACd,QAAQ,CAAC,oBAAoB,CAAC,CAAC;IAC/B,QAAQ,CAAC,4DAA4D,CAAC,CAAC;IACvE,IAAI,CAAC,IAAI,CAAC,CAAC;IACX,UAAU,CAAS,QAAQ,EAAE,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,QAAQ,EAAE,GAAA,CAAC,CAAC;IAClE,QAAQ,CAAC,EAAE,CAAC,CAAC;IACb,QAAQ,CAAC,IAAI,CAAC,CAAC;IACf,IAAI,CAAC,oCAAoC,CAAC,CAAC;IAC3C,IAAI,CAAC,MAAM,CAAG,CAAC;IACf,IAAI,CAAC,QAAQ,CAAC,CAAC;IACf,IAAI,CAAC,MAAM,CAAE,CAAC;IACd,QAAQ,CAAC,oCAAoC,CAAC,CAAC;IAC/C,IAAI,CAAC,IAAI,CAAC,CAAC;IACX,UAAU,CAAO,OAAO,EAAE,EAAE,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE,EAAE,UAAA,CAAC;QAC5C,IAAG,CAAC,KAAK,IAAI,EAAC;YACV,OAAO,IAAI,CAAC;SACf;aACI;YACD,OAAO,CAAC,CAAC,KAAK,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;SACxC;KACJ,CAAC,CAAC;IACC,QAAQ,CAAC,EAAE,CAAC,CAAC;IACb,QAAQ,CAAC,IAAI,CAAC,CAAC;IACf,QAAQ,CAAC,oCAAoC,CAAC,CAAC;IAC/C,IAAI,CAAC,IAAI,CAAC,CAAC;IACX,UAAU,CAAS,SAAS,EAAE,EAAE,CAAC,OAAO,EAAE,CAAC,EAAE,EAAE,EAAE,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,QAAQ,EAAE,GAAA,CAAC,CAAC;IACpE,QAAQ,CAAC,EAAE,CAAC,CAAC;IACb,QAAQ,CAAC,IAAI,CAAC,CAAC;IACf,IAAI,CAAC,yCAAyC,CAAC,CAAC;IAChD,IAAI,CAAC,MAAM,CAAE,CAAC;IACd,QAAQ,CAAC,mBAAmB,CAAC,CAAC;IAC9B,IAAI,CAAC,IAAI,CAAC,CAAC;IACX,UAAU,CAAO,SAAS,EAAE,EAAE,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE,EAAE,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,EAAE,GAAA,CAAC,CAAC;IAC7E,QAAQ,CAAC,EAAE,CAAC,CAAC;IACb,QAAQ,CAAC,IAAI,CAAC,CAAC;IACf,QAAQ,CAAC,mCAAmC,CAAC,CAAC;IAC9C,IAAI,CAAC,IAAI,CAAC,CAAC;IACX,UAAU,CAAO,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE,EAAE,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAA,CAAC,CAAC;IACxE,QAAQ,CAAC,EAAE,CAAC,CAAC;IACb,QAAQ,CAAC,IAAI,CAAC,CAAC;IACf,QAAQ,CAAC,iBAAiB,CAAC,CAAC;IAC5B,IAAI,CAAC,IAAI,CAAC,CAAC;IACX,UAAU,CAAW,YAAY,EAAE,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,EAAE,EAAE,CAAC,EAAE,UAAA,CAAC,IAAI,OAAA,OAAI,CAAC,CAAC,GAAG,OAAG,GAAA,CAAC,CAAC;IAC1E,QAAQ,CAAC,EAAE,CAAC,CAAC;IACb,QAAQ,CAAC,IAAI,CAAC,CAAC;IACf,QAAQ,CAAC,iBAAiB,CAAC,CAAC;IAC5B,IAAI,CAAC,IAAI,CAAC,CAAC;IACX,UAAU,CAAW,YAAY,EAAE,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,EAAE,EAAE,CAAC,EAAE,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,KAAK,GAAG,OAAI,CAAC,CAAC,KAAK,OAAG,GAAG,MAAM,GAAA,CAAC,CAAC;IAC/F,IAAI,SAAS,GAAG,KAAK,CAAC,GAAG,CAAC,SAAS,IAAI,QAAQ,CAAC;IAChD,QAAQ,CAAC,EAAE,CAAC,CAAC;IACb,6BAA6B,GAAqB,EAAE,CAAS;QAC7D,IAAI,OAAO,GAAG;YACV,QAAQ,YAAC,CAAS,EAAE,IAAY;gBACpC,QAAQ,CAAC,EAAE,CAAC,CAAC;gBACb,IAAI,CAAC,kBAAkB,CAAC,CAAC;gBACzB,IAAI,CAAC,CAAC,CAAE,CAAC;aACR;YACG,YAAY,YAAC,CAAS;gBAC1B,QAAQ,CAAC,EAAE,CAAC,CAAC;gBACb,IAAI,CAAC,sCAAsC,CAAC,CAAC;gBAC7C,IAAI,CAAC,CAAC,CAAE,CAAC;gBACT,IAAI,CAAC,IAAI,CAAC,CAAC;aACV;YACG,WAAW;gBACf,QAAQ,CAAC,EAAE,CAAC,CAAC;gBACb,IAAI,CAAC,uCAAuC,CAAC,CAAC;aAC7C;YACG,MAAM,YAAC,CAAS;gBACpB,QAAQ,CAAC,EAAE,CAAC,CAAC;gBACb,IAAI,CAAC,iCAAiC,CAAC,CAAC;gBACxC,IAAI,CAAC,CAAC,CAAE,CAAC;gBACT,IAAI,CAAC,MAAM,CAAC,CAAC;aACZ;YACG,WAAW,YAAC,CAAW;gBAC3B,QAAQ,CAAC,EAAE,CAAC,CAAC;gBACb,QAAQ,CAAC,iCAAiC,CAAC,CAAC;gBAC5C,IAAI,CAAC,0BAA0B,CAAC,CAAC;gBACjC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAE,CAAC;gBACf,QAAQ,CAAC,GAAG,CAAC,CAAC;gBACd,QAAQ,CAAC,iDAAiD,CAAC,CAAC;gBAC5D,IAAI,CAAC,oBAAoB,CAAC,CAAC;aAC1B;SACA,CAAC;QACF,yBAAyB,CAAc;YACnC,KAAe,UAAC,EAAD,OAAC,EAAD,eAAC,EAAD,IAAC;gBAAZ,IAAI,GAAG,UAAA;gBACP,IAAG,GAAG,CAAC,KAAK,KAAK,CAAC,CAAC,EAAC;oBAChB,OAAO,IAAI,CAAC;iBACf;aACJ;YACD,OAAO,KAAK,CAAC;SAChB;QACD,IAAI,OAAO,GAAG,MAAM,GAAG,QAAQ,CAAC;QAChC,QAAQ,CAAC,EAAE,CAAC,CAAC;QACb,IAAI,CAAC,0BAA0B,CAAC,CAAC;QACjC,IAAI,CAAC,CAAC,CAAE,CAAC;QACT,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,IAAI,CAAC,OAAO,CAAE,CAAC;QACf,QAAQ,CAAC,YAAY,CAAC,CAAC;QACvB,IAAI,CAAC,cAAc,CAAC,CAAC;QACrB,IAAI,CAAC,MAAM,CAAE,CAAC;QACd,IAAI,CAAC,OAAO,CAAC,CAAC;QACd,IAAI,CAAC,MAAM,CAAE,CAAC;QACd,IAAI,CAAC,WAAW,CAAC,CAAC;QAClB,IAAI,CAAC,CAAC,CAAE,CAAC;QACT,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,IAAI,CAAC,OAAO,CAAE,CAAC;QACf,QAAQ,CAAC,IAAI,CAAC,CAAC;QACf,IAAI,CAAC,iBAAiB,CAAC,CAAC;QACxB,IAAI,CAAC,OAAO,CAAE,CAAC;QACf,IAAI,CAAC,IAAI,CAAC,CAAC;QACX,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;YAC/C,IAAG,EAAE,CAAC,CAAC,CAAC,CAAC,SAAS,KAAK,IAAI,IAAI,eAAe,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAC;gBACzE,QAAQ,CAAC,EAAE,CAAC,CAAC;gBACb,IAAI,CAAC,mBAAmB,CAAC,CAAC;gBAC1B,IAAI,CAAC,CAAC,CAAE,CAAC;gBACT,IAAI,CAAC,GAAG,CAAC,CAAC;gBACV,KAAe,UAAoB,EAApB,KAAA,EAAE,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,EAApB,cAAoB,EAApB,IAAoB;oBAA/B,IAAI,GAAG,SAAA;oBACC,GAAG,CAAC,KAAK,KAAK,CAAC,CAAC,IAAI,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;iBAC3C;gBACT,QAAQ,CAAC,EAAE,CAAC,CAAC;gBACb,IAAI,CAAC,wBAAwB,CAAC,CAAC;aAC9B;SACA;QACD,QAAQ,CAAC,EAAE,CAAC,CAAC;QACb,QAAQ,CAAC,uBAAuB,CAAC,CAAC;QAClC,QAAQ,CAAC,WAAW,CAAC,CAAC;QACtB,IAAI,CAAC,UAAU,CAAC,CAAC;QACjB,IAAI,CAAC,MAAM,CAAE,CAAC;QACd,IAAI,CAAC,iCAAiC,CAAC,CAAC;QACxC,IAAI,CAAC,MAAM,CAAE,CAAC;QACd,QAAQ,CAAC,MAAM,CAAC,CAAC;QACjB,IAAI,CAAC,OAAO,CAAC,CAAC;KACb;IACD,QAAQ,CAAC,EAAE,CAAC,CAAC;IACb,QAAQ,CAAC,EAAE,CAAC,CAAC;IACb,QAAQ,CAAC,4CAA4C,CAAC,CAAC;IACvD,IAAI,CAAC,aAAa,CAAC,CAAC;IACpB,IAAI,CAAC,MAAM,CAAE,CAAC;IACd,IAAI,CAAC,gCAAgC,CAAC,CAAC;IACvC,IAAI,CAAC,MAAM,CAAE,CAAC;IACd,IAAI,CAAC,2BAA2B,CAAC,CAAC;IAClC,IAAI,CAAC,MAAM,CAAE,CAAC;IACd,QAAQ,CAAC,qBAAqB,CAAC,CAAC;IAChC,QAAQ,CAAC,GAAG,CAAC,CAAC;IACd,QAAQ,CAAC,EAAE,CAAC,CAAC;IACb,QAAQ,CAAC,sBAAsB,CAAC,CAAC;IACjC,QAAQ,CAAC,kBAAkB,CAAC,CAAC;IAC7B,QAAQ,CAAC,4BAA4B,CAAC,CAAC;IACvC,QAAQ,CAAC,6BAA6B,CAAC,CAAC;IACxC,QAAQ,CAAC,mCAAmC,CAAC,CAAC;IAC9C,QAAQ,CAAC,qCAAqC,CAAC,CAAC;IAChD,QAAQ,CAAC,iCAAiC,CAAC,CAAC;IAC5C,QAAQ,CAAC,kCAAkC,CAAC,CAAC;IAC7C,QAAQ,CAAC,SAAS,CAAC,CAAC;IACpB,QAAQ,CAAC,iBAAiB,CAAC,CAAC;IAC5B,IAAI,CAAC,kBAAkB,CAAC,CAAC;IACzB,IAAI,CAAC,MAAM,CAAE,CAAC;IACd,QAAQ,CAAC,iCAAiC,CAAC,CAAC;IAC5C,IAAI,CAAC,kBAAkB,CAAC,CAAC;IACzB,IAAI,CAAC,MAAM,CAAE,CAAC;IACd,QAAQ,CAAC,0BAA0B,CAAC,CAAC;IACrC,IAAI,CAAC,mBAAmB,CAAC,CAAC;IAC1B,IAAI,CAAC,MAAM,CAAE,CAAC;IACd,QAAQ,CAAC,iDAAiD,CAAC,CAAC;IAC5D,QAAQ,CAAC,OAAO,CAAC,CAAC;IAClB,QAAQ,CAAC,GAAG,CAAC,CAAC;IACd,QAAQ,CAAC,EAAE,CAAC,CAAC;IACb,IAAI,CAAC,eAAe,CAAC,CAAC;IACtB,IAAI,CAAC,SAAS,CAAE,CAAC;IACjB,QAAQ,CAAC,IAAI,CAAC,CAAC;IACf,QAAQ,CAAC,0BAA0B,CAAC,CAAC;IACrC,QAAQ,CAAC,kCAAkC,CAAC,CAAC;IAC7C,QAAQ,CAAC,6BAA6B,CAAC,CAAC;IACxC,QAAQ,CAAC,iCAAiC,CAAC,CAAC;IAC5C,QAAQ,CAAC,4BAA4B,CAAC,CAAC;IACvC,QAAQ,CAAC,8BAA8B,CAAC,CAAC;IACzC,QAAQ,CAAC,0BAA0B,CAAC,CAAC;IACrC,QAAQ,CAAC,4BAA4B,CAAC,CAAC;IACvC,QAAQ,CAAC,mCAAmC,CAAC,CAAC;IAC9C,QAAQ,CAAC,uCAAuC,CAAC,CAAC;IAClD,QAAQ,CAAC,4BAA4B,CAAC,CAAC;IACvC,QAAQ,CAAC,8BAA8B,CAAC,CAAC;IACzC,QAAQ,CAAC,6BAA6B,CAAC,CAAC;IACxC,QAAQ,CAAC,+BAA+B,CAAC,CAAC;IAC1C,QAAQ,CAAC,EAAE,CAAC,CAAC;IACb,QAAQ,CAAC,2BAA2B,CAAC,CAAC;IACtC,QAAQ,CAAC,sCAAsC,CAAC,CAAC;IACjD,QAAQ,CAAC,oCAAoC,CAAC,CAAC;IAC/C,QAAQ,CAAC,EAAE,CAAC,CAAC;IACb,QAAQ,CAAC,4BAA4B,CAAC,CAAC;IACvC,QAAQ,CAAC,EAAE,CAAC,CAAC;IACb,QAAQ,CAAC,wEAAwE,CAAC,CAAC;IACnF,QAAQ,CAAC,EAAE,CAAC,CAAC;IACb,QAAQ,CAAC,6CAA6C,CAAC,CAAC;IACxD,IAAI,CAAC,MAAM,CAAC,CAAC;IACb,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAE,CAAC;IACtB,QAAQ,CAAC,EAAE,CAAC,CAAC;IACb,QAAQ,CAAC,EAAE,CAAC,CAAC;IACb,QAAQ,CAAC,oBAAoB,CAAC,CAAC;IAC/B,QAAQ,CAAC,sBAAsB,CAAC,CAAC;IACjC,QAAQ,CAAC,OAAO,CAAC,CAAC;IAClB,QAAQ,CAAC,aAAa,CAAC,CAAC;IACxB,QAAQ,CAAC,2CAA2C,CAAC,CAAC;IACtD,QAAQ,CAAC,0BAA0B,CAAC,CAAC;IACrC,QAAQ,CAAC,6BAA6B,CAAC,CAAC;IACxC,QAAQ,CAAC,6BAA6B,CAAC,CAAC;IACxC,QAAQ,CAAC,4BAA4B,CAAC,CAAC;IACvC,QAAQ,CAAC,oDAAoD,CAAC,CAAC;IAC/D,QAAQ,CAAC,gCAAgC,CAAC,CAAC;IAC3C,QAAQ,CAAC,8BAA8B,CAAC,CAAC;IACzC,QAAQ,CAAC,uCAAuC,CAAC,CAAC;IAClD,QAAQ,CAAC,2CAA2C,CAAC,CAAC;IACtD,QAAQ,CAAC,UAAU,CAAC,CAAC;IACrB,QAAQ,CAAC,gCAAgC,CAAC,CAAC;IAC3C,QAAQ,CAAC,8BAA8B,CAAC,CAAC;IACzC,QAAQ,CAAC,EAAE,CAAC,CAAC;IACb,QAAQ,CAAC,6BAA6B,CAAC,CAAC;IACxC,QAAQ,CAAC,OAAO,CAAC,CAAC;IAClB,QAAQ,CAAC,SAAS,CAAC,CAAC;IACpB,QAAQ,CAAC,cAAc,CAAC,CAAC;IACzB,QAAQ,CAAC,SAAS,CAAC,CAAC;IACpB,QAAQ,CAAC,iCAAiC,CAAC,CAAC;IAC5C,QAAQ,CAAC,mCAAmC,CAAC,CAAC;IAC9C,QAAQ,CAAC,0CAA0C,CAAC,CAAC;IACrD,QAAQ,CAAC,8CAA8C,CAAC,CAAC;IACzD,QAAQ,CAAC,WAAW,CAAC,CAAC;IACtB,QAAQ,CAAC,mCAAmC,CAAC,CAAC;IAC9C,QAAQ,CAAC,uCAAuC,CAAC,CAAC;IAClD,QAAQ,CAAC,OAAO,CAAC,CAAC;IAClB,QAAQ,CAAC,wCAAwC,CAAC,CAAC;IACnD,QAAQ,CAAC,kCAAkC,CAAC,CAAC;IAC7C,QAAQ,CAAC,kBAAkB,CAAC,CAAC;IAC7B,QAAQ,CAAC,qCAAqC,CAAC,CAAC;IAChD,QAAQ,CAAC,0BAA0B,CAAC,CAAC;IACrC,QAAQ,CAAC,4BAA4B,CAAC,CAAC;IACvC,QAAQ,CAAC,yBAAyB,CAAC,CAAC;IACpC,QAAQ,CAAC,0BAA0B,CAAC,CAAC;IACrC,QAAQ,CAAC,YAAY,CAAC,CAAC;IACvB,QAAQ,CAAC,mCAAmC,CAAC,CAAC;IAC9C,QAAQ,CAAC,mCAAmC,CAAC,CAAC;IAC9C,QAAQ,CAAC,uCAAuC,CAAC,CAAC;IAClD,IAAI,CAAC,8BAA8B,CAAC,CAAC;IACrC,IAAI,CAAC,MAAM,CAAE,CAAC;IACd,QAAQ,CAAC,+CAA+C,CAAC,CAAC;IAC1D,QAAQ,CAAC,gEAAgE,CAAC,CAAC;IAC3E,QAAQ,CAAC,6BAA6B,CAAC,CAAC;IACxC,QAAQ,CAAC,OAAO,CAAC,CAAC;IAClB,QAAQ,CAAC,iDAAiD,CAAC,CAAC;IAC5D,QAAQ,CAAC,yCAAyC,CAAC,CAAC;IACpD,QAAQ,CAAC,kBAAkB,CAAC,CAAC;IAC7B,QAAQ,CAAC,iCAAiC,CAAC,CAAC;IAC5C,QAAQ,CAAC,iCAAiC,CAAC,CAAC;IAC5C,QAAQ,CAAC,eAAe,CAAC,CAAC;IAC1B,QAAQ,CAAC,WAAW,CAAC,CAAC;IACtB,QAAQ,CAAC,OAAO,CAAC,CAAC;IAClB,QAAQ,CAAC,mDAAmD,CAAC,CAAC;IAC9D,QAAQ,CAAC,8DAA8D,CAAC,CAAC;IACzE,QAAQ,CAAC,wCAAwC,CAAC,CAAC;IACnD,IAAI,CAAC,OAAO,CAAC,CAAC;IACd,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;QACnD,mBAAmB,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;KACjC;IACG,QAAQ,CAAC,EAAE,CAAC,CAAC;IACb,QAAQ,CAAC,SAAS,CAAC,CAAC;IACpB,QAAQ,CAAC,6BAA6B,CAAC,CAAC;IACxC,QAAQ,CAAC,sBAAsB,CAAC,CAAC;IACjC,QAAQ,CAAC,mBAAmB,CAAC,CAAC;IAC9B,QAAQ,CAAC,SAAS,CAAC,CAAC;IACpB,QAAQ,CAAC,4DAA4D,CAAC,CAAC;IACvE,IAAI,CAAC,2BAA2B,CAAC,CAAC;IAClC,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;QACxC,QAAQ,CAAC,EAAE,CAAC,CAAC;QACb,IAAI,CAAC,mBAAmB,CAAC,CAAC;QAC1B,IAAI,CAAC,CAAC,CAAE,CAAC;QACT,QAAQ,CAAC,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,mCAAmC,CAAC,CAAC;QAC1C,IAAI,CAAC,CAAC,CAAE,CAAC;QACT,QAAQ,CAAC,UAAU,CAAC,CAAC;QACrB,IAAI,CAAC,wBAAwB,CAAC,CAAC;KAC9B;IACD,QAAQ,CAAC,EAAE,CAAC,CAAC;IACb,QAAQ,CAAC,uBAAuB,CAAC,CAAC;IAClC,QAAQ,CAAC,WAAW,CAAC,CAAC;IACtB,QAAQ,CAAC,yFAAyF,CAAC,CAAC;IACpG,QAAQ,CAAC,OAAO,CAAC,CAAC;IAClB,QAAQ,CAAC,SAAS,CAAC,CAAC;IACpB,QAAQ,CAAC,4BAA4B,CAAC,CAAC;IACvC,QAAQ,CAAC,4EAA4E,CAAC,CAAC;IACvF,QAAQ,CAAC,sBAAsB,CAAC,CAAC;IACjC,QAAQ,CAAC,mBAAmB,CAAC,CAAC;IAC9B,QAAQ,CAAC,SAAS,CAAC,CAAC;IACpB,QAAQ,CAAC,qCAAqC,CAAC,CAAC;IAChD,QAAQ,CAAC,mEAAmE,CAAC,CAAC;IAC9E,QAAQ,CAAC,yEAAyE,CAAC,CAAC;IACpF,IAAI,CAAC,UAAU,CAAC,CAAC;IACjB,IAAI,CAAC,MAAM,CAAE,CAAC;IACd,QAAQ,CAAC,0CAA0C,CAAC,CAAC;IACrD,QAAQ,CAAC,yBAAyB,CAAC,CAAC;IACpC,QAAQ,CAAC,kEAAkE,CAAC,CAAC;IAC7E,QAAQ,CAAC,8BAA8B,CAAC,CAAC;IACzC,QAAQ,CAAC,wCAAwC,CAAC,CAAC;IACnD,QAAQ,CAAC,yDAAyD,CAAC,CAAC;IACpE,QAAQ,CAAC,+DAA+D,CAAC,CAAC;IAC1E,QAAQ,CAAC,gCAAgC,CAAC,CAAC;IAC3C,QAAQ,CAAC,wCAAwC,CAAC,CAAC;IACnD,QAAQ,CAAC,4CAA4C,CAAC,CAAC;IACvD,QAAQ,CAAC,0DAA0D,CAAC,CAAC;IACrE,QAAQ,CAAC,+CAA+C,CAAC,CAAC;IAC1D,QAAQ,CAAC,mCAAmC,CAAC,CAAC;IAC9C,QAAQ,CAAC,mBAAmB,CAAC,CAAC;IAC9B,QAAQ,CAAC,wBAAwB,CAAC,CAAC;IACnC,QAAQ,CAAC,qFAAqF,CAAC,CAAC;IAChG,QAAQ,CAAC,uFAAuF,CAAC,CAAC;IAClG,QAAQ,CAAC,sFAAsF,CAAC,CAAC;IACjG,QAAQ,CAAC,mFAAmF,CAAC,CAAC;IAC9F,QAAQ,CAAC,iDAAiD,CAAC,CAAC;IAC5D,QAAQ,CAAC,oDAAoD,CAAC,CAAC;IAC/D,QAAQ,CAAC,wDAAwD,CAAC,CAAC;IACnE,QAAQ,CAAC,+CAA+C,CAAC,CAAC;IAC1D,QAAQ,CAAC,4CAA4C,CAAC,CAAC;IACvD,QAAQ,CAAC,wFAAwF,CAAC,CAAC;IACnG,QAAQ,CAAC,4CAA4C,CAAC,CAAC;IACvD,QAAQ,CAAC,2CAA2C,CAAC,CAAC;IACtD,QAAQ,CAAC,kCAAkC,CAAC,CAAC;IAC7C,QAAQ,CAAC,mBAAmB,CAAC,CAAC;IAC9B,QAAQ,CAAC,eAAe,CAAC,CAAC;IAC1B,QAAQ,CAAC,oBAAoB,CAAC,CAAC;IAC/B,QAAQ,CAAC,6EAA6E,CAAC,CAAC;IACxF,QAAQ,CAAC,2DAA2D,CAAC,CAAC;IACtE,QAAQ,CAAC,4BAA4B,CAAC,CAAC;IACvC,QAAQ,CAAC,oCAAoC,CAAC,CAAC;IAC/C,QAAQ,CAAC,wCAAwC,CAAC,CAAC;IACnD,QAAQ,CAAC,kCAAkC,CAAC,CAAC;IAC7C,QAAQ,CAAC,2CAA2C,CAAC,CAAC;IACtD,QAAQ,CAAC,+BAA+B,CAAC,CAAC;IAC1C,QAAQ,CAAC,eAAe,CAAC,CAAC;IAC1B,QAAQ,CAAC,WAAW,CAAC,CAAC;IACtB,QAAQ,CAAC,gBAAgB,CAAC,CAAC;IAC3B,QAAQ,CAAC,oCAAoC,CAAC,CAAC;IAC/C,QAAQ,CAAC,4EAA4E,CAAC,CAAC;IACvF,QAAQ,CAAC,gDAAgD,CAAC,CAAC;IAC3D,QAAQ,CAAC,0CAA0C,CAAC,CAAC;IACrD,QAAQ,CAAC,uFAAuF,CAAC,CAAC;IAClG,QAAQ,CAAC,iCAAiC,CAAC,CAAC;IAC5C,QAAQ,CAAC,iDAAiD,CAAC,CAAC;IAC5D,QAAQ,CAAC,wCAAwC,CAAC,CAAC;IACnD,QAAQ,CAAC,oDAAoD,CAAC,CAAC;IAC/D,QAAQ,CAAC,wDAAwD,CAAC,CAAC;IACnE,QAAQ,CAAC,qDAAqD,CAAC,CAAC;IAChE,QAAQ,CAAC,mEAAmE,CAAC,CAAC;IAC9E,QAAQ,CAAC,uBAAuB,CAAC,CAAC;IAClC,QAAQ,CAAC,+DAA+D,CAAC,CAAC;IAC1E,QAAQ,CAAC,sCAAsC,CAAC,CAAC;IACjD,QAAQ,CAAC,+CAA+C,CAAC,CAAC;IAC1D,QAAQ,CAAC,mCAAmC,CAAC,CAAC;IAC9C,QAAQ,CAAC,mBAAmB,CAAC,CAAC;IAC9B,QAAQ,CAAC,wBAAwB,CAAC,CAAC;IACnC,QAAQ,CAAC,qCAAqC,CAAC,CAAC;IAChD,QAAQ,CAAC,kFAAkF,CAAC,CAAC;IAC7F,QAAQ,CAAC,sCAAsC,CAAC,CAAC;IACjD,QAAQ,CAAC,kCAAkC,CAAC,CAAC;IAC7C,QAAQ,CAAC,mBAAmB,CAAC,CAAC;IAC9B,QAAQ,CAAC,eAAe,CAAC,CAAC;IAC1B,QAAQ,CAAC,oBAAoB,CAAC,CAAC;IAC/B,QAAQ,CAAC,2CAA2C,CAAC,CAAC;IACtD,QAAQ,CAAC,oFAAoF,CAAC,CAAC;IAC/F,QAAQ,CAAC,wCAAwC,CAAC,CAAC;IACnD,QAAQ,CAAC,uCAAuC,CAAC,CAAC;IAClD,QAAQ,CAAC,8BAA8B,CAAC,CAAC;IACzC,QAAQ,CAAC,eAAe,CAAC,CAAC;IAC1B,QAAQ,CAAC,WAAW,CAAC,CAAC;IACtB,QAAQ,CAAC,OAAO,CAAC,CAAC;IAClB,QAAQ,CAAC,2BAA2B,CAAC,CAAC;IACtC,QAAQ,CAAC,gCAAgC,CAAC,CAAC;IAC3C,QAAQ,CAAC,wBAAwB,CAAC,CAAC;IACnC,QAAQ,CAAC,mCAAmC,CAAC,CAAC;IAC9C,QAAQ,CAAC,0BAA0B,CAAC,CAAC;IACrC,QAAQ,CAAC,WAAW,CAAC,CAAC;IACtB,QAAQ,CAAC,gBAAgB,CAAC,CAAC;IAC3B,QAAQ,CAAC,uEAAuE,CAAC,CAAC;IAClF,QAAQ,CAAC,6EAA6E,CAAC,CAAC;IACxF,IAAI,CAAC,cAAc,CAAC,CAAC;IACrB,IAAI,CAAC,MAAM,CAAE,CAAC;IACd,QAAQ,CAAC,6BAA6B,CAAC,CAAC;IACxC,QAAQ,CAAC,6BAA6B,CAAC,CAAC;IACxC,QAAQ,CAAC,2DAA2D,CAAC,CAAC;IACtE,QAAQ,CAAC,kCAAkC,CAAC,CAAC;IAC7C,QAAQ,CAAC,oCAAoC,CAAC,CAAC;IAC/C,QAAQ,CAAC,+BAA+B,CAAC,CAAC;IAC1C,QAAQ,CAAC,eAAe,CAAC,CAAC;IAC1B,QAAQ,CAAC,2CAA2C,CAAC,CAAC;IACtD,QAAQ,CAAC,6CAA6C,CAAC,CAAC;IACxD,QAAQ,CAAC,oCAAoC,CAAC,CAAC;IAC/C,QAAQ,CAAC,gDAAgD,CAAC,CAAC;IAC3D,QAAQ,CAAC,oDAAoD,CAAC,CAAC;IAC/D,QAAQ,CAAC,iDAAiD,CAAC,CAAC;IAC5D,QAAQ,CAAC,+DAA+D,CAAC,CAAC;IAC1E,QAAQ,CAAC,mBAAmB,CAAC,CAAC;IAC9B,QAAQ,CAAC,2DAA2D,CAAC,CAAC;IACtE,QAAQ,CAAC,kCAAkC,CAAC,CAAC;IAC7C,QAAQ,CAAC,+BAA+B,CAAC,CAAC;IAC1C,QAAQ,CAAC,eAAe,CAAC,CAAC;IAC1B,QAAQ,CAAC,oBAAoB,CAAC,CAAC;IAC/B,QAAQ,CAAC,uEAAuE,CAAC,CAAC;IAClF,QAAQ,CAAC,8BAA8B,CAAC,CAAC;IACzC,QAAQ,CAAC,eAAe,CAAC,CAAC;IAC1B,QAAQ,CAAC,WAAW,CAAC,CAAC;IACtB,QAAQ,CAAC,OAAO,CAAC,CAAC;IAClB,QAAQ,CAAC,SAAS,CAAC,CAAC;IACpB,QAAQ,CAAC,wBAAwB,CAAC,CAAC;IACnC,QAAQ,CAAC,qBAAqB,CAAC,CAAC;IAChC,QAAQ,CAAC,SAAS,CAAC,CAAC;IACpB,QAAQ,CAAC,wBAAwB,CAAC,CAAC;IACnC,QAAQ,CAAC,0BAA0B,CAAC,CAAC;IACrC,QAAQ,CAAC,qDAAqD,CAAC,CAAC;IAChE,QAAQ,CAAC,mDAAmD,CAAC,CAAC;IAC9D,QAAQ,CAAC,eAAe,CAAC,CAAC;IAC1B,QAAQ,CAAC,8DAA8D,CAAC,CAAC;IACzE,QAAQ,CAAC,sGAAsG,CAAC,CAAC;IACjH,QAAQ,CAAC,eAAe,CAAC,CAAC;IAC1B,QAAQ,CAAC,WAAW,CAAC,CAAC;IACtB,QAAQ,CAAC,OAAO,CAAC,CAAC;IAClB,QAAQ,CAAC,SAAS,CAAC,CAAC;IACpB,QAAQ,CAAC,uDAAuD,CAAC,CAAC;IAClE,QAAQ,CAAC,qBAAqB,CAAC,CAAC;IAChC,QAAQ,CAAC,SAAS,CAAC,CAAC;IACpB,QAAQ,CAAC,YAAY,CAAC,CAAC;IACvB,QAAQ,CAAC,6BAA6B,CAAC,CAAC;IACxC,QAAQ,CAAC,4CAA4C,CAAC,CAAC;IACvD,QAAQ,CAAC,sGAAsG,CAAC,CAAC;IACjH,QAAQ,CAAC,eAAe,CAAC,CAAC;IAC1B,QAAQ,CAAC,yCAAyC,CAAC,CAAC;IACpD,QAAQ,CAAC,wBAAwB,CAAC,CAAC;IACnC,QAAQ,CAAC,eAAe,CAAC,CAAC;IAC1B,QAAQ,CAAC,WAAW,CAAC,CAAC;IACtB,QAAQ,CAAC,4BAA4B,CAAC,CAAC;IACvC,QAAQ,CAAC,OAAO,CAAC,CAAC;IAClB,QAAQ,CAAC,aAAa,CAAC,CAAC;IACxB,QAAQ,CAAC,4BAA4B,CAAC,CAAC;IACvC,IAAI,CAAC,OAAO,CAAC,CAAC;IACd;QACA,IAAI,OAAO,GAAG;YACV,QAAQ,YAAC,CAAS,EAAE,IAAY;gBACpC,QAAQ,CAAC,EAAE,CAAC,CAAC;gBACb,IAAI,CAAC,mBAAmB,CAAC,CAAC;gBAC1B,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,GAAG,KAAK,CAAC,CAAE,CAAC;gBAC1C,IAAI,CAAC,GAAG,CAAC,CAAC;aACT;YACG,YAAY,YAAC,CAAS;gBAC1B,QAAQ,CAAC,EAAE,CAAC,CAAC;gBACb,IAAI,CAAC,sCAAsC,CAAC,CAAC;gBAC7C,IAAI,CAAC,CAAC,CAAE,CAAC;gBACT,IAAI,CAAC,IAAI,CAAC,CAAC;aACV;YACG,WAAW;gBACf,QAAQ,CAAC,EAAE,CAAC,CAAC;gBACb,IAAI,CAAC,uCAAuC,CAAC,CAAC;aAC7C;YACG,MAAM,YAAC,CAAS;gBACpB,QAAQ,CAAC,EAAE,CAAC,CAAC;gBACb,IAAI,CAAC,iCAAiC,CAAC,CAAC;gBACxC,IAAI,CAAC,CAAC,CAAE,CAAC;gBACT,IAAI,CAAC,MAAM,CAAC,CAAC;aACZ;YACG,WAAW,YAAC,CAAW;gBAC3B,QAAQ,CAAC,EAAE,CAAC,CAAC;gBACb,QAAQ,CAAC,iCAAiC,CAAC,CAAC;gBAC5C,IAAI,CAAC,0BAA0B,CAAC,CAAC;gBACjC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAE,CAAC;gBACf,QAAQ,CAAC,GAAG,CAAC,CAAC;gBACd,QAAQ,CAAC,iDAAiD,CAAC,CAAC;gBAC5D,IAAI,CAAC,oBAAoB,CAAC,CAAC;aAC1B;SACA,CAAC;QACF,KAAgB,UAAa,EAAb,KAAA,KAAK,CAAC,CAAC,CAAC,KAAK,EAAb,cAAa,EAAb,IAAa;YAAzB,IAAI,IAAI,SAAA;YACR,IAAG,IAAI,CAAC,MAAM,KAAK,IAAI,EAAC;gBAC5B,QAAQ,CAAC,EAAE,CAAC,CAAC;gBACb,IAAI,CAAC,mBAAmB,CAAC,CAAC;gBAC1B,IAAI,CAAC,IAAI,CAAC,KAAK,CAAE,CAAC;gBAClB,QAAQ,CAAC,GAAG,CAAC,CAAC;gBACd,IAAI,CAAC,qBAAqB,CAAC,CAAC;gBAC5B,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAE,CAAC;gBACvB,IAAI,CAAC,KAAK,CAAC,CAAC;gBACZ,KAAI,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,EAAC;oBAC1B,QAAQ,CAAC,EAAE,CAAC,CAAC;oBACb,IAAI,CAAC,sBAAsB,CAAC,CAAC;oBAC7B,IAAI,CAAC,IAAI,CAAE,CAAC;oBACZ,IAAI,CAAC,oBAAoB,CAAC,CAAC;oBAC3B,IAAI,CAAC,MAAM,CAAE,CAAC;oBACd,IAAI,CAAC,OAAO,CAAC,CAAC;oBACd,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAE,CAAC;oBAC7C,IAAI,CAAC,IAAI,CAAC,CAAC;iBACV;gBACO,KAAI,IAAI,KAAK,IAAI,IAAI,CAAC,QAAQ,EAAC;oBACvC,QAAQ,CAAC,EAAE,CAAC,CAAC;oBACb,IAAI,CAAC,sBAAsB,CAAC,CAAC;oBAC7B,IAAI,CAAC,KAAK,CAAE,CAAC;oBACb,IAAI,CAAC,oBAAoB,CAAC,CAAC;oBAC3B,IAAI,CAAC,MAAM,CAAE,CAAC;oBACd,IAAI,CAAC,OAAO,CAAC,CAAC;oBACd,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,CAAE,CAAC;oBAChC,IAAI,CAAC,IAAI,CAAC,CAAC;iBACV;gBACO,KAAe,UAAW,EAAX,KAAA,IAAI,CAAC,MAAM,EAAX,cAAW,EAAX,IAAW;oBAAtB,IAAI,GAAG,SAAA;oBACP,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;iBACvB;gBACT,QAAQ,CAAC,EAAE,CAAC,CAAC;gBACb,IAAI,CAAC,wBAAwB,CAAC,CAAC;aAC9B;SACA;KACJ;IACG,QAAQ,CAAC,EAAE,CAAC,CAAC;IACb,IAAI,CAAC,2BAA2B,CAAC,CAAC;IAClC,IAAI,CAAC,MAAM,CAAE,CAAC;IACd,QAAQ,CAAC,mBAAmB,CAAC,CAAC;IAC9B,IAAI,CAAC,cAAc,CAAC,CAAC;IACrB,IAAI,CAAC,MAAM,CAAE,CAAC;IACd,IAAI,CAAC,OAAO,CAAC,CAAC;IACd,IAAI,CAAC,MAAM,CAAE,CAAC;IACd,IAAI,CAAC,MAAM,CAAC,CAAC;IACb,IAAI,CAAC,MAAM,CAAE,CAAC;IACd,QAAQ,CAAC,WAAW,CAAC,CAAC;IACtB,IAAI,CAAC,cAAc,CAAC,CAAC;IACrB,IAAI,CAAC,MAAM,CAAE,CAAC;IACd,QAAQ,CAAC,6BAA6B,CAAC,CAAC;IACxC,IAAI,CAAC,cAAc,CAAC,CAAC;IACrB,IAAI,CAAC,MAAM,CAAE,CAAC;IACd,IAAI,CAAC,uBAAuB,CAAC,CAAC;IAC9B,IAAI,CAAC,MAAM,CAAE,CAAC;IACd,IAAI,CAAC,OAAO,CAAC,CAAC;IACd,IAAI,CAAC,MAAM,CAAE,CAAC;IACd,IAAI,CAAC,UAAU,CAAC,CAAC;IACjB,IAAI,CAAC,MAAM,CAAE,CAAC;IACd,QAAQ,CAAC,kBAAkB,CAAC,CAAC;IAC7B,IAAI,CAAC,iBAAiB,CAAC,CAAC;IACxB,IAAI,CAAC,MAAM,CAAE,CAAC;IACd,IAAI,CAAC,WAAW,CAAC,CAAC;IAClB,kBAAkB,EAAE,CAAC;IACrB,QAAQ,CAAC,EAAE,CAAC,CAAC;IACb,QAAQ,CAAC,WAAW,CAAC,CAAC;IACtB,IAAI,CAAC,kCAAkC,CAAC,CAAC;IACzC,IAAI,CAAC,MAAM,CAAE,CAAC;IACd,IAAI,CAAC,UAAU,CAAC,CAAC;IACjB,IAAI,CAAC,MAAM,CAAE,CAAC;IACd,QAAQ,CAAC,WAAW,CAAC,CAAC;IACtB,IAAI,CAAC,cAAc,CAAC,CAAC;IACrB,IAAI,CAAC,MAAM,CAAE,CAAC;IACd,QAAQ,CAAC,mDAAmD,CAAC,CAAC;IAC9D,IAAI,CAAC,6BAA6B,CAAC,CAAC;IACpC,IAAI,CAAC,MAAM,CAAE,CAAC;IACd,IAAI,CAAC,QAAQ,CAAC,CAAC;IACf,IAAI,CAAC,MAAM,CAAE,CAAC;IACd,IAAI,CAAC,UAAU,CAAC,CAAC;IACjB,IAAI,CAAC,MAAM,CAAE,CAAC;IACd,IAAI,CAAC,YAAY,CAAC,CAAC;IACnB,IAAI,CAAC,MAAM,CAAE,CAAC;IACd,QAAQ,CAAC,OAAO,CAAC,CAAC;IAClB,QAAQ,CAAC,EAAE,CAAC,CAAC;IACb,IAAI,CAAC,mCAAmC,CAAC,CAAC;IAC1C,IAAI,CAAC,MAAM,CAAE,CAAC;IACd,IAAI,CAAC,UAAU,CAAC,CAAC;IACjB,IAAI,CAAC,MAAM,CAAE,CAAC;IACd,QAAQ,CAAC,WAAW,CAAC,CAAC;IACtB,IAAI,CAAC,8BAA8B,CAAC,CAAC;IACrC,IAAI,CAAC,MAAM,CAAE,CAAC;IACd,QAAQ,CAAC,OAAO,CAAC,CAAC;IAClB,QAAQ,CAAC,OAAO,CAAC,CAAC;IAClB,QAAQ,CAAC,EAAE,CAAC,CAAC;IACb,QAAQ,CAAC,qCAAqC,CAAC,CAAC;IAChD,QAAQ,CAAC,iCAAiC,CAAC,CAAC;IAC5C,QAAQ,CAAC,+DAA+D,CAAC,CAAC;IAC1E,IAAI,CAAC,oBAAoB,CAAC,CAAC;IAC3B,IAAI,CAAC,MAAM,CAAE,CAAC;IACd,QAAQ,CAAC,wBAAwB,CAAC,CAAC;IACnC,QAAQ,CAAC,sBAAsB,CAAC,CAAC;IACjC,IAAI,CAAC,+BAA+B,CAAC,CAAC;IACtC,IAAI,CAAC,MAAM,CAAE,CAAC;IACd,IAAI,CAAC,iBAAiB,CAAC,CAAC;IACxB,IAAI,CAAC,MAAM,CAAE,CAAC;IACd,QAAQ,CAAC,4BAA4B,CAAC,CAAC;IACvC,IAAI,CAAC,qBAAqB,CAAC,CAAC;IAC5B,IAAI,CAAC,MAAM,CAAE,CAAC;IACd,QAAQ,CAAC,qBAAqB,CAAC,CAAC;IAChC,QAAQ,CAAC,WAAW,CAAC,CAAC;IACtB,QAAQ,CAAC,gBAAgB,CAAC,CAAC;IAC3B,IAAI,CAAC,oBAAoB,CAAC,CAAC;IAC3B,IAAI,CAAC,MAAM,CAAE,CAAC;IACd,QAAQ,CAAC,YAAY,CAAC,CAAC;IACvB,QAAQ,CAAC,WAAW,CAAC,CAAC;IACtB,IAAI,CAAC,qBAAqB,CAAC,CAAC;IAC5B,IAAI,CAAC,MAAM,CAAE,CAAC;IACd,QAAQ,CAAC,UAAU,CAAC,CAAC;IACrB,QAAQ,CAAC,+BAA+B,CAAC,CAAC;IAC1C,QAAQ,CAAC,mCAAmC,CAAC,CAAC;IAC9C,QAAQ,CAAC,0BAA0B,CAAC,CAAC;IACrC,QAAQ,CAAC,WAAW,CAAC,CAAC;IACtB,QAAQ,CAAC,2BAA2B,CAAC,CAAC;IACtC,QAAQ,CAAC,sBAAsB,CAAC,CAAC;IACjC,QAAQ,CAAC,6BAA6B,CAAC,CAAC;IACxC,QAAQ,CAAC,gCAAgC,CAAC,CAAC;IAC3C,QAAQ,CAAC,oCAAoC,CAAC,CAAC;IAC/C,QAAQ,CAAC,uCAAuC,CAAC,CAAC;IAClD,QAAQ,CAAC,8BAA8B,CAAC,CAAC;IACzC,QAAQ,CAAC,eAAe,CAAC,CAAC;IAC1B,QAAQ,CAAC,oBAAoB,CAAC,CAAC;IAC/B,QAAQ,CAAC,8CAA8C,CAAC,CAAC;IACzD,QAAQ,CAAC,yCAAyC,CAAC,CAAC;IACpD,QAAQ,CAAC,mCAAmC,CAAC,CAAC;IAC9C,QAAQ,CAAC,8BAA8B,CAAC,CAAC;IACzC,QAAQ,CAAC,eAAe,CAAC,CAAC;IAC1B,QAAQ,CAAC,WAAW,CAAC,CAAC;IACtB,QAAQ,CAAC,2BAA2B,CAAC,CAAC;IACtC,QAAQ,CAAC,0CAA0C,CAAC,CAAC;IACrD,QAAQ,CAAC,2BAA2B,CAAC,CAAC;IACtC,QAAQ,CAAC,WAAW,CAAC,CAAC;IACtB,QAAQ,CAAC,gBAAgB,CAAC,CAAC;IAC3B,QAAQ,CAAC,sBAAsB,CAAC,CAAC;IACjC,QAAQ,CAAC,mCAAmC,CAAC,CAAC;IAC9C,QAAQ,CAAC,8BAA8B,CAAC,CAAC;IACzC,QAAQ,CAAC,0BAA0B,CAAC,CAAC;IACrC,QAAQ,CAAC,WAAW,CAAC,CAAC;IACtB,QAAQ,CAAC,OAAO,CAAC,CAAC;IAClB,QAAQ,CAAC,qCAAqC,CAAC,CAAC;IAChD,QAAQ,CAAC,mGAAmG,CAAC,CAAC;IAC9G,QAAQ,CAAC,yEAAyE,CAAC,CAAC;IACpF,QAAQ,CAAC,2CAA2C,CAAC,CAAC;IACtD,QAAQ,CAAC,OAAO,CAAC,CAAC;IAClB,QAAQ,CAAC,uCAAuC,CAAC,CAAC;IAClD,IAAI,CAAC,oBAAoB,CAAC,CAAC;IAC3B,IAAI,CAAC,MAAM,CAAE,CAAC;IACd,QAAQ,CAAC,gBAAgB,CAAC,CAAC;IAC3B,QAAQ,CAAC,uBAAuB,CAAC,CAAC;IAClC,QAAQ,CAAC,sCAAsC,CAAC,CAAC;IACjD,QAAQ,CAAC,iCAAiC,CAAC,CAAC;IAC5C,IAAI,CAAC,mCAAmC,CAAC,CAAC;IAC1C,IAAI,CAAC,MAAM,CAAE,CAAC;IACd,IAAI,CAAC,2BAA2B,CAAC,CAAC;IAClC,IAAI,CAAC,MAAM,CAAE,CAAC;IACd,QAAQ,CAAC,iBAAiB,CAAC,CAAC;IAC5B,IAAI,CAAC,yBAAyB,CAAC,CAAC;IAChC,IAAI,CAAC,MAAM,CAAE,CAAC;IACd,QAAQ,CAAC,uBAAuB,CAAC,CAAC;IAClC,QAAQ,CAAC,eAAe,CAAC,CAAC;IAC1B,QAAQ,CAAC,oBAAoB,CAAC,CAAC;IAC/B,QAAQ,CAAC,8BAA8B,CAAC,CAAC;IACzC,QAAQ,CAAC,eAAe,CAAC,CAAC;IAC1B,QAAQ,CAAC,WAAW,CAAC,CAAC;IACtB,IAAI,CAAC,+BAA+B,CAAC,CAAC;IACtC,IAAI,CAAC,MAAM,CAAE,CAAC;IACd,QAAQ,CAAC,oBAAoB,CAAC,CAAC;IAC/B,QAAQ,CAAC,4EAA4E,CAAC,CAAC;IACvF,QAAQ,CAAC,WAAW,CAAC,CAAC;IACtB,QAAQ,CAAC,qBAAqB,CAAC,CAAC;IAChC,QAAQ,CAAC,OAAO,CAAC,CAAC;IAClB,IAAI,CAAC,GAAG,CAAC,CAAC;CAGb;;ACn3BD,IAAI,SAAS,GAAkE,EAAE,CAAC;AAElF,wBAA+B,IAAY,EAAE,MAAsD;IAC/F,SAAS,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC;CAC5B;AAED,sBAA6B,IAAY,EAAE,KAAoB,EAAE,EAAe,EAAE,EAAwB;IACtG,IAAI,CAAC,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC;IACxB,IAAG,CAAC,KAAK,SAAS,EAAC;QACf,OAAO,6BAA0B,IAAI,8BAA0B,EAAE;KACpE;SACI;QACD,SAAS,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;KAC9B;CACJ;AAED,cAAc,CAAC,YAAY,EAAE,UAAC,KAAK,EAAE,EAAE;IACnC,UAAU,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;IACtB,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;CAClB,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;"}