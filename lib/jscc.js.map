{"version":3,"file":"jscc.js","sources":["../src/util/bitset.ts","../src/util/common.ts","../src/util/interval-set.ts","../src/lexer/char-set.ts","../src/lexer/state.ts","../src/util/io.ts","../src/lexer/dfa.ts","../src/util/E.ts","../src/lexer/pattern-exception.ts","../src/lexer/compile.ts","../src/lexer/pattern.ts","../src/grammar/grammar.ts","../src/parser/file.ts","../src/grammar/token-set.ts","../src/grammar/token-entry.ts","../src/parser/gbuilder.ts","../src/parser/gparser.ts","../src/grammar/item-set.ts","../src/util/list.ts","../src/grammar/ptable.ts","../src/grammar/ptable-gen.ts","../src/top/parse-test.ts","../src/top/result.ts","../src/util/compress.ts"],"sourcesContent":["\nconst BSIZE = 32;\nexport class BitSet{\n    private _s: number[];\n    constructor(private _size: number){\n        this._s = new Array(Math.ceil(_size / BSIZE));\n        for(var i = 0; i < this._s.length; i++){\n            this._s[i] = 0;\n        }\n    }\n    public add(i: number): boolean{\n        var block = Math.floor(i / BSIZE);\n        var offset = i - block * BSIZE;\n        var orig = this._s[block];\n        this._s[block] |= (1 << offset);\n        return orig !== this._s[block];\n    }\n    public addAll(): void{\n        for(var i = 0;i < this._s.length;i++){\n            this._s[i] = ~0;\n        }\n    }\n    public remove(i: number): boolean{\n        var block = Math.floor(i / BSIZE);\n        var offset = i - block * BSIZE;\n        var orig = this._s[block];\n        this._s[block] &= ~(1 << offset);\n        return orig !== this._s[block];\n    }\n    public removeAll(): void{\n        for(var i = 0;i < this._s.length;i++){\n            this._s[i] = 0;\n        }\n    }\n    public contains(i: number): boolean{\n        var block = Math.floor(i / BSIZE);\n        var offset = i - block * BSIZE;\n        return (this._s[block] & (1 << offset)) !== 0;\n    }\n    public union(set: BitSet): boolean{\n        var changed = false;\n        for(var i = 0;i < this._s.length;i++){\n            var orig = this._s[i];\n            this._s[i] |= set._s[i];\n            changed = changed || (this._s[i] !== orig);\n        }\n        return changed;\n    }\n    public hasIntersection(set: BitSet): boolean{\n        for(var i = 0;i < this._s.length;i++){\n            if((this._s[i] & set._s[i]) !== 0){\n                return true;\n            }\n        }\n        return false;\n    }\n    public equals(set: BitSet): boolean{\n        for(var i = 0;i < this._s.length;i++){\n            if(this._s[i] !== set._s[i]){\n                return false;\n            }\n        }\n        return true;\n    }\n    public forEach(cb: (i: number) => any){\n        for(var i = 0;i < this._size;i++){\n            this.contains(i) && cb(i);\n        }\n    }\n    public hash(): string{\n        var ret = '';\n        for(var i = 0;i < this._s.length;i++){\n            ret += this._s[i].toString(16) + '-';\n        }\n        return ret;\n    }\n}\n\n","\nexport var YYTAB: string = '    ';\nexport var DEBUG: boolean = true;\n\nexport interface Console{\n    assert: (expr: boolean) => any;\n    log: (s: string) => void;\n}\n\nexport var console: Console = {\n    assert: function(expr){\n        if(!expr){\n            throw new Error('Assertion failed');\n        }\n    },\n    log: function(s){},\n};\n\nexport function setDebugger(d: Console){\n    return console.log = d.log;\n}\nexport function setTab(t: string): string{\n    return YYTAB = t;\n}\n\n\n\n","import { DEBUG } from './common';\n\n\n\nfunction copyArray(a: any[]): any[]{\n    var ret = [];\n    for(var i = 0;i < a.length;i++){\n        ret.push(a[i]);\n    }\n    return ret;\n}\n\nfunction cm(a: Num, b: Num): number{\n    if((a === Inf.oo && b !== Inf.oo) || (a !== Inf._oo && b === Inf._oo) || a > b){\n        return 1;\n    }\n    else if((a === Inf._oo && b !== Inf._oo) || (a !== Inf.oo && b === Inf.oo) || a < b ){\n        return -1;\n    }\n    else {\n        return 0;\n    }\n}\nexport enum Inf{\n    oo = \"oo\",\n    _oo = \"-oo\"\n};\nexport type Num = Inf | number;\n\nexport interface DataSet<T>{\n    union(set: DataSet<T>): void;\n    add(d: T): void;\n    toArray(): T[];\n}\nclass Interval<T>{\n    public a: Num;\n    public b: Num;\n    public prev: Interval<T>;\n    public next: Interval<T>;\n    public parent: IntervalSet<T>;\n    public dataSet: DataSet<T>;\n    constructor(a: Num, b: Num){\n        this.a = a;\n        this.b = b;\n    }\n    \n    public insertBefore(a: Num, b: Num, data?: T){\n        if(this.parent.isValid(this) && !this.parent.noMerge && this.a === (b as number) + 1){\n            this.a = a;\n            return this;\n        }\n        else {\n            var it = this.parent.createInterval(a,b,data);\n            it.prev = this.prev;\n            it.next = this;\n            this.prev.next = it;\n            this.prev = it;\n            return it;\n        }\n    }\n    public contains(a: Num): boolean{\n        return cm(this.a,a) <= 0 && cm(this.b,a) >= 0;\n    }\n    public overlaps(a: Num, b: Num): boolean{\n        return !(cm(a,this.b) > 0 || cm(b,this.a) < 0);\n    }\n    public insertAfter(a: Num, b: Num, data?: T): Interval<T>{\n        if(this.parent.isValid(this) && !this.parent.noMerge && this.b === (a as number) - 1){\n            this.b = b;\n            return this;\n        }\n        else {\n            var it = this.parent.createInterval(a,b,data);\n            it.prev = this;\n            it.next = this.next;\n            this.next.prev = it;\n            this.next = it;\n            return it;\n        }\n    }\n    public splitLeft(a: Num): Interval<T>{\n        //DEBUG && console.assert(this.parent.noMerge);\n        if(cm(a, this.a) > 0){\n            var ret = this.insertBefore(this.a,(a as number) - 1);\n            this.parent.noMerge && ret.dataSet.union(this.dataSet);\n            this.a = a;\n            return ret;\n        }\n        return this;\n    }\n    public splitRight(b: Num): Interval<T>{\n        //DEBUG && console.assert(this.parent.noMerge);\n        if(cm(b, this.b) < 0){\n            var ret = this.insertAfter((b as number) + 1,this.b);\n            this.parent.noMerge && ret.dataSet.union(this.dataSet);\n            this.b = b;\n            return ret;\n        }\n        return this;\n    }\n    public remove(): Interval<T>{\n        this.prev.next = this.next;\n        this.next.prev = this.prev;\n        return this;\n    }\n    public checkMerge(): Interval<T>{\n        if(this.a !== Inf._oo && this.prev.a !== null && this.a === (this.prev.b as number) + 1){\n            this.a = this.prev.a;\n            this.prev.remove();\n        }\n        if(this.b !== Inf.oo && this.next.a !== null && this.b === (this.next.a as number) - 1){\n            this.b = this.next.b;\n            this.next.remove();\n        }\n        return this;\n    }\n    public toString(mapper: (a: Num) => string): string{\n        var ret = '';\n        function dfmapper(c: Num): string{\n            return c === Inf.oo ? '+oo' : c === Inf._oo ? '-oo' : c.toString();\n        }\n        var a = (mapper || dfmapper)(this.a);\n        var b = (mapper || dfmapper)(this.b);\n        if(this.a === this.b){\n            ret += a;\n        }\n        else{\n            ret += this.a === Inf._oo ? '(' + a : '[' + a;\n            ret += ',';\n            ret += this.b === Inf.oo ? b + ')' : b + ']';\n        }\n        this.dataSet && (ret += this.dataSet.toString());\n        return ret;\n    }\n}\nfunction checkArg(a: Num, b: Num){\n    if(cm(a,b) > 0){\n        throw new Error(`illegal argument: \"a\"(${a}) must be no more than \"b\"(${b})`);\n    }\n}\nexport class IntervalSet<T>{\n    public head: Interval<T>;\n    public tail: Interval<T>;\n    public noMerge: boolean;\n    public dataSetConstructor: () => DataSet<T>;\n\n    constructor(dataSetConstructor?: () => DataSet<T>){\n        this.head = new Interval(0,0);\n        this.head.parent = this;\n        this.tail = new Interval(null,null);\n        this.tail.parent = this;\n        this.head.next = this.tail;\n        this.tail.prev = this.head;\n    \n        this.noMerge = typeof dataSetConstructor !== 'undefined';\n        this.dataSetConstructor = dataSetConstructor || null;\n    }\n    isValid(it: Interval<T>): boolean{\n        return it !== this.head && it !== this.tail;\n    }\n    createInterval(a: Num, b: Num, data: T): Interval<T>{\n        var ret = new Interval<T>(a,b);\n        ret.parent = this;\n        this.dataSetConstructor && (ret.dataSet = this.dataSetConstructor());\n        data && ret.dataSet.add(data);\n        return ret;\n    }\n    fitPoint(a: Num, b: Num): Interval<T>{\n        for(var it = this.head;it !== this.tail;it = it.next){\n            if((it === this.head || cm(a,it.b) > 0) && (it.next === this.tail || cm(b,it.next.a) < 0)){\n                return it;\n            }\n        }\n        return null;\n    }\n    overlaped(a: Num, b: Num): Interval<T>[]{\n        var start = null,end = null;\n        var it = this.head.next;\n        for(;it !== this.tail && !it.overlaps(a,b);it = it.next);\n        if(it === this.tail){\n            return null;\n        }\n        start = end = it;\n        for(;it !== this.tail && it.overlaps(a,b);it = it.next){\n            end = it;\n        }\n        return [start,end];\n    }\n    /**\n     * add an interval into the set\n     * @param data - The extra data associated with the added interval, which is only valid when noMerge = true\n     * \n     */\n    add(a: Num, b: Num = a, data?: T){\n        var noMerge = this.noMerge;\n        // /b = b || a;\n        DEBUG && checkArg(a,b);\n        var overlap = this.overlaped(a,b);\n        if(overlap === null){\n            this.fitPoint(a,b).insertAfter(a,b,data);\n        }\n        else {\n            if(!noMerge){\n                var a1 = cm(a,overlap[0].a) < 0 ? a : overlap[0].a;\n                var b1 = cm(b,overlap[1].b) > 0 ? b : overlap[1].b;\n                overlap[0].a = a1;\n                overlap[0].b = b1;\n                overlap[0].next = overlap[1].next;\n                overlap[1].next.prev = overlap[0];\n                overlap[0].checkMerge();\n            }\n            else {\n                if(overlap[0].contains(a)){\n                    overlap[0].splitLeft(a);\n                }\n                else {\n                    overlap[0].insertBefore(a,(overlap[0].a as number) - 1,data);\n                }\n                if(overlap[1].contains(b)) {\n                    overlap[1].splitRight(b);\n                }\n                else {\n                    overlap[1].insertAfter((overlap[1].b as number) + 1,b,data);\n                }\n                for(var it = overlap[0];it !== overlap[1];it = it.next){\n                    it.dataSet.add(data);\n                    if((it.b as number) + 1 < it.next.a){\n                        it.insertAfter((it.b as number) + 1,(it.next.a as number) - 1,data);\n                    }\n                }\n                overlap[1].dataSet.add(data);\n            }\n        }\n        return this;\n    }\n    remove(a: Num, b: Num): IntervalSet<T>{\n        checkArg(a,b);\n        var overlap = this.overlaped(a,b);\n        if(overlap !== null){\n            overlap[0].contains(a) && overlap[0].splitLeft(a);\n            overlap[1].contains(b) && overlap[1].splitRight(b);\n            overlap[0].prev.next = overlap[1].next;\n            overlap[1].next.prev = overlap[0].prev;\n        }\n        return this;\n    }\n    removeAll(): IntervalSet<T>{\n        this.head.next = this.tail;\n        this.tail.prev = this.head;\n        return this;\n    }\n    forEach(cb: (a: Num, b: Num, it: Interval<T>) => any): IntervalSet<T>{\n        for(var it = this.head.next;it !== this.tail;it = it.next){\n            cb(it.a,it.b,it);\n        }\n        return this;\n    }\n    union(s: IntervalSet<T>): IntervalSet<T>{\n        for(var it = s.head.next;it !== s.tail;it = it.next){\n            this.add(it.a,it.b);\n        }\n        return this;\n    }\n    contains(a: Num): boolean{\n        for(var it = this.head.next;it !== this.tail;it = it.next){\n            if(it.contains(a)){\n                return true;\n            }\n        }\n        return false;\n    }\n    toString(mapper: (a: Num) => string){\n        var ret = '';\n        var t = false;\n        for(var it = this.head.next;it !== this.tail;it = it.next){\n            if(t){\n                ret += ',';\n            }\n            t = true;\n            ret += it.toString(mapper);\n        }\n        return ret === '' ? 'phi' : ret;\n    }\n}","import { Inf, IntervalSet, DataSet } from '../util/interval-set';\n\nvar oo = Inf.oo;\nvar _oo = Inf._oo;\nexport class CharSet<T> extends IntervalSet<T>{\n    constructor(datac?: () => DataSet<T>){\n        super(datac);\n    }\n    addAll(): void{\n        super.add(0, Inf.oo);\n    }\n    toString(): string{\n        return super.toString(function(c){\n            if(c !== oo && c !== _oo){\n                if(c >= 0x20 && c <= 0x7e){\n                    return '\\'' + String.fromCharCode(c as number) + '\\'';\n                }\n                else {\n                    return '\\\\x' + (c as number).toString(16);\n                }\n            }\n            else if(c === oo){\n                return 'oo';\n            }\n            else {\n                return '-oo';\n            }\n        });\n    }\n}\n","import { BitSet } from '../util/bitset';\nimport { YYTAB } from '../util/common';\nimport { CharSet } from './char-set';\nimport { console } from '../util/common';\nimport { DFA } from './dfa.js';\nimport { DataSet } from '../util/interval-set';\n\nexport enum Action{\n    START = 0,\n    END,\n    NONE\n}\nvar maxlen = 0;\nclass StateArray<T> extends Array<State<T>> implements DataSet<State<T>>{\n    constructor(){\n        super(0);\n        // XXX: fix prototype chain?\n        (Object as any).setPrototypeOf(this, StateArray.prototype);\n    }\n    add(s: State<T>){\n        for(var s2 of this){\n            if(s === s2){\n                // console.log('hit: ' + s.index);\n                return;\n            }\n        }\n        this.length > maxlen && (maxlen = this.length);\n        this.push(s);\n    }\n    union(s: StateArray<T>){\n        for(var state of s){\n            this.add(state);\n        }\n    }\n    toArray(){\n        var ret: State<T>[] = [];\n        for(let s of this){\n            ret.push(s);\n        }\n        return ret;\n    }\n}\nexport class Arc<T>{\n    chars: CharSet<any> = new CharSet<any>();\n    from: State<T>;\n    to: State<T>;\n    constructor(from: State<T>, to: State<T>){\n        this.from = from;\n        this.to = to;\n    }\n}\nexport class EndAction<T>{\n    priority: number = 0;\n    id: number = 0;\n    data: T = null;\n}\nexport class State<T>{\n    valid: boolean = false;\n    arcs: Arc<T>[] = [];\n    epsilons: State<T>[] = [];\n    index: number = -1;\n    isStart: boolean = false;\n    isEnd: boolean = false;\n    endAction: EndAction<T>;\n    constructor(endAction?: EndAction<T>){\n        this.endAction = endAction || null;\n    }\n    findArc(to: State<T>): Arc<T>{\n        for(var arc of this.arcs){\n            if(arc.to === to){\n                return arc;\n            }\n        }\n        return null;\n    }\n    /**\n     * create an arc and link the state to another with that arc.\n     * \n     * @param {State} s\n     * @returns {Arc} the created arc.\n     */\n    to(s: State<T>): Arc<T>{\n        var arc = this.findArc(s);\n        if(arc === null){\n            arc = new Arc<T>(this, s);\n            this.arcs.push(arc);\n        }\n        s.valid = true;\n        return arc;\n    }\n    epsilonTo(s: State<T>): void{\n        this.epsilons.push(s);\n    }\n    /**\n     * iterate all the states that can be reached from the state.\n     * \n     * \n     */\n    forEach(cb: (s: State<T>) => void, epOnly: boolean = false): void{\n        var queue: State<T>[] = [this];\n        var deja: boolean[] = [];\n    \n        deja[this.index] = true;\n        while(queue.length > 0){\n            var s = queue.pop();\n            cb(s);\n            if(!epOnly){\n                for(var j = 0;j < s.arcs.length;j++){\n                    var to = s.arcs[j].to;\n                    if(!deja[to.index]){\n                        queue.push(to);\n                        deja[to.index] = true;\n                    }\n                }\n            }\n            for(var j = 0;j < s.epsilons.length;j++){\n                var to = s.epsilons[j];\n                if(!deja[to.index]){\n                    queue.push(to);\n                    deja[to.index] = true;\n                }\n            }\n        }\n    }\n    number(): void{\n        var i = 0;\n        this.forEach(function(state){\n            state.index = i++;\n        });\n    }\n    toString(recursive?: boolean): string{\n        recursive = !!recursive;\n        function single(){\n            var ret = 'state ' + this.index;\n            if(this.isStart){\n                ret += '(start)';\n            }\n            if(this.endAction){\n                ret += '(end: ' + this.endAction.id + ')';\n            }\n            ret += '\\n';\n            for(var i = 0;i < this.arcs.length;i++){\n                var arc = this.arcs[i];\n                ret += YYTAB + arc.chars.toString() + ' -> state ' + arc.to.index + '\\n';\n            }\n            if(this.epsilons.length > 0){\n                ret += YYTAB + 'epsilon: ';\n                for(var i = 0;i < this.epsilons.length;i++){\n                    if(i > 0){\n                        ret += ',';\n                    }\n                    ret += this.epsilons[i].index;\n                }\n                ret += '\\n';\n            }\n            return ret;\n        }\n        if(!recursive){\n            return single.call(this);\n        }\n        else {\n            var ret = '';\n            this.forEach(function(state){\n                ret += single.call(state) + '\\n';\n            });\n            return ret;\n        }\n    }\n    /**\n     * @param {State} state\n     */\n    copyEndFrom(state: State<T>): void{\n        if(state.endAction !== null){\n            if(this.endAction !== null){\n                if(this.endAction.priority < state.endAction.priority){\n                    this.endAction = state.endAction;\n                }\n            }\n            else {\n                this.endAction = state.endAction;\n            }\n        }\n    }\n    removeEpsilons(): void{\n        var cela = this;\n        var valid: State<T>[] = [this];\n        this.forEach(function(s){\n            if(s.valid){\n                valid.push(s);\n            }\n        });\n        for(var i = 0;i < valid.length;i++){\n            var s = valid[i];\n            s.forEach(function(state){\n                if(state !== s){\n                    for(var j = 0;j < state.arcs.length;j++){\n                        var arc = state.arcs[j];\n                        s.to(arc.to).chars.union(arc.chars);\n                    }\n                    //s.isEnd = s.isEnd || state.isEnd;\n                    s.copyEndFrom(state);\n                }\n            },true);\n            s.epsilons.length = 0;\n        }\n        for(var i = 0;i < valid.length;i++){\n            valid[i].index = i;\n        }\n    }\n    count(): number{\n        var c = 0;\n        this.forEach(function(){\n            c++;\n        });\n        return c;\n    }\n    \n    size(): number{\n        var i = 0;\n        this.forEach(function(){\n            i++;\n        });\n        return i;\n    }\n    /**\n     * get all the characters that this state can accept\n     * @param {CharSet} set The set that the resulting characters add into\n     */\n    allChars(set: CharSet<State<T>>){\n        var cela = this;\n        for(var i = 0;i < this.arcs.length;i++){\n            //set.union(this.arcs[i].chars);\n            var arc = this.arcs[i];\n            arc.chars.forEach(function(a, b){\n                set.add(a, b, arc.to);\n            });\n        }\n    }\n    /**\n     * @param {string} char\n     * @returns {State}\n     */\n    getState(char: number): State<T>{\n        for(var i = 0;i < this.arcs.length;i++){\n            var arc = this.arcs[i];\n            if(arc.chars.contains(char)){\n                return arc.to;\n            }\n        }\n        return null;\n    }\n    hasArc(): boolean{\n        return this.arcs.length > 0;\n    }\n    toDFA(): { head: State<T>, states: State<T>[] }{\n        /**\n         * the resulting dfa states\n         * @type {Object.<string,CompoundState>}\n         */\n        var dfaStates: { [s: string]: CompoundState<T> } = {};\n        /**\n         * an array containing all the dfa states\n         * @type {State[]}\n         */\n        var states: State<T>[] = [];\n        var dfaCount = 0;\n        var stateCount = this.count();\n    \n        /**\n         * set that used to all the characters,in order not to create\n         * a new object everytime.\n         * @type {CharSet}\n         */\n        var set = new CharSet<State<T>>(() => new StateArray<T>());\n\n        var cela = this;\n        \n        // initiation,put {start} into the dfaStates.\n        var initState = new CompoundState(stateCount,[this]);\n        initState.index = dfaCount++;\n        states.push(initState);\n        var lastState = initState;\n        dfaStates[initState.hash()] = initState;\n        /**\n         * queue of dfastates to be processed\n         * @type {CompoundState[]}\n         */\n        var queue: CompoundState<T>[] = [initState];\n    \n        while(queue.length > 0){\n            var s = queue.shift();\n            // clear set and arc array\n            set.removeAll();\n            // find all the characters that this state can accept\n            s.allChars(set);\n            set.forEach(function(chara,charb,it){\n                var cpState = new CompoundState<T>(stateCount,it.dataSet.toArray());\n                var cphash = cpState.hash();\n                if(dfaStates[cphash]){\n                    // this state est deja connu\n                    cpState = dfaStates[cphash];\n                }\n                else {\n                    dfaStates[cphash] = cpState;\n                    queue.push(cpState);\n                    cpState.index = dfaCount++;\n                    states.push(cpState);\n                }\n                s.to(cpState).chars.add(chara,charb);\n            });\n        }\n        initState.release();\n        return {\n            head: initState,\n            states: states\n        };\n    }\n}\n\nclass CompoundState<T> extends State<T>{\n    stateSet: BitSet;\n    states: State<T>[];\n    constructor(stateCount: number, states: State<T>[]){\n        super();\n        this.isEnd = this.isStart = false;\n        this.valid = true;\n        this.states = states;\n        this.stateSet = new BitSet(stateCount);\n        for(var i = 0;i < states.length;i++){\n            this.stateSet.add(states[i].index);\n            //this.isEnd = this.isEnd || states[i].isEnd;\n            this.copyEndFrom(states[i]);\n            this.isStart = this.isStart || states[i].isStart;\n        }\n    }\n    hash(): string{\n        return this.stateSet.hash();\n    }\n\n    // getStates(char: string, states: BitSet){\n    //     for(var i = 0;i < this.states.length;i++){\n    //         State.prototype.getStates.call(this.states[i],char,states);\n            \n    //     }\n    // }\n\n    allChars(set: CharSet<State<T>>){\n        for(var i = 0;i < this.states.length;i++){\n            // State.prototype.allChars.call(this.states[i],set);\n            this.states[i].allChars(set);\n        }\n    }\n    forEach(cb: (s: CompoundState<T>) => void){\n        super.forEach(cb);\n    }\n    release(){\n        this.forEach(function(state){\n            state.states.length = 0;\n        });\n    }\n}\n","\nexport var endl = '\\n';\n\nexport abstract class OutputStream {\n    abstract write(s?: string): any;\n    writeln(s?: string): any{\n        s && this.write(s);\n        this.write(endl);\n    }\n}\nexport class StringOS extends OutputStream {\n    public s: string = '';\n    write(s?: string): any{\n        this.s += s;\n    }\n    reset(): any{\n        this.s = '';\n    }\n}\nexport interface InputStream{\n    peek(): string;\n    next(): string;\n}\nexport interface BackupIs extends InputStream{\n    backup(s: string): void;\n}\nexport function StringIS(s: string): InputStream{\n    var i = 0;\n    return {\n        peek: function(){\n            return s.charAt(i) || null;\n        },\n        next: function(){\n            var ret = this.peek();\n            i++;\n            return ret;\n        }\n    };\n}\nexport function biss(iss: InputStream): BackupIs{\n    var backup: string[] = [];\n    return {\n        peek: function(){\n            return backup.length > 0 ? backup[backup.length - 1] : iss.peek();\n        },\n        next: function(){\n            if(backup.length > 0){\n                return backup.pop();\n            }\n            else {\n                return iss.next();\n            }\n        },\n        backup: function(c: string){\n            backup.push(c);\n        }\n    };\n}","import { InputStream,biss } from '../util/io.js';\nimport { State, EndAction } from './state';\n\nexport class DFA<T>{\n    start: State<T>;\n    constructor(public states: State<T>[], public actions: EndAction<T>[]){\n        this.start = states[0];\n    }\n    toString(): string{\n        var ret = '';\n        for(var i = 0;i < this.states.length;i++){\n            ret += this.states[i].toString() + '\\n';\n        }\n        return ret;\n    }\n    \n    matcher(stream: InputStream){\n        var bs = biss(stream);\n        var backups = [];\n        var matched = [];\n        var marker = null;\n        var c = bs.peek();\n        var cs;\n        function nc(){\n            if(marker !== null){\n                backups.push(c);\n            }\n            matched.push(c);\n            bs.next();\n            c = bs.peek();\n        }\n        function rollback(){\n            cs = marker;\n            marker = null;\n            while(backups.length > 0){\n                bs.backup(backups.pop());\n                matched.pop();\n            }\n        }\n        var cela = this;\n        return function(){\n            c = bs.peek();\n            cs = cela.start;\n            matched.length = 0;\n            backups.length = 0;\n            marker = null;\n            var ns;\n            while(true){\n                if(cs.endAction !== null){\n                    // this state is an end state,be carefull\n                    if(cs.hasArc()){\n                        ns = c !== null ? cs.getState(c.charCodeAt(0)) : null;\n                        if(ns === null){\n                            return { matched: matched.join(''),action: cs.endAction };\n                        }\n                        else {\n                            backups.length = 0;\n                            marker = cs;\n                            cs = ns;\n                            nc();\n                        }\n                    }\n                    else {\n                        return { matched: matched.join(''),action: cs.endAction };\n                    }\n                }\n                else {\n                    ns = c !== null ? cs.getState(c.charCodeAt(0)) : null;\n                    if(ns === null){\n                        if(marker !== null){\n                            rollback();\n                            return { matched: matched.join(''),action: cs.endAction };\n                        }\n                        else if(c === null){\n                            //eof\n                            return null;\n                        }\n                        else {\n                            throw new Error('unexpected character \"' + c + '\"');\n                        }\n                    }\n                    else {\n                        cs = ns;\n                        nc();\n                    }\n                }\n            }\n            // return null;\n        }\n    }\n}\n","export interface Option{\n    typeClass?: string;\n    escape?: boolean;\n}\nexport class JsccError{\n    constructor(public msg: string, public type: string = 'Error'){}\n    public toString(opt: Option = {}): string{\n        var escape = !!opt.escape;\n        var ret = this.type;\n        if(opt.typeClass){\n            ret = '<span class=\"' + opt.typeClass + '\">' + ret + '</span>';\n        }\n        ret += ': ';\n        ret += escape ? this.msg.replace(/</g,'&lt').replace(/>/g,'&gt') : this.msg;\n        return ret;\n    }    \n}\nexport class CompilationError extends JsccError{\n    constructor(msg: string, public line: number){\n        super(msg, 'CompilationError');\n    }\n    public toString(opt: Option){\n        return super.toString(opt) + `(at line ${this.line})`;\n    }\n}","import { JsccError } from '../util/E';\nexport class PatternException extends JsccError{\n    constructor(msg: string){\n        super(msg, 'PatternException');\n    }\n}\n","import { PatternException as E } from './pattern-exception.js';\nimport { Action,Arc,EndAction,State } from './state.js';\nimport { CharSet } from './char-set';\n\nexport interface StringContainer{\n    val: string;\n};\n\nfunction stackReader(str: string, strs?: {[s: string]: StringContainer}){\n    var stack = [{ sptr: 0,s: str,name: '' }];\n    var top = stack[0];\n    function checkNested(name: string){\n        for(var i = 0;i < stack.length;i++){\n            if(stack[i].name === name){\n                throw new E('cannot use pattern \"' + name + '\" which leads to loop reference');\n            }\n        }\n    }\n    return {\n        next: function(){\n            top.sptr++;\n            if(top.sptr >= top.s.length){\n                stack.length > 1 && stack.pop();\n                top = stack[stack.length - 1];\n            }\n        },\n        peek: function(){\n            return top.s[top.sptr] || null;\n        },\n        pushTo: function(name){\n            var nn = strs ? strs[name].val : null;\n            if(!nn){\n                throw new E('undefined name \"' + name + '\"');\n            }\n            checkNested(name);\n            stack.push({ sptr: 0,s: '(' + nn + ')',name: name });\n            top = stack[stack.length - 1];\n        }\n    };\n}\n\n/**\n * compile a regular expression into e-NFA\n * @param {string} input\n * @param {number} stateCount\n * @param {Object.<string,string>|undefined} regs\n * @returns {{result: State,stateCount: number,tail: State}}\n */\nexport function compile<T>(input: string, stateCount: number = 0, regs: {[s: string]: StringContainer} = {}){\n    stateCount = stateCount || 0;\n    var stateCountDelta = 0;\n    var reader = stackReader(input,regs);\n    var c = reader.peek();\n\n    function nc(){\n        reader.next();\n        c = reader.peek();\n    }\n    function notEof(reason?: string){\n        if(c === null){\n            throw new E('unexpected end of string' + (reason ? ', ' + reason : ''));\n        }\n    }\n    function ns(){\n        var s = new State<T>();\n        s.index = stateCount++;\n        stateCountDelta++;\n        return s;\n    }\n    function eof(){\n        return c === null;\n    }\n    function expect(c1){\n        if(c !== c1){\n            throw new E('unexpected character \"' + c + '\",expecting \"' + c1 + '\"');\n        }\n        nc();\n    }\n\n    /**\n     * rexp() -> simpleRE() ('|' simpleRE())*\n     */\n    function rexp(start: State<T>): State<T>{\n        var ret = simpleRE(start);\n        while(!eof() && c === '|'){\n            nc();\n            var es = ns();\n            start.epsilonTo(es);\n            simpleRE(es).epsilonTo(ret);                \n        }\n        return ret;\n    }\n\n    /**\n     * simpleRE() -> ( basicRE() )+\n     */\n    function simpleRE(start: State<T>): State<T>{\n        var ret = start;\n        do{\n            ret = basicRE(ret);\n        }while(!eof() && c !== '|' && c !== ')');\n        return ret;\n    }\n\n    /**\n     * basicRE() -> primitive() ['+'|'*'|'?']\n     */\n    function basicRE(start: State<T>): State<T>{\n        var holder = ns();\n        start.epsilonTo(holder);\n        var ret = primitive(holder);\n        \n        if(c === '*'){\n            nc();\n            ret.epsilonTo(holder);\n            var nn = ns();\n            holder.epsilonTo(nn);\n            return nn;\n        }\n        else if(c === '+'){\n            nc();\n            var count = ns();\n            ret.epsilonTo(count);\n            count.epsilonTo(holder);\n            return count;\n        }\n        else if(c === '?'){\n            nc();\n            var nn2 = ns();\n            holder.epsilonTo(nn2);\n            ret.epsilonTo(nn2);\n            return nn2;\n        }\n        else {\n            return ret;\n        }\n    }\n    /**\n     * primitive() -> \n     *   '(' rexpr() ')'\n     * | '.'\n     * | '[' set() ']'\n     * | '{' NAME '}'\n     * | *\n     */\n    function primitive(start: State<T>): State<T>{\n        notEof();\n        if(c === '('){\n            nc();\n            let ret = rexp(start);\n            expect(')');\n            return ret;\n        }\n        else if(c === '.'){\n            nc();\n            let ret = ns();\n            start.to(ret).chars.addAll();\n            return ret;\n        }\n        else if(c === '['){\n            nc();\n            var neg = c as string === '^';\n            neg && nc();\n            let ret = ns();\n            var set = start.to(ret).chars;\n            neg && set.addAll();\n            while(c as string !== ']' && !eof()){\n                setItem(set,neg);\n            }\n            expect(']');\n            return ret;\n        }\n        else if(c === '{'){\n            nc();\n            var name = '';\n            while(c as string !== '}'){\n                notEof();\n                name += c;\n                nc();\n            }\n            nc();\n            reader.pushTo(name);\n            c = reader.peek();\n            return simpleRE(start);\n        }\n        else {\n            let ret = ns();\n            start.to(ret).chars.add(gchar());\n            return ret;\n        }\n    }\n    function gchar(): number{\n        notEof();\n        if(c === '\\\\'){\n            nc();\n            let ret: number | string = c.charCodeAt(0);\n            switch(c as string){\n                case 't': ret = '\\t';\n                case 'n': ret = '\\n';\n                case 'r': ret = '\\r';\n                case 'x': \n                    nc();\n                    var code = '';\n                    while(c !== null && /[0-9a-fA-F]/.test(c)){\n                        code += c;\n                        nc();\n                    }\n                    return parseInt(code,16);\n                default: ret = c;\n            }\n            nc();\n            return ret.charCodeAt(0);\n        }\n        else {\n            var ret = c.charCodeAt(0);\n            nc();\n            return ret;\n        }\n    }\n    /**\n     * setItem() ->\n     *   gchar() ['-'gchar()]\n     */\n    function setItem(set: CharSet<any>, neg: boolean){\n        var s = gchar();\n        var from = s,to = s;\n        if(c === '-'){\n            nc();\n            to = gchar();\n            if(to < from){\n                throw new E('left hand side must be larger than right hand side in wild card character (got \"' \n                + from.toString(16) + '\" < \"'\n                + to.toString(16) + '\")');\n            }\n        }\n        if(neg){\n            set.remove(from,to);\n        }\n        else {\n            set.add(from,to);\n        }\n    }\n\n    var head = ns();\n    head.isStart = true;\n    var tail = rexp(head);\n    return {\n        result: head,\n        tail: tail,\n        stateCount: stateCountDelta\n    };\n}\n/**\n * compile a string into e-NFA,i.e.,regarde it as a regular \n * expression with all metacharacters escaped.\n * \n * @returns {{result: State,stateCount: number,tail: State}}\n */\nexport function compileRaw<T>(input: string, stateCount: number = 0){\n    var sptr = 0;\n    var stateCountDelta = 0;\n    var c = input.charAt(sptr);\n    function ns(){\n        var s = new State<T>();\n        s.index = stateCount++;\n        stateCountDelta++;\n        return s;\n    }\n    function nc(){\n        c = input.charAt(++sptr) || null;\n    }\n    function eof(){\n        return c === null;\n    }\n\n    var head = ns();\n    head.isStart = true;\n    var tail = head;\n    while(!eof()){\n        var s = ns();\n        tail.to(s).chars.add(c.charCodeAt(0));\n        tail = s;\n        nc();\n    }\n    return {\n        result: head,\n        tail: tail,\n        stateCount: stateCountDelta\n    };\n}","import { State,EndAction } from './state';\nimport { DFA } from './dfa';\nimport { compile,compileRaw } from './compile';\nimport { console } from '../util/common';\n\n/**\n * create an object that can construct a lexer dfa\n * @api public\n * @param {Object.<string,string>} regs \n */\nfunction lexerBuilder<T>(regs: { [s: string]: string } = {}){\n    var stateCount = 0;\n    var actions = [];\n    var pr = 0;\n    function ns(){\n        var ret = new State<T>();\n        ret.index = stateCount++;\n        return ret;\n    }\n    var head = ns();\n    return {\n        lexRule: function(reg,id,data,raw){\n            var action = new EndAction<T>();\n            action.priority = pr++;\n            action.id = id;\n            action.data = data || null;\n            var cpd = (!!raw ? compileRaw<T>(reg,stateCount) : compile<T>(reg,stateCount,regs));\n            stateCount += cpd.stateCount;\n            cpd.tail.endAction = action;\n            head.epsilonTo(cpd.result);\n            actions.push(action);\n        },\n        done: function(){\n            head.removeEpsilons();\n            var dhead = head.toDFA();\n            var ret = new DFA<T>(dhead.states,actions);\n            return ret;\n        }\n    };\n}\n\n/**\n * \n * @param {{regexp: string,id: number,data: any,raw: boolean}[]} defs \n * @api public\n * @returns {DFA}\n */\nfunction lexer<T>(defs,regs){\n    var getdef;\n    if(typeof defs !== 'function'){\n        getdef = function(){\n            return defs.shift() || null;\n        }\n    }\n    else {\n        getdef = defs;\n    }\n\n    var bd = lexerBuilder<T>(regs);\n    var def = getdef();\n    while(def !== null){\n        bd.lexRule(def.regexp,def.id,def.data,def.raw);\n        def = getdef();\n    }\n    return bd.done();\n}\n\nexport { lexer,lexerBuilder };","import { TokenSet } from './token-set';\nimport { TokenDef, TokenEntry } from './token-entry'\n\n\n//@type{{sym: string,alias: string,line: number,pr: number,assoc: Assoc,used: boolean}}\n\n//{sym: string,firstSet: TokenSet,used: boolean}\nexport interface NtDef{\n    sym: string,\n    firstSet: TokenSet,\n    used: boolean\n}\n\nexport class Rule {\n    public pr: number = -1;\n    public vars: { [s: string]: string } = null;\n    public parent: Rule = null;\n    constructor(\n        public g: Grammar, \n        public lhs: number,\n        public action: string,\n        public rhs: number[],\n        public index: number,\n        public line: number \n    ){}\n    public toString(marker?: number){\n        var ret = this.index + ': ' + this.g.nts[this.lhs].sym + ' =>';\n        for(var i = 0;i < this.rhs.length;i++){\n            var r = this.rhs[i];\n            if(marker === i){\n                ret += ' .';\n            }\n            if(this.g.isToken(r)){\n                ret += ' \"' + this.g.tokens[r].sym + '\"';\n            }\n            else {\n                ret += ' ' + this.g.nts[r - this.g.tokenCount].sym;\n            }\n        }\n        if(marker === this.rhs.length){\n            ret += ' .';\n        }\n        return ret;\n    }\n}\nexport class Grammar implements TokenEntry{\n    public tokens: TokenDef[] = [];\n    public tokenCount: number = 0;\n    public nts: NtDef[] = [];\n    public rules: Rule[][] = [];\n\n    isToken(t: number): boolean{\n        return t < this.tokenCount;\n    }\n\n    forEachRule(cb: (index: number, rule: Rule) => void): void{\n        for(var i = 0;i < this.rules.length;i++){\n            var rules = this.rules[i];\n            for(var j = 0;j < rules.length;j++){\n                cb(i,rules[j]);\n            }\n        }\n    }\n    forEachRuleOfNt(lhs: number, cb: (rule: Rule) => boolean): void{\n        var rules = this.rules[lhs];\n        for(var j = 0;j < rules.length;j++){\n            if(cb(rules[j])){\n                break;\n            }\n        }\n    }\n    genFirstSets(): void{\n        var changed = true;\n        while(changed){\n            changed = false;\n            // iterate for each non terminal\n            for(var i = 0;i < this.nts.length;i++){\n                var rules = this.rules[i];\n                var firstSet = this.nts[i].firstSet;\n                for(var j = 0;j < rules.length;j++){\n                    var rule = rules[j];\n                    if(rule.rhs.length === 0){\n                        changed = changed || firstSet.add(0);\n                    }\n                    else {\n                        for(var k = 0;k < rule.rhs.length;k++){\n                            var ritem = rule.rhs[k];\n                            if(this.isToken(ritem)){\n                                changed = changed || firstSet.add(ritem + 1);\n                                break;\n                            }\n                            else {\n                                if(i !== ritem){\n                                    changed = changed || firstSet.union(this.nts[ritem - this.tokenCount].firstSet);\n                                }\n                                if(!firstSet.contains(0)){\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    toString(opt: { endl?: string, escape?: boolean, firstSets?: boolean } = {}){\n        opt = opt || {};\n        var endl = opt.endl || '\\n';\n        var escape = opt.escape || false;\n        var ret = '';\n        this.forEachRule((lhs, rule) => {\n            var s = rule.toString();\n            ret += s + '\\n';\n        });\n        if(opt.firstSets){\n            for(var i = 0;i < this.nts.length;i++){\n                var s = this.nts[i];\n                ret += 'First(' + s.sym + ') = { ' + s.firstSet.toString(this) + ' }';\n                ret += '\\n';\n            }\n        }\n        if(escape){\n            ret = ret.replace(/</g,'&lt;').replace(/>/g,'&gt;');\n        }\n        return ret.replace(/\\n/g,endl);\n    }\n    findToken(t: string): number{\n        for(var i = 0;i < this.tokenCount;i++){\n            if(this.tokens[i].sym === t){\n                return i;\n            }\n        }\n        return -1;\n    }\n    \n}\n","import { Grammar } from '../grammar/grammar.js';\nimport { LexAction } from '../lexer/action';\n\nexport class File{\n    grammar: Grammar = null;\n    lexAct: { regexp: string, raw: boolean, actions: LexAction[]}[][] = []\n    opt: {[s: string]: string} = {};\n}\n","import { BitSet } from '../util/bitset';\nimport { TokenEntry } from './token-entry'\n\nexport class TokenSet extends BitSet{\n    constructor(tcount: number){\n        super(tcount);\n    }\n    toString(g: TokenEntry): string{\n        var ret = '';\n        var first = true;\n        if(this.contains(0)){\n            ret += '\"\"';\n            first = false;\n        }\n        for(var i = 0;i < g.tokenCount;i++){\n            if(this.contains(i + 1)){\n                if(!first){\n                    ret += ',';\n                }\n                ret += '\"' + g.tokens[i].sym + '\"';\n                first = false;\n            }\n        }\n        return ret;\n    }\n}","export enum Assoc {\n    UNDEFINED = 0,\n    LEFT,\n    RIGHT,\n    NON\n};\nexport interface TokenDef{\n    sym: string,\n    alias: string,\n    line: number,\n    pr: number,\n    assoc: Assoc,\n    used: boolean,\n}\nexport interface TokenEntry{\n    tokenCount: number;\n    tokens: TokenDef[];\n    isToken(t: number): boolean;\n}","import { Grammar,Rule } from '../grammar/grammar';\nimport { File } from './file';\nimport { BitSet } from '../util/bitset';\nimport { TokenSet } from '../grammar/token-set';\nimport { Assoc, TokenDef } from '../grammar/token-entry';\nimport { CompilationError as E } from '../util/E';\n\nexport enum TokenDefType{\n    TOKEN = 0,// using %token\n    LEFT = 1,// using %left\n    RIGHT = 2,// using %right\n    NON_ASSOC = 3,// using %nonassoc\n    IMPLICIT = 4// direct use in lexical rules or grammar rules\n};\n\ninterface TokenRawDef{\n    index: number;\n    alias: string;\n    pr: number;\n    assoc: Assoc;\n\n    line: number;\n}\n\ninterface RawRuleItem{\n    id: string;\n    isTerm: boolean;\n    line: number;\n}\n\ninterface RawRule {\n    lhs: string;\n    pr: number;\n    action: string;\n    rhs: RawRuleItem[];\n    line: number;\n    vars: {[vname: string]: string};\n}\n\ninterface PeudoToken{\n    assoc: Assoc;\n    pr: number;\n    line: number;\n}\n\nexport class GBuilder{\n    f: File = new File();\n    g: Grammar = new Grammar();\n\n    tokenCount = 0;\n    tokens: { [s: string]: TokenRawDef } = {};\n    rules: RawRule[] = [];\n    ruleStack: RawRule[] = [];\n\n    ntCount = 0;\n    nts: {[s: string]: number} = {};\n\n    genIndex = 0;\n    first = true;\n    pr = 1;\n\n    states: {[s: string]: number} = { DEFAULT: 0 };\n    stateCount = 1;\n    stateNum = 0;\n\n    selectedStates: number[] = [];\n    \n    pseudoTokens: { [tname: string]: PeudoToken } = {};\n\n    private top(){\n        return this.ruleStack[this.ruleStack.length - 1];\n    }\n    private splitAction(line: number){\n        var t = this.top();\n        var s = '@' + this.genIndex++;\n        this.prepareRule(s, line);\n        this.addAction(t.action);\n        this.commitRule();\n        t.action = null;\n        this.addRuleItem(s,false,line);\n    }\n    \n    defToken(name: string, alias: string, line: number){\n        var tk = this.tokens[name];\n        if(tk){\n            throw new E('token \"' + name + '\"' + ' was already defined at line ' + tk.line,line);\n        }\n        else {\n            tk = this.tokens[name] = { \n                index: this.tokenCount++,\n                alias: alias,\n                line: line,\n                pr: 0,\n                assoc: Assoc.UNDEFINED,\n            };\n        }\n        return this;\n    }\n\n    addRegExp(){\n\n    }\n    defineTokenPrec(tid : string, assoc: Assoc, pseudo: boolean, line: number): this{\n        if(!pseudo){\n            var t = this.tokens[tid];\n            if(!t){\n                throw new E('use of undefined token \"' + tid + '\" in associativity defination',line);\n            }\n            t.assoc = assoc;\n            t.pr = this.pr;\n        }\n        else {\n            var t2 = this.pseudoTokens[tid] = this.pseudoTokens[tid] || {\n                assoc: assoc,\n                pr: this.pr,\n                line: line\n            };\n        }\n        return this;\n    }\n    setOpt(name: string, value: string): this{\n        this.f.opt[name] = value;\n        return this;\n    }\n    incPr(){\n        this.pr++;\n        return this;\n    }\n    changeState(s: string){\n        var sn = this.states[s];\n        if(!sn){\n            sn = this.states[s] = this.stateCount++;\n        }\n        this.stateNum = sn;\n        return this;\n    }\n    prepareRule(lhs: string, line: number){\n        if(this.first){\n            this.first = false;\n            this.prepareRule('(accept)',line);\n            this.addRuleItem(lhs,false,line);\n            this.commitRule();\n        }\n        \n        this.ruleStack.push({ \n            lhs: lhs,\n            action: null,\n            rhs:[],\n            line: line,\n            pr: -1,\n            vars: {}\n        });\n        if(this.nts[lhs] === undefined){\n            this.nts[lhs] = this.ntCount++;\n        }\n        return this;\n    }\n    addRuleItem(id: string, isTerm: boolean, line: number){\n        var t = this.top();\n        if(t.action !== null){\n            this.splitAction(line);\n        }\n        t.rhs.push({ id: id,isTerm: isTerm,line: line });\n        return this;\n    }\n    addAction(b: string){\n        var t = this.top();\n        if(t.action !== null){\n            this.splitAction(t.line);\n        }\n        t.action = b;\n        return this;\n    }\n    defineRulePr(token: string, pseudo: boolean, line: number){\n        if(!pseudo){\n            var t = this.tokens[token];\n            if(!t){\n                throw new E('use of undefined token \"' + token + '\" in rule priority defination',line);\n            }\n            if(t.assoc === Assoc.UNDEFINED){\n                throw new E('precedence of token \"' + token + '\" has not been defined',line);\n            }\n            this.top().pr = t.pr;\n        }\n        else {\n            var pt = this.pseudoTokens[token];\n            if(!pt){\n                throw new E('pseudo token \"' + token + '\" is not defined',line);\n            }\n            this.top().pr = pt.pr;\n        }\n        \n        return this;\n    }\n    commitRule(){\n        var t = this.ruleStack.pop();\n        this.rules[t.lhs] || (this.rules[t.lhs] = []);\n        this.rules.push(t);\n        return this;\n    }\n    build(){\n        this.g.tokenCount = this.tokenCount;\n\n        this.g.tokens = new Array(this.tokenCount);\n        this.g.nts = new Array(this.ntCount);\n        for(var tk in this.tokens){\n            var index = this.tokens[tk].index;\n            this.g.tokens[index] = { \n                sym: tk,\n                alias: this.tokens[tk].alias,\n                line: this.tokens[tk].line,\n                pr: this.tokens[tk].pr,\n                assoc: this.tokens[tk].assoc,\n                used: false\n            };\n        }\n        for(var nt in this.nts){\n            this.g.nts[this.nts[nt]] = { \n                sym: nt,\n                firstSet: new TokenSet(this.tokenCount),\n                used: false\n            };\n        }\n        this.g.tokens[0].used = true;\n        this.g.nts[0].used = true;\n\n        var r = new Array(this.ntCount);\n        var ruleCount = 0;\n        for(var i = 0;i < this.rules.length;i++){\n            var ruleItems = [];\n            var rule = this.rules[i];\n            var ntsIndex = this.nts[rule.lhs];\n\n            r[ntsIndex] || (r[ntsIndex] = []);\n            var newRule = new Rule(this.g,ntsIndex,rule.action,ruleItems,ruleCount++,rule.line);\n            newRule.pr = rule.pr;\n            r[ntsIndex].push(newRule);\n            for(var j = 0;j < rule.rhs.length;j++){\n                var it = rule.rhs[j];\n                var rulePr = -1;\n                if(it.isTerm){\n                    var tkEntry = this.tokens[it.id];\n                    if(tkEntry === undefined){\n                        throw new E('use of undefined token \"' + it.id + '\"',it.line);\n                    }\n                    var termIndex = tkEntry.index;\n                    ruleItems.push(tkEntry.index);\n                    this.g.tokens[termIndex].used = true;\n                    if(tkEntry.assoc !== Assoc.UNDEFINED){\n                        rulePr = tkEntry.pr;\n                    }\n                }\n                else {\n                    var ntIndex = this.nts[it.id];\n                    if(ntIndex === undefined){\n                        throw new E('use of undefined non terminal \"' + it.id + '\"',it.line);\n                    }\n                    ruleItems.push(ntIndex + this.tokenCount);\n                    //g.sym[ntIndex + tokenCount].used = true;\n                    this.g.nts[ntIndex].used = true;\n                }\n                if(newRule.pr === -1 && rulePr !== -1){\n                    newRule.pr = rulePr;\n                }\n            }\n        }\n        this.g.rules = r;\n        return this.f;\n    }\n\n    constructor(){\n        this.f.grammar = this.g;\n        this.defToken('eof', '', 0);\n    }\n}\n","import { GBuilder, TokenDefType } from './gbuilder';\nimport { Assoc } from '../grammar/token-entry';\nimport { CompilationError as E } from '../util/E';\nimport { InputStream } from '../util/io';\n\nenum T  {\n    EOF = 0,\n    NAME,\n    STRING,\n    TOKEN_DIR,\n    OPT,\n    BLOCK,\n    ARROW,\n    EOL,\n    OR,\n    TOKEN,\n    SEPERATOR,\n    LEFT_DIR,\n    RIGHT_DIR,\n    NONASSOC_DIR,\n    PREC_DIR,\n    REGEXP,\n    STATE_DIR,\n    LINE_COMMENT,\n    BLOCK_COMMENT,\n    \n    // highlight only\n    OPEN_CURLY_BRA,\n    CLOSE_CURLY_BRA\n};\n\nvar tokenNames = [];\nfor(var tname in T){\n    tokenNames[T[tname]] = tname;\n}\n\nclass Token {\n    id: T;\n    line: number;\n    val: string = null;\n\n    clone(): Token{\n        var t = new Token();\n        t.id = this.id;\n        t.line = this.line;\n        t.val = this.val;\n        return t;\n    }\n}\n\nfunction scan(opt: { isHighlight?: boolean } = {}){\n    var highlight = !!opt.isHighlight;\n    var line = 1;\n    var stream: InputStream = null;\n    var c: string = null;\n\n    function eof(){\n        return c === null;\n    }\n    function isBlank(c){\n        return c == ' ' || c == '\\n' || c == '\\t';\n    }\n    function nc(){\n\n        if(c === '\\n'){\n            line++;\n        }\n        stream.next();\n        c = stream.peek();\n    }\n    function err(c1?: string){\n        var s1 = '';\n        if(eof()){\n            s1 = 'unexpected end of file';\n        }\n        else {\n            s1 = 'unexpected character \"' + c + '\"';\n        }\n        if(c1){\n            throw new E(s1 + ' after \"' + c1 + '\"',line);\n        }\n        else{\n            throw new E(s1,line);                \n        }\n    }\n    function iss(s: string){\n        var ii = 0;\n        while(ii < s.length){\n            if(s.charAt(ii++) !== c){\n                return false;\n            }\n            nc();\n        }\n        return true;\n    }\n    var escapes = {\n        'n': '\\n',\n        't': '\\t'\n    };\n    function escapeChar(regexp: boolean){\n        var tc = c;\n        if(eof()){\n            return '';\n        }\n        nc();\n        var ret = escapes[tc];\n        if(ret !== undefined){\n            return ret;\n        }\n        else {\n            if(regexp){\n                return '\\\\' + tc;\n            }\n            else {\n                if(tc === '\\\\'){\n                    return '\\\\';\n                }\n                else {\n                    return '\\\\' + tc;\n                }\n            }\n        }\n    }\n    function handleString(){\n        var eos = c;\n        var ret = '';\n        nc();\n        while(c != eos){\n            if(eof()){\n                throw new E('unterminated string literal',line);\n            }\n            else if(c === '\\\\'){\n                nc();\n                ret += escapeChar(false);\n            }\n            else {\n                ret += c;\n                nc();\n            }\n        }\n        nc();\n        return ret;\n    }\n    function handleRegExp(){\n        var ret = '';\n        while(c !== '/'){\n            if(eof()){\n                throw new E('unterminated regular expression literal',line);\n            }\n            else if(c === '\\\\'){\n                nc();\n                ret += escapeChar(true);\n            }\n            else {\n                ret += c;\n                nc();\n            }\n        }\n        nc();\n        return ret;\n    }\n    function next(token: Token){\n        token.val = null;\n        while(isBlank(c) && !eof()){\n            nc();\n        }\n        token.line = line;\n        if(eof()){\n            token.id = T.EOF;\n            return token;\n        }\n        lex:\n        switch(c){\n            case '%':\n                nc();\n                if(iss('token')){\n                    token.id = T.TOKEN_DIR;\n                    break lex;\n                }\n                else if(iss('opt')){\n                    token.id = T.OPT;\n                    break lex;\n                }\n                else if(iss('left')){\n                    token.id = T.LEFT_DIR;\n                    break lex;\n                }\n                else if(iss('right')){\n                    token.id = T.RIGHT_DIR;\n                    break lex;\n                }\n                else if(iss('nonassoc')){\n                    token.id = T.NONASSOC_DIR;\n                    break lex;\n                }\n                else if(iss('prec')){\n                    token.id = T.PREC_DIR;\n                    break lex;\n                }\n                else if(iss('state')){\n                    token.id = T.STATE_DIR;\n                    break lex;\n                }\n                else if(c == '%'){\n                    nc();\n                    token.id = T.SEPERATOR;\n                    break lex;\n                }\n                err('%');\n            case '{':\n                nc();\n                if(highlight){\n                    token.id = T.OPEN_CURLY_BRA;\n                    break lex;\n                }\n                else {\n                    token.id = T.BLOCK;\n                    token.val = '';\n                    var st = 1;\n                    while(st > 0){\n                        if(eof()){\n                            throw new E('unclosed block',line);\n                        }\n                        if(c == '{'){\n                            st++;\n                        }\n                        else if(c == '}'){\n                            st--;\n                        }\n                        token.val += c;\n                        nc();\n                    }\n                    break lex;\n                }\n            case '/':\n                nc();\n                if(c === '/'){\n                    nc();\n                    token.val = '//';\n                    while(c as string !== '\\n' && !eof()){\n                        token.val += c;\n                        nc();\n                    }\n                    token.id = T.LINE_COMMENT;\n                    break lex;\n                }\n                else if(c === '*'){\n                    nc();\n                    token.val = '/*';\n                    while(!eof()){\n                        if(c === '*'){\n                            nc();\n                            if(c === '/'){\n                                nc();\n                                break;\n                            }\n                            else if(eof()){\n                                break;\n                            }\n                            else {\n                                token.val += '*';\n                            }\n                        }\n                        else {\n                            token.val += c;\n                            nc();\n                        }\n                    }\n                    token.id = T.BLOCK_COMMENT;\n                    break lex;\n                }\n                else {\n                    token.id = T.REGEXP;\n                    token.val = handleRegExp();\n                    break lex;\n                }\n                //err('/');\n            case '|':\n                nc();\n                token.id = T.OR;\n                break lex;\n            case ';':\n                nc();\n                token.id = T.EOL;\n                break lex;\n            case ':':\n                nc();\n                token.id = T.ARROW;\n                break lex;\n            case '-':\n                nc();\n                if(c as string == '>'){\n                    nc();\n                    token.id = T.ARROW;\n                    break lex;\n                }\n                err('-');\n            case '\\'':\n            case '\"':\n                token.id = T.STRING;\n                token.val = handleString();\n                break lex;\n            case '<':\n                nc();\n                token.id = T.TOKEN;\n                token.val = '';\n                while(c as string !== '>' && !eof()){\n                    token.val += c;\n                    nc();\n                }\n                if(eof()){\n                    throw new E('unexpected end of file: incomplete token literal',line);\n                }\n                nc();\n                if(token.val === ''){\n                    throw new E('unexpected empty token',line);\n                }\n                break lex;\n            default:\n                if(/[A-Za-z_$]/.test(c)){\n                    token.id = T.NAME;\n                    token.val = c;\n                    nc();\n                    while(/[A-Za-z0-9_$]/.test(c) && !eof()){\n                        token.val += c;\n                        nc();\n                    }\n                    break lex;\n                }\n                nc();\n                err();\n        };\n\n    };\n    return {\n        next: next,\n        init: function(s: InputStream){\n            stream = s;\n            c = s.peek();\n        }\n    };\n}\n\nfunction parse(scanner){\n    var token = new Token();\n    var gb = new GBuilder();\n\n    function nt(){\n        scanner.next(token);\n    }\n\n    function expect(id){\n        if(token.id !== id){\n            throw new E('unexpected token \"' + tokenNames[token.id] + '\",expecting \"' + tokenNames[id] + '\"',token.line);\n        }\n        nt();\n    }\n\n    /**\n     * file() ->\n     * \n     * options() <SEPERATOR> rules() <EOF>\n     * \n     */\n    function file(){\n        options();\n        expect(T.SEPERATOR);\n        rules();\n        expect(T.EOF);\n    }\n\n    function prTokens(assoc){\n        do{\n            if(token.id === T.STRING){\n                gb.defineTokenPrec(token.val,assoc,false,token.line);\n            }\n            else if(token.id === T.NAME){\n                gb.defineTokenPrec(token.val,assoc,true,token.line);\n            }\n            else {\n                throw new E('unexpected token \"' + tokenNames[token.id] + '\",expecting string or name',token.line);\n            }\n            nt();\n        }while(token.id === T.STRING || token.id === T.NAME);\n        gb.incPr();\n    }\n\n    /**\n     * options() ->\n     * \n     * '%token' (tokenDef())+\n     * | ('%left'|'%right'|'%nonassoc') [<TOKEN>]+\n     * | '%opt' <NAME> <STRING>\n     * | '%state' <NAME>\n     * \n     */\n    function options(){\n        while(1){\n            switch(token.id){\n                case T.TOKEN_DIR:\n                    nt();\n                    do{\n                        tokenDef();\n                    }while(token.id as number === T.STRING);\n                    break;\n                case T.LEFT_DIR: \n                    nt();\n                    prTokens(Assoc.LEFT);\n                    break;\n                case T.RIGHT_DIR: \n                    nt();\n                    prTokens(Assoc.RIGHT);\n                    break;\n                case T.NONASSOC_DIR: \n                    nt();\n                    prTokens(Assoc.NON);\n                    break;\n                case T.OPT:\n                    nt();\n                    var name = token.val;\n                    expect(T.NAME);\n                    var s = token.val;\n                    expect(T.STRING);\n                    gb.setOpt(name,s);\n                    break;\n                case T.STATE_DIR:\n                    nt();\n                    var n = token.val;\n                    expect(T.NAME);\n                    gb.changeState(n);\n                    break;\n                default:return;\n            }\n        }\n    }\n\n    /**\n     * tokenDef() ->\n     * \n     * (<STRING>|<TOKEN>) [<NAME>]\n     */\n    function tokenDef(){\n        var name = token.val;\n        var alias: string = '';\n        \n        var tline = token.line;\n        if(token.id !== T.STRING && token.id !== T.TOKEN){\n            throw new E('unexpeted token \"' + tokenNames[token.id] + '\",expecting STRING or TOKEN',token.line);\n        }\n        var isString = token.id === T.STRING;\n        nt();\n        if(token.id as T === T.NAME){\n            alias = token.val;\n            nt();\n        }\n        gb.defToken(name,alias,tline);\n    }\n\n    /**\n     * rules() ->\n     * \n     * rule() ( rule() )* <SEPERATOR>\n     * \n     */\n    function rules(){\n        rule();\n        while(token.id !== T.SEPERATOR){\n            rule();\n        }\n        nt();\n    }\n\n    /**\n     * rule() ->\n     * \n     * <NAME> <ARROW> ruleItems() ( <OR> ruleItems() )* <EOL>\n     * \n     */\n    function rule(){\n        var lhs = token.clone();\n        expect(T.NAME);\n        expect(T.ARROW);\n        gb.prepareRule(lhs.val,lhs.line);\n        ruleItems();\n        gb.commitRule();\n        while(token.id === T.OR){\n            nt();\n            gb.prepareRule(lhs.val,lhs.line);\n            ruleItems();\n            gb.commitRule();\n        }\n        expect(T.EOL);\n    }\n\n    /**\n     * ruleItems() ->\n     * \n     * ( <NAME> | (<STRING>|<TOKEN>) | <BLOCK> )* [ '%prec' (<STRING>|<NAME>) [ <BLOCK> ] ]\n     * \n     */\n    function ruleItems(){\n        while(token.id === T.NAME || token.id === T.TOKEN || token.id === T.STRING || token.id === T.BLOCK){\n            let t = token.clone();\n            if(token.id === T.NAME){\n                nt();\n                gb.addRuleItem(t.val,false,t.line);\n            }\n            else if(token.id === T.STRING || token.id === T.TOKEN){\n                nt();\n                gb.addRuleItem(t.val,true,t.line);\n            }\n            if(token.id === T.BLOCK){\n                gb.addAction(token.val);\n                nt();\n            }\n        }\n        if(token.id === T.PREC_DIR){\n            nt();\n            let t = token.val;\n            var line = token.line;\n            if(token.id as T === T.STRING){\n                gb.defineRulePr(t,false,line);\n                nt();\n            }\n            else if(token.id as T === T.NAME){\n                gb.defineRulePr(t,true,line);\n                nt();\n            }\n            else {\n                throw new E('unexpected token \"' + tokenNames[token.id] + '\",expecting string or name',token.line);\n            }\n            \n            if(token.id as T === T.BLOCK){\n                gb.addAction(token.val);\n                nt();\n            }\n        }\n    }\n    nt();\n    file();\n\n    return gb.build();\n}\n\nfunction commentFilter(scanner){\n    return {\n        next: function(token: Token){\n            do{\n                scanner.next(token);\n            }while(token.id === T.BLOCK_COMMENT || token.id === T.LINE_COMMENT);\n        },\n        init: function(s){\n            scanner.init(s);\n        }\n    };\n}\n\nvar highlightUtil = {\n    T: T,\n    Token: Token,\n    scanner: scan\n};\n\nfunction parseSource(source){\n    var scanner = scan();\n    scanner.init(source);\n    // need to filter comments.\n    return parse(commentFilter(scanner));\n}\n\nexport { highlightUtil,parseSource };","import { TokenSet } from './token-set';\nimport { Rule, Grammar } from './grammar';\nimport { ListNode } from '../util/list';\n\nexport enum Action {\n    NONE = 1,\n    SHIFT,\n    REDUCE\n}\n\nexport class Item{\n    public marker: number = 0;\n    public lah: TokenSet;\n    public rule: Rule;\n    public isKernel: boolean;\n    public shift: ItemSet = null;\n    public actionType = Action.NONE;\n    public changed: boolean = true;\n    static NULL: Item = {} as Item;\n    constructor(rule: Rule, ik: boolean){\n        this.rule = rule;\n        this.isKernel = ik;\n        this.lah = new TokenSet(rule.g.tokenCount);\n    }\n    canShift(): boolean{\n        return this.rule.rhs.length > this.marker;\n    }\n    getShift(): number{\n        return this.rule.rhs[this.marker];\n    }\n    toString(opt: { showlah?: boolean, showTrailer?: boolean } = {}): string{\n        var showlah = (opt && opt.showlah) || false;\n        var showTrailer = (opt && opt.showTrailer) || false;\n        var r = this.rule;\n        var ret = '[ ' + this.rule.toString(this.marker) + (showlah ? ',{ ' + this.lah.toString(this.rule.g) + ' }' : '') + ' ]';\n    \n        this.isKernel && (ret += '*');\n        if(showTrailer){\n            switch(this.actionType){\n                case Action.NONE: ret += '(-)';break;\n                case Action.SHIFT: ret += '(s' + this.shift.stateIndex + ')';break;\n                case Action.REDUCE: ret += '(r)';break;\n            }\n        }\n        return ret;\n    }\n    hash(): string{\n        return this.rule.index + '-' + this.marker;\n    }\n    hasRRConflictWith(i: Item): boolean{\n        return this.actionType === Action.REDUCE && i.actionType === Action.REDUCE && this.rule.index !== i.rule.index && this.lah.hasIntersection(i.lah);\n    }\n    getFollowSet(set: TokenSet): void{\n        var g = this.rule.g;\n        var i;\n        for(i = this.marker + 1;i < this.rule.rhs.length;i++){\n            var mItem = this.rule.rhs[i];\n            if(g.isToken(mItem)){\n                set.add(mItem + 1);\n                break;\n            }\n            else {\n                //var set1 = g.sym[mItem].firstSet\n                var set1 = g.nts[mItem - g.tokenCount].firstSet\n                set.union(set1);\n                set.remove(0);\n                if(!set1.contains(0)){\n                    break;\n                }\n            }\n        }\n        if(i === this.rule.rhs.length){\n            set.union(this.lah);\n        }\n    }\n}\n\nexport class ItemSet implements ListNode<ItemSet>{\n    g: Grammar;\n    it: { [s: string]: Item } = {};\n    complete: boolean = false;\n\n    index: number = -1;\n    stateIndex: number = 0;\n\n    prev: ItemSet = null;\n    next: ItemSet = null;\n    data: ItemSet;\n    merges: number[] = [];\n\n    constructor(g: Grammar){\n        this.g = g;\n        this.data = this;\n    }\n\n    add(rule: Rule, marker: number, ik: boolean, lah: TokenSet, reset: boolean): boolean{\n        var h = rule.index + '-' + marker;\n        var it = this.it[h];\n        if(it === undefined){\n            var n = new Item(rule,ik);\n            n.marker = marker;\n            if(lah){\n                n.lah.union(lah);\n            }\n            this.it[h] = n;\n            return true;\n        }\n        else if(lah){\n            var ret = it.lah.union(lah);\n            if(reset && ret && it.canShift()){\n                it.actionType = Action.NONE;\n            }\n            ret && (it.changed = true);\n            return ret;\n        }\n    }\n    contains(){\n        \n    }\n    closure(): void{\n        var changed = true;\n        var tSet = new TokenSet(this.g.tokenCount);\n        var cela = this;\n        while(changed){\n            changed = false;\n            for(var hash in this.it){\n                var item = this.it[hash];\n                if(item.changed && item.canShift()){\n                    var ritem = item.getShift();\n                    if(!this.g.isToken(ritem)){\n                        tSet.removeAll();\n                        item.getFollowSet(tSet);\n                        this.g.forEachRuleOfNt(ritem - this.g.tokenCount,function(rule){\n                            changed = cela.add(rule,0,false,tSet,false) || changed;\n                            return false;\n                        });\n                    }\n                }\n                item.changed = false;\n            }\n        }\n    }\n    toString(opt: { showlah?: boolean, showTrailer?: boolean }): string{\n        var showlah = (opt && opt.showlah) || false;\n        var showTrailer = (opt && opt.showTrailer) || false;\n        var opt2 = { showTrailer: showTrailer };\n        var ret = 's' + this.stateIndex + '';\n        if(this.index !== null){\n            ret += '(i' + this.index;\n        }\n        else {\n            ret += '(i?';\n        }\n        if(this.merges.length > 0){\n            ret += ',merged from ';\n            for(var i = 0;i < this.merges.length;i++){\n                if(i > 0){\n                    ret += ',';\n                }\n                ret += 'i' + this.merges[i];\n            }\n        }\n        ret += ')\\n';\n        for(var hash in this.it){\n            ret += this.it[hash].toString(opt2) + '\\n';\n        }\n        return ret;\n    }\n    kernelHash(): string{\n        var ret = 0;\n        for(var hash in this.it){\n            var item = this.it[hash];\n            if(item.isKernel){\n                ret += item.rule.index << 5 + item.rule.index + item.marker;\n            }\n        }\n        return String(ret);\n    }\n    forEach(cb: (it: Item) => void){\n        for(var h in this.it){\n            cb(this.it[h]);\n        }\n    }\n    canMergeTo(s: ItemSet): boolean{\n        for(var h1 in this.it){\n            var it1 = this.it[h1];\n            var found = false,hasConflict = false,hasIdentical = false;\n            for(var h2 in s.it){\n                var it2 = s.it[h2];\n                if(it1.rule.index === it2.rule.index && it1.marker === it2.marker){\n                    hasIdentical = it1.lah.equals(it2.lah);\n                    found = it1.isKernel && it2.isKernel;\n                }\n                hasConflict = hasConflict || it1.hasRRConflictWith(it2);\n                if(it2.isKernel && this.it[h2] === undefined){\n                    return false;\n                }\n            }\n            if(it1.isKernel && !found || hasConflict && !hasIdentical){\n                return false;\n            }\n        }\n        return true;\n    }\n    mergeTo(s: ItemSet): boolean{\n        var ret = false;\n        for(var h in s.it){\n            var it = s.it[h];\n            ret = this.add(it.rule,it.marker,it.isKernel,it.lah,true) || ret;\n        }\n        this.merges.push(s.index);\n        return ret;\n    }\n}\n","export interface ListNode<T>{\n    prev: ListNode<T>;\n    next: ListNode<T>;\n    data: T;\n}\n\nexport class List<T>{\n    public head: ListNode<T>;\n    public tail: ListNode<T>;\n    public size: number = 0;\n    constructor(){\n        this.head = { prev: null, next: null, data: null};\n        this.tail = { prev: null, next: null, data: null};\n        this.head.next = this.tail;\n        this.tail.prev = this.head;\n    }\n    append(n: ListNode<T>): void{\n        n.prev = this.tail.prev;\n        n.next = this.tail;\n        this.tail.prev.next = n;\n        this.tail.prev = n;\n        this.size++;\n    }\n    pull(): T{\n        var n = this.head.next;\n        this.head.next = n.next;\n        n.next.prev = this.head;\n        n.prev = n.next = null;\n        this.size--;\n        return n.data;\n    }\n    isEmpty(): boolean{\n        return this.size === 0;\n    }\n    forEach(cb: (a: T) => void): void{\n        for(var a = this.head.next;a !== this.tail;a = a.next){\n            cb(a.data);\n        }\n    }\n    remove(n: ListNode<T>): void{\n        n.next.prev = n.prev;\n        n.prev.next = n.next;\n        this.size--;\n    }\n}","import { Grammar } from './grammar';\nimport { YYTAB } from '../util/common';\nimport { endl, OutputStream } from '../util/io';\nimport { Action, Item, ItemSet } from './item-set';\nimport { List } from '../util/list';\n\n\nexport class ParseTable{\n    g: Grammar;\n    stateCount: number;\n    shift: Item[];\n    gotot: Item[];\n\n    defact: Item[] = null;\n    constructor(g: Grammar, stateCount: number){\n        this.g = g;\n        var tokenCount = g.tokenCount;\n        var ntCount = g.nts.length;\n        this.stateCount = stateCount;\n        this.shift = new Array(tokenCount * stateCount);\n        this.gotot = new Array(ntCount * stateCount);\n        for(var i = 0;i < this.shift.length;i++){\n            this.shift[i] = null;\n        }\n        for(var i = 0;i < this.gotot.length;i++){\n            this.gotot[i] = null;\n        }\n    }\n    lookupShift(state: number, token: number): Item{\n        return this.shift[this.g.tokenCount * state + token];\n    }\n    lookupGoto(state: number, nt: number): Item{\n        return this.gotot[this.g.nts.length * state + nt];\n    }\n    getDefAct(state: number): Item{\n        for(let tk = 0; tk < this.g.tokenCount; tk++){\n            let item = this.lookupShift(state, tk);\n            if(item.actionType === Action.REDUCE){\n\n            }\n        }\n        return null;\n    }\n    findDefAct(){\n        this.defact = new Array(this.stateCount);\n        for(let i = 0;i < this.stateCount; i++){\n            for(let j = 0; j < this.g.tokenCount; j++){\n                let item = this.lookupShift(i, j);\n                if(item.actionType === Action.REDUCE){\n                    \n                }\n            }\n        }\n    }\n    summary(doneList: List<ItemSet>, os: OutputStream){\n        // var ret = '';\n        var g = this.g;\n        var tokenCount = g.tokenCount;\n        var ntCount = g.nts.length;\n        var cela = this;\n        doneList.forEach(function(set){\n            var i = set.stateIndex;\n            var shift = '';\n            var reduce = '';\n            var gotot = '';\n            os.writeln('state ' + i);        \n            set.forEach(function(item){\n                os.writeln(YYTAB + item.toString({ showTrailer: false }));\n            });\n            for(var j = 0;j < tokenCount;j++){\n                var item = cela.lookupShift(i,j);\n                if(item !== null){\n                    if(item.actionType === Action.SHIFT){\n                        shift += YYTAB + '\"' + g.tokens[j].sym + '\" : ' + 'shift,and goto state ' + item.shift.stateIndex + endl;\n                    }\n                    else {\n                        reduce += YYTAB + '\"' + g.tokens[j].sym + '\" : ' + 'reduce with rule ' + item.rule.index + endl;\n                    }\n                }\n            }\n            for(var j = 0;j < ntCount;j++){\n                var item = cela.lookupGoto(i,j);\n                if(item !== null){\n                    gotot += YYTAB + '' + g.nts[j].sym + ' : ' + 'goto state ' + item.shift.stateIndex + endl;\n                }\n            }\n            os.writeln(shift + reduce + gotot);\n            os.writeln();\n        });\n    }\n}\n","import { BitSet } from '../util/bitset';\nimport { Grammar } from './grammar';\nimport { console,YYTAB } from '../util/common';\nimport { OutputStream,endl } from '../util/io';\nimport { Item,Action,ItemSet } from './item-set';\nimport { List } from '../util/list';\nimport { ParseTable } from './ptable';\nimport { TokenDef, Assoc } from './token-entry';\nimport { TokenSet } from './token-set';\n\nenum ConflictType {\n    RR = 0, SR = 1\n};\nexport class Conflict{\n    type: ConflictType;\n    set: ItemSet;\n    token: TokenDef;\n    used: Item;\n    discarded: Item;\n    static cNames: string[] = ['reduce/reduce','shift/reduce'];\n    toString(): string{\n        var ret = 'state ' + this.set.stateIndex + ',' + Conflict.cNames[this.type] + ' conflict:\\n';\n        ret += YYTAB + 'token: \"' + this.token.sym + '\"\\n';\n        ret += YYTAB + 'used rule: ' + this.used.toString() + '\\n';\n        ret += YYTAB + 'discarded rule: ' + this.discarded.toString() + '\\n';\n        return ret;\n    }\n}\n\nexport function genInitialSet(g: Grammar): ItemSet{\n    var start = g.rules[0][0];\n    var iset = new ItemSet(g);\n    iset.index = 0;\n    var set1 = new TokenSet(g.tokenCount);\n    set1.add(1);// eof\n    iset.add(start,0,true,set1,false);\n\n    return iset;\n}\n\nexport function genItemSets(g: Grammar): { result: List<ItemSet>, iterations: number }{\n    var htable = {}; \n    var iterations = 0;\n    function addToTable(iset){\n        var h = iset.kernelHash();\n        if(htable[h] === undefined){\n            htable[h] = [];\n        }\n        htable[h].push(iset);\n    }\n    function forEachInBucket(set,cb){\n        var b = htable[set.kernelHash()];\n        if(b !== undefined){\n            for(var i = 0;i < b.length;i++){\n                if(cb(b[i])) break;\n            }\n        }\n    }\n    var index = 1;\n    var todoList = new List<ItemSet>();\n    var incList = new List<ItemSet>();\n    var doneList = new List<ItemSet>();\n    todoList.append(genInitialSet(g));\n\n    while(!todoList.isEmpty() || !incList.isEmpty()){\n        var comeFrom = null;\n        //phase 1,generate transition item set from incomplete list.\n        if(!incList.isEmpty()){\n            var set = comeFrom = incList.pull();\n            set.forEach(function(item){\n                if(item.actionType === Action.NONE){\n                    console.assert(item.canShift());\n                    var shift = item.getShift();\n                    var newSet = new ItemSet(g);\n                    newSet.index = index++;\n                    todoList.append(newSet);\n                    //mark all the symbols in 'set'\n                    set.forEach(function(item1){\n                        if(item1.canShift()){\n                            var rItem = item1.getShift();\n                            if(rItem === shift){\n                                item1.actionType = Action.SHIFT;\n                                item1.shift = newSet;\n                                newSet.add(item1.rule,item1.marker + 1,true,item1.lah,false);\n                            }\n                        }\n                    });\n                }\n            });\n            set.complete = true;\n            doneList.append(set);\n        }\n\n        //phase 2,find possible merges,and do them.\n        while(!todoList.isEmpty()){\n            var set = todoList.pull();\n            set.closure();\n            set.forEach(function(item){\n                if(!item.canShift()){\n                    item.actionType = Action.REDUCE;\n                }\n            });\n            var merged = null;\n\n            forEachInBucket(set,function(gSet){\n                if(gSet.canMergeTo(set)){\n                    if(gSet.mergeTo(set)){\n                        if(gSet.complete){\n                            merged = gSet;\n                        }\n                    }\n                    //fix previous transition actions to merged set\n                    if(comeFrom !== null){\n                        comeFrom.forEach(function(sItem){\n                            if(sItem.actionType === Action.SHIFT && sItem.shift === set){\n                                sItem.shift = gSet;\n                            }\n                        });\n                    }\n                    set = null;\n                    return true;\n                }\n                return false;\n            });\n            //if set is merged with another complete set,\n            if(merged !== null){\n                doneList.remove(merged);\n                incList.append(merged);\n                merged.complete = false;\n            }\n            //not merged\n            else if(set !== null){\n                incList.append(set);\n                addToTable(set);\n            }\n        }\n        iterations++;\n    }\n    var i = 0;\n    doneList.forEach(function(set){\n        set.stateIndex = i++;\n    });\n\n    return {\n        result: doneList,\n        iterations: iterations,\n    };\n}\n\nexport function genParseTable(g: Grammar, doneList: List<ItemSet>): { result: ParseTable, conflicts: Conflict[] }{\n    var conflicts = [];\n    function resolveSRConflict(set,shift,reduce){\n        var token = g.tokens[shift.getShift()];\n        if(token.assoc !== Assoc.UNDEFINED){\n            var ruleP = reduce.rule.pr;\n            if(ruleP !== -1){\n                if(ruleP > token.pr){\n                    return reduce;\n                }\n                else if(ruleP < token.pr){\n                    return shift;\n                }\n                else {\n                    if(token.assoc === Assoc.LEFT){\n                        return reduce;\n                    }\n                    else if(token.assoc === Assoc.RIGHT){\n                        return shift;\n                    }\n                    else if(token.assoc === Assoc.NON){\n                        return Item.NULL;\n                    }\n                    else {\n                        console.assert(false);\n                    }\n                }\n            }\n        }\n        var cf = new Conflict();\n        cf.type = ConflictType.SR;\n        cf.set = set;\n        cf.token = token;\n        cf.used = shift;\n        cf.discarded = reduce;\n        conflicts.push(cf);\n        return shift;\n    }\n    function resolveRRConflict(set,r1,r2,token){\n        token = g.tokens[token];\n        var used = r1.rule.index > r2.rule.index ? r2 : r1;\n        var discarded = r1.rule.index > r2.rule.index ? r1 : r2;\n        var cf = new Conflict();\n        cf.type = ConflictType.RR;\n        cf.set = set;\n        cf.token = token;\n        cf.used = used;\n        cf.discarded = discarded;\n        conflicts.push(cf);\n        return used;\n    }\n    var ptable = new ParseTable(g,doneList.size);\n    doneList.forEach(function(set){\n        set.forEach(function(item){\n            if(item.actionType === Action.SHIFT){\n                var sItem = item.getShift();\n                if(g.isToken(sItem)){\n                    // do shift\n                    var tindex = set.stateIndex * g.tokenCount + sItem;\n                    var cItem = ptable.shift[tindex];\n                    if(cItem !== null){\n                        // shift-reduce conflict\n                        if(cItem.actionType === Action.REDUCE){\n                            ptable.shift[tindex] = resolveSRConflict(set,item,cItem);\n                        }\n                        else {\n                            // shift-shift conflicts shouldnt occur\n                            console.assert(cItem.shift === item.shift);\n                        }\n                    }\n                    else {\n                        ptable.shift[tindex] = item;\n                    }\n                }\n                else {\n                    // do goto\n                    var tindex = set.stateIndex * g.nts.length + sItem - g.tokenCount;\n                    ptable.gotot[tindex] = item;\n                }\n            }\n            else if(item.actionType === Action.REDUCE){\n                for(var i = 0;i < g.tokenCount;i++){\n                    if(item.lah.contains(i + 1)){\n                        var index = set.stateIndex * g.tokenCount + i;\n                        var cItem = ptable.shift[index];\n                        if(cItem !== null){\n                            if(cItem.actionType === Action.REDUCE){\n                                ptable.shift[index] = resolveRRConflict(set,cItem,item,i);\n                            }\n                            else if(cItem.actionType === Action.SHIFT){\n                                ptable.shift[index] = resolveSRConflict(set,cItem,item);\n                            }\n                        }\n                        else {\n                            ptable.shift[index] = item;\n                        }\n                    }\n                }\n            }\n            else {\n                console.assert(false);\n            }\n        });\n    });\n\n    return {\n        result: ptable,\n        conflicts: conflicts\n    };\n}","import { JsccError as E } from '../util/E';\nimport { Action } from '../grammar/item-set';\nimport { Grammar } from '../grammar/grammar';\nimport { ParseTable } from '../grammar/ptable';\n\nfunction testParse(g: Grammar, pt: ParseTable, tokens: string[]): string[]{\n    var tk = [];\n    for(var i = 0; i < tokens.length;i++){\n        var tid = g.findToken(tokens[i]);\n        if(tid === -1){\n            throw new E('cannot recognize \"' + tokens[i] + '\" as a token');\n        }\n        tk.push(tid);\n    }\n    var state = [ 0 ];\n    var stack = [];\n    var ret = [];\n    function s(){\n        return state[state.length - 1];\n    }\n    function shift(ns){\n        state.push(ns);\n        stack.push(g.tokens[tk.shift()].sym);\n    }\n    function reduce(rule){\n        \n    }\n    function dump(){\n        var ret = '';\n        for(var i = 0;i < stack.length;i++){\n            ret += stack[i] + ' ';\n        }\n        ret += '| ';\n        for(var i = 0;i < tk.length;i++){\n            ret += g.tokens[tk[i]].sym + ' ';\n        }\n        return ret;\n    }\n    ret.push(dump());\n    do{\n        var item = pt.lookupShift(s(),tk[0] || 0);\n        if(item !== null){\n            if(item.actionType === Action.SHIFT){\n                shift(item.shift.stateIndex);\n            }\n            else if(item.actionType === Action.REDUCE){\n                var rule = item.rule;\n                var rlen = rule.rhs.length;\n                while(rlen --> 0){\n                    state.pop();\n                    stack.pop();\n                }\n                stack.push(g.nts[rule.lhs].sym);\n                if(item.rule.index === 0){\n                    ret.push('accepted!');\n                    break;\n                }\n                else {\n                    var gotot = pt.lookupGoto(s(),rule.lhs).shift.stateIndex;\n                    state.push(gotot);\n                }\n            }\n            else {\n                console.assert(false);\n            }\n        }\n        else {\n            ret.push('syntax error!');\n            break;\n        }\n        ret.push(dump());\n    }while(true);\n    return ret;\n}\n\nexport { testParse }","import { genItemSets,genParseTable, Conflict } from '../grammar/ptable-gen';\nimport { parseSource } from '../parser/gparser';\nimport { lexer } from '../lexer/pattern';\nimport { testParse } from './parse-test';\nimport { YYTAB } from '../util/common';\nimport { File } from '../parser/file';\nimport { ItemSet } from '../grammar/item-set';\nimport { ParseTable } from '../grammar/ptable';\nimport { TokenDef } from '../grammar/token-entry';\nimport { NtDef } from '../grammar/grammar';\nimport { List } from '../util/list';\nimport { OutputStream } from '../util/io';\n\nclass Result{\n    file: File;\n    itemSets: List<ItemSet>;\n    iterationCount: number;\n    parseTable: ParseTable;\n    conflicts: Conflict[];\n    unusedTokens: TokenDef[] = [];\n    unusedNts: NtDef[] = [];\n\n    printItemSets(stream: OutputStream){\n        stream.writeln(this.itemSets.size + ' state(s) in total,finished in ' + this.iterationCount + ' iteration(s).');\n        this.itemSets.forEach(function(s){\n            stream.writeln(s.toString({ showTrailer: true }));\n        });\n    }\n    printTable (stream: OutputStream){\n        this.parseTable.summary(this.itemSets,stream);\n    }\n    testParse(tokens: string[]){\n        return testParse(this.file.grammar,this.parseTable,tokens);\n    }\n    warningMsg(): string{\n        var ret = '';\n        if(this.unusedTokens.length > 0){\n            ret += 'unused tokens:\\n';\n            for(var t of this.unusedTokens){\n                ret += YYTAB + '\"' + t.sym + '\" (defined at line ' + t.line + ')\\n';\n            }\n        }\n        if(this.unusedNts.length > 0){\n            ret += 'unused non terminals:\\n';\n            for(var t2 of this.unusedNts){\n                ret += YYTAB + t2.sym + '\\n';\n            }\n        }\n        for(var cf of this.conflicts){\n            ret += cf.toString() + '\\n';\n        }\n        return ret;\n    }\n}\n\nfunction genResult(stream: OutputStream){\n    var result = new Result();\n    var f = parseSource(stream);\n    var g = f.grammar;\n    g.genFirstSets();\n    result.file = f;\n\n    var temp = genItemSets(g);\n    result.itemSets = temp.result\n    result.iterationCount = temp.iterations;\n    var temp2 = genParseTable(g,result.itemSets);\n    result.parseTable = temp2.result;\n    result.conflicts = temp2.conflicts;\n\n    for(var s of g.tokens){\n        if(!s.used){\n            result.unusedTokens.push(s);\n        }\n    }\n    for(var s2 of g.nts){\n        if(!s2.used){\n            result.unusedNts.push(s2);\n        }\n    }\n\n    return result;\n}\n\nexport { genResult };","\nexport interface Table{\n    readonly rows: number;\n    readonly columns: number;\n    isEmpty(i: number,j: number): boolean;\n    emptyCount(row: number): number;\n}\nfunction sorter(cmp: (a: RowEntry, b: RowEntry) => number){\n    var a: RowEntry[] = [];\n    function insert(i,obj){\n        a.push(null);\n        for(var j = a.length - 1;j > i;j--){\n            a[j] = a[j - 1];\n        }\n        a[i] = obj;\n    }\n    return {\n        add: function(b: RowEntry): void{\n            var i: number;\n            for(i = 0;i < a.length;i++){\n                if((i === 0 || cmp(b,a[i - 1]) >= 0) && cmp(b,a[i]) <= 0){\n                    break;\n                }\n            }\n            insert(i,b);\n        },\n        done: function(): RowEntry[]{\n            return a;\n        }\n    };\n}\nclass RowEntry{\n    public dp: number | null = 0;\n    constructor(public emptyCount: number, public row: number){}\n}\n\n/**\n * implementation of double displacement first-fit-decreasing method\n * @param {{rows: number,columns: number,isEmpty: function,emptyCount: function}} source - data to be compressed\n * @returns {{dps: number[],len: number}} - displacements for each row.\n */\nexport function compress(source: Table): { dps: number[], len: number }{\n    function empty(i: number, j: number): boolean{\n        j = j - sorted[i].dp;\n        return j < 0 || j >= source.columns || source.isEmpty(sorted[i].row,j);\n    }\n    function fit(i: number, dp: number): boolean{\n        for(var j = 0;j < source.columns;j++){\n            if(!empty(i,j)){\n                for(var k = 0;k < i;k++){\n                    if(!empty(k,j + dp)){\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n    function getFitdp(i: number): number{\n        var dp = 0;\n        while(source.isEmpty(sorted[i].row,-dp)){ dp--; }\n        while(!fit(i,dp)){ dp++; }\n        return dp;\n    }\n    var tmpsorted = sorter((a, b) => {\n        return a.emptyCount < b.emptyCount ? -1 :\n            a.emptyCount > b.emptyCount ? 1 : 0;\n    });\n    for(var i = 0;i < source.rows;i++){\n        tmpsorted.add(new RowEntry(source.emptyCount(i),i));\n    }\n\n    var sorted = tmpsorted.done();\n    //the row with least empty entries has displacement 0\n    var maxdp = 0, mindp = 0;\n    var dps = new Array(source.rows);\n    dps[sorted[0].row] = sorted[0].dp = 0;\n    \n    for(var i = 1;i < sorted.length;i++){\n        var row = sorted[i].row;\n        var dp = getFitdp(i);\n        dps[row] = sorted[i].dp = dp;\n        dp > maxdp && (maxdp = dp);\n        dp < mindp && (mindp = dp);\n    }\n\n    for(var i = 0;i < dps.length;i++){\n        dps[i] -= mindp;\n    }\n\n    return {\n        dps: dps,\n        len: maxdp + source.columns - mindp\n    };\n}\n"],"names":["console","tslib_1.__extends","E","Action"],"mappings":"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"}